//This file was generated to InAsm.
//This is just a static class to use Iced: https://github.com/icedland/iced with InASM.
using InAsm.Attributes;
using Iced.Intel;
namespace InAsm {
public static class StaticAssembler {
// SPDX-License-Identifier: MIT
// Copyright (C) 2018-present iced project and contributors

// ‚ö†Ô∏èThis file was generated by GENERATOR!ü¶π‚Äç‚ôÇÔ∏è


		/// <summary>aaa instruction.<br/>
		/// <br/>
		/// <c>AAA</c><br/>
		/// <br/>
		/// <c>37</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100663337)]
public static void aaa() {}
		/// <summary>aad instruction.<br/>
		/// <br/>
		/// <c>AAD imm8</c><br/>
		/// <br/>
		/// <c>D5 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100663338)]
public static void aad(sbyte imm) {}
		/// <summary>aad instruction.<br/>
		/// <br/>
		/// <c>AAD imm8</c><br/>
		/// <br/>
		/// <c>D5 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100663339)]
public static void aad(byte imm) {}
		/// <summary>aam instruction.<br/>
		/// <br/>
		/// <c>AAM imm8</c><br/>
		/// <br/>
		/// <c>D4 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100663340)]
public static void aam(sbyte imm) {}
		/// <summary>aam instruction.<br/>
		/// <br/>
		/// <c>AAM imm8</c><br/>
		/// <br/>
		/// <c>D4 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100663341)]
public static void aam(byte imm) {}
		/// <summary>aas instruction.<br/>
		/// <br/>
		/// <c>AAS</c><br/>
		/// <br/>
		/// <c>3F</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100663342)]
public static void aas() {}
		/// <summary>adc instruction.<br/>
		/// <br/>
		/// <c>ADC r/m8, r8</c><br/>
		/// <br/>
		/// <c>10 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663343)]
public static void adc(AssemblerRegister8 dst, AssemblerRegister8 src) {}
		/// <summary>adc instruction.<br/>
		/// <br/>
		/// <c>ADC r/m8, r8</c><br/>
		/// <br/>
		/// <c>10 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663344)]
public static void adc(AssemblerMemoryOperand dst, AssemblerRegister8 src) {}
		/// <summary>adc instruction.<br/>
		/// <br/>
		/// <c>ADC r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 11 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663345)]
public static void adc(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>adc instruction.<br/>
		/// <br/>
		/// <c>ADC r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 11 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663346)]
public static void adc(AssemblerMemoryOperand dst, AssemblerRegister16 src) {}
		/// <summary>adc instruction.<br/>
		/// <br/>
		/// <c>ADC r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 11 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663347)]
public static void adc(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>adc instruction.<br/>
		/// <br/>
		/// <c>ADC r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 11 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663348)]
public static void adc(AssemblerMemoryOperand dst, AssemblerRegister32 src) {}
		/// <summary>adc instruction.<br/>
		/// <br/>
		/// <c>ADC r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 11 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663349)]
public static void adc(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>adc instruction.<br/>
		/// <br/>
		/// <c>ADC r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 11 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663350)]
public static void adc(AssemblerMemoryOperand dst, AssemblerRegister64 src) {}
		/// <summary>adc instruction.<br/>
		/// <br/>
		/// <c>ADC r8, r/m8</c><br/>
		/// <br/>
		/// <c>12 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663351)]
public static void adc(AssemblerRegister8 dst, AssemblerMemoryOperand src) {}
		/// <summary>adc instruction.<br/>
		/// <br/>
		/// <c>ADC r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 13 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663352)]
public static void adc(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>adc instruction.<br/>
		/// <br/>
		/// <c>ADC r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 13 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663353)]
public static void adc(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>adc instruction.<br/>
		/// <br/>
		/// <c>ADC r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 13 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663354)]
public static void adc(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>adc instruction.<br/>
		/// <br/>
		/// <c>ADC AL, imm8</c><br/>
		/// <br/>
		/// <c>14 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ADC r/m8, imm8</c><br/>
		/// <br/>
		/// <c>80 /2 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663355)]
public static void adc(AssemblerRegister8 dst, sbyte imm) {}
		/// <summary>adc instruction.<br/>
		/// <br/>
		/// <c>ADC AX, imm16</c><br/>
		/// <br/>
		/// <c>o16 15 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ADC r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 81 /2 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ADC r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 83 /2 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663356)]
public static void adc(AssemblerRegister16 dst, short imm) {}
		/// <summary>adc instruction.<br/>
		/// <br/>
		/// <c>ADC EAX, imm32</c><br/>
		/// <br/>
		/// <c>o32 15 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ADC r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 81 /2 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ADC r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 83 /2 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663357)]
public static void adc(AssemblerRegister32 dst, int imm) {}
		/// <summary>adc instruction.<br/>
		/// <br/>
		/// <c>ADC RAX, imm32</c><br/>
		/// <br/>
		/// <c>o64 15 id</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>ADC r/m64, imm32</c><br/>
		/// <br/>
		/// <c>o64 81 /2 id</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>ADC r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 83 /2 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663358)]
public static void adc(AssemblerRegister64 dst, int imm) {}
		/// <summary>adc instruction.<br/>
		/// <br/>
		/// <c>ADC r/m64, imm32</c><br/>
		/// <br/>
		/// <c>o64 81 /2 id</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>ADC r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 83 /2 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>ADC r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 81 /2 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ADC r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 83 /2 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ADC r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 81 /2 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ADC r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 83 /2 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ADC r/m8, imm8</c><br/>
		/// <br/>
		/// <c>80 /2 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663359)]
public static void adc(AssemblerMemoryOperand dst, int imm) {}
		/// <summary>adc instruction.<br/>
		/// <br/>
		/// <c>ADC AL, imm8</c><br/>
		/// <br/>
		/// <c>14 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ADC r/m8, imm8</c><br/>
		/// <br/>
		/// <c>80 /2 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663360)]
public static void adc(AssemblerRegister8 dst, byte imm) {}
		/// <summary>adc instruction.<br/>
		/// <br/>
		/// <c>ADC AX, imm16</c><br/>
		/// <br/>
		/// <c>o16 15 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ADC r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 81 /2 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ADC r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 83 /2 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663361)]
public static void adc(AssemblerRegister16 dst, ushort imm) {}
		/// <summary>adc instruction.<br/>
		/// <br/>
		/// <c>ADC EAX, imm32</c><br/>
		/// <br/>
		/// <c>o32 15 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ADC r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 81 /2 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ADC r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 83 /2 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663362)]
public static void adc(AssemblerRegister32 dst, uint imm) {}
		/// <summary>adc instruction.<br/>
		/// <br/>
		/// <c>ADC r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 81 /2 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ADC r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 83 /2 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ADC r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 81 /2 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ADC r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 83 /2 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ADC r/m8, imm8</c><br/>
		/// <br/>
		/// <c>80 /2 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663363)]
public static void adc(AssemblerMemoryOperand dst, uint imm) {}
		/// <summary>adcx instruction.<br/>
		/// <br/>
		/// <c>ADCX r32, r/m32</c><br/>
		/// <br/>
		/// <c>66 0F 38 F6 /r</c><br/>
		/// <br/>
		/// <c>ADX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663364)]
public static void adcx(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>adcx instruction.<br/>
		/// <br/>
		/// <c>ADCX r64, r/m64</c><br/>
		/// <br/>
		/// <c>66 o64 0F 38 F6 /r</c><br/>
		/// <br/>
		/// <c>ADX</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663365)]
public static void adcx(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>adcx instruction.<br/>
		/// <br/>
		/// <c>ADCX r32, r/m32</c><br/>
		/// <br/>
		/// <c>66 0F 38 F6 /r</c><br/>
		/// <br/>
		/// <c>ADX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663366)]
public static void adcx(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>adcx instruction.<br/>
		/// <br/>
		/// <c>ADCX r64, r/m64</c><br/>
		/// <br/>
		/// <c>66 o64 0F 38 F6 /r</c><br/>
		/// <br/>
		/// <c>ADX</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663367)]
public static void adcx(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>add instruction.<br/>
		/// <br/>
		/// <c>ADD r/m8, r8</c><br/>
		/// <br/>
		/// <c>00 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663368)]
public static void add(AssemblerRegister8 dst, AssemblerRegister8 src) {}
		/// <summary>add instruction.<br/>
		/// <br/>
		/// <c>ADD r/m8, r8</c><br/>
		/// <br/>
		/// <c>00 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663369)]
public static void add(AssemblerMemoryOperand dst, AssemblerRegister8 src) {}
		/// <summary>add instruction.<br/>
		/// <br/>
		/// <c>ADD r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 01 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663370)]
public static void add(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>add instruction.<br/>
		/// <br/>
		/// <c>ADD r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 01 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663371)]
public static void add(AssemblerMemoryOperand dst, AssemblerRegister16 src) {}
		/// <summary>add instruction.<br/>
		/// <br/>
		/// <c>ADD r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 01 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663372)]
public static void add(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>add instruction.<br/>
		/// <br/>
		/// <c>ADD r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 01 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663373)]
public static void add(AssemblerMemoryOperand dst, AssemblerRegister32 src) {}
		/// <summary>add instruction.<br/>
		/// <br/>
		/// <c>ADD r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 01 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663374)]
public static void add(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>add instruction.<br/>
		/// <br/>
		/// <c>ADD r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 01 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663375)]
public static void add(AssemblerMemoryOperand dst, AssemblerRegister64 src) {}
		/// <summary>add instruction.<br/>
		/// <br/>
		/// <c>ADD r8, r/m8</c><br/>
		/// <br/>
		/// <c>02 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663376)]
public static void add(AssemblerRegister8 dst, AssemblerMemoryOperand src) {}
		/// <summary>add instruction.<br/>
		/// <br/>
		/// <c>ADD r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 03 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663377)]
public static void add(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>add instruction.<br/>
		/// <br/>
		/// <c>ADD r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 03 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663378)]
public static void add(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>add instruction.<br/>
		/// <br/>
		/// <c>ADD r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 03 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663379)]
public static void add(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>add instruction.<br/>
		/// <br/>
		/// <c>ADD AL, imm8</c><br/>
		/// <br/>
		/// <c>04 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ADD r/m8, imm8</c><br/>
		/// <br/>
		/// <c>80 /0 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663380)]
public static void add(AssemblerRegister8 dst, sbyte imm) {}
		/// <summary>add instruction.<br/>
		/// <br/>
		/// <c>ADD AX, imm16</c><br/>
		/// <br/>
		/// <c>o16 05 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ADD r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 81 /0 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ADD r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 83 /0 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663381)]
public static void add(AssemblerRegister16 dst, short imm) {}
		/// <summary>add instruction.<br/>
		/// <br/>
		/// <c>ADD EAX, imm32</c><br/>
		/// <br/>
		/// <c>o32 05 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ADD r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 81 /0 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ADD r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 83 /0 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663382)]
public static void add(AssemblerRegister32 dst, int imm) {}
		/// <summary>add instruction.<br/>
		/// <br/>
		/// <c>ADD RAX, imm32</c><br/>
		/// <br/>
		/// <c>o64 05 id</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>ADD r/m64, imm32</c><br/>
		/// <br/>
		/// <c>o64 81 /0 id</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>ADD r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 83 /0 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663383)]
public static void add(AssemblerRegister64 dst, int imm) {}
		/// <summary>add instruction.<br/>
		/// <br/>
		/// <c>ADD r/m64, imm32</c><br/>
		/// <br/>
		/// <c>o64 81 /0 id</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>ADD r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 83 /0 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>ADD r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 81 /0 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ADD r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 83 /0 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ADD r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 81 /0 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ADD r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 83 /0 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ADD r/m8, imm8</c><br/>
		/// <br/>
		/// <c>80 /0 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663384)]
public static void add(AssemblerMemoryOperand dst, int imm) {}
		/// <summary>add instruction.<br/>
		/// <br/>
		/// <c>ADD AL, imm8</c><br/>
		/// <br/>
		/// <c>04 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ADD r/m8, imm8</c><br/>
		/// <br/>
		/// <c>80 /0 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663385)]
public static void add(AssemblerRegister8 dst, byte imm) {}
		/// <summary>add instruction.<br/>
		/// <br/>
		/// <c>ADD AX, imm16</c><br/>
		/// <br/>
		/// <c>o16 05 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ADD r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 81 /0 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ADD r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 83 /0 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663386)]
public static void add(AssemblerRegister16 dst, ushort imm) {}
		/// <summary>add instruction.<br/>
		/// <br/>
		/// <c>ADD EAX, imm32</c><br/>
		/// <br/>
		/// <c>o32 05 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ADD r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 81 /0 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ADD r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 83 /0 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663387)]
public static void add(AssemblerRegister32 dst, uint imm) {}
		/// <summary>add instruction.<br/>
		/// <br/>
		/// <c>ADD r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 81 /0 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ADD r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 83 /0 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ADD r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 81 /0 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ADD r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 83 /0 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ADD r/m8, imm8</c><br/>
		/// <br/>
		/// <c>80 /0 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663388)]
public static void add(AssemblerMemoryOperand dst, uint imm) {}
		/// <summary>addpd instruction.<br/>
		/// <br/>
		/// <c>ADDPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 58 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663389)]
public static void addpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>addpd instruction.<br/>
		/// <br/>
		/// <c>ADDPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 58 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663390)]
public static void addpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>addps instruction.<br/>
		/// <br/>
		/// <c>ADDPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 58 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663391)]
public static void addps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>addps instruction.<br/>
		/// <br/>
		/// <c>ADDPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 58 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663392)]
public static void addps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>addsd instruction.<br/>
		/// <br/>
		/// <c>ADDSD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>F2 0F 58 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663393)]
public static void addsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>addsd instruction.<br/>
		/// <br/>
		/// <c>ADDSD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>F2 0F 58 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663394)]
public static void addsd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>addss instruction.<br/>
		/// <br/>
		/// <c>ADDSS xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>F3 0F 58 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663395)]
public static void addss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>addss instruction.<br/>
		/// <br/>
		/// <c>ADDSS xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>F3 0F 58 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663396)]
public static void addss(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>addsubpd instruction.<br/>
		/// <br/>
		/// <c>ADDSUBPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F D0 /r</c><br/>
		/// <br/>
		/// <c>SSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663397)]
public static void addsubpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>addsubpd instruction.<br/>
		/// <br/>
		/// <c>ADDSUBPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F D0 /r</c><br/>
		/// <br/>
		/// <c>SSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663398)]
public static void addsubpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>addsubps instruction.<br/>
		/// <br/>
		/// <c>ADDSUBPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>F2 0F D0 /r</c><br/>
		/// <br/>
		/// <c>SSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663399)]
public static void addsubps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>addsubps instruction.<br/>
		/// <br/>
		/// <c>ADDSUBPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>F2 0F D0 /r</c><br/>
		/// <br/>
		/// <c>SSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663400)]
public static void addsubps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>adox instruction.<br/>
		/// <br/>
		/// <c>ADOX r32, r/m32</c><br/>
		/// <br/>
		/// <c>F3 0F 38 F6 /r</c><br/>
		/// <br/>
		/// <c>ADX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663401)]
public static void adox(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>adox instruction.<br/>
		/// <br/>
		/// <c>ADOX r64, r/m64</c><br/>
		/// <br/>
		/// <c>F3 o64 0F 38 F6 /r</c><br/>
		/// <br/>
		/// <c>ADX</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663402)]
public static void adox(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>adox instruction.<br/>
		/// <br/>
		/// <c>ADOX r32, r/m32</c><br/>
		/// <br/>
		/// <c>F3 0F 38 F6 /r</c><br/>
		/// <br/>
		/// <c>ADX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663403)]
public static void adox(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>adox instruction.<br/>
		/// <br/>
		/// <c>ADOX r64, r/m64</c><br/>
		/// <br/>
		/// <c>F3 o64 0F 38 F6 /r</c><br/>
		/// <br/>
		/// <c>ADX</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663404)]
public static void adox(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>aesdec instruction.<br/>
		/// <br/>
		/// <c>AESDEC xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 DE /r</c><br/>
		/// <br/>
		/// <c>AES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663405)]
public static void aesdec(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>aesdec instruction.<br/>
		/// <br/>
		/// <c>AESDEC xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 DE /r</c><br/>
		/// <br/>
		/// <c>AES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663406)]
public static void aesdec(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>aesdec128kl instruction.<br/>
		/// <br/>
		/// <c>AESDEC128KL xmm, m384</c><br/>
		/// <br/>
		/// <c>F3 0F 38 DD !(11):rrr:bbb</c><br/>
		/// <br/>
		/// <c>AESKLE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663407)]
public static void aesdec128kl(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>aesdec256kl instruction.<br/>
		/// <br/>
		/// <c>AESDEC256KL xmm, m512</c><br/>
		/// <br/>
		/// <c>F3 0F 38 DF !(11):rrr:bbb</c><br/>
		/// <br/>
		/// <c>AESKLE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663408)]
public static void aesdec256kl(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>aesdeclast instruction.<br/>
		/// <br/>
		/// <c>AESDECLAST xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 DF /r</c><br/>
		/// <br/>
		/// <c>AES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663409)]
public static void aesdeclast(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>aesdeclast instruction.<br/>
		/// <br/>
		/// <c>AESDECLAST xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 DF /r</c><br/>
		/// <br/>
		/// <c>AES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663410)]
public static void aesdeclast(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>aesdecwide128kl instruction.<br/>
		/// <br/>
		/// <c>AESDECWIDE128KL m384, &lt;XMM0-7&gt;</c><br/>
		/// <br/>
		/// <c>F3 0F 38 D8 !(11):001:bbb</c><br/>
		/// <br/>
		/// <c>AESKLE and WIDE_KL</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663411)]
public static void aesdecwide128kl(AssemblerMemoryOperand dst) {}
		/// <summary>aesdecwide256kl instruction.<br/>
		/// <br/>
		/// <c>AESDECWIDE256KL m512, &lt;XMM0-7&gt;</c><br/>
		/// <br/>
		/// <c>F3 0F 38 D8 !(11):011:bbb</c><br/>
		/// <br/>
		/// <c>AESKLE and WIDE_KL</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663412)]
public static void aesdecwide256kl(AssemblerMemoryOperand dst) {}
		/// <summary>aesenc instruction.<br/>
		/// <br/>
		/// <c>AESENC xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 DC /r</c><br/>
		/// <br/>
		/// <c>AES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663413)]
public static void aesenc(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>aesenc instruction.<br/>
		/// <br/>
		/// <c>AESENC xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 DC /r</c><br/>
		/// <br/>
		/// <c>AES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663414)]
public static void aesenc(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>aesenc128kl instruction.<br/>
		/// <br/>
		/// <c>AESENC128KL xmm, m384</c><br/>
		/// <br/>
		/// <c>F3 0F 38 DC !(11):rrr:bbb</c><br/>
		/// <br/>
		/// <c>AESKLE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663415)]
public static void aesenc128kl(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>aesenc256kl instruction.<br/>
		/// <br/>
		/// <c>AESENC256KL xmm, m512</c><br/>
		/// <br/>
		/// <c>F3 0F 38 DE !(11):rrr:bbb</c><br/>
		/// <br/>
		/// <c>AESKLE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663416)]
public static void aesenc256kl(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>aesenclast instruction.<br/>
		/// <br/>
		/// <c>AESENCLAST xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 DD /r</c><br/>
		/// <br/>
		/// <c>AES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663417)]
public static void aesenclast(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>aesenclast instruction.<br/>
		/// <br/>
		/// <c>AESENCLAST xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 DD /r</c><br/>
		/// <br/>
		/// <c>AES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663418)]
public static void aesenclast(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>aesencwide128kl instruction.<br/>
		/// <br/>
		/// <c>AESENCWIDE128KL m384, &lt;XMM0-7&gt;</c><br/>
		/// <br/>
		/// <c>F3 0F 38 D8 !(11):000:bbb</c><br/>
		/// <br/>
		/// <c>AESKLE and WIDE_KL</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663419)]
public static void aesencwide128kl(AssemblerMemoryOperand dst) {}
		/// <summary>aesencwide256kl instruction.<br/>
		/// <br/>
		/// <c>AESENCWIDE256KL m512, &lt;XMM0-7&gt;</c><br/>
		/// <br/>
		/// <c>F3 0F 38 D8 !(11):010:bbb</c><br/>
		/// <br/>
		/// <c>AESKLE and WIDE_KL</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663420)]
public static void aesencwide256kl(AssemblerMemoryOperand dst) {}
		/// <summary>aesimc instruction.<br/>
		/// <br/>
		/// <c>AESIMC xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 DB /r</c><br/>
		/// <br/>
		/// <c>AES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663421)]
public static void aesimc(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>aesimc instruction.<br/>
		/// <br/>
		/// <c>AESIMC xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 DB /r</c><br/>
		/// <br/>
		/// <c>AES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663422)]
public static void aesimc(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>aeskeygenassist instruction.<br/>
		/// <br/>
		/// <c>AESKEYGENASSIST xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A DF /r ib</c><br/>
		/// <br/>
		/// <c>AES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663423)]
public static void aeskeygenassist(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>aeskeygenassist instruction.<br/>
		/// <br/>
		/// <c>AESKEYGENASSIST xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A DF /r ib</c><br/>
		/// <br/>
		/// <c>AES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663424)]
public static void aeskeygenassist(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>aeskeygenassist instruction.<br/>
		/// <br/>
		/// <c>AESKEYGENASSIST xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A DF /r ib</c><br/>
		/// <br/>
		/// <c>AES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663425)]
public static void aeskeygenassist(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>aeskeygenassist instruction.<br/>
		/// <br/>
		/// <c>AESKEYGENASSIST xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A DF /r ib</c><br/>
		/// <br/>
		/// <c>AES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663426)]
public static void aeskeygenassist(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>altinst instruction.<br/>
		/// <br/>
		/// <c>ALTINST</c><br/>
		/// <br/>
		/// <c>0F 3F</c><br/>
		/// <br/>
		/// <c>Centaur AIS</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100663427)]
public static void altinst() {}
		/// <summary>and instruction.<br/>
		/// <br/>
		/// <c>AND r/m8, r8</c><br/>
		/// <br/>
		/// <c>20 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663428)]
public static void and(AssemblerRegister8 dst, AssemblerRegister8 src) {}
		/// <summary>and instruction.<br/>
		/// <br/>
		/// <c>AND r/m8, r8</c><br/>
		/// <br/>
		/// <c>20 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663429)]
public static void and(AssemblerMemoryOperand dst, AssemblerRegister8 src) {}
		/// <summary>and instruction.<br/>
		/// <br/>
		/// <c>AND r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 21 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663430)]
public static void and(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>and instruction.<br/>
		/// <br/>
		/// <c>AND r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 21 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663431)]
public static void and(AssemblerMemoryOperand dst, AssemblerRegister16 src) {}
		/// <summary>and instruction.<br/>
		/// <br/>
		/// <c>AND r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 21 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663432)]
public static void and(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>and instruction.<br/>
		/// <br/>
		/// <c>AND r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 21 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663433)]
public static void and(AssemblerMemoryOperand dst, AssemblerRegister32 src) {}
		/// <summary>and instruction.<br/>
		/// <br/>
		/// <c>AND r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 21 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663434)]
public static void and(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>and instruction.<br/>
		/// <br/>
		/// <c>AND r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 21 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663435)]
public static void and(AssemblerMemoryOperand dst, AssemblerRegister64 src) {}
		/// <summary>and instruction.<br/>
		/// <br/>
		/// <c>AND r8, r/m8</c><br/>
		/// <br/>
		/// <c>22 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663436)]
public static void and(AssemblerRegister8 dst, AssemblerMemoryOperand src) {}
		/// <summary>and instruction.<br/>
		/// <br/>
		/// <c>AND r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 23 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663437)]
public static void and(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>and instruction.<br/>
		/// <br/>
		/// <c>AND r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 23 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663438)]
public static void and(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>and instruction.<br/>
		/// <br/>
		/// <c>AND r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 23 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663439)]
public static void and(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>and instruction.<br/>
		/// <br/>
		/// <c>AND AL, imm8</c><br/>
		/// <br/>
		/// <c>24 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>AND r/m8, imm8</c><br/>
		/// <br/>
		/// <c>80 /4 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663440)]
public static void and(AssemblerRegister8 dst, sbyte imm) {}
		/// <summary>and instruction.<br/>
		/// <br/>
		/// <c>AND AX, imm16</c><br/>
		/// <br/>
		/// <c>o16 25 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>AND r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 81 /4 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>AND r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 83 /4 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663441)]
public static void and(AssemblerRegister16 dst, short imm) {}
		/// <summary>and instruction.<br/>
		/// <br/>
		/// <c>AND EAX, imm32</c><br/>
		/// <br/>
		/// <c>o32 25 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>AND r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 81 /4 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>AND r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 83 /4 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663442)]
public static void and(AssemblerRegister32 dst, int imm) {}
		/// <summary>and instruction.<br/>
		/// <br/>
		/// <c>AND RAX, imm32</c><br/>
		/// <br/>
		/// <c>o64 25 id</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>AND r/m64, imm32</c><br/>
		/// <br/>
		/// <c>o64 81 /4 id</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>AND r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 83 /4 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663443)]
public static void and(AssemblerRegister64 dst, int imm) {}
		/// <summary>and instruction.<br/>
		/// <br/>
		/// <c>AND r/m64, imm32</c><br/>
		/// <br/>
		/// <c>o64 81 /4 id</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>AND r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 83 /4 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>AND r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 81 /4 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>AND r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 83 /4 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>AND r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 81 /4 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>AND r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 83 /4 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>AND r/m8, imm8</c><br/>
		/// <br/>
		/// <c>80 /4 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663444)]
public static void and(AssemblerMemoryOperand dst, int imm) {}
		/// <summary>and instruction.<br/>
		/// <br/>
		/// <c>AND AL, imm8</c><br/>
		/// <br/>
		/// <c>24 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>AND r/m8, imm8</c><br/>
		/// <br/>
		/// <c>80 /4 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663445)]
public static void and(AssemblerRegister8 dst, byte imm) {}
		/// <summary>and instruction.<br/>
		/// <br/>
		/// <c>AND AX, imm16</c><br/>
		/// <br/>
		/// <c>o16 25 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>AND r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 81 /4 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>AND r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 83 /4 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663446)]
public static void and(AssemblerRegister16 dst, ushort imm) {}
		/// <summary>and instruction.<br/>
		/// <br/>
		/// <c>AND EAX, imm32</c><br/>
		/// <br/>
		/// <c>o32 25 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>AND r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 81 /4 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>AND r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 83 /4 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663447)]
public static void and(AssemblerRegister32 dst, uint imm) {}
		/// <summary>and instruction.<br/>
		/// <br/>
		/// <c>AND r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 81 /4 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>AND r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 83 /4 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>AND r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 81 /4 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>AND r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 83 /4 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>AND r/m8, imm8</c><br/>
		/// <br/>
		/// <c>80 /4 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663448)]
public static void and(AssemblerMemoryOperand dst, uint imm) {}
		/// <summary>andn instruction.<br/>
		/// <br/>
		/// <c>ANDN r32a, r32b, r/m32</c><br/>
		/// <br/>
		/// <c>VEX.LZ.0F38.W0 F2 /r</c><br/>
		/// <br/>
		/// <c>BMI1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663449)]
public static void andn(AssemblerRegister32 dst, AssemblerRegister32 src1, AssemblerRegister32 src2) {}
		/// <summary>andn instruction.<br/>
		/// <br/>
		/// <c>ANDN r64a, r64b, r/m64</c><br/>
		/// <br/>
		/// <c>VEX.LZ.0F38.W1 F2 /r</c><br/>
		/// <br/>
		/// <c>BMI1</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663450)]
public static void andn(AssemblerRegister64 dst, AssemblerRegister64 src1, AssemblerRegister64 src2) {}
		/// <summary>andn instruction.<br/>
		/// <br/>
		/// <c>ANDN r32a, r32b, r/m32</c><br/>
		/// <br/>
		/// <c>VEX.LZ.0F38.W0 F2 /r</c><br/>
		/// <br/>
		/// <c>BMI1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663451)]
public static void andn(AssemblerRegister32 dst, AssemblerRegister32 src1, AssemblerMemoryOperand src2) {}
		/// <summary>andn instruction.<br/>
		/// <br/>
		/// <c>ANDN r64a, r64b, r/m64</c><br/>
		/// <br/>
		/// <c>VEX.LZ.0F38.W1 F2 /r</c><br/>
		/// <br/>
		/// <c>BMI1</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663452)]
public static void andn(AssemblerRegister64 dst, AssemblerRegister64 src1, AssemblerMemoryOperand src2) {}
		/// <summary>andnpd instruction.<br/>
		/// <br/>
		/// <c>ANDNPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 55 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663453)]
public static void andnpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>andnpd instruction.<br/>
		/// <br/>
		/// <c>ANDNPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 55 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663454)]
public static void andnpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>andnps instruction.<br/>
		/// <br/>
		/// <c>ANDNPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 55 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663455)]
public static void andnps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>andnps instruction.<br/>
		/// <br/>
		/// <c>ANDNPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 55 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663456)]
public static void andnps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>andpd instruction.<br/>
		/// <br/>
		/// <c>ANDPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 54 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663457)]
public static void andpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>andpd instruction.<br/>
		/// <br/>
		/// <c>ANDPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 54 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663458)]
public static void andpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>andps instruction.<br/>
		/// <br/>
		/// <c>ANDPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 54 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663459)]
public static void andps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>andps instruction.<br/>
		/// <br/>
		/// <c>ANDPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 54 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663460)]
public static void andps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>arpl instruction.<br/>
		/// <br/>
		/// <c>ARPL r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 63 /r</c><br/>
		/// <br/>
		/// <c>286+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100663461)]
public static void arpl(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>arpl instruction.<br/>
		/// <br/>
		/// <c>ARPL r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 63 /r</c><br/>
		/// <br/>
		/// <c>286+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100663462)]
public static void arpl(AssemblerMemoryOperand dst, AssemblerRegister16 src) {}
		/// <summary>arpl instruction.<br/>
		/// <br/>
		/// <c>ARPL r32/m16, r32</c><br/>
		/// <br/>
		/// <c>o32 63 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100663463)]
public static void arpl(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>arpl instruction.<br/>
		/// <br/>
		/// <c>ARPL r32/m16, r32</c><br/>
		/// <br/>
		/// <c>o32 63 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100663464)]
public static void arpl(AssemblerMemoryOperand dst, AssemblerRegister32 src) {}
		/// <summary>bb0_reset instruction.<br/>
		/// <br/>
		/// <c>BB0_RESET</c><br/>
		/// <br/>
		/// <c>0F 3A</c><br/>
		/// <br/>
		/// <c>Cyrix MediaGX, GXm, GXLV, GX1</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100663465)]
public static void bb0_reset() {}
		/// <summary>bb1_reset instruction.<br/>
		/// <br/>
		/// <c>BB1_RESET</c><br/>
		/// <br/>
		/// <c>0F 3B</c><br/>
		/// <br/>
		/// <c>Cyrix MediaGX, GXm, GXLV, GX1</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100663466)]
public static void bb1_reset() {}
		/// <summary>bextr instruction.<br/>
		/// <br/>
		/// <c>BEXTR r32a, r/m32, r32b</c><br/>
		/// <br/>
		/// <c>VEX.LZ.0F38.W0 F7 /r</c><br/>
		/// <br/>
		/// <c>BMI1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663467)]
public static void bextr(AssemblerRegister32 dst, AssemblerRegister32 src1, AssemblerRegister32 src2) {}
		/// <summary>bextr instruction.<br/>
		/// <br/>
		/// <c>BEXTR r32a, r/m32, r32b</c><br/>
		/// <br/>
		/// <c>VEX.LZ.0F38.W0 F7 /r</c><br/>
		/// <br/>
		/// <c>BMI1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663468)]
public static void bextr(AssemblerRegister32 dst, AssemblerMemoryOperand src1, AssemblerRegister32 src2) {}
		/// <summary>bextr instruction.<br/>
		/// <br/>
		/// <c>BEXTR r64a, r/m64, r64b</c><br/>
		/// <br/>
		/// <c>VEX.LZ.0F38.W1 F7 /r</c><br/>
		/// <br/>
		/// <c>BMI1</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663469)]
public static void bextr(AssemblerRegister64 dst, AssemblerRegister64 src1, AssemblerRegister64 src2) {}
		/// <summary>bextr instruction.<br/>
		/// <br/>
		/// <c>BEXTR r64a, r/m64, r64b</c><br/>
		/// <br/>
		/// <c>VEX.LZ.0F38.W1 F7 /r</c><br/>
		/// <br/>
		/// <c>BMI1</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663470)]
public static void bextr(AssemblerRegister64 dst, AssemblerMemoryOperand src1, AssemblerRegister64 src2) {}
		/// <summary>bextr instruction.<br/>
		/// <br/>
		/// <c>BEXTR r32, r/m32, imm32</c><br/>
		/// <br/>
		/// <c>XOP.L0.XA.W0 10 /r id</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663471)]
public static void bextr(AssemblerRegister32 dst, AssemblerRegister32 src1, int imm) {}
		/// <summary>bextr instruction.<br/>
		/// <br/>
		/// <c>BEXTR r64, r/m64, imm32</c><br/>
		/// <br/>
		/// <c>XOP.L0.XA.W1 10 /r id</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663472)]
public static void bextr(AssemblerRegister64 dst, AssemblerRegister64 src1, int imm) {}
		/// <summary>bextr instruction.<br/>
		/// <br/>
		/// <c>BEXTR r32, r/m32, imm32</c><br/>
		/// <br/>
		/// <c>XOP.L0.XA.W0 10 /r id</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663473)]
public static void bextr(AssemblerRegister32 dst, AssemblerMemoryOperand src1, int imm) {}
		/// <summary>bextr instruction.<br/>
		/// <br/>
		/// <c>BEXTR r64, r/m64, imm32</c><br/>
		/// <br/>
		/// <c>XOP.L0.XA.W1 10 /r id</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663474)]
public static void bextr(AssemblerRegister64 dst, AssemblerMemoryOperand src1, int imm) {}
		/// <summary>bextr instruction.<br/>
		/// <br/>
		/// <c>BEXTR r32, r/m32, imm32</c><br/>
		/// <br/>
		/// <c>XOP.L0.XA.W0 10 /r id</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663475)]
public static void bextr(AssemblerRegister32 dst, AssemblerRegister32 src1, uint imm) {}
		/// <summary>bextr instruction.<br/>
		/// <br/>
		/// <c>BEXTR r64, r/m64, imm32</c><br/>
		/// <br/>
		/// <c>XOP.L0.XA.W1 10 /r id</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663476)]
public static void bextr(AssemblerRegister64 dst, AssemblerRegister64 src1, uint imm) {}
		/// <summary>bextr instruction.<br/>
		/// <br/>
		/// <c>BEXTR r32, r/m32, imm32</c><br/>
		/// <br/>
		/// <c>XOP.L0.XA.W0 10 /r id</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663477)]
public static void bextr(AssemblerRegister32 dst, AssemblerMemoryOperand src1, uint imm) {}
		/// <summary>bextr instruction.<br/>
		/// <br/>
		/// <c>BEXTR r64, r/m64, imm32</c><br/>
		/// <br/>
		/// <c>XOP.L0.XA.W1 10 /r id</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663478)]
public static void bextr(AssemblerRegister64 dst, AssemblerMemoryOperand src1, uint imm) {}
		/// <summary>blcfill instruction.<br/>
		/// <br/>
		/// <c>BLCFILL r32, r/m32</c><br/>
		/// <br/>
		/// <c>XOP.L0.X9.W0 01 /1</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663479)]
public static void blcfill(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>blcfill instruction.<br/>
		/// <br/>
		/// <c>BLCFILL r64, r/m64</c><br/>
		/// <br/>
		/// <c>XOP.L0.X9.W1 01 /1</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663480)]
public static void blcfill(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>blcfill instruction.<br/>
		/// <br/>
		/// <c>BLCFILL r32, r/m32</c><br/>
		/// <br/>
		/// <c>XOP.L0.X9.W0 01 /1</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663481)]
public static void blcfill(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>blcfill instruction.<br/>
		/// <br/>
		/// <c>BLCFILL r64, r/m64</c><br/>
		/// <br/>
		/// <c>XOP.L0.X9.W1 01 /1</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663482)]
public static void blcfill(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>blci instruction.<br/>
		/// <br/>
		/// <c>BLCI r32, r/m32</c><br/>
		/// <br/>
		/// <c>XOP.L0.X9.W0 02 /6</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663483)]
public static void blci(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>blci instruction.<br/>
		/// <br/>
		/// <c>BLCI r64, r/m64</c><br/>
		/// <br/>
		/// <c>XOP.L0.X9.W1 02 /6</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663484)]
public static void blci(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>blci instruction.<br/>
		/// <br/>
		/// <c>BLCI r32, r/m32</c><br/>
		/// <br/>
		/// <c>XOP.L0.X9.W0 02 /6</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663485)]
public static void blci(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>blci instruction.<br/>
		/// <br/>
		/// <c>BLCI r64, r/m64</c><br/>
		/// <br/>
		/// <c>XOP.L0.X9.W1 02 /6</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663486)]
public static void blci(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>blcic instruction.<br/>
		/// <br/>
		/// <c>BLCIC r32, r/m32</c><br/>
		/// <br/>
		/// <c>XOP.L0.X9.W0 01 /5</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663487)]
public static void blcic(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>blcic instruction.<br/>
		/// <br/>
		/// <c>BLCIC r64, r/m64</c><br/>
		/// <br/>
		/// <c>XOP.L0.X9.W1 01 /5</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663488)]
public static void blcic(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>blcic instruction.<br/>
		/// <br/>
		/// <c>BLCIC r32, r/m32</c><br/>
		/// <br/>
		/// <c>XOP.L0.X9.W0 01 /5</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663489)]
public static void blcic(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>blcic instruction.<br/>
		/// <br/>
		/// <c>BLCIC r64, r/m64</c><br/>
		/// <br/>
		/// <c>XOP.L0.X9.W1 01 /5</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663490)]
public static void blcic(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>blcmsk instruction.<br/>
		/// <br/>
		/// <c>BLCMSK r32, r/m32</c><br/>
		/// <br/>
		/// <c>XOP.L0.X9.W0 02 /1</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663491)]
public static void blcmsk(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>blcmsk instruction.<br/>
		/// <br/>
		/// <c>BLCMSK r64, r/m64</c><br/>
		/// <br/>
		/// <c>XOP.L0.X9.W1 02 /1</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663492)]
public static void blcmsk(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>blcmsk instruction.<br/>
		/// <br/>
		/// <c>BLCMSK r32, r/m32</c><br/>
		/// <br/>
		/// <c>XOP.L0.X9.W0 02 /1</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663493)]
public static void blcmsk(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>blcmsk instruction.<br/>
		/// <br/>
		/// <c>BLCMSK r64, r/m64</c><br/>
		/// <br/>
		/// <c>XOP.L0.X9.W1 02 /1</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663494)]
public static void blcmsk(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>blcs instruction.<br/>
		/// <br/>
		/// <c>BLCS r32, r/m32</c><br/>
		/// <br/>
		/// <c>XOP.L0.X9.W0 01 /3</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663495)]
public static void blcs(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>blcs instruction.<br/>
		/// <br/>
		/// <c>BLCS r64, r/m64</c><br/>
		/// <br/>
		/// <c>XOP.L0.X9.W1 01 /3</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663496)]
public static void blcs(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>blcs instruction.<br/>
		/// <br/>
		/// <c>BLCS r32, r/m32</c><br/>
		/// <br/>
		/// <c>XOP.L0.X9.W0 01 /3</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663497)]
public static void blcs(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>blcs instruction.<br/>
		/// <br/>
		/// <c>BLCS r64, r/m64</c><br/>
		/// <br/>
		/// <c>XOP.L0.X9.W1 01 /3</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663498)]
public static void blcs(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>blendpd instruction.<br/>
		/// <br/>
		/// <c>BLENDPD xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 0D /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663499)]
public static void blendpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>blendpd instruction.<br/>
		/// <br/>
		/// <c>BLENDPD xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 0D /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663500)]
public static void blendpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>blendpd instruction.<br/>
		/// <br/>
		/// <c>BLENDPD xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 0D /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663501)]
public static void blendpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>blendpd instruction.<br/>
		/// <br/>
		/// <c>BLENDPD xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 0D /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663502)]
public static void blendpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>blendps instruction.<br/>
		/// <br/>
		/// <c>BLENDPS xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 0C /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663503)]
public static void blendps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>blendps instruction.<br/>
		/// <br/>
		/// <c>BLENDPS xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 0C /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663504)]
public static void blendps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>blendps instruction.<br/>
		/// <br/>
		/// <c>BLENDPS xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 0C /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663505)]
public static void blendps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>blendps instruction.<br/>
		/// <br/>
		/// <c>BLENDPS xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 0C /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663506)]
public static void blendps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>blendvpd instruction.<br/>
		/// <br/>
		/// <c>BLENDVPD xmm1, xmm2/m128, &lt;XMM0&gt;</c><br/>
		/// <br/>
		/// <c>66 0F 38 15 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663507)]
public static void blendvpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>blendvpd instruction.<br/>
		/// <br/>
		/// <c>BLENDVPD xmm1, xmm2/m128, &lt;XMM0&gt;</c><br/>
		/// <br/>
		/// <c>66 0F 38 15 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663508)]
public static void blendvpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>blendvps instruction.<br/>
		/// <br/>
		/// <c>BLENDVPS xmm1, xmm2/m128, &lt;XMM0&gt;</c><br/>
		/// <br/>
		/// <c>66 0F 38 14 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663509)]
public static void blendvps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>blendvps instruction.<br/>
		/// <br/>
		/// <c>BLENDVPS xmm1, xmm2/m128, &lt;XMM0&gt;</c><br/>
		/// <br/>
		/// <c>66 0F 38 14 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663510)]
public static void blendvps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>blsfill instruction.<br/>
		/// <br/>
		/// <c>BLSFILL r32, r/m32</c><br/>
		/// <br/>
		/// <c>XOP.L0.X9.W0 01 /2</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663511)]
public static void blsfill(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>blsfill instruction.<br/>
		/// <br/>
		/// <c>BLSFILL r64, r/m64</c><br/>
		/// <br/>
		/// <c>XOP.L0.X9.W1 01 /2</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663512)]
public static void blsfill(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>blsfill instruction.<br/>
		/// <br/>
		/// <c>BLSFILL r32, r/m32</c><br/>
		/// <br/>
		/// <c>XOP.L0.X9.W0 01 /2</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663513)]
public static void blsfill(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>blsfill instruction.<br/>
		/// <br/>
		/// <c>BLSFILL r64, r/m64</c><br/>
		/// <br/>
		/// <c>XOP.L0.X9.W1 01 /2</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663514)]
public static void blsfill(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>blsi instruction.<br/>
		/// <br/>
		/// <c>BLSI r32, r/m32</c><br/>
		/// <br/>
		/// <c>VEX.LZ.0F38.W0 F3 /3</c><br/>
		/// <br/>
		/// <c>BMI1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663515)]
public static void blsi(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>blsi instruction.<br/>
		/// <br/>
		/// <c>BLSI r64, r/m64</c><br/>
		/// <br/>
		/// <c>VEX.LZ.0F38.W1 F3 /3</c><br/>
		/// <br/>
		/// <c>BMI1</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663516)]
public static void blsi(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>blsi instruction.<br/>
		/// <br/>
		/// <c>BLSI r32, r/m32</c><br/>
		/// <br/>
		/// <c>VEX.LZ.0F38.W0 F3 /3</c><br/>
		/// <br/>
		/// <c>BMI1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663517)]
public static void blsi(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>blsi instruction.<br/>
		/// <br/>
		/// <c>BLSI r64, r/m64</c><br/>
		/// <br/>
		/// <c>VEX.LZ.0F38.W1 F3 /3</c><br/>
		/// <br/>
		/// <c>BMI1</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663518)]
public static void blsi(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>blsic instruction.<br/>
		/// <br/>
		/// <c>BLSIC r32, r/m32</c><br/>
		/// <br/>
		/// <c>XOP.L0.X9.W0 01 /6</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663519)]
public static void blsic(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>blsic instruction.<br/>
		/// <br/>
		/// <c>BLSIC r64, r/m64</c><br/>
		/// <br/>
		/// <c>XOP.L0.X9.W1 01 /6</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663520)]
public static void blsic(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>blsic instruction.<br/>
		/// <br/>
		/// <c>BLSIC r32, r/m32</c><br/>
		/// <br/>
		/// <c>XOP.L0.X9.W0 01 /6</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663521)]
public static void blsic(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>blsic instruction.<br/>
		/// <br/>
		/// <c>BLSIC r64, r/m64</c><br/>
		/// <br/>
		/// <c>XOP.L0.X9.W1 01 /6</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663522)]
public static void blsic(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>blsmsk instruction.<br/>
		/// <br/>
		/// <c>BLSMSK r32, r/m32</c><br/>
		/// <br/>
		/// <c>VEX.LZ.0F38.W0 F3 /2</c><br/>
		/// <br/>
		/// <c>BMI1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663523)]
public static void blsmsk(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>blsmsk instruction.<br/>
		/// <br/>
		/// <c>BLSMSK r64, r/m64</c><br/>
		/// <br/>
		/// <c>VEX.LZ.0F38.W1 F3 /2</c><br/>
		/// <br/>
		/// <c>BMI1</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663524)]
public static void blsmsk(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>blsmsk instruction.<br/>
		/// <br/>
		/// <c>BLSMSK r32, r/m32</c><br/>
		/// <br/>
		/// <c>VEX.LZ.0F38.W0 F3 /2</c><br/>
		/// <br/>
		/// <c>BMI1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663525)]
public static void blsmsk(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>blsmsk instruction.<br/>
		/// <br/>
		/// <c>BLSMSK r64, r/m64</c><br/>
		/// <br/>
		/// <c>VEX.LZ.0F38.W1 F3 /2</c><br/>
		/// <br/>
		/// <c>BMI1</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663526)]
public static void blsmsk(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>blsr instruction.<br/>
		/// <br/>
		/// <c>BLSR r32, r/m32</c><br/>
		/// <br/>
		/// <c>VEX.LZ.0F38.W0 F3 /1</c><br/>
		/// <br/>
		/// <c>BMI1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663527)]
public static void blsr(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>blsr instruction.<br/>
		/// <br/>
		/// <c>BLSR r64, r/m64</c><br/>
		/// <br/>
		/// <c>VEX.LZ.0F38.W1 F3 /1</c><br/>
		/// <br/>
		/// <c>BMI1</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663528)]
public static void blsr(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>blsr instruction.<br/>
		/// <br/>
		/// <c>BLSR r32, r/m32</c><br/>
		/// <br/>
		/// <c>VEX.LZ.0F38.W0 F3 /1</c><br/>
		/// <br/>
		/// <c>BMI1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663529)]
public static void blsr(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>blsr instruction.<br/>
		/// <br/>
		/// <c>BLSR r64, r/m64</c><br/>
		/// <br/>
		/// <c>VEX.LZ.0F38.W1 F3 /1</c><br/>
		/// <br/>
		/// <c>BMI1</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663530)]
public static void blsr(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>bndcl instruction.<br/>
		/// <br/>
		/// <c>BNDCL bnd, r/m32</c><br/>
		/// <br/>
		/// <c>F3 0F 1A /r</c><br/>
		/// <br/>
		/// <c>MPX</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100663531)]
public static void bndcl(AssemblerRegisterBND dst, AssemblerRegister32 src) {}
		/// <summary>bndcl instruction.<br/>
		/// <br/>
		/// <c>BNDCL bnd, r/m64</c><br/>
		/// <br/>
		/// <c>F3 0F 1A /r</c><br/>
		/// <br/>
		/// <c>MPX</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663532)]
public static void bndcl(AssemblerRegisterBND dst, AssemblerRegister64 src) {}
		/// <summary>bndcl instruction.<br/>
		/// <br/>
		/// <c>BNDCL bnd, r/m64</c><br/>
		/// <br/>
		/// <c>F3 0F 1A /r</c><br/>
		/// <br/>
		/// <c>MPX</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>BNDCL bnd, r/m32</c><br/>
		/// <br/>
		/// <c>F3 0F 1A /r</c><br/>
		/// <br/>
		/// <c>MPX</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100663533)]
public static void bndcl(AssemblerRegisterBND dst, AssemblerMemoryOperand src) {}
		/// <summary>bndcn instruction.<br/>
		/// <br/>
		/// <c>BNDCN bnd, r/m32</c><br/>
		/// <br/>
		/// <c>F2 0F 1B /r</c><br/>
		/// <br/>
		/// <c>MPX</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100663534)]
public static void bndcn(AssemblerRegisterBND dst, AssemblerRegister32 src) {}
		/// <summary>bndcn instruction.<br/>
		/// <br/>
		/// <c>BNDCN bnd, r/m64</c><br/>
		/// <br/>
		/// <c>F2 0F 1B /r</c><br/>
		/// <br/>
		/// <c>MPX</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663535)]
public static void bndcn(AssemblerRegisterBND dst, AssemblerRegister64 src) {}
		/// <summary>bndcn instruction.<br/>
		/// <br/>
		/// <c>BNDCN bnd, r/m64</c><br/>
		/// <br/>
		/// <c>F2 0F 1B /r</c><br/>
		/// <br/>
		/// <c>MPX</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>BNDCN bnd, r/m32</c><br/>
		/// <br/>
		/// <c>F2 0F 1B /r</c><br/>
		/// <br/>
		/// <c>MPX</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100663536)]
public static void bndcn(AssemblerRegisterBND dst, AssemblerMemoryOperand src) {}
		/// <summary>bndcu instruction.<br/>
		/// <br/>
		/// <c>BNDCU bnd, r/m32</c><br/>
		/// <br/>
		/// <c>F2 0F 1A /r</c><br/>
		/// <br/>
		/// <c>MPX</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100663537)]
public static void bndcu(AssemblerRegisterBND dst, AssemblerRegister32 src) {}
		/// <summary>bndcu instruction.<br/>
		/// <br/>
		/// <c>BNDCU bnd, r/m64</c><br/>
		/// <br/>
		/// <c>F2 0F 1A /r</c><br/>
		/// <br/>
		/// <c>MPX</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663538)]
public static void bndcu(AssemblerRegisterBND dst, AssemblerRegister64 src) {}
		/// <summary>bndcu instruction.<br/>
		/// <br/>
		/// <c>BNDCU bnd, r/m64</c><br/>
		/// <br/>
		/// <c>F2 0F 1A /r</c><br/>
		/// <br/>
		/// <c>MPX</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>BNDCU bnd, r/m32</c><br/>
		/// <br/>
		/// <c>F2 0F 1A /r</c><br/>
		/// <br/>
		/// <c>MPX</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100663539)]
public static void bndcu(AssemblerRegisterBND dst, AssemblerMemoryOperand src) {}
		/// <summary>bndldx instruction.<br/>
		/// <br/>
		/// <c>BNDLDX bnd, mib</c><br/>
		/// <br/>
		/// <c>NP 0F 1A /r</c><br/>
		/// <br/>
		/// <c>MPX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663540)]
public static void bndldx(AssemblerRegisterBND dst, AssemblerMemoryOperand src) {}
		/// <summary>bndmk instruction.<br/>
		/// <br/>
		/// <c>BNDMK bnd, m64</c><br/>
		/// <br/>
		/// <c>F3 0F 1B /r</c><br/>
		/// <br/>
		/// <c>MPX</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>BNDMK bnd, m32</c><br/>
		/// <br/>
		/// <c>F3 0F 1B /r</c><br/>
		/// <br/>
		/// <c>MPX</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100663541)]
public static void bndmk(AssemblerRegisterBND dst, AssemblerMemoryOperand src) {}
		/// <summary>bndmov instruction.<br/>
		/// <br/>
		/// <c>BNDMOV bnd1, bnd2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 1A /r</c><br/>
		/// <br/>
		/// <c>MPX</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>BNDMOV bnd1, bnd2/m64</c><br/>
		/// <br/>
		/// <c>66 0F 1A /r</c><br/>
		/// <br/>
		/// <c>MPX</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100663542)]
public static void bndmov(AssemblerRegisterBND dst, AssemblerRegisterBND src) {}
		/// <summary>bndmov instruction.<br/>
		/// <br/>
		/// <c>BNDMOV bnd1/m128, bnd2</c><br/>
		/// <br/>
		/// <c>66 0F 1B /r</c><br/>
		/// <br/>
		/// <c>MPX</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>BNDMOV bnd1/m64, bnd2</c><br/>
		/// <br/>
		/// <c>66 0F 1B /r</c><br/>
		/// <br/>
		/// <c>MPX</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100663543)]
public static void bndmov(AssemblerMemoryOperand dst, AssemblerRegisterBND src) {}
		/// <summary>bndmov instruction.<br/>
		/// <br/>
		/// <c>BNDMOV bnd1, bnd2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 1A /r</c><br/>
		/// <br/>
		/// <c>MPX</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>BNDMOV bnd1, bnd2/m64</c><br/>
		/// <br/>
		/// <c>66 0F 1A /r</c><br/>
		/// <br/>
		/// <c>MPX</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100663544)]
public static void bndmov(AssemblerRegisterBND dst, AssemblerMemoryOperand src) {}
		/// <summary>bndstx instruction.<br/>
		/// <br/>
		/// <c>BNDSTX mib, bnd</c><br/>
		/// <br/>
		/// <c>NP 0F 1B /r</c><br/>
		/// <br/>
		/// <c>MPX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663545)]
public static void bndstx(AssemblerMemoryOperand dst, AssemblerRegisterBND src) {}
		/// <summary>bound instruction.<br/>
		/// <br/>
		/// <c>BOUND r16, m16&amp;16</c><br/>
		/// <br/>
		/// <c>o16 62 /r</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100663546)]
public static void bound(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>bound instruction.<br/>
		/// <br/>
		/// <c>BOUND r32, m32&amp;32</c><br/>
		/// <br/>
		/// <c>o32 62 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100663547)]
public static void bound(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>bsf instruction.<br/>
		/// <br/>
		/// <c>BSF r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F BC /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663548)]
public static void bsf(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>bsf instruction.<br/>
		/// <br/>
		/// <c>BSF r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F BC /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663549)]
public static void bsf(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>bsf instruction.<br/>
		/// <br/>
		/// <c>BSF r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F BC /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663550)]
public static void bsf(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>bsf instruction.<br/>
		/// <br/>
		/// <c>BSF r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F BC /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663551)]
public static void bsf(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>bsf instruction.<br/>
		/// <br/>
		/// <c>BSF r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F BC /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663552)]
public static void bsf(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>bsf instruction.<br/>
		/// <br/>
		/// <c>BSF r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F BC /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663553)]
public static void bsf(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>bsr instruction.<br/>
		/// <br/>
		/// <c>BSR r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F BD /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663554)]
public static void bsr(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>bsr instruction.<br/>
		/// <br/>
		/// <c>BSR r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F BD /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663555)]
public static void bsr(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>bsr instruction.<br/>
		/// <br/>
		/// <c>BSR r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F BD /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663556)]
public static void bsr(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>bsr instruction.<br/>
		/// <br/>
		/// <c>BSR r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F BD /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663557)]
public static void bsr(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>bsr instruction.<br/>
		/// <br/>
		/// <c>BSR r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F BD /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663558)]
public static void bsr(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>bsr instruction.<br/>
		/// <br/>
		/// <c>BSR r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F BD /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663559)]
public static void bsr(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>bswap instruction.<br/>
		/// <br/>
		/// <c>BSWAP r16</c><br/>
		/// <br/>
		/// <c>o16 0F C8+rw</c><br/>
		/// <br/>
		/// <c>486+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663560)]
public static void bswap(AssemblerRegister16 dst) {}
		/// <summary>bswap instruction.<br/>
		/// <br/>
		/// <c>BSWAP r32</c><br/>
		/// <br/>
		/// <c>o32 0F C8+rd</c><br/>
		/// <br/>
		/// <c>486+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663561)]
public static void bswap(AssemblerRegister32 dst) {}
		/// <summary>bswap instruction.<br/>
		/// <br/>
		/// <c>BSWAP r64</c><br/>
		/// <br/>
		/// <c>o64 0F C8+ro</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663562)]
public static void bswap(AssemblerRegister64 dst) {}
		/// <summary>bt instruction.<br/>
		/// <br/>
		/// <c>BT r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 0F A3 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663563)]
public static void bt(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>bt instruction.<br/>
		/// <br/>
		/// <c>BT r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 0F A3 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663564)]
public static void bt(AssemblerMemoryOperand dst, AssemblerRegister16 src) {}
		/// <summary>bt instruction.<br/>
		/// <br/>
		/// <c>BT r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 0F A3 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663565)]
public static void bt(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>bt instruction.<br/>
		/// <br/>
		/// <c>BT r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 0F A3 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663566)]
public static void bt(AssemblerMemoryOperand dst, AssemblerRegister32 src) {}
		/// <summary>bt instruction.<br/>
		/// <br/>
		/// <c>BT r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 0F A3 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663567)]
public static void bt(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>bt instruction.<br/>
		/// <br/>
		/// <c>BT r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 0F A3 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663568)]
public static void bt(AssemblerMemoryOperand dst, AssemblerRegister64 src) {}
		/// <summary>bt instruction.<br/>
		/// <br/>
		/// <c>BT r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 0F BA /4 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663569)]
public static void bt(AssemblerRegister16 dst, sbyte imm) {}
		/// <summary>bt instruction.<br/>
		/// <br/>
		/// <c>BT r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 0F BA /4 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663570)]
public static void bt(AssemblerRegister32 dst, sbyte imm) {}
		/// <summary>bt instruction.<br/>
		/// <br/>
		/// <c>BT r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 0F BA /4 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663571)]
public static void bt(AssemblerRegister64 dst, sbyte imm) {}
		/// <summary>bt instruction.<br/>
		/// <br/>
		/// <c>BT r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 0F BA /4 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>BT r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 0F BA /4 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>BT r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 0F BA /4 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663572)]
public static void bt(AssemblerMemoryOperand dst, sbyte imm) {}
		/// <summary>bt instruction.<br/>
		/// <br/>
		/// <c>BT r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 0F BA /4 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663573)]
public static void bt(AssemblerRegister16 dst, byte imm) {}
		/// <summary>bt instruction.<br/>
		/// <br/>
		/// <c>BT r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 0F BA /4 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663574)]
public static void bt(AssemblerRegister32 dst, byte imm) {}
		/// <summary>bt instruction.<br/>
		/// <br/>
		/// <c>BT r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 0F BA /4 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663575)]
public static void bt(AssemblerRegister64 dst, byte imm) {}
		/// <summary>bt instruction.<br/>
		/// <br/>
		/// <c>BT r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 0F BA /4 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>BT r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 0F BA /4 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>BT r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 0F BA /4 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663576)]
public static void bt(AssemblerMemoryOperand dst, byte imm) {}
		/// <summary>btc instruction.<br/>
		/// <br/>
		/// <c>BTC r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 0F BB /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663577)]
public static void btc(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>btc instruction.<br/>
		/// <br/>
		/// <c>BTC r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 0F BB /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663578)]
public static void btc(AssemblerMemoryOperand dst, AssemblerRegister16 src) {}
		/// <summary>btc instruction.<br/>
		/// <br/>
		/// <c>BTC r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 0F BB /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663579)]
public static void btc(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>btc instruction.<br/>
		/// <br/>
		/// <c>BTC r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 0F BB /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663580)]
public static void btc(AssemblerMemoryOperand dst, AssemblerRegister32 src) {}
		/// <summary>btc instruction.<br/>
		/// <br/>
		/// <c>BTC r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 0F BB /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663581)]
public static void btc(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>btc instruction.<br/>
		/// <br/>
		/// <c>BTC r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 0F BB /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663582)]
public static void btc(AssemblerMemoryOperand dst, AssemblerRegister64 src) {}
		/// <summary>btc instruction.<br/>
		/// <br/>
		/// <c>BTC r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 0F BA /7 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663583)]
public static void btc(AssemblerRegister16 dst, sbyte imm) {}
		/// <summary>btc instruction.<br/>
		/// <br/>
		/// <c>BTC r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 0F BA /7 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663584)]
public static void btc(AssemblerRegister32 dst, sbyte imm) {}
		/// <summary>btc instruction.<br/>
		/// <br/>
		/// <c>BTC r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 0F BA /7 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663585)]
public static void btc(AssemblerRegister64 dst, sbyte imm) {}
		/// <summary>btc instruction.<br/>
		/// <br/>
		/// <c>BTC r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 0F BA /7 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>BTC r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 0F BA /7 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>BTC r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 0F BA /7 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663586)]
public static void btc(AssemblerMemoryOperand dst, sbyte imm) {}
		/// <summary>btc instruction.<br/>
		/// <br/>
		/// <c>BTC r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 0F BA /7 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663587)]
public static void btc(AssemblerRegister16 dst, byte imm) {}
		/// <summary>btc instruction.<br/>
		/// <br/>
		/// <c>BTC r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 0F BA /7 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663588)]
public static void btc(AssemblerRegister32 dst, byte imm) {}
		/// <summary>btc instruction.<br/>
		/// <br/>
		/// <c>BTC r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 0F BA /7 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663589)]
public static void btc(AssemblerRegister64 dst, byte imm) {}
		/// <summary>btc instruction.<br/>
		/// <br/>
		/// <c>BTC r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 0F BA /7 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>BTC r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 0F BA /7 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>BTC r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 0F BA /7 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663590)]
public static void btc(AssemblerMemoryOperand dst, byte imm) {}
		/// <summary>btr instruction.<br/>
		/// <br/>
		/// <c>BTR r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 0F B3 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663591)]
public static void btr(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>btr instruction.<br/>
		/// <br/>
		/// <c>BTR r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 0F B3 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663592)]
public static void btr(AssemblerMemoryOperand dst, AssemblerRegister16 src) {}
		/// <summary>btr instruction.<br/>
		/// <br/>
		/// <c>BTR r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 0F B3 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663593)]
public static void btr(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>btr instruction.<br/>
		/// <br/>
		/// <c>BTR r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 0F B3 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663594)]
public static void btr(AssemblerMemoryOperand dst, AssemblerRegister32 src) {}
		/// <summary>btr instruction.<br/>
		/// <br/>
		/// <c>BTR r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 0F B3 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663595)]
public static void btr(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>btr instruction.<br/>
		/// <br/>
		/// <c>BTR r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 0F B3 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663596)]
public static void btr(AssemblerMemoryOperand dst, AssemblerRegister64 src) {}
		/// <summary>btr instruction.<br/>
		/// <br/>
		/// <c>BTR r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 0F BA /6 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663597)]
public static void btr(AssemblerRegister16 dst, sbyte imm) {}
		/// <summary>btr instruction.<br/>
		/// <br/>
		/// <c>BTR r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 0F BA /6 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663598)]
public static void btr(AssemblerRegister32 dst, sbyte imm) {}
		/// <summary>btr instruction.<br/>
		/// <br/>
		/// <c>BTR r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 0F BA /6 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663599)]
public static void btr(AssemblerRegister64 dst, sbyte imm) {}
		/// <summary>btr instruction.<br/>
		/// <br/>
		/// <c>BTR r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 0F BA /6 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>BTR r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 0F BA /6 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>BTR r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 0F BA /6 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663600)]
public static void btr(AssemblerMemoryOperand dst, sbyte imm) {}
		/// <summary>btr instruction.<br/>
		/// <br/>
		/// <c>BTR r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 0F BA /6 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663601)]
public static void btr(AssemblerRegister16 dst, byte imm) {}
		/// <summary>btr instruction.<br/>
		/// <br/>
		/// <c>BTR r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 0F BA /6 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663602)]
public static void btr(AssemblerRegister32 dst, byte imm) {}
		/// <summary>btr instruction.<br/>
		/// <br/>
		/// <c>BTR r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 0F BA /6 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663603)]
public static void btr(AssemblerRegister64 dst, byte imm) {}
		/// <summary>btr instruction.<br/>
		/// <br/>
		/// <c>BTR r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 0F BA /6 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>BTR r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 0F BA /6 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>BTR r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 0F BA /6 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663604)]
public static void btr(AssemblerMemoryOperand dst, byte imm) {}
		/// <summary>bts instruction.<br/>
		/// <br/>
		/// <c>BTS r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 0F AB /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663605)]
public static void bts(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>bts instruction.<br/>
		/// <br/>
		/// <c>BTS r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 0F AB /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663606)]
public static void bts(AssemblerMemoryOperand dst, AssemblerRegister16 src) {}
		/// <summary>bts instruction.<br/>
		/// <br/>
		/// <c>BTS r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 0F AB /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663607)]
public static void bts(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>bts instruction.<br/>
		/// <br/>
		/// <c>BTS r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 0F AB /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663608)]
public static void bts(AssemblerMemoryOperand dst, AssemblerRegister32 src) {}
		/// <summary>bts instruction.<br/>
		/// <br/>
		/// <c>BTS r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 0F AB /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663609)]
public static void bts(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>bts instruction.<br/>
		/// <br/>
		/// <c>BTS r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 0F AB /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663610)]
public static void bts(AssemblerMemoryOperand dst, AssemblerRegister64 src) {}
		/// <summary>bts instruction.<br/>
		/// <br/>
		/// <c>BTS r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 0F BA /5 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663611)]
public static void bts(AssemblerRegister16 dst, sbyte imm) {}
		/// <summary>bts instruction.<br/>
		/// <br/>
		/// <c>BTS r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 0F BA /5 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663612)]
public static void bts(AssemblerRegister32 dst, sbyte imm) {}
		/// <summary>bts instruction.<br/>
		/// <br/>
		/// <c>BTS r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 0F BA /5 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663613)]
public static void bts(AssemblerRegister64 dst, sbyte imm) {}
		/// <summary>bts instruction.<br/>
		/// <br/>
		/// <c>BTS r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 0F BA /5 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>BTS r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 0F BA /5 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>BTS r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 0F BA /5 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663614)]
public static void bts(AssemblerMemoryOperand dst, sbyte imm) {}
		/// <summary>bts instruction.<br/>
		/// <br/>
		/// <c>BTS r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 0F BA /5 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663615)]
public static void bts(AssemblerRegister16 dst, byte imm) {}
		/// <summary>bts instruction.<br/>
		/// <br/>
		/// <c>BTS r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 0F BA /5 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663616)]
public static void bts(AssemblerRegister32 dst, byte imm) {}
		/// <summary>bts instruction.<br/>
		/// <br/>
		/// <c>BTS r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 0F BA /5 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663617)]
public static void bts(AssemblerRegister64 dst, byte imm) {}
		/// <summary>bts instruction.<br/>
		/// <br/>
		/// <c>BTS r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 0F BA /5 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>BTS r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 0F BA /5 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>BTS r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 0F BA /5 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663618)]
public static void bts(AssemblerMemoryOperand dst, byte imm) {}
		/// <summary>bzhi instruction.<br/>
		/// <br/>
		/// <c>BZHI r32a, r/m32, r32b</c><br/>
		/// <br/>
		/// <c>VEX.LZ.0F38.W0 F5 /r</c><br/>
		/// <br/>
		/// <c>BMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663619)]
public static void bzhi(AssemblerRegister32 dst, AssemblerRegister32 src1, AssemblerRegister32 src2) {}
		/// <summary>bzhi instruction.<br/>
		/// <br/>
		/// <c>BZHI r32a, r/m32, r32b</c><br/>
		/// <br/>
		/// <c>VEX.LZ.0F38.W0 F5 /r</c><br/>
		/// <br/>
		/// <c>BMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663620)]
public static void bzhi(AssemblerRegister32 dst, AssemblerMemoryOperand src1, AssemblerRegister32 src2) {}
		/// <summary>bzhi instruction.<br/>
		/// <br/>
		/// <c>BZHI r64a, r/m64, r64b</c><br/>
		/// <br/>
		/// <c>VEX.LZ.0F38.W1 F5 /r</c><br/>
		/// <br/>
		/// <c>BMI2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663621)]
public static void bzhi(AssemblerRegister64 dst, AssemblerRegister64 src1, AssemblerRegister64 src2) {}
		/// <summary>bzhi instruction.<br/>
		/// <br/>
		/// <c>BZHI r64a, r/m64, r64b</c><br/>
		/// <br/>
		/// <c>VEX.LZ.0F38.W1 F5 /r</c><br/>
		/// <br/>
		/// <c>BMI2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663622)]
public static void bzhi(AssemblerRegister64 dst, AssemblerMemoryOperand src1, AssemblerRegister64 src2) {}
		/// <summary>call instruction.<br/>
		/// <br/>
		/// <c>CALL r/m16</c><br/>
		/// <br/>
		/// <c>o16 FF /2</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663623)]
public static void call(AssemblerRegister16 dst) {}
		/// <summary>call instruction.<br/>
		/// <br/>
		/// <c>CALL r/m32</c><br/>
		/// <br/>
		/// <c>o32 FF /2</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100663624)]
public static void call(AssemblerRegister32 dst) {}
		/// <summary>call instruction.<br/>
		/// <br/>
		/// <c>CALL r/m64</c><br/>
		/// <br/>
		/// <c>o64 FF /2</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663625)]
public static void call(AssemblerRegister64 dst) {}
		/// <summary>call instruction.<br/>
		/// <br/>
		/// <c>CALL m16:64</c><br/>
		/// <br/>
		/// <c>o64 FF /3</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>CALL r/m64</c><br/>
		/// <br/>
		/// <c>o64 FF /2</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>CALL m16:32</c><br/>
		/// <br/>
		/// <c>o32 FF /3</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>CALL r/m32</c><br/>
		/// <br/>
		/// <c>o32 FF /2</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>CALL m16:16</c><br/>
		/// <br/>
		/// <c>o16 FF /3</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>CALL r/m16</c><br/>
		/// <br/>
		/// <c>o16 FF /2</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663626)]
public static void call(AssemblerMemoryOperand dst) {}
		/// <summary>call instruction.<br/>
		/// <br/>
		/// <c>CALL rel32</c><br/>
		/// <br/>
		/// <c>o64 E8 cd</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>CALL rel32</c><br/>
		/// <br/>
		/// <c>o32 E8 cd</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>CALL rel16</c><br/>
		/// <br/>
		/// <c>o16 E8 cw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663627)]
public static void call(Label dst) {}
		/// <summary>call instruction.<br/>
		/// <br/>
		/// <c>CALL rel32</c><br/>
		/// <br/>
		/// <c>o64 E8 cd</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>CALL rel32</c><br/>
		/// <br/>
		/// <c>o32 E8 cd</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>CALL rel16</c><br/>
		/// <br/>
		/// <c>o16 E8 cw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663628)]
public static void call(ulong dst) {}
		/// <summary>cbw instruction.<br/>
		/// <br/>
		/// <c>CBW</c><br/>
		/// <br/>
		/// <c>o16 98</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663629)]
public static void cbw() {}
		/// <summary>ccs_encrypt instruction.<br/>
		/// <br/>
		/// <c>CCS_ENCRYPT</c><br/>
		/// <br/>
		/// <c>a64 F3 0F A7 F0</c><br/>
		/// <br/>
		/// <c>PADLOCK_GMI</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>CCS_ENCRYPT</c><br/>
		/// <br/>
		/// <c>a32 F3 0F A7 F0</c><br/>
		/// <br/>
		/// <c>PADLOCK_GMI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>CCS_ENCRYPT</c><br/>
		/// <br/>
		/// <c>a16 F3 0F A7 F0</c><br/>
		/// <br/>
		/// <c>PADLOCK_GMI</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100663630)]
public static void ccs_encrypt() {}
		/// <summary>ccs_hash instruction.<br/>
		/// <br/>
		/// <c>CCS_HASH</c><br/>
		/// <br/>
		/// <c>a64 F3 0F A6 E8</c><br/>
		/// <br/>
		/// <c>PADLOCK_GMI</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>CCS_HASH</c><br/>
		/// <br/>
		/// <c>a32 F3 0F A6 E8</c><br/>
		/// <br/>
		/// <c>PADLOCK_GMI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>CCS_HASH</c><br/>
		/// <br/>
		/// <c>a16 F3 0F A6 E8</c><br/>
		/// <br/>
		/// <c>PADLOCK_GMI</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100663631)]
public static void ccs_hash() {}
		/// <summary>cdq instruction.<br/>
		/// <br/>
		/// <c>CDQ</c><br/>
		/// <br/>
		/// <c>o32 99</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663632)]
public static void cdq() {}
		/// <summary>cdqe instruction.<br/>
		/// <br/>
		/// <c>CDQE</c><br/>
		/// <br/>
		/// <c>o64 98</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663633)]
public static void cdqe() {}
		/// <summary>cl1invmb instruction.<br/>
		/// <br/>
		/// <c>CL1INVMB</c><br/>
		/// <br/>
		/// <c>0F 0A</c><br/>
		/// <br/>
		/// <c>CL1INVMB</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100663634)]
public static void cl1invmb() {}
		/// <summary>clac instruction.<br/>
		/// <br/>
		/// <c>CLAC</c><br/>
		/// <br/>
		/// <c>NP 0F 01 CA</c><br/>
		/// <br/>
		/// <c>SMAP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663635)]
public static void clac() {}
		/// <summary>clc instruction.<br/>
		/// <br/>
		/// <c>CLC</c><br/>
		/// <br/>
		/// <c>F8</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663636)]
public static void clc() {}
		/// <summary>cld instruction.<br/>
		/// <br/>
		/// <c>CLD</c><br/>
		/// <br/>
		/// <c>FC</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663637)]
public static void cld() {}
		/// <summary>cldemote instruction.<br/>
		/// <br/>
		/// <c>CLDEMOTE m8</c><br/>
		/// <br/>
		/// <c>NP 0F 1C /0</c><br/>
		/// <br/>
		/// <c>CLDEMOTE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663638)]
public static void cldemote(AssemblerMemoryOperand dst) {}
		/// <summary>clflush instruction.<br/>
		/// <br/>
		/// <c>CLFLUSH m8</c><br/>
		/// <br/>
		/// <c>NP 0F AE /7</c><br/>
		/// <br/>
		/// <c>CLFSH</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663639)]
public static void clflush(AssemblerMemoryOperand dst) {}
		/// <summary>clflushopt instruction.<br/>
		/// <br/>
		/// <c>CLFLUSHOPT m8</c><br/>
		/// <br/>
		/// <c>66 0F AE /7</c><br/>
		/// <br/>
		/// <c>CLFLUSHOPT</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663640)]
public static void clflushopt(AssemblerMemoryOperand dst) {}
		/// <summary>clgi instruction.<br/>
		/// <br/>
		/// <c>CLGI</c><br/>
		/// <br/>
		/// <c>0F 01 DD</c><br/>
		/// <br/>
		/// <c>SVM</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663641)]
public static void clgi() {}
		/// <summary>cli instruction.<br/>
		/// <br/>
		/// <c>CLI</c><br/>
		/// <br/>
		/// <c>FA</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663642)]
public static void cli() {}
		/// <summary>clrssbsy instruction.<br/>
		/// <br/>
		/// <c>CLRSSBSY m64</c><br/>
		/// <br/>
		/// <c>F3 0F AE /6</c><br/>
		/// <br/>
		/// <c>CET_SS</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663643)]
public static void clrssbsy(AssemblerMemoryOperand dst) {}
		/// <summary>clts instruction.<br/>
		/// <br/>
		/// <c>CLTS</c><br/>
		/// <br/>
		/// <c>0F 06</c><br/>
		/// <br/>
		/// <c>286+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663644)]
public static void clts() {}
		/// <summary>clui instruction.<br/>
		/// <br/>
		/// <c>CLUI</c><br/>
		/// <br/>
		/// <c>F3 0F 01 EE</c><br/>
		/// <br/>
		/// <c>UINTR</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663645)]
public static void clui() {}
		/// <summary>clwb instruction.<br/>
		/// <br/>
		/// <c>CLWB m8</c><br/>
		/// <br/>
		/// <c>66 0F AE /6</c><br/>
		/// <br/>
		/// <c>CLWB</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663646)]
public static void clwb(AssemblerMemoryOperand dst) {}
		/// <summary>clzero instruction.<br/>
		/// <br/>
		/// <c>CLZERO</c><br/>
		/// <br/>
		/// <c>a64 0F 01 FC</c><br/>
		/// <br/>
		/// <c>CLZERO</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>CLZERO</c><br/>
		/// <br/>
		/// <c>a32 0F 01 FC</c><br/>
		/// <br/>
		/// <c>CLZERO</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>CLZERO</c><br/>
		/// <br/>
		/// <c>a16 0F 01 FC</c><br/>
		/// <br/>
		/// <c>CLZERO</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100663647)]
public static void clzero() {}
		/// <summary>cmc instruction.<br/>
		/// <br/>
		/// <c>CMC</c><br/>
		/// <br/>
		/// <c>F5</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663648)]
public static void cmc() {}
		/// <summary>cmova instruction.<br/>
		/// <br/>
		/// <c>CMOVA r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 47 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663649)]
public static void cmova(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>cmova instruction.<br/>
		/// <br/>
		/// <c>CMOVA r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F 47 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663650)]
public static void cmova(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>cmova instruction.<br/>
		/// <br/>
		/// <c>CMOVA r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F 47 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663651)]
public static void cmova(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>cmova instruction.<br/>
		/// <br/>
		/// <c>CMOVA r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 47 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663652)]
public static void cmova(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmova instruction.<br/>
		/// <br/>
		/// <c>CMOVA r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F 47 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663653)]
public static void cmova(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmova instruction.<br/>
		/// <br/>
		/// <c>CMOVA r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F 47 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663654)]
public static void cmova(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovae instruction.<br/>
		/// <br/>
		/// <c>CMOVAE r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 43 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663655)]
public static void cmovae(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>cmovae instruction.<br/>
		/// <br/>
		/// <c>CMOVAE r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F 43 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663656)]
public static void cmovae(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>cmovae instruction.<br/>
		/// <br/>
		/// <c>CMOVAE r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F 43 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663657)]
public static void cmovae(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>cmovae instruction.<br/>
		/// <br/>
		/// <c>CMOVAE r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 43 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663658)]
public static void cmovae(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovae instruction.<br/>
		/// <br/>
		/// <c>CMOVAE r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F 43 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663659)]
public static void cmovae(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovae instruction.<br/>
		/// <br/>
		/// <c>CMOVAE r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F 43 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663660)]
public static void cmovae(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovb instruction.<br/>
		/// <br/>
		/// <c>CMOVB r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 42 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663661)]
public static void cmovb(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>cmovb instruction.<br/>
		/// <br/>
		/// <c>CMOVB r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F 42 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663662)]
public static void cmovb(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>cmovb instruction.<br/>
		/// <br/>
		/// <c>CMOVB r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F 42 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663663)]
public static void cmovb(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>cmovb instruction.<br/>
		/// <br/>
		/// <c>CMOVB r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 42 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663664)]
public static void cmovb(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovb instruction.<br/>
		/// <br/>
		/// <c>CMOVB r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F 42 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663665)]
public static void cmovb(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovb instruction.<br/>
		/// <br/>
		/// <c>CMOVB r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F 42 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663666)]
public static void cmovb(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovbe instruction.<br/>
		/// <br/>
		/// <c>CMOVBE r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 46 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663667)]
public static void cmovbe(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>cmovbe instruction.<br/>
		/// <br/>
		/// <c>CMOVBE r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F 46 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663668)]
public static void cmovbe(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>cmovbe instruction.<br/>
		/// <br/>
		/// <c>CMOVBE r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F 46 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663669)]
public static void cmovbe(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>cmovbe instruction.<br/>
		/// <br/>
		/// <c>CMOVBE r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 46 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663670)]
public static void cmovbe(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovbe instruction.<br/>
		/// <br/>
		/// <c>CMOVBE r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F 46 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663671)]
public static void cmovbe(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovbe instruction.<br/>
		/// <br/>
		/// <c>CMOVBE r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F 46 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663672)]
public static void cmovbe(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmove instruction.<br/>
		/// <br/>
		/// <c>CMOVE r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 44 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663673)]
public static void cmove(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>cmove instruction.<br/>
		/// <br/>
		/// <c>CMOVE r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F 44 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663674)]
public static void cmove(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>cmove instruction.<br/>
		/// <br/>
		/// <c>CMOVE r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F 44 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663675)]
public static void cmove(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>cmove instruction.<br/>
		/// <br/>
		/// <c>CMOVE r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 44 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663676)]
public static void cmove(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmove instruction.<br/>
		/// <br/>
		/// <c>CMOVE r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F 44 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663677)]
public static void cmove(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmove instruction.<br/>
		/// <br/>
		/// <c>CMOVE r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F 44 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663678)]
public static void cmove(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovg instruction.<br/>
		/// <br/>
		/// <c>CMOVG r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 4F /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663679)]
public static void cmovg(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>cmovg instruction.<br/>
		/// <br/>
		/// <c>CMOVG r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F 4F /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663680)]
public static void cmovg(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>cmovg instruction.<br/>
		/// <br/>
		/// <c>CMOVG r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F 4F /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663681)]
public static void cmovg(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>cmovg instruction.<br/>
		/// <br/>
		/// <c>CMOVG r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 4F /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663682)]
public static void cmovg(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovg instruction.<br/>
		/// <br/>
		/// <c>CMOVG r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F 4F /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663683)]
public static void cmovg(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovg instruction.<br/>
		/// <br/>
		/// <c>CMOVG r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F 4F /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663684)]
public static void cmovg(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovge instruction.<br/>
		/// <br/>
		/// <c>CMOVGE r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 4D /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663685)]
public static void cmovge(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>cmovge instruction.<br/>
		/// <br/>
		/// <c>CMOVGE r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F 4D /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663686)]
public static void cmovge(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>cmovge instruction.<br/>
		/// <br/>
		/// <c>CMOVGE r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F 4D /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663687)]
public static void cmovge(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>cmovge instruction.<br/>
		/// <br/>
		/// <c>CMOVGE r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 4D /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663688)]
public static void cmovge(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovge instruction.<br/>
		/// <br/>
		/// <c>CMOVGE r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F 4D /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663689)]
public static void cmovge(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovge instruction.<br/>
		/// <br/>
		/// <c>CMOVGE r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F 4D /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663690)]
public static void cmovge(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovl instruction.<br/>
		/// <br/>
		/// <c>CMOVL r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 4C /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663691)]
public static void cmovl(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>cmovl instruction.<br/>
		/// <br/>
		/// <c>CMOVL r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F 4C /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663692)]
public static void cmovl(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>cmovl instruction.<br/>
		/// <br/>
		/// <c>CMOVL r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F 4C /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663693)]
public static void cmovl(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>cmovl instruction.<br/>
		/// <br/>
		/// <c>CMOVL r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 4C /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663694)]
public static void cmovl(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovl instruction.<br/>
		/// <br/>
		/// <c>CMOVL r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F 4C /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663695)]
public static void cmovl(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovl instruction.<br/>
		/// <br/>
		/// <c>CMOVL r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F 4C /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663696)]
public static void cmovl(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovle instruction.<br/>
		/// <br/>
		/// <c>CMOVLE r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 4E /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663697)]
public static void cmovle(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>cmovle instruction.<br/>
		/// <br/>
		/// <c>CMOVLE r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F 4E /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663698)]
public static void cmovle(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>cmovle instruction.<br/>
		/// <br/>
		/// <c>CMOVLE r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F 4E /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663699)]
public static void cmovle(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>cmovle instruction.<br/>
		/// <br/>
		/// <c>CMOVLE r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 4E /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663700)]
public static void cmovle(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovle instruction.<br/>
		/// <br/>
		/// <c>CMOVLE r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F 4E /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663701)]
public static void cmovle(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovle instruction.<br/>
		/// <br/>
		/// <c>CMOVLE r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F 4E /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663702)]
public static void cmovle(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovne instruction.<br/>
		/// <br/>
		/// <c>CMOVNE r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 45 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663703)]
public static void cmovne(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>cmovne instruction.<br/>
		/// <br/>
		/// <c>CMOVNE r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F 45 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663704)]
public static void cmovne(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>cmovne instruction.<br/>
		/// <br/>
		/// <c>CMOVNE r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F 45 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663705)]
public static void cmovne(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>cmovne instruction.<br/>
		/// <br/>
		/// <c>CMOVNE r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 45 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663706)]
public static void cmovne(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovne instruction.<br/>
		/// <br/>
		/// <c>CMOVNE r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F 45 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663707)]
public static void cmovne(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovne instruction.<br/>
		/// <br/>
		/// <c>CMOVNE r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F 45 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663708)]
public static void cmovne(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovno instruction.<br/>
		/// <br/>
		/// <c>CMOVNO r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 41 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663709)]
public static void cmovno(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>cmovno instruction.<br/>
		/// <br/>
		/// <c>CMOVNO r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F 41 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663710)]
public static void cmovno(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>cmovno instruction.<br/>
		/// <br/>
		/// <c>CMOVNO r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F 41 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663711)]
public static void cmovno(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>cmovno instruction.<br/>
		/// <br/>
		/// <c>CMOVNO r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 41 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663712)]
public static void cmovno(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovno instruction.<br/>
		/// <br/>
		/// <c>CMOVNO r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F 41 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663713)]
public static void cmovno(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovno instruction.<br/>
		/// <br/>
		/// <c>CMOVNO r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F 41 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663714)]
public static void cmovno(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovnp instruction.<br/>
		/// <br/>
		/// <c>CMOVNP r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 4B /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663715)]
public static void cmovnp(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>cmovnp instruction.<br/>
		/// <br/>
		/// <c>CMOVNP r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F 4B /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663716)]
public static void cmovnp(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>cmovnp instruction.<br/>
		/// <br/>
		/// <c>CMOVNP r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F 4B /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663717)]
public static void cmovnp(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>cmovnp instruction.<br/>
		/// <br/>
		/// <c>CMOVNP r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 4B /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663718)]
public static void cmovnp(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovnp instruction.<br/>
		/// <br/>
		/// <c>CMOVNP r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F 4B /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663719)]
public static void cmovnp(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovnp instruction.<br/>
		/// <br/>
		/// <c>CMOVNP r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F 4B /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663720)]
public static void cmovnp(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovns instruction.<br/>
		/// <br/>
		/// <c>CMOVNS r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 49 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663721)]
public static void cmovns(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>cmovns instruction.<br/>
		/// <br/>
		/// <c>CMOVNS r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F 49 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663722)]
public static void cmovns(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>cmovns instruction.<br/>
		/// <br/>
		/// <c>CMOVNS r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F 49 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663723)]
public static void cmovns(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>cmovns instruction.<br/>
		/// <br/>
		/// <c>CMOVNS r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 49 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663724)]
public static void cmovns(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovns instruction.<br/>
		/// <br/>
		/// <c>CMOVNS r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F 49 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663725)]
public static void cmovns(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovns instruction.<br/>
		/// <br/>
		/// <c>CMOVNS r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F 49 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663726)]
public static void cmovns(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovo instruction.<br/>
		/// <br/>
		/// <c>CMOVO r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 40 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663727)]
public static void cmovo(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>cmovo instruction.<br/>
		/// <br/>
		/// <c>CMOVO r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F 40 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663728)]
public static void cmovo(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>cmovo instruction.<br/>
		/// <br/>
		/// <c>CMOVO r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F 40 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663729)]
public static void cmovo(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>cmovo instruction.<br/>
		/// <br/>
		/// <c>CMOVO r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 40 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663730)]
public static void cmovo(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovo instruction.<br/>
		/// <br/>
		/// <c>CMOVO r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F 40 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663731)]
public static void cmovo(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovo instruction.<br/>
		/// <br/>
		/// <c>CMOVO r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F 40 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663732)]
public static void cmovo(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovp instruction.<br/>
		/// <br/>
		/// <c>CMOVP r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 4A /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663733)]
public static void cmovp(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>cmovp instruction.<br/>
		/// <br/>
		/// <c>CMOVP r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F 4A /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663734)]
public static void cmovp(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>cmovp instruction.<br/>
		/// <br/>
		/// <c>CMOVP r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F 4A /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663735)]
public static void cmovp(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>cmovp instruction.<br/>
		/// <br/>
		/// <c>CMOVP r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 4A /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663736)]
public static void cmovp(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovp instruction.<br/>
		/// <br/>
		/// <c>CMOVP r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F 4A /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663737)]
public static void cmovp(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovp instruction.<br/>
		/// <br/>
		/// <c>CMOVP r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F 4A /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663738)]
public static void cmovp(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovs instruction.<br/>
		/// <br/>
		/// <c>CMOVS r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 48 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663739)]
public static void cmovs(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>cmovs instruction.<br/>
		/// <br/>
		/// <c>CMOVS r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F 48 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663740)]
public static void cmovs(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>cmovs instruction.<br/>
		/// <br/>
		/// <c>CMOVS r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F 48 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663741)]
public static void cmovs(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>cmovs instruction.<br/>
		/// <br/>
		/// <c>CMOVS r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 48 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663742)]
public static void cmovs(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovs instruction.<br/>
		/// <br/>
		/// <c>CMOVS r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F 48 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663743)]
public static void cmovs(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmovs instruction.<br/>
		/// <br/>
		/// <c>CMOVS r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F 48 /r</c><br/>
		/// <br/>
		/// <c>CMOV</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663744)]
public static void cmovs(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmp instruction.<br/>
		/// <br/>
		/// <c>CMP r/m8, r8</c><br/>
		/// <br/>
		/// <c>38 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663745)]
public static void cmp(AssemblerRegister8 dst, AssemblerRegister8 src) {}
		/// <summary>cmp instruction.<br/>
		/// <br/>
		/// <c>CMP r/m8, r8</c><br/>
		/// <br/>
		/// <c>38 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663746)]
public static void cmp(AssemblerMemoryOperand dst, AssemblerRegister8 src) {}
		/// <summary>cmp instruction.<br/>
		/// <br/>
		/// <c>CMP r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 39 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663747)]
public static void cmp(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>cmp instruction.<br/>
		/// <br/>
		/// <c>CMP r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 39 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663748)]
public static void cmp(AssemblerMemoryOperand dst, AssemblerRegister16 src) {}
		/// <summary>cmp instruction.<br/>
		/// <br/>
		/// <c>CMP r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 39 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663749)]
public static void cmp(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>cmp instruction.<br/>
		/// <br/>
		/// <c>CMP r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 39 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663750)]
public static void cmp(AssemblerMemoryOperand dst, AssemblerRegister32 src) {}
		/// <summary>cmp instruction.<br/>
		/// <br/>
		/// <c>CMP r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 39 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663751)]
public static void cmp(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>cmp instruction.<br/>
		/// <br/>
		/// <c>CMP r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 39 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663752)]
public static void cmp(AssemblerMemoryOperand dst, AssemblerRegister64 src) {}
		/// <summary>cmp instruction.<br/>
		/// <br/>
		/// <c>CMP r8, r/m8</c><br/>
		/// <br/>
		/// <c>3A /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663753)]
public static void cmp(AssemblerRegister8 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmp instruction.<br/>
		/// <br/>
		/// <c>CMP r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 3B /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663754)]
public static void cmp(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmp instruction.<br/>
		/// <br/>
		/// <c>CMP r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 3B /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663755)]
public static void cmp(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmp instruction.<br/>
		/// <br/>
		/// <c>CMP r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 3B /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663756)]
public static void cmp(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>cmp instruction.<br/>
		/// <br/>
		/// <c>CMP AL, imm8</c><br/>
		/// <br/>
		/// <c>3C ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>CMP r/m8, imm8</c><br/>
		/// <br/>
		/// <c>80 /7 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663757)]
public static void cmp(AssemblerRegister8 dst, sbyte imm) {}
		/// <summary>cmp instruction.<br/>
		/// <br/>
		/// <c>CMP AX, imm16</c><br/>
		/// <br/>
		/// <c>o16 3D iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>CMP r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 81 /7 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>CMP r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 83 /7 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663758)]
public static void cmp(AssemblerRegister16 dst, short imm) {}
		/// <summary>cmp instruction.<br/>
		/// <br/>
		/// <c>CMP EAX, imm32</c><br/>
		/// <br/>
		/// <c>o32 3D id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>CMP r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 81 /7 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>CMP r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 83 /7 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663759)]
public static void cmp(AssemblerRegister32 dst, int imm) {}
		/// <summary>cmp instruction.<br/>
		/// <br/>
		/// <c>CMP RAX, imm32</c><br/>
		/// <br/>
		/// <c>o64 3D id</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>CMP r/m64, imm32</c><br/>
		/// <br/>
		/// <c>o64 81 /7 id</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>CMP r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 83 /7 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663760)]
public static void cmp(AssemblerRegister64 dst, int imm) {}
		/// <summary>cmp instruction.<br/>
		/// <br/>
		/// <c>CMP r/m64, imm32</c><br/>
		/// <br/>
		/// <c>o64 81 /7 id</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>CMP r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 83 /7 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>CMP r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 81 /7 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>CMP r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 83 /7 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>CMP r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 81 /7 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>CMP r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 83 /7 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>CMP r/m8, imm8</c><br/>
		/// <br/>
		/// <c>80 /7 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663761)]
public static void cmp(AssemblerMemoryOperand dst, int imm) {}
		/// <summary>cmp instruction.<br/>
		/// <br/>
		/// <c>CMP AL, imm8</c><br/>
		/// <br/>
		/// <c>3C ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>CMP r/m8, imm8</c><br/>
		/// <br/>
		/// <c>80 /7 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663762)]
public static void cmp(AssemblerRegister8 dst, byte imm) {}
		/// <summary>cmp instruction.<br/>
		/// <br/>
		/// <c>CMP AX, imm16</c><br/>
		/// <br/>
		/// <c>o16 3D iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>CMP r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 81 /7 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>CMP r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 83 /7 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663763)]
public static void cmp(AssemblerRegister16 dst, ushort imm) {}
		/// <summary>cmp instruction.<br/>
		/// <br/>
		/// <c>CMP EAX, imm32</c><br/>
		/// <br/>
		/// <c>o32 3D id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>CMP r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 81 /7 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>CMP r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 83 /7 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663764)]
public static void cmp(AssemblerRegister32 dst, uint imm) {}
		/// <summary>cmp instruction.<br/>
		/// <br/>
		/// <c>CMP r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 81 /7 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>CMP r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 83 /7 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>CMP r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 81 /7 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>CMP r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 83 /7 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>CMP r/m8, imm8</c><br/>
		/// <br/>
		/// <c>80 /7 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663765)]
public static void cmp(AssemblerMemoryOperand dst, uint imm) {}
		/// <summary>cmpeqpd instruction.</summary>
[MethodToken(100663766)]
public static void cmpeqpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cmpeqpd instruction.</summary>
[MethodToken(100663767)]
public static void cmpeqpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cmpeqps instruction.</summary>
[MethodToken(100663768)]
public static void cmpeqps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cmpeqps instruction.</summary>
[MethodToken(100663769)]
public static void cmpeqps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cmpeqsd instruction.</summary>
[MethodToken(100663770)]
public static void cmpeqsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cmpeqsd instruction.</summary>
[MethodToken(100663771)]
public static void cmpeqsd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cmpeqss instruction.</summary>
[MethodToken(100663772)]
public static void cmpeqss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cmpeqss instruction.</summary>
[MethodToken(100663773)]
public static void cmpeqss(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cmplepd instruction.</summary>
[MethodToken(100663774)]
public static void cmplepd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cmplepd instruction.</summary>
[MethodToken(100663775)]
public static void cmplepd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cmpleps instruction.</summary>
[MethodToken(100663776)]
public static void cmpleps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cmpleps instruction.</summary>
[MethodToken(100663777)]
public static void cmpleps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cmplesd instruction.</summary>
[MethodToken(100663778)]
public static void cmplesd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cmplesd instruction.</summary>
[MethodToken(100663779)]
public static void cmplesd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cmpless instruction.</summary>
[MethodToken(100663780)]
public static void cmpless(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cmpless instruction.</summary>
[MethodToken(100663781)]
public static void cmpless(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cmpltpd instruction.</summary>
[MethodToken(100663782)]
public static void cmpltpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cmpltpd instruction.</summary>
[MethodToken(100663783)]
public static void cmpltpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cmpltps instruction.</summary>
[MethodToken(100663784)]
public static void cmpltps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cmpltps instruction.</summary>
[MethodToken(100663785)]
public static void cmpltps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cmpltsd instruction.</summary>
[MethodToken(100663786)]
public static void cmpltsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cmpltsd instruction.</summary>
[MethodToken(100663787)]
public static void cmpltsd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cmpltss instruction.</summary>
[MethodToken(100663788)]
public static void cmpltss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cmpltss instruction.</summary>
[MethodToken(100663789)]
public static void cmpltss(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cmpneqpd instruction.</summary>
[MethodToken(100663790)]
public static void cmpneqpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cmpneqpd instruction.</summary>
[MethodToken(100663791)]
public static void cmpneqpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cmpneqps instruction.</summary>
[MethodToken(100663792)]
public static void cmpneqps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cmpneqps instruction.</summary>
[MethodToken(100663793)]
public static void cmpneqps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cmpneqsd instruction.</summary>
[MethodToken(100663794)]
public static void cmpneqsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cmpneqsd instruction.</summary>
[MethodToken(100663795)]
public static void cmpneqsd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cmpneqss instruction.</summary>
[MethodToken(100663796)]
public static void cmpneqss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cmpneqss instruction.</summary>
[MethodToken(100663797)]
public static void cmpneqss(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cmpnlepd instruction.</summary>
[MethodToken(100663798)]
public static void cmpnlepd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cmpnlepd instruction.</summary>
[MethodToken(100663799)]
public static void cmpnlepd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cmpnleps instruction.</summary>
[MethodToken(100663800)]
public static void cmpnleps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cmpnleps instruction.</summary>
[MethodToken(100663801)]
public static void cmpnleps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cmpnlesd instruction.</summary>
[MethodToken(100663802)]
public static void cmpnlesd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cmpnlesd instruction.</summary>
[MethodToken(100663803)]
public static void cmpnlesd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cmpnless instruction.</summary>
[MethodToken(100663804)]
public static void cmpnless(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cmpnless instruction.</summary>
[MethodToken(100663805)]
public static void cmpnless(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cmpnltpd instruction.</summary>
[MethodToken(100663806)]
public static void cmpnltpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cmpnltpd instruction.</summary>
[MethodToken(100663807)]
public static void cmpnltpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cmpnltps instruction.</summary>
[MethodToken(100663808)]
public static void cmpnltps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cmpnltps instruction.</summary>
[MethodToken(100663809)]
public static void cmpnltps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cmpnltsd instruction.</summary>
[MethodToken(100663810)]
public static void cmpnltsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cmpnltsd instruction.</summary>
[MethodToken(100663811)]
public static void cmpnltsd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cmpnltss instruction.</summary>
[MethodToken(100663812)]
public static void cmpnltss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cmpnltss instruction.</summary>
[MethodToken(100663813)]
public static void cmpnltss(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cmpordpd instruction.</summary>
[MethodToken(100663814)]
public static void cmpordpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cmpordpd instruction.</summary>
[MethodToken(100663815)]
public static void cmpordpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cmpordps instruction.</summary>
[MethodToken(100663816)]
public static void cmpordps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cmpordps instruction.</summary>
[MethodToken(100663817)]
public static void cmpordps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cmpordsd instruction.</summary>
[MethodToken(100663818)]
public static void cmpordsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cmpordsd instruction.</summary>
[MethodToken(100663819)]
public static void cmpordsd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cmpordss instruction.</summary>
[MethodToken(100663820)]
public static void cmpordss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cmpordss instruction.</summary>
[MethodToken(100663821)]
public static void cmpordss(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cmppd instruction.<br/>
		/// <br/>
		/// <c>CMPPD xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F C2 /r ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663822)]
public static void cmppd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>cmppd instruction.<br/>
		/// <br/>
		/// <c>CMPPD xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F C2 /r ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663823)]
public static void cmppd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>cmppd instruction.<br/>
		/// <br/>
		/// <c>CMPPD xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F C2 /r ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663824)]
public static void cmppd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>cmppd instruction.<br/>
		/// <br/>
		/// <c>CMPPD xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F C2 /r ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663825)]
public static void cmppd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>cmpps instruction.<br/>
		/// <br/>
		/// <c>CMPPS xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F C2 /r ib</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663826)]
public static void cmpps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>cmpps instruction.<br/>
		/// <br/>
		/// <c>CMPPS xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F C2 /r ib</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663827)]
public static void cmpps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>cmpps instruction.<br/>
		/// <br/>
		/// <c>CMPPS xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F C2 /r ib</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663828)]
public static void cmpps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>cmpps instruction.<br/>
		/// <br/>
		/// <c>CMPPS xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F C2 /r ib</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663829)]
public static void cmpps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>cmpsb instruction.<br/>
		/// <br/>
		/// <c>CMPSB</c><br/>
		/// <br/>
		/// <c>A6</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663830)]
public static void cmpsb() {}
		/// <summary>cmpsd instruction.<br/>
		/// <br/>
		/// <c>CMPSD</c><br/>
		/// <br/>
		/// <c>o32 A7</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663831)]
public static void cmpsd() {}
		/// <summary>cmpsd instruction.<br/>
		/// <br/>
		/// <c>CMPSD xmm1, xmm2/m64, imm8</c><br/>
		/// <br/>
		/// <c>F2 0F C2 /r ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663832)]
public static void cmpsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>cmpsd instruction.<br/>
		/// <br/>
		/// <c>CMPSD xmm1, xmm2/m64, imm8</c><br/>
		/// <br/>
		/// <c>F2 0F C2 /r ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663833)]
public static void cmpsd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>cmpsd instruction.<br/>
		/// <br/>
		/// <c>CMPSD xmm1, xmm2/m64, imm8</c><br/>
		/// <br/>
		/// <c>F2 0F C2 /r ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663834)]
public static void cmpsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>cmpsd instruction.<br/>
		/// <br/>
		/// <c>CMPSD xmm1, xmm2/m64, imm8</c><br/>
		/// <br/>
		/// <c>F2 0F C2 /r ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663835)]
public static void cmpsd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>cmpsq instruction.<br/>
		/// <br/>
		/// <c>CMPSQ</c><br/>
		/// <br/>
		/// <c>o64 A7</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663836)]
public static void cmpsq() {}
		/// <summary>cmpss instruction.<br/>
		/// <br/>
		/// <c>CMPSS xmm1, xmm2/m32, imm8</c><br/>
		/// <br/>
		/// <c>F3 0F C2 /r ib</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663837)]
public static void cmpss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>cmpss instruction.<br/>
		/// <br/>
		/// <c>CMPSS xmm1, xmm2/m32, imm8</c><br/>
		/// <br/>
		/// <c>F3 0F C2 /r ib</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663838)]
public static void cmpss(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>cmpss instruction.<br/>
		/// <br/>
		/// <c>CMPSS xmm1, xmm2/m32, imm8</c><br/>
		/// <br/>
		/// <c>F3 0F C2 /r ib</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663839)]
public static void cmpss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>cmpss instruction.<br/>
		/// <br/>
		/// <c>CMPSS xmm1, xmm2/m32, imm8</c><br/>
		/// <br/>
		/// <c>F3 0F C2 /r ib</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663840)]
public static void cmpss(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>cmpsw instruction.<br/>
		/// <br/>
		/// <c>CMPSW</c><br/>
		/// <br/>
		/// <c>o16 A7</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663841)]
public static void cmpsw() {}
		/// <summary>cmpunordpd instruction.</summary>
[MethodToken(100663842)]
public static void cmpunordpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cmpunordpd instruction.</summary>
[MethodToken(100663843)]
public static void cmpunordpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cmpunordps instruction.</summary>
[MethodToken(100663844)]
public static void cmpunordps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cmpunordps instruction.</summary>
[MethodToken(100663845)]
public static void cmpunordps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cmpunordsd instruction.</summary>
[MethodToken(100663846)]
public static void cmpunordsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cmpunordsd instruction.</summary>
[MethodToken(100663847)]
public static void cmpunordsd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cmpunordss instruction.</summary>
[MethodToken(100663848)]
public static void cmpunordss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cmpunordss instruction.</summary>
[MethodToken(100663849)]
public static void cmpunordss(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cmpxchg instruction.<br/>
		/// <br/>
		/// <c>CMPXCHG r/m8, r8</c><br/>
		/// <br/>
		/// <c>0F B0 /r</c><br/>
		/// <br/>
		/// <c>486+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663850)]
public static void cmpxchg(AssemblerRegister8 dst, AssemblerRegister8 src) {}
		/// <summary>cmpxchg instruction.<br/>
		/// <br/>
		/// <c>CMPXCHG r/m8, r8</c><br/>
		/// <br/>
		/// <c>0F B0 /r</c><br/>
		/// <br/>
		/// <c>486+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663851)]
public static void cmpxchg(AssemblerMemoryOperand dst, AssemblerRegister8 src) {}
		/// <summary>cmpxchg instruction.<br/>
		/// <br/>
		/// <c>CMPXCHG r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 0F B1 /r</c><br/>
		/// <br/>
		/// <c>486+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663852)]
public static void cmpxchg(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>cmpxchg instruction.<br/>
		/// <br/>
		/// <c>CMPXCHG r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 0F B1 /r</c><br/>
		/// <br/>
		/// <c>486+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663853)]
public static void cmpxchg(AssemblerMemoryOperand dst, AssemblerRegister16 src) {}
		/// <summary>cmpxchg instruction.<br/>
		/// <br/>
		/// <c>CMPXCHG r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 0F B1 /r</c><br/>
		/// <br/>
		/// <c>486+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663854)]
public static void cmpxchg(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>cmpxchg instruction.<br/>
		/// <br/>
		/// <c>CMPXCHG r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 0F B1 /r</c><br/>
		/// <br/>
		/// <c>486+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663855)]
public static void cmpxchg(AssemblerMemoryOperand dst, AssemblerRegister32 src) {}
		/// <summary>cmpxchg instruction.<br/>
		/// <br/>
		/// <c>CMPXCHG r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 0F B1 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663856)]
public static void cmpxchg(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>cmpxchg instruction.<br/>
		/// <br/>
		/// <c>CMPXCHG r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 0F B1 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663857)]
public static void cmpxchg(AssemblerMemoryOperand dst, AssemblerRegister64 src) {}
		/// <summary>cmpxchg16b instruction.<br/>
		/// <br/>
		/// <c>CMPXCHG16B m128</c><br/>
		/// <br/>
		/// <c>o64 0F C7 /1</c><br/>
		/// <br/>
		/// <c>CMPXCHG16B</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663858)]
public static void cmpxchg16b(AssemblerMemoryOperand dst) {}
		/// <summary>cmpxchg8b instruction.<br/>
		/// <br/>
		/// <c>CMPXCHG8B m64</c><br/>
		/// <br/>
		/// <c>0F C7 /1</c><br/>
		/// <br/>
		/// <c>CX8</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663859)]
public static void cmpxchg8b(AssemblerMemoryOperand dst) {}
		/// <summary>comisd instruction.<br/>
		/// <br/>
		/// <c>COMISD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>66 0F 2F /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663860)]
public static void comisd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>comisd instruction.<br/>
		/// <br/>
		/// <c>COMISD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>66 0F 2F /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663861)]
public static void comisd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>comiss instruction.<br/>
		/// <br/>
		/// <c>COMISS xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>NP 0F 2F /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663862)]
public static void comiss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>comiss instruction.<br/>
		/// <br/>
		/// <c>COMISS xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>NP 0F 2F /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663863)]
public static void comiss(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cpu_read instruction.<br/>
		/// <br/>
		/// <c>CPU_READ</c><br/>
		/// <br/>
		/// <c>0F 3D</c><br/>
		/// <br/>
		/// <c>Cyrix MediaGX, GXm, GXLV, GX1</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100663864)]
public static void cpu_read() {}
		/// <summary>cpu_write instruction.<br/>
		/// <br/>
		/// <c>CPU_WRITE</c><br/>
		/// <br/>
		/// <c>0F 3C</c><br/>
		/// <br/>
		/// <c>Cyrix MediaGX, GXm, GXLV, GX1</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100663865)]
public static void cpu_write() {}
		/// <summary>cpuid instruction.<br/>
		/// <br/>
		/// <c>CPUID</c><br/>
		/// <br/>
		/// <c>0F A2</c><br/>
		/// <br/>
		/// <c>CPUID</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663866)]
public static void cpuid() {}
		/// <summary>cqo instruction.<br/>
		/// <br/>
		/// <c>CQO</c><br/>
		/// <br/>
		/// <c>o64 99</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663867)]
public static void cqo() {}
		/// <summary>crc32 instruction.<br/>
		/// <br/>
		/// <c>CRC32 r32, r/m8</c><br/>
		/// <br/>
		/// <c>F2 0F 38 F0 /r</c><br/>
		/// <br/>
		/// <c>SSE4.2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663868)]
public static void crc32(AssemblerRegister32 dst, AssemblerRegister8 src) {}
		/// <summary>crc32 instruction.<br/>
		/// <br/>
		/// <c>CRC32 r64, r/m8</c><br/>
		/// <br/>
		/// <c>F2 o64 0F 38 F0 /r</c><br/>
		/// <br/>
		/// <c>SSE4.2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663869)]
public static void crc32(AssemblerRegister64 dst, AssemblerRegister8 src) {}
		/// <summary>crc32 instruction.<br/>
		/// <br/>
		/// <c>CRC32 r32, r/m16</c><br/>
		/// <br/>
		/// <c>o16 F2 0F 38 F1 /r</c><br/>
		/// <br/>
		/// <c>SSE4.2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663870)]
public static void crc32(AssemblerRegister32 dst, AssemblerRegister16 src) {}
		/// <summary>crc32 instruction.<br/>
		/// <br/>
		/// <c>CRC32 r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 F2 0F 38 F1 /r</c><br/>
		/// <br/>
		/// <c>SSE4.2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663871)]
public static void crc32(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>crc32 instruction.<br/>
		/// <br/>
		/// <c>CRC32 r64, r/m64</c><br/>
		/// <br/>
		/// <c>F2 o64 0F 38 F1 /r</c><br/>
		/// <br/>
		/// <c>SSE4.2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663872)]
public static void crc32(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>crc32 instruction.<br/>
		/// <br/>
		/// <c>CRC32 r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 F2 0F 38 F1 /r</c><br/>
		/// <br/>
		/// <c>SSE4.2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>CRC32 r32, r/m16</c><br/>
		/// <br/>
		/// <c>o16 F2 0F 38 F1 /r</c><br/>
		/// <br/>
		/// <c>SSE4.2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>CRC32 r32, r/m8</c><br/>
		/// <br/>
		/// <c>F2 0F 38 F0 /r</c><br/>
		/// <br/>
		/// <c>SSE4.2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663873)]
public static void crc32(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>crc32 instruction.<br/>
		/// <br/>
		/// <c>CRC32 r64, r/m64</c><br/>
		/// <br/>
		/// <c>F2 o64 0F 38 F1 /r</c><br/>
		/// <br/>
		/// <c>SSE4.2</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>CRC32 r64, r/m8</c><br/>
		/// <br/>
		/// <c>F2 o64 0F 38 F0 /r</c><br/>
		/// <br/>
		/// <c>SSE4.2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663874)]
public static void crc32(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>cvtdq2pd instruction.<br/>
		/// <br/>
		/// <c>CVTDQ2PD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>F3 0F E6 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663875)]
public static void cvtdq2pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cvtdq2pd instruction.<br/>
		/// <br/>
		/// <c>CVTDQ2PD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>F3 0F E6 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663876)]
public static void cvtdq2pd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cvtdq2ps instruction.<br/>
		/// <br/>
		/// <c>CVTDQ2PS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 5B /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663877)]
public static void cvtdq2ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cvtdq2ps instruction.<br/>
		/// <br/>
		/// <c>CVTDQ2PS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 5B /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663878)]
public static void cvtdq2ps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cvtpd2dq instruction.<br/>
		/// <br/>
		/// <c>CVTPD2DQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>F2 0F E6 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663879)]
public static void cvtpd2dq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cvtpd2dq instruction.<br/>
		/// <br/>
		/// <c>CVTPD2DQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>F2 0F E6 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663880)]
public static void cvtpd2dq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cvtpd2pi instruction.<br/>
		/// <br/>
		/// <c>CVTPD2PI mm, xmm/m128</c><br/>
		/// <br/>
		/// <c>66 0F 2D /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663881)]
public static void cvtpd2pi(AssemblerRegisterMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cvtpd2pi instruction.<br/>
		/// <br/>
		/// <c>CVTPD2PI mm, xmm/m128</c><br/>
		/// <br/>
		/// <c>66 0F 2D /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663882)]
public static void cvtpd2pi(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cvtpd2ps instruction.<br/>
		/// <br/>
		/// <c>CVTPD2PS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 5A /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663883)]
public static void cvtpd2ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cvtpd2ps instruction.<br/>
		/// <br/>
		/// <c>CVTPD2PS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 5A /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663884)]
public static void cvtpd2ps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cvtpi2pd instruction.<br/>
		/// <br/>
		/// <c>CVTPI2PD xmm, mm/m64</c><br/>
		/// <br/>
		/// <c>66 0F 2A /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663885)]
public static void cvtpi2pd(AssemblerRegisterXMM dst, AssemblerRegisterMM src) {}
		/// <summary>cvtpi2pd instruction.<br/>
		/// <br/>
		/// <c>CVTPI2PD xmm, mm/m64</c><br/>
		/// <br/>
		/// <c>66 0F 2A /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663886)]
public static void cvtpi2pd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cvtpi2ps instruction.<br/>
		/// <br/>
		/// <c>CVTPI2PS xmm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 2A /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663887)]
public static void cvtpi2ps(AssemblerRegisterXMM dst, AssemblerRegisterMM src) {}
		/// <summary>cvtpi2ps instruction.<br/>
		/// <br/>
		/// <c>CVTPI2PS xmm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 2A /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663888)]
public static void cvtpi2ps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cvtps2dq instruction.<br/>
		/// <br/>
		/// <c>CVTPS2DQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 5B /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663889)]
public static void cvtps2dq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cvtps2dq instruction.<br/>
		/// <br/>
		/// <c>CVTPS2DQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 5B /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663890)]
public static void cvtps2dq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cvtps2pd instruction.<br/>
		/// <br/>
		/// <c>CVTPS2PD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 5A /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663891)]
public static void cvtps2pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cvtps2pd instruction.<br/>
		/// <br/>
		/// <c>CVTPS2PD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 5A /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663892)]
public static void cvtps2pd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cvtps2pi instruction.<br/>
		/// <br/>
		/// <c>CVTPS2PI mm, xmm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 2D /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663893)]
public static void cvtps2pi(AssemblerRegisterMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cvtps2pi instruction.<br/>
		/// <br/>
		/// <c>CVTPS2PI mm, xmm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 2D /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663894)]
public static void cvtps2pi(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cvtsd2si instruction.<br/>
		/// <br/>
		/// <c>CVTSD2SI r32, xmm1/m64</c><br/>
		/// <br/>
		/// <c>F2 0F 2D /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663895)]
public static void cvtsd2si(AssemblerRegister32 dst, AssemblerRegisterXMM src) {}
		/// <summary>cvtsd2si instruction.<br/>
		/// <br/>
		/// <c>CVTSD2SI r64, xmm1/m64</c><br/>
		/// <br/>
		/// <c>F2 o64 0F 2D /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663896)]
public static void cvtsd2si(AssemblerRegister64 dst, AssemblerRegisterXMM src) {}
		/// <summary>cvtsd2si instruction.<br/>
		/// <br/>
		/// <c>CVTSD2SI r32, xmm1/m64</c><br/>
		/// <br/>
		/// <c>F2 0F 2D /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663897)]
public static void cvtsd2si(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>cvtsd2si instruction.<br/>
		/// <br/>
		/// <c>CVTSD2SI r64, xmm1/m64</c><br/>
		/// <br/>
		/// <c>F2 o64 0F 2D /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663898)]
public static void cvtsd2si(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>cvtsd2ss instruction.<br/>
		/// <br/>
		/// <c>CVTSD2SS xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>F2 0F 5A /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663899)]
public static void cvtsd2ss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cvtsd2ss instruction.<br/>
		/// <br/>
		/// <c>CVTSD2SS xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>F2 0F 5A /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663900)]
public static void cvtsd2ss(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cvtsi2sd instruction.<br/>
		/// <br/>
		/// <c>CVTSI2SD xmm1, r/m32</c><br/>
		/// <br/>
		/// <c>F2 0F 2A /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663901)]
public static void cvtsi2sd(AssemblerRegisterXMM dst, AssemblerRegister32 src) {}
		/// <summary>cvtsi2sd instruction.<br/>
		/// <br/>
		/// <c>CVTSI2SD xmm1, r/m64</c><br/>
		/// <br/>
		/// <c>F2 o64 0F 2A /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663902)]
public static void cvtsi2sd(AssemblerRegisterXMM dst, AssemblerRegister64 src) {}
		/// <summary>cvtsi2sd instruction.<br/>
		/// <br/>
		/// <c>CVTSI2SD xmm1, r/m64</c><br/>
		/// <br/>
		/// <c>F2 o64 0F 2A /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>CVTSI2SD xmm1, r/m32</c><br/>
		/// <br/>
		/// <c>F2 0F 2A /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663903)]
public static void cvtsi2sd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cvtsi2ss instruction.<br/>
		/// <br/>
		/// <c>CVTSI2SS xmm1, r/m32</c><br/>
		/// <br/>
		/// <c>F3 0F 2A /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663904)]
public static void cvtsi2ss(AssemblerRegisterXMM dst, AssemblerRegister32 src) {}
		/// <summary>cvtsi2ss instruction.<br/>
		/// <br/>
		/// <c>CVTSI2SS xmm1, r/m64</c><br/>
		/// <br/>
		/// <c>F3 o64 0F 2A /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663905)]
public static void cvtsi2ss(AssemblerRegisterXMM dst, AssemblerRegister64 src) {}
		/// <summary>cvtsi2ss instruction.<br/>
		/// <br/>
		/// <c>CVTSI2SS xmm1, r/m64</c><br/>
		/// <br/>
		/// <c>F3 o64 0F 2A /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>CVTSI2SS xmm1, r/m32</c><br/>
		/// <br/>
		/// <c>F3 0F 2A /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663906)]
public static void cvtsi2ss(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cvtss2sd instruction.<br/>
		/// <br/>
		/// <c>CVTSS2SD xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>F3 0F 5A /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663907)]
public static void cvtss2sd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cvtss2sd instruction.<br/>
		/// <br/>
		/// <c>CVTSS2SD xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>F3 0F 5A /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663908)]
public static void cvtss2sd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cvtss2si instruction.<br/>
		/// <br/>
		/// <c>CVTSS2SI r32, xmm1/m32</c><br/>
		/// <br/>
		/// <c>F3 0F 2D /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663909)]
public static void cvtss2si(AssemblerRegister32 dst, AssemblerRegisterXMM src) {}
		/// <summary>cvtss2si instruction.<br/>
		/// <br/>
		/// <c>CVTSS2SI r64, xmm1/m32</c><br/>
		/// <br/>
		/// <c>F3 o64 0F 2D /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663910)]
public static void cvtss2si(AssemblerRegister64 dst, AssemblerRegisterXMM src) {}
		/// <summary>cvtss2si instruction.<br/>
		/// <br/>
		/// <c>CVTSS2SI r32, xmm1/m32</c><br/>
		/// <br/>
		/// <c>F3 0F 2D /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663911)]
public static void cvtss2si(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>cvtss2si instruction.<br/>
		/// <br/>
		/// <c>CVTSS2SI r64, xmm1/m32</c><br/>
		/// <br/>
		/// <c>F3 o64 0F 2D /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663912)]
public static void cvtss2si(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>cvttpd2dq instruction.<br/>
		/// <br/>
		/// <c>CVTTPD2DQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F E6 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663913)]
public static void cvttpd2dq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cvttpd2dq instruction.<br/>
		/// <br/>
		/// <c>CVTTPD2DQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F E6 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663914)]
public static void cvttpd2dq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cvttpd2pi instruction.<br/>
		/// <br/>
		/// <c>CVTTPD2PI mm, xmm/m128</c><br/>
		/// <br/>
		/// <c>66 0F 2C /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663915)]
public static void cvttpd2pi(AssemblerRegisterMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cvttpd2pi instruction.<br/>
		/// <br/>
		/// <c>CVTTPD2PI mm, xmm/m128</c><br/>
		/// <br/>
		/// <c>66 0F 2C /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663916)]
public static void cvttpd2pi(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cvttps2dq instruction.<br/>
		/// <br/>
		/// <c>CVTTPS2DQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>F3 0F 5B /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663917)]
public static void cvttps2dq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cvttps2dq instruction.<br/>
		/// <br/>
		/// <c>CVTTPS2DQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>F3 0F 5B /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663918)]
public static void cvttps2dq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cvttps2pi instruction.<br/>
		/// <br/>
		/// <c>CVTTPS2PI mm, xmm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 2C /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663919)]
public static void cvttps2pi(AssemblerRegisterMM dst, AssemblerRegisterXMM src) {}
		/// <summary>cvttps2pi instruction.<br/>
		/// <br/>
		/// <c>CVTTPS2PI mm, xmm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 2C /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663920)]
public static void cvttps2pi(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>cvttsd2si instruction.<br/>
		/// <br/>
		/// <c>CVTTSD2SI r32, xmm1/m64</c><br/>
		/// <br/>
		/// <c>F2 0F 2C /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663921)]
public static void cvttsd2si(AssemblerRegister32 dst, AssemblerRegisterXMM src) {}
		/// <summary>cvttsd2si instruction.<br/>
		/// <br/>
		/// <c>CVTTSD2SI r64, xmm1/m64</c><br/>
		/// <br/>
		/// <c>F2 o64 0F 2C /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663922)]
public static void cvttsd2si(AssemblerRegister64 dst, AssemblerRegisterXMM src) {}
		/// <summary>cvttsd2si instruction.<br/>
		/// <br/>
		/// <c>CVTTSD2SI r32, xmm1/m64</c><br/>
		/// <br/>
		/// <c>F2 0F 2C /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663923)]
public static void cvttsd2si(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>cvttsd2si instruction.<br/>
		/// <br/>
		/// <c>CVTTSD2SI r64, xmm1/m64</c><br/>
		/// <br/>
		/// <c>F2 o64 0F 2C /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663924)]
public static void cvttsd2si(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>cvttss2si instruction.<br/>
		/// <br/>
		/// <c>CVTTSS2SI r32, xmm1/m32</c><br/>
		/// <br/>
		/// <c>F3 0F 2C /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663925)]
public static void cvttss2si(AssemblerRegister32 dst, AssemblerRegisterXMM src) {}
		/// <summary>cvttss2si instruction.<br/>
		/// <br/>
		/// <c>CVTTSS2SI r64, xmm1/m32</c><br/>
		/// <br/>
		/// <c>F3 o64 0F 2C /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663926)]
public static void cvttss2si(AssemblerRegister64 dst, AssemblerRegisterXMM src) {}
		/// <summary>cvttss2si instruction.<br/>
		/// <br/>
		/// <c>CVTTSS2SI r32, xmm1/m32</c><br/>
		/// <br/>
		/// <c>F3 0F 2C /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663927)]
public static void cvttss2si(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>cvttss2si instruction.<br/>
		/// <br/>
		/// <c>CVTTSS2SI r64, xmm1/m32</c><br/>
		/// <br/>
		/// <c>F3 o64 0F 2C /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663928)]
public static void cvttss2si(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>cwd instruction.<br/>
		/// <br/>
		/// <c>CWD</c><br/>
		/// <br/>
		/// <c>o16 99</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663929)]
public static void cwd() {}
		/// <summary>cwde instruction.<br/>
		/// <br/>
		/// <c>CWDE</c><br/>
		/// <br/>
		/// <c>o32 98</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663930)]
public static void cwde() {}
		/// <summary>daa instruction.<br/>
		/// <br/>
		/// <c>DAA</c><br/>
		/// <br/>
		/// <c>27</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100663931)]
public static void daa() {}
		/// <summary>das instruction.<br/>
		/// <br/>
		/// <c>DAS</c><br/>
		/// <br/>
		/// <c>2F</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100663932)]
public static void das() {}
		/// <summary>dec instruction.<br/>
		/// <br/>
		/// <c>DEC r/m8</c><br/>
		/// <br/>
		/// <c>FE /1</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663933)]
public static void dec(AssemblerRegister8 dst) {}
		/// <summary>dec instruction.<br/>
		/// <br/>
		/// <c>DEC r/m16</c><br/>
		/// <br/>
		/// <c>o16 FF /1</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>DEC r16</c><br/>
		/// <br/>
		/// <c>o16 48+rw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100663934)]
public static void dec(AssemblerRegister16 dst) {}
		/// <summary>dec instruction.<br/>
		/// <br/>
		/// <c>DEC r/m32</c><br/>
		/// <br/>
		/// <c>o32 FF /1</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>DEC r32</c><br/>
		/// <br/>
		/// <c>o32 48+rd</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100663935)]
public static void dec(AssemblerRegister32 dst) {}
		/// <summary>dec instruction.<br/>
		/// <br/>
		/// <c>DEC r/m64</c><br/>
		/// <br/>
		/// <c>o64 FF /1</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663936)]
public static void dec(AssemblerRegister64 dst) {}
		/// <summary>dec instruction.<br/>
		/// <br/>
		/// <c>DEC r/m64</c><br/>
		/// <br/>
		/// <c>o64 FF /1</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>DEC r/m32</c><br/>
		/// <br/>
		/// <c>o32 FF /1</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>DEC r/m16</c><br/>
		/// <br/>
		/// <c>o16 FF /1</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>DEC r/m8</c><br/>
		/// <br/>
		/// <c>FE /1</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663937)]
public static void dec(AssemblerMemoryOperand dst) {}
		/// <summary>div instruction.<br/>
		/// <br/>
		/// <c>DIV r/m8</c><br/>
		/// <br/>
		/// <c>F6 /6</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663938)]
public static void div(AssemblerRegister8 dst) {}
		/// <summary>div instruction.<br/>
		/// <br/>
		/// <c>DIV r/m16</c><br/>
		/// <br/>
		/// <c>o16 F7 /6</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663939)]
public static void div(AssemblerRegister16 dst) {}
		/// <summary>div instruction.<br/>
		/// <br/>
		/// <c>DIV r/m32</c><br/>
		/// <br/>
		/// <c>o32 F7 /6</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663940)]
public static void div(AssemblerRegister32 dst) {}
		/// <summary>div instruction.<br/>
		/// <br/>
		/// <c>DIV r/m64</c><br/>
		/// <br/>
		/// <c>o64 F7 /6</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663941)]
public static void div(AssemblerRegister64 dst) {}
		/// <summary>div instruction.<br/>
		/// <br/>
		/// <c>DIV r/m64</c><br/>
		/// <br/>
		/// <c>o64 F7 /6</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>DIV r/m32</c><br/>
		/// <br/>
		/// <c>o32 F7 /6</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>DIV r/m16</c><br/>
		/// <br/>
		/// <c>o16 F7 /6</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>DIV r/m8</c><br/>
		/// <br/>
		/// <c>F6 /6</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663942)]
public static void div(AssemblerMemoryOperand dst) {}
		/// <summary>divpd instruction.<br/>
		/// <br/>
		/// <c>DIVPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 5E /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663943)]
public static void divpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>divpd instruction.<br/>
		/// <br/>
		/// <c>DIVPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 5E /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663944)]
public static void divpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>divps instruction.<br/>
		/// <br/>
		/// <c>DIVPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 5E /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663945)]
public static void divps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>divps instruction.<br/>
		/// <br/>
		/// <c>DIVPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 5E /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663946)]
public static void divps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>divsd instruction.<br/>
		/// <br/>
		/// <c>DIVSD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>F2 0F 5E /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663947)]
public static void divsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>divsd instruction.<br/>
		/// <br/>
		/// <c>DIVSD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>F2 0F 5E /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663948)]
public static void divsd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>divss instruction.<br/>
		/// <br/>
		/// <c>DIVSS xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>F3 0F 5E /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663949)]
public static void divss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>divss instruction.<br/>
		/// <br/>
		/// <c>DIVSS xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>F3 0F 5E /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663950)]
public static void divss(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>dmint instruction.<br/>
		/// <br/>
		/// <c>DMINT</c><br/>
		/// <br/>
		/// <c>0F 39</c><br/>
		/// <br/>
		/// <c>AMD Geode GX/LX</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100663951)]
public static void dmint() {}
		/// <summary>dppd instruction.<br/>
		/// <br/>
		/// <c>DPPD xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 41 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663952)]
public static void dppd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>dppd instruction.<br/>
		/// <br/>
		/// <c>DPPD xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 41 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663953)]
public static void dppd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>dppd instruction.<br/>
		/// <br/>
		/// <c>DPPD xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 41 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663954)]
public static void dppd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>dppd instruction.<br/>
		/// <br/>
		/// <c>DPPD xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 41 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663955)]
public static void dppd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>dpps instruction.<br/>
		/// <br/>
		/// <c>DPPS xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 40 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663956)]
public static void dpps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>dpps instruction.<br/>
		/// <br/>
		/// <c>DPPS xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 40 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663957)]
public static void dpps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>dpps instruction.<br/>
		/// <br/>
		/// <c>DPPS xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 40 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663958)]
public static void dpps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>dpps instruction.<br/>
		/// <br/>
		/// <c>DPPS xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 40 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663959)]
public static void dpps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>emms instruction.<br/>
		/// <br/>
		/// <c>EMMS</c><br/>
		/// <br/>
		/// <c>NP 0F 77</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663960)]
public static void emms() {}
		/// <summary>encls instruction.<br/>
		/// <br/>
		/// <c>ENCLS</c><br/>
		/// <br/>
		/// <c>NP 0F 01 CF</c><br/>
		/// <br/>
		/// <c>SGX1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663961)]
public static void encls() {}
		/// <summary>enclu instruction.<br/>
		/// <br/>
		/// <c>ENCLU</c><br/>
		/// <br/>
		/// <c>NP 0F 01 D7</c><br/>
		/// <br/>
		/// <c>SGX1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663962)]
public static void enclu() {}
		/// <summary>enclv instruction.<br/>
		/// <br/>
		/// <c>ENCLV</c><br/>
		/// <br/>
		/// <c>NP 0F 01 C0</c><br/>
		/// <br/>
		/// <c>OSS</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663963)]
public static void enclv() {}
		/// <summary>encodekey128 instruction.<br/>
		/// <br/>
		/// <c>ENCODEKEY128 r32, r32, &lt;XMM0-2&gt;, &lt;XMM4-6&gt;</c><br/>
		/// <br/>
		/// <c>F3 0F 38 FA 11:rrr:bbb</c><br/>
		/// <br/>
		/// <c>AESKLE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663964)]
public static void encodekey128(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>encodekey256 instruction.<br/>
		/// <br/>
		/// <c>ENCODEKEY256 r32, r32, &lt;XMM0-6&gt;</c><br/>
		/// <br/>
		/// <c>F3 0F 38 FB 11:rrr:bbb</c><br/>
		/// <br/>
		/// <c>AESKLE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663965)]
public static void encodekey256(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>endbr32 instruction.<br/>
		/// <br/>
		/// <c>ENDBR32</c><br/>
		/// <br/>
		/// <c>F3 0F 1E FB</c><br/>
		/// <br/>
		/// <c>CET_IBT</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663966)]
public static void endbr32() {}
		/// <summary>endbr64 instruction.<br/>
		/// <br/>
		/// <c>ENDBR64</c><br/>
		/// <br/>
		/// <c>F3 0F 1E FA</c><br/>
		/// <br/>
		/// <c>CET_IBT</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663967)]
public static void endbr64() {}
		/// <summary>enqcmd instruction.<br/>
		/// <br/>
		/// <c>ENQCMD r16, m512</c><br/>
		/// <br/>
		/// <c>a16 F2 0F 38 F8 !(11):rrr:bbb</c><br/>
		/// <br/>
		/// <c>ENQCMD</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100663968)]
public static void enqcmd(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>enqcmd instruction.<br/>
		/// <br/>
		/// <c>ENQCMD r32, m512</c><br/>
		/// <br/>
		/// <c>a32 F2 0F 38 F8 !(11):rrr:bbb</c><br/>
		/// <br/>
		/// <c>ENQCMD</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663969)]
public static void enqcmd(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>enqcmd instruction.<br/>
		/// <br/>
		/// <c>ENQCMD r64, m512</c><br/>
		/// <br/>
		/// <c>a64 F2 0F 38 F8 !(11):rrr:bbb</c><br/>
		/// <br/>
		/// <c>ENQCMD</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663970)]
public static void enqcmd(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>enqcmds instruction.<br/>
		/// <br/>
		/// <c>ENQCMDS r16, m512</c><br/>
		/// <br/>
		/// <c>a16 F3 0F 38 F8 !(11):rrr:bbb</c><br/>
		/// <br/>
		/// <c>ENQCMD</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100663971)]
public static void enqcmds(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>enqcmds instruction.<br/>
		/// <br/>
		/// <c>ENQCMDS r32, m512</c><br/>
		/// <br/>
		/// <c>a32 F3 0F 38 F8 !(11):rrr:bbb</c><br/>
		/// <br/>
		/// <c>ENQCMD</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663972)]
public static void enqcmds(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>enqcmds instruction.<br/>
		/// <br/>
		/// <c>ENQCMDS r64, m512</c><br/>
		/// <br/>
		/// <c>a64 F3 0F 38 F8 !(11):rrr:bbb</c><br/>
		/// <br/>
		/// <c>ENQCMD</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663973)]
public static void enqcmds(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>enter instruction.<br/>
		/// <br/>
		/// <c>ENTER imm16, imm8</c><br/>
		/// <br/>
		/// <c>o64 C8 iw ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>ENTER imm16, imm8</c><br/>
		/// <br/>
		/// <c>o32 C8 iw ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>ENTER imm16, imm8</c><br/>
		/// <br/>
		/// <c>o16 C8 iw ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663974)]
public static void enter(short imm, sbyte imm1) {}
		/// <summary>enter instruction.<br/>
		/// <br/>
		/// <c>ENTER imm16, imm8</c><br/>
		/// <br/>
		/// <c>o64 C8 iw ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>ENTER imm16, imm8</c><br/>
		/// <br/>
		/// <c>o32 C8 iw ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>ENTER imm16, imm8</c><br/>
		/// <br/>
		/// <c>o16 C8 iw ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663975)]
public static void enter(ushort imm, byte imm1) {}
		/// <summary>erets instruction.<br/>
		/// <br/>
		/// <c>ERETS</c><br/>
		/// <br/>
		/// <c>F2 0F 01 CA</c><br/>
		/// <br/>
		/// <c>FRED</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663976)]
public static void erets() {}
		/// <summary>eretu instruction.<br/>
		/// <br/>
		/// <c>ERETU</c><br/>
		/// <br/>
		/// <c>F3 0F 01 CA</c><br/>
		/// <br/>
		/// <c>FRED</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663977)]
public static void eretu() {}
		/// <summary>extractps instruction.<br/>
		/// <br/>
		/// <c>EXTRACTPS r/m32, xmm1, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 17 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663978)]
public static void extractps(AssemblerRegister32 dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>extractps instruction.<br/>
		/// <br/>
		/// <c>EXTRACTPS r64/m32, xmm1, imm8</c><br/>
		/// <br/>
		/// <c>66 o64 0F 3A 17 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663979)]
public static void extractps(AssemblerRegister64 dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>extractps instruction.<br/>
		/// <br/>
		/// <c>EXTRACTPS r/m32, xmm1, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 17 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663980)]
public static void extractps(AssemblerMemoryOperand dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>extractps instruction.<br/>
		/// <br/>
		/// <c>EXTRACTPS r/m32, xmm1, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 17 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663981)]
public static void extractps(AssemblerRegister32 dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>extractps instruction.<br/>
		/// <br/>
		/// <c>EXTRACTPS r64/m32, xmm1, imm8</c><br/>
		/// <br/>
		/// <c>66 o64 0F 3A 17 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100663982)]
public static void extractps(AssemblerRegister64 dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>extractps instruction.<br/>
		/// <br/>
		/// <c>EXTRACTPS r/m32, xmm1, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 17 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663983)]
public static void extractps(AssemblerMemoryOperand dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>extrq instruction.<br/>
		/// <br/>
		/// <c>EXTRQ xmm1, xmm2</c><br/>
		/// <br/>
		/// <c>66 0F 79 /r</c><br/>
		/// <br/>
		/// <c>SSE4A</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663984)]
public static void extrq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>extrq instruction.<br/>
		/// <br/>
		/// <c>EXTRQ xmm1, imm8, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 78 /0 ib ib</c><br/>
		/// <br/>
		/// <c>SSE4A</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663985)]
public static void extrq(AssemblerRegisterXMM dst, sbyte imm, sbyte imm1) {}
		/// <summary>extrq instruction.<br/>
		/// <br/>
		/// <c>EXTRQ xmm1, imm8, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 78 /0 ib ib</c><br/>
		/// <br/>
		/// <c>SSE4A</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663986)]
public static void extrq(AssemblerRegisterXMM dst, byte imm, byte imm1) {}
		/// <summary>f2xm1 instruction.<br/>
		/// <br/>
		/// <c>F2XM1</c><br/>
		/// <br/>
		/// <c>D9 F0</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663987)]
public static void f2xm1() {}
		/// <summary>fabs instruction.<br/>
		/// <br/>
		/// <c>FABS</c><br/>
		/// <br/>
		/// <c>D9 E1</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663988)]
public static void fabs() {}
		/// <summary>fadd instruction.<br/>
		/// <br/>
		/// <c>FADD m64fp</c><br/>
		/// <br/>
		/// <c>DC /0</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>FADD m32fp</c><br/>
		/// <br/>
		/// <c>D8 /0</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663989)]
public static void fadd(AssemblerMemoryOperand dst) {}
		/// <summary>fadd instruction.<br/>
		/// <br/>
		/// <c>FADD ST(0), ST(i)</c><br/>
		/// <br/>
		/// <c>D8 C0+i</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>FADD ST(i), ST(0)</c><br/>
		/// <br/>
		/// <c>DC C0+i</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663990)]
public static void fadd(AssemblerRegisterST dst, AssemblerRegisterST src) {}
		/// <summary>faddp instruction.<br/>
		/// <br/>
		/// <c>FADDP ST(i), ST(0)</c><br/>
		/// <br/>
		/// <c>DE C0+i</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663991)]
public static void faddp(AssemblerRegisterST dst, AssemblerRegisterST src) {}
		/// <summary>fbld instruction.<br/>
		/// <br/>
		/// <c>FBLD m80bcd</c><br/>
		/// <br/>
		/// <c>DF /4</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663992)]
public static void fbld(AssemblerMemoryOperand dst) {}
		/// <summary>fbstp instruction.<br/>
		/// <br/>
		/// <c>FBSTP m80bcd</c><br/>
		/// <br/>
		/// <c>DF /6</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663993)]
public static void fbstp(AssemblerMemoryOperand dst) {}
		/// <summary>fchs instruction.<br/>
		/// <br/>
		/// <c>FCHS</c><br/>
		/// <br/>
		/// <c>D9 E0</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663994)]
public static void fchs() {}
		/// <summary>fclex instruction.<br/>
		/// <br/>
		/// <c>FCLEX</c><br/>
		/// <br/>
		/// <c>9B DB E2</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663995)]
public static void fclex() {}
		/// <summary>fcmovb instruction.<br/>
		/// <br/>
		/// <c>FCMOVB ST(0), ST(i)</c><br/>
		/// <br/>
		/// <c>DA C0+i</c><br/>
		/// <br/>
		/// <c>8087+ and CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663996)]
public static void fcmovb(AssemblerRegisterST dst, AssemblerRegisterST src) {}
		/// <summary>fcmovbe instruction.<br/>
		/// <br/>
		/// <c>FCMOVBE ST(0), ST(i)</c><br/>
		/// <br/>
		/// <c>DA D0+i</c><br/>
		/// <br/>
		/// <c>8087+ and CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663997)]
public static void fcmovbe(AssemblerRegisterST dst, AssemblerRegisterST src) {}
		/// <summary>fcmove instruction.<br/>
		/// <br/>
		/// <c>FCMOVE ST(0), ST(i)</c><br/>
		/// <br/>
		/// <c>DA C8+i</c><br/>
		/// <br/>
		/// <c>8087+ and CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663998)]
public static void fcmove(AssemblerRegisterST dst, AssemblerRegisterST src) {}
		/// <summary>fcmovnb instruction.<br/>
		/// <br/>
		/// <c>FCMOVNB ST(0), ST(i)</c><br/>
		/// <br/>
		/// <c>DB C0+i</c><br/>
		/// <br/>
		/// <c>8087+ and CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100663999)]
public static void fcmovnb(AssemblerRegisterST dst, AssemblerRegisterST src) {}
		/// <summary>fcmovnbe instruction.<br/>
		/// <br/>
		/// <c>FCMOVNBE ST(0), ST(i)</c><br/>
		/// <br/>
		/// <c>DB D0+i</c><br/>
		/// <br/>
		/// <c>8087+ and CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664000)]
public static void fcmovnbe(AssemblerRegisterST dst, AssemblerRegisterST src) {}
		/// <summary>fcmovne instruction.<br/>
		/// <br/>
		/// <c>FCMOVNE ST(0), ST(i)</c><br/>
		/// <br/>
		/// <c>DB C8+i</c><br/>
		/// <br/>
		/// <c>8087+ and CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664001)]
public static void fcmovne(AssemblerRegisterST dst, AssemblerRegisterST src) {}
		/// <summary>fcmovnu instruction.<br/>
		/// <br/>
		/// <c>FCMOVNU ST(0), ST(i)</c><br/>
		/// <br/>
		/// <c>DB D8+i</c><br/>
		/// <br/>
		/// <c>8087+ and CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664002)]
public static void fcmovnu(AssemblerRegisterST dst, AssemblerRegisterST src) {}
		/// <summary>fcmovu instruction.<br/>
		/// <br/>
		/// <c>FCMOVU ST(0), ST(i)</c><br/>
		/// <br/>
		/// <c>DA D8+i</c><br/>
		/// <br/>
		/// <c>8087+ and CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664003)]
public static void fcmovu(AssemblerRegisterST dst, AssemblerRegisterST src) {}
		/// <summary>fcom instruction.<br/>
		/// <br/>
		/// <c>FCOM m64fp</c><br/>
		/// <br/>
		/// <c>DC /2</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>FCOM m32fp</c><br/>
		/// <br/>
		/// <c>D8 /2</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664004)]
public static void fcom(AssemblerMemoryOperand dst) {}
		/// <summary>fcom instruction.<br/>
		/// <br/>
		/// <c>FCOM ST(i)</c><br/>
		/// <br/>
		/// <c>D8 D0+i</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664005)]
public static void fcom(AssemblerRegisterST dst, AssemblerRegisterST src) {}
		/// <summary>fcomi instruction.<br/>
		/// <br/>
		/// <c>FCOMI ST, ST(i)</c><br/>
		/// <br/>
		/// <c>DB F0+i</c><br/>
		/// <br/>
		/// <c>8087+ and CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664006)]
public static void fcomi(AssemblerRegisterST dst, AssemblerRegisterST src) {}
		/// <summary>fcomip instruction.<br/>
		/// <br/>
		/// <c>FCOMIP ST, ST(i)</c><br/>
		/// <br/>
		/// <c>DF F0+i</c><br/>
		/// <br/>
		/// <c>8087+ and CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664007)]
public static void fcomip(AssemblerRegisterST dst, AssemblerRegisterST src) {}
		/// <summary>fcomp instruction.<br/>
		/// <br/>
		/// <c>FCOMP m64fp</c><br/>
		/// <br/>
		/// <c>DC /3</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>FCOMP m32fp</c><br/>
		/// <br/>
		/// <c>D8 /3</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664008)]
public static void fcomp(AssemblerMemoryOperand dst) {}
		/// <summary>fcomp instruction.<br/>
		/// <br/>
		/// <c>FCOMP ST(i)</c><br/>
		/// <br/>
		/// <c>D8 D8+i</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664009)]
public static void fcomp(AssemblerRegisterST dst, AssemblerRegisterST src) {}
		/// <summary>fcompp instruction.<br/>
		/// <br/>
		/// <c>FCOMPP</c><br/>
		/// <br/>
		/// <c>DE D9</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664010)]
public static void fcompp() {}
		/// <summary>fcos instruction.<br/>
		/// <br/>
		/// <c>FCOS</c><br/>
		/// <br/>
		/// <c>D9 FF</c><br/>
		/// <br/>
		/// <c>387+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664011)]
public static void fcos() {}
		/// <summary>fdecstp instruction.<br/>
		/// <br/>
		/// <c>FDECSTP</c><br/>
		/// <br/>
		/// <c>D9 F6</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664012)]
public static void fdecstp() {}
		/// <summary>fdisi instruction.<br/>
		/// <br/>
		/// <c>FDISI</c><br/>
		/// <br/>
		/// <c>9B DB E1</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664013)]
public static void fdisi() {}
		/// <summary>fdiv instruction.<br/>
		/// <br/>
		/// <c>FDIV m64fp</c><br/>
		/// <br/>
		/// <c>DC /6</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>FDIV m32fp</c><br/>
		/// <br/>
		/// <c>D8 /6</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664014)]
public static void fdiv(AssemblerMemoryOperand dst) {}
		/// <summary>fdiv instruction.<br/>
		/// <br/>
		/// <c>FDIV ST(0), ST(i)</c><br/>
		/// <br/>
		/// <c>D8 F0+i</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>FDIV ST(i), ST(0)</c><br/>
		/// <br/>
		/// <c>DC F8+i</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664015)]
public static void fdiv(AssemblerRegisterST dst, AssemblerRegisterST src) {}
		/// <summary>fdivp instruction.<br/>
		/// <br/>
		/// <c>FDIVP ST(i), ST(0)</c><br/>
		/// <br/>
		/// <c>DE F8+i</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664016)]
public static void fdivp(AssemblerRegisterST dst, AssemblerRegisterST src) {}
		/// <summary>fdivr instruction.<br/>
		/// <br/>
		/// <c>FDIVR m64fp</c><br/>
		/// <br/>
		/// <c>DC /7</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>FDIVR m32fp</c><br/>
		/// <br/>
		/// <c>D8 /7</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664017)]
public static void fdivr(AssemblerMemoryOperand dst) {}
		/// <summary>fdivr instruction.<br/>
		/// <br/>
		/// <c>FDIVR ST(0), ST(i)</c><br/>
		/// <br/>
		/// <c>D8 F8+i</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>FDIVR ST(i), ST(0)</c><br/>
		/// <br/>
		/// <c>DC F0+i</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664018)]
public static void fdivr(AssemblerRegisterST dst, AssemblerRegisterST src) {}
		/// <summary>fdivrp instruction.<br/>
		/// <br/>
		/// <c>FDIVRP ST(i), ST(0)</c><br/>
		/// <br/>
		/// <c>DE F0+i</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664019)]
public static void fdivrp(AssemblerRegisterST dst, AssemblerRegisterST src) {}
		/// <summary>femms instruction.<br/>
		/// <br/>
		/// <c>FEMMS</c><br/>
		/// <br/>
		/// <c>0F 0E</c><br/>
		/// <br/>
		/// <c>3DNOW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664020)]
public static void femms() {}
		/// <summary>feni instruction.<br/>
		/// <br/>
		/// <c>FENI</c><br/>
		/// <br/>
		/// <c>9B DB E0</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664021)]
public static void feni() {}
		/// <summary>ffree instruction.<br/>
		/// <br/>
		/// <c>FFREE ST(i)</c><br/>
		/// <br/>
		/// <c>DD C0+i</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664022)]
public static void ffree(AssemblerRegisterST dst) {}
		/// <summary>ffreep instruction.<br/>
		/// <br/>
		/// <c>FFREEP ST(i)</c><br/>
		/// <br/>
		/// <c>DF C0+i</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664023)]
public static void ffreep(AssemblerRegisterST dst) {}
		/// <summary>fiadd instruction.<br/>
		/// <br/>
		/// <c>FIADD m32int</c><br/>
		/// <br/>
		/// <c>DA /0</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>FIADD m16int</c><br/>
		/// <br/>
		/// <c>DE /0</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664024)]
public static void fiadd(AssemblerMemoryOperand dst) {}
		/// <summary>ficom instruction.<br/>
		/// <br/>
		/// <c>FICOM m32int</c><br/>
		/// <br/>
		/// <c>DA /2</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>FICOM m16int</c><br/>
		/// <br/>
		/// <c>DE /2</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664025)]
public static void ficom(AssemblerMemoryOperand dst) {}
		/// <summary>ficomp instruction.<br/>
		/// <br/>
		/// <c>FICOMP m32int</c><br/>
		/// <br/>
		/// <c>DA /3</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>FICOMP m16int</c><br/>
		/// <br/>
		/// <c>DE /3</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664026)]
public static void ficomp(AssemblerMemoryOperand dst) {}
		/// <summary>fidiv instruction.<br/>
		/// <br/>
		/// <c>FIDIV m32int</c><br/>
		/// <br/>
		/// <c>DA /6</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>FIDIV m16int</c><br/>
		/// <br/>
		/// <c>DE /6</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664027)]
public static void fidiv(AssemblerMemoryOperand dst) {}
		/// <summary>fidivr instruction.<br/>
		/// <br/>
		/// <c>FIDIVR m32int</c><br/>
		/// <br/>
		/// <c>DA /7</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>FIDIVR m16int</c><br/>
		/// <br/>
		/// <c>DE /7</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664028)]
public static void fidivr(AssemblerMemoryOperand dst) {}
		/// <summary>fild instruction.<br/>
		/// <br/>
		/// <c>FILD m64int</c><br/>
		/// <br/>
		/// <c>DF /5</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>FILD m32int</c><br/>
		/// <br/>
		/// <c>DB /0</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>FILD m16int</c><br/>
		/// <br/>
		/// <c>DF /0</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664029)]
public static void fild(AssemblerMemoryOperand dst) {}
		/// <summary>fimul instruction.<br/>
		/// <br/>
		/// <c>FIMUL m32int</c><br/>
		/// <br/>
		/// <c>DA /1</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>FIMUL m16int</c><br/>
		/// <br/>
		/// <c>DE /1</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664030)]
public static void fimul(AssemblerMemoryOperand dst) {}
		/// <summary>fincstp instruction.<br/>
		/// <br/>
		/// <c>FINCSTP</c><br/>
		/// <br/>
		/// <c>D9 F7</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664031)]
public static void fincstp() {}
		/// <summary>finit instruction.<br/>
		/// <br/>
		/// <c>FINIT</c><br/>
		/// <br/>
		/// <c>9B DB E3</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664032)]
public static void finit() {}
		/// <summary>fist instruction.<br/>
		/// <br/>
		/// <c>FIST m32int</c><br/>
		/// <br/>
		/// <c>DB /2</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>FIST m16int</c><br/>
		/// <br/>
		/// <c>DF /2</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664033)]
public static void fist(AssemblerMemoryOperand dst) {}
		/// <summary>fistp instruction.<br/>
		/// <br/>
		/// <c>FISTP m64int</c><br/>
		/// <br/>
		/// <c>DF /7</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>FISTP m32int</c><br/>
		/// <br/>
		/// <c>DB /3</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>FISTP m16int</c><br/>
		/// <br/>
		/// <c>DF /3</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664034)]
public static void fistp(AssemblerMemoryOperand dst) {}
		/// <summary>fisttp instruction.<br/>
		/// <br/>
		/// <c>FISTTP m64int</c><br/>
		/// <br/>
		/// <c>DD /1</c><br/>
		/// <br/>
		/// <c>8087+ and SSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>FISTTP m32int</c><br/>
		/// <br/>
		/// <c>DB /1</c><br/>
		/// <br/>
		/// <c>8087+ and SSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>FISTTP m16int</c><br/>
		/// <br/>
		/// <c>DF /1</c><br/>
		/// <br/>
		/// <c>8087+ and SSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664035)]
public static void fisttp(AssemblerMemoryOperand dst) {}
		/// <summary>fisub instruction.<br/>
		/// <br/>
		/// <c>FISUB m32int</c><br/>
		/// <br/>
		/// <c>DA /4</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>FISUB m16int</c><br/>
		/// <br/>
		/// <c>DE /4</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664036)]
public static void fisub(AssemblerMemoryOperand dst) {}
		/// <summary>fisubr instruction.<br/>
		/// <br/>
		/// <c>FISUBR m32int</c><br/>
		/// <br/>
		/// <c>DA /5</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>FISUBR m16int</c><br/>
		/// <br/>
		/// <c>DE /5</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664037)]
public static void fisubr(AssemblerMemoryOperand dst) {}
		/// <summary>fld instruction.<br/>
		/// <br/>
		/// <c>FLD ST(i)</c><br/>
		/// <br/>
		/// <c>D9 C0+i</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664038)]
public static void fld(AssemblerRegisterST dst) {}
		/// <summary>fld instruction.<br/>
		/// <br/>
		/// <c>FLD m80fp</c><br/>
		/// <br/>
		/// <c>DB /5</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>FLD m64fp</c><br/>
		/// <br/>
		/// <c>DD /0</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>FLD m32fp</c><br/>
		/// <br/>
		/// <c>D9 /0</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664039)]
public static void fld(AssemblerMemoryOperand dst) {}
		/// <summary>fld1 instruction.<br/>
		/// <br/>
		/// <c>FLD1</c><br/>
		/// <br/>
		/// <c>D9 E8</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664040)]
public static void fld1() {}
		/// <summary>fldcw instruction.<br/>
		/// <br/>
		/// <c>FLDCW m2byte</c><br/>
		/// <br/>
		/// <c>D9 /5</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664041)]
public static void fldcw(AssemblerMemoryOperand dst) {}
		/// <summary>fldenv instruction.<br/>
		/// <br/>
		/// <c>FLDENV m28byte</c><br/>
		/// <br/>
		/// <c>o32 D9 /4</c><br/>
		/// <br/>
		/// <c>387+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>FLDENV m14byte</c><br/>
		/// <br/>
		/// <c>o16 D9 /4</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664042)]
public static void fldenv(AssemblerMemoryOperand dst) {}
		/// <summary>fldl2e instruction.<br/>
		/// <br/>
		/// <c>FLDL2E</c><br/>
		/// <br/>
		/// <c>D9 EA</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664043)]
public static void fldl2e() {}
		/// <summary>fldl2t instruction.<br/>
		/// <br/>
		/// <c>FLDL2T</c><br/>
		/// <br/>
		/// <c>D9 E9</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664044)]
public static void fldl2t() {}
		/// <summary>fldlg2 instruction.<br/>
		/// <br/>
		/// <c>FLDLG2</c><br/>
		/// <br/>
		/// <c>D9 EC</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664045)]
public static void fldlg2() {}
		/// <summary>fldln2 instruction.<br/>
		/// <br/>
		/// <c>FLDLN2</c><br/>
		/// <br/>
		/// <c>D9 ED</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664046)]
public static void fldln2() {}
		/// <summary>fldpi instruction.<br/>
		/// <br/>
		/// <c>FLDPI</c><br/>
		/// <br/>
		/// <c>D9 EB</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664047)]
public static void fldpi() {}
		/// <summary>fldz instruction.<br/>
		/// <br/>
		/// <c>FLDZ</c><br/>
		/// <br/>
		/// <c>D9 EE</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664048)]
public static void fldz() {}
		/// <summary>fmul instruction.<br/>
		/// <br/>
		/// <c>FMUL m64fp</c><br/>
		/// <br/>
		/// <c>DC /1</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>FMUL m32fp</c><br/>
		/// <br/>
		/// <c>D8 /1</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664049)]
public static void fmul(AssemblerMemoryOperand dst) {}
		/// <summary>fmul instruction.<br/>
		/// <br/>
		/// <c>FMUL ST(0), ST(i)</c><br/>
		/// <br/>
		/// <c>D8 C8+i</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>FMUL ST(i), ST(0)</c><br/>
		/// <br/>
		/// <c>DC C8+i</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664050)]
public static void fmul(AssemblerRegisterST dst, AssemblerRegisterST src) {}
		/// <summary>fmulp instruction.<br/>
		/// <br/>
		/// <c>FMULP ST(i), ST(0)</c><br/>
		/// <br/>
		/// <c>DE C8+i</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664051)]
public static void fmulp(AssemblerRegisterST dst, AssemblerRegisterST src) {}
		/// <summary>fnclex instruction.<br/>
		/// <br/>
		/// <c>FNCLEX</c><br/>
		/// <br/>
		/// <c>DB E2</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664052)]
public static void fnclex() {}
		/// <summary>fndisi instruction.<br/>
		/// <br/>
		/// <c>FNDISI</c><br/>
		/// <br/>
		/// <c>DB E1</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664053)]
public static void fndisi() {}
		/// <summary>fneni instruction.<br/>
		/// <br/>
		/// <c>FNENI</c><br/>
		/// <br/>
		/// <c>DB E0</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664054)]
public static void fneni() {}
		/// <summary>fninit instruction.<br/>
		/// <br/>
		/// <c>FNINIT</c><br/>
		/// <br/>
		/// <c>DB E3</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664055)]
public static void fninit() {}
		/// <summary>fnop instruction.<br/>
		/// <br/>
		/// <c>FNOP</c><br/>
		/// <br/>
		/// <c>D9 D0</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664056)]
public static void fnop() {}
		/// <summary>fnsave instruction.<br/>
		/// <br/>
		/// <c>FNSAVE m108byte</c><br/>
		/// <br/>
		/// <c>o32 DD /6</c><br/>
		/// <br/>
		/// <c>387+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>FNSAVE m94byte</c><br/>
		/// <br/>
		/// <c>o16 DD /6</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664057)]
public static void fnsave(AssemblerMemoryOperand dst) {}
		/// <summary>fnsetpm instruction.<br/>
		/// <br/>
		/// <c>FNSETPM</c><br/>
		/// <br/>
		/// <c>DB E4</c><br/>
		/// <br/>
		/// <c>287+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664058)]
public static void fnsetpm() {}
		/// <summary>fnstcw instruction.<br/>
		/// <br/>
		/// <c>FNSTCW m2byte</c><br/>
		/// <br/>
		/// <c>D9 /7</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664059)]
public static void fnstcw(AssemblerMemoryOperand dst) {}
		/// <summary>fnstdw instruction.<br/>
		/// <br/>
		/// <c>FNSTDW AX</c><br/>
		/// <br/>
		/// <c>DF E1</c><br/>
		/// <br/>
		/// <c>387 SL</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664060)]
public static void fnstdw(AssemblerRegister16 dst) {}
		/// <summary>fnstenv instruction.<br/>
		/// <br/>
		/// <c>FNSTENV m28byte</c><br/>
		/// <br/>
		/// <c>o32 D9 /6</c><br/>
		/// <br/>
		/// <c>387+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>FNSTENV m14byte</c><br/>
		/// <br/>
		/// <c>o16 D9 /6</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664061)]
public static void fnstenv(AssemblerMemoryOperand dst) {}
		/// <summary>fnstsg instruction.<br/>
		/// <br/>
		/// <c>FNSTSG AX</c><br/>
		/// <br/>
		/// <c>DF E2</c><br/>
		/// <br/>
		/// <c>387 SL</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664062)]
public static void fnstsg(AssemblerRegister16 dst) {}
		/// <summary>fnstsw instruction.<br/>
		/// <br/>
		/// <c>FNSTSW AX</c><br/>
		/// <br/>
		/// <c>DF E0</c><br/>
		/// <br/>
		/// <c>287+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664063)]
public static void fnstsw(AssemblerRegister16 dst) {}
		/// <summary>fnstsw instruction.<br/>
		/// <br/>
		/// <c>FNSTSW m2byte</c><br/>
		/// <br/>
		/// <c>DD /7</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664064)]
public static void fnstsw(AssemblerMemoryOperand dst) {}
		/// <summary>fpatan instruction.<br/>
		/// <br/>
		/// <c>FPATAN</c><br/>
		/// <br/>
		/// <c>D9 F3</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664065)]
public static void fpatan() {}
		/// <summary>fprem instruction.<br/>
		/// <br/>
		/// <c>FPREM</c><br/>
		/// <br/>
		/// <c>D9 F8</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664066)]
public static void fprem() {}
		/// <summary>fprem1 instruction.<br/>
		/// <br/>
		/// <c>FPREM1</c><br/>
		/// <br/>
		/// <c>D9 F5</c><br/>
		/// <br/>
		/// <c>387+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664067)]
public static void fprem1() {}
		/// <summary>fptan instruction.<br/>
		/// <br/>
		/// <c>FPTAN</c><br/>
		/// <br/>
		/// <c>D9 F2</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664068)]
public static void fptan() {}
		/// <summary>frndint instruction.<br/>
		/// <br/>
		/// <c>FRNDINT</c><br/>
		/// <br/>
		/// <c>D9 FC</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664069)]
public static void frndint() {}
		/// <summary>frstor instruction.<br/>
		/// <br/>
		/// <c>FRSTOR m108byte</c><br/>
		/// <br/>
		/// <c>o32 DD /4</c><br/>
		/// <br/>
		/// <c>387+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>FRSTOR m94byte</c><br/>
		/// <br/>
		/// <c>o16 DD /4</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664070)]
public static void frstor(AssemblerMemoryOperand dst) {}
		/// <summary>frstpm instruction.<br/>
		/// <br/>
		/// <c>FRSTPM</c><br/>
		/// <br/>
		/// <c>DB E5</c><br/>
		/// <br/>
		/// <c>287 XL</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664071)]
public static void frstpm() {}
		/// <summary>fsave instruction.<br/>
		/// <br/>
		/// <c>FSAVE m108byte</c><br/>
		/// <br/>
		/// <c>9B o32 DD /6</c><br/>
		/// <br/>
		/// <c>387+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>FSAVE m94byte</c><br/>
		/// <br/>
		/// <c>9B o16 DD /6</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664072)]
public static void fsave(AssemblerMemoryOperand dst) {}
		/// <summary>fscale instruction.<br/>
		/// <br/>
		/// <c>FSCALE</c><br/>
		/// <br/>
		/// <c>D9 FD</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664073)]
public static void fscale() {}
		/// <summary>fsetpm instruction.<br/>
		/// <br/>
		/// <c>FSETPM</c><br/>
		/// <br/>
		/// <c>9B DB E4</c><br/>
		/// <br/>
		/// <c>287+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664074)]
public static void fsetpm() {}
		/// <summary>fsin instruction.<br/>
		/// <br/>
		/// <c>FSIN</c><br/>
		/// <br/>
		/// <c>D9 FE</c><br/>
		/// <br/>
		/// <c>387+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664075)]
public static void fsin() {}
		/// <summary>fsincos instruction.<br/>
		/// <br/>
		/// <c>FSINCOS</c><br/>
		/// <br/>
		/// <c>D9 FB</c><br/>
		/// <br/>
		/// <c>387+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664076)]
public static void fsincos() {}
		/// <summary>fsqrt instruction.<br/>
		/// <br/>
		/// <c>FSQRT</c><br/>
		/// <br/>
		/// <c>D9 FA</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664077)]
public static void fsqrt() {}
		/// <summary>fst instruction.<br/>
		/// <br/>
		/// <c>FST ST(i)</c><br/>
		/// <br/>
		/// <c>DD D0+i</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664078)]
public static void fst(AssemblerRegisterST dst) {}
		/// <summary>fst instruction.<br/>
		/// <br/>
		/// <c>FST m64fp</c><br/>
		/// <br/>
		/// <c>DD /2</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>FST m32fp</c><br/>
		/// <br/>
		/// <c>D9 /2</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664079)]
public static void fst(AssemblerMemoryOperand dst) {}
		/// <summary>fstcw instruction.<br/>
		/// <br/>
		/// <c>FSTCW m2byte</c><br/>
		/// <br/>
		/// <c>9B D9 /7</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664080)]
public static void fstcw(AssemblerMemoryOperand dst) {}
		/// <summary>fstdw instruction.<br/>
		/// <br/>
		/// <c>FSTDW AX</c><br/>
		/// <br/>
		/// <c>9B DF E1</c><br/>
		/// <br/>
		/// <c>387 SL</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664081)]
public static void fstdw(AssemblerRegister16 dst) {}
		/// <summary>fstenv instruction.<br/>
		/// <br/>
		/// <c>FSTENV m28byte</c><br/>
		/// <br/>
		/// <c>9B o32 D9 /6</c><br/>
		/// <br/>
		/// <c>387+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>FSTENV m14byte</c><br/>
		/// <br/>
		/// <c>9B o16 D9 /6</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664082)]
public static void fstenv(AssemblerMemoryOperand dst) {}
		/// <summary>fstp instruction.<br/>
		/// <br/>
		/// <c>FSTP ST(i)</c><br/>
		/// <br/>
		/// <c>DD D8+i</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664083)]
public static void fstp(AssemblerRegisterST dst) {}
		/// <summary>fstp instruction.<br/>
		/// <br/>
		/// <c>FSTP m80fp</c><br/>
		/// <br/>
		/// <c>DB /7</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>FSTP m64fp</c><br/>
		/// <br/>
		/// <c>DD /3</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>FSTP m32fp</c><br/>
		/// <br/>
		/// <c>D9 /3</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664084)]
public static void fstp(AssemblerMemoryOperand dst) {}
		/// <summary>fstpnce instruction.<br/>
		/// <br/>
		/// <c>FSTPNCE ST(i)</c><br/>
		/// <br/>
		/// <c>D9 D8+i</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664085)]
public static void fstpnce(AssemblerRegisterST dst) {}
		/// <summary>fstsg instruction.<br/>
		/// <br/>
		/// <c>FSTSG AX</c><br/>
		/// <br/>
		/// <c>9B DF E2</c><br/>
		/// <br/>
		/// <c>387 SL</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664086)]
public static void fstsg(AssemblerRegister16 dst) {}
		/// <summary>fstsw instruction.<br/>
		/// <br/>
		/// <c>FSTSW AX</c><br/>
		/// <br/>
		/// <c>9B DF E0</c><br/>
		/// <br/>
		/// <c>287+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664087)]
public static void fstsw(AssemblerRegister16 dst) {}
		/// <summary>fstsw instruction.<br/>
		/// <br/>
		/// <c>FSTSW m2byte</c><br/>
		/// <br/>
		/// <c>9B DD /7</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664088)]
public static void fstsw(AssemblerMemoryOperand dst) {}
		/// <summary>fsub instruction.<br/>
		/// <br/>
		/// <c>FSUB m64fp</c><br/>
		/// <br/>
		/// <c>DC /4</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>FSUB m32fp</c><br/>
		/// <br/>
		/// <c>D8 /4</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664089)]
public static void fsub(AssemblerMemoryOperand dst) {}
		/// <summary>fsub instruction.<br/>
		/// <br/>
		/// <c>FSUB ST(0), ST(i)</c><br/>
		/// <br/>
		/// <c>D8 E0+i</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>FSUB ST(i), ST(0)</c><br/>
		/// <br/>
		/// <c>DC E8+i</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664090)]
public static void fsub(AssemblerRegisterST dst, AssemblerRegisterST src) {}
		/// <summary>fsubp instruction.<br/>
		/// <br/>
		/// <c>FSUBP ST(i), ST(0)</c><br/>
		/// <br/>
		/// <c>DE E8+i</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664091)]
public static void fsubp(AssemblerRegisterST dst, AssemblerRegisterST src) {}
		/// <summary>fsubr instruction.<br/>
		/// <br/>
		/// <c>FSUBR m64fp</c><br/>
		/// <br/>
		/// <c>DC /5</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>FSUBR m32fp</c><br/>
		/// <br/>
		/// <c>D8 /5</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664092)]
public static void fsubr(AssemblerMemoryOperand dst) {}
		/// <summary>fsubr instruction.<br/>
		/// <br/>
		/// <c>FSUBR ST(0), ST(i)</c><br/>
		/// <br/>
		/// <c>D8 E8+i</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>FSUBR ST(i), ST(0)</c><br/>
		/// <br/>
		/// <c>DC E0+i</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664093)]
public static void fsubr(AssemblerRegisterST dst, AssemblerRegisterST src) {}
		/// <summary>fsubrp instruction.<br/>
		/// <br/>
		/// <c>FSUBRP ST(i), ST(0)</c><br/>
		/// <br/>
		/// <c>DE E0+i</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664094)]
public static void fsubrp(AssemblerRegisterST dst, AssemblerRegisterST src) {}
		/// <summary>ftst instruction.<br/>
		/// <br/>
		/// <c>FTST</c><br/>
		/// <br/>
		/// <c>D9 E4</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664095)]
public static void ftst() {}
		/// <summary>fucom instruction.<br/>
		/// <br/>
		/// <c>FUCOM ST(i)</c><br/>
		/// <br/>
		/// <c>DD E0+i</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664096)]
public static void fucom(AssemblerRegisterST dst, AssemblerRegisterST src) {}
		/// <summary>fucomi instruction.<br/>
		/// <br/>
		/// <c>FUCOMI ST, ST(i)</c><br/>
		/// <br/>
		/// <c>DB E8+i</c><br/>
		/// <br/>
		/// <c>8087+ and CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664097)]
public static void fucomi(AssemblerRegisterST dst, AssemblerRegisterST src) {}
		/// <summary>fucomip instruction.<br/>
		/// <br/>
		/// <c>FUCOMIP ST, ST(i)</c><br/>
		/// <br/>
		/// <c>DF E8+i</c><br/>
		/// <br/>
		/// <c>8087+ and CMOV</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664098)]
public static void fucomip(AssemblerRegisterST dst, AssemblerRegisterST src) {}
		/// <summary>fucomp instruction.<br/>
		/// <br/>
		/// <c>FUCOMP ST(i)</c><br/>
		/// <br/>
		/// <c>DD E8+i</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664099)]
public static void fucomp(AssemblerRegisterST dst, AssemblerRegisterST src) {}
		/// <summary>fucompp instruction.<br/>
		/// <br/>
		/// <c>FUCOMPP</c><br/>
		/// <br/>
		/// <c>DA E9</c><br/>
		/// <br/>
		/// <c>387+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664100)]
public static void fucompp() {}
		/// <summary>fxam instruction.<br/>
		/// <br/>
		/// <c>FXAM</c><br/>
		/// <br/>
		/// <c>D9 E5</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664101)]
public static void fxam() {}
		/// <summary>fxch instruction.<br/>
		/// <br/>
		/// <c>FXCH ST(i)</c><br/>
		/// <br/>
		/// <c>D9 C8+i</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664102)]
public static void fxch(AssemblerRegisterST dst, AssemblerRegisterST src) {}
		/// <summary>fxrstor instruction.<br/>
		/// <br/>
		/// <c>FXRSTOR m512byte</c><br/>
		/// <br/>
		/// <c>NP 0F AE /1</c><br/>
		/// <br/>
		/// <c>FXSR</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664103)]
public static void fxrstor(AssemblerMemoryOperand dst) {}
		/// <summary>fxrstor64 instruction.<br/>
		/// <br/>
		/// <c>FXRSTOR64 m512byte</c><br/>
		/// <br/>
		/// <c>NP o64 0F AE /1</c><br/>
		/// <br/>
		/// <c>FXSR</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664104)]
public static void fxrstor64(AssemblerMemoryOperand dst) {}
		/// <summary>fxsave instruction.<br/>
		/// <br/>
		/// <c>FXSAVE m512byte</c><br/>
		/// <br/>
		/// <c>NP 0F AE /0</c><br/>
		/// <br/>
		/// <c>FXSR</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664105)]
public static void fxsave(AssemblerMemoryOperand dst) {}
		/// <summary>fxsave64 instruction.<br/>
		/// <br/>
		/// <c>FXSAVE64 m512byte</c><br/>
		/// <br/>
		/// <c>NP o64 0F AE /0</c><br/>
		/// <br/>
		/// <c>FXSR</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664106)]
public static void fxsave64(AssemblerMemoryOperand dst) {}
		/// <summary>fxtract instruction.<br/>
		/// <br/>
		/// <c>FXTRACT</c><br/>
		/// <br/>
		/// <c>D9 F4</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664107)]
public static void fxtract() {}
		/// <summary>fyl2x instruction.<br/>
		/// <br/>
		/// <c>FYL2X</c><br/>
		/// <br/>
		/// <c>D9 F1</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664108)]
public static void fyl2x() {}
		/// <summary>fyl2xp1 instruction.<br/>
		/// <br/>
		/// <c>FYL2XP1</c><br/>
		/// <br/>
		/// <c>D9 F9</c><br/>
		/// <br/>
		/// <c>8087+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664109)]
public static void fyl2xp1() {}
		/// <summary>getsec instruction.<br/>
		/// <br/>
		/// <c>GETSEC</c><br/>
		/// <br/>
		/// <c>NP 0F 37</c><br/>
		/// <br/>
		/// <c>SMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664110)]
public static void getsec() {}
		/// <summary>getsecq instruction.<br/>
		/// <br/>
		/// <c>GETSECQ</c><br/>
		/// <br/>
		/// <c>NP o64 0F 37</c><br/>
		/// <br/>
		/// <c>SMX</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664111)]
public static void getsecq() {}
		/// <summary>gf2p8affineinvqb instruction.<br/>
		/// <br/>
		/// <c>GF2P8AFFINEINVQB xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A CF /r ib</c><br/>
		/// <br/>
		/// <c>GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664112)]
public static void gf2p8affineinvqb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>gf2p8affineinvqb instruction.<br/>
		/// <br/>
		/// <c>GF2P8AFFINEINVQB xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A CF /r ib</c><br/>
		/// <br/>
		/// <c>GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664113)]
public static void gf2p8affineinvqb(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>gf2p8affineinvqb instruction.<br/>
		/// <br/>
		/// <c>GF2P8AFFINEINVQB xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A CF /r ib</c><br/>
		/// <br/>
		/// <c>GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664114)]
public static void gf2p8affineinvqb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>gf2p8affineinvqb instruction.<br/>
		/// <br/>
		/// <c>GF2P8AFFINEINVQB xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A CF /r ib</c><br/>
		/// <br/>
		/// <c>GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664115)]
public static void gf2p8affineinvqb(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>gf2p8affineqb instruction.<br/>
		/// <br/>
		/// <c>GF2P8AFFINEQB xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A CE /r ib</c><br/>
		/// <br/>
		/// <c>GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664116)]
public static void gf2p8affineqb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>gf2p8affineqb instruction.<br/>
		/// <br/>
		/// <c>GF2P8AFFINEQB xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A CE /r ib</c><br/>
		/// <br/>
		/// <c>GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664117)]
public static void gf2p8affineqb(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>gf2p8affineqb instruction.<br/>
		/// <br/>
		/// <c>GF2P8AFFINEQB xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A CE /r ib</c><br/>
		/// <br/>
		/// <c>GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664118)]
public static void gf2p8affineqb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>gf2p8affineqb instruction.<br/>
		/// <br/>
		/// <c>GF2P8AFFINEQB xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A CE /r ib</c><br/>
		/// <br/>
		/// <c>GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664119)]
public static void gf2p8affineqb(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>gf2p8mulb instruction.<br/>
		/// <br/>
		/// <c>GF2P8MULB xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 CF /r</c><br/>
		/// <br/>
		/// <c>GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664120)]
public static void gf2p8mulb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>gf2p8mulb instruction.<br/>
		/// <br/>
		/// <c>GF2P8MULB xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 CF /r</c><br/>
		/// <br/>
		/// <c>GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664121)]
public static void gf2p8mulb(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>haddpd instruction.<br/>
		/// <br/>
		/// <c>HADDPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 7C /r</c><br/>
		/// <br/>
		/// <c>SSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664122)]
public static void haddpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>haddpd instruction.<br/>
		/// <br/>
		/// <c>HADDPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 7C /r</c><br/>
		/// <br/>
		/// <c>SSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664123)]
public static void haddpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>haddps instruction.<br/>
		/// <br/>
		/// <c>HADDPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>F2 0F 7C /r</c><br/>
		/// <br/>
		/// <c>SSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664124)]
public static void haddps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>haddps instruction.<br/>
		/// <br/>
		/// <c>HADDPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>F2 0F 7C /r</c><br/>
		/// <br/>
		/// <c>SSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664125)]
public static void haddps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>hlt instruction.<br/>
		/// <br/>
		/// <c>HLT</c><br/>
		/// <br/>
		/// <c>F4</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664126)]
public static void hlt() {}
		/// <summary>hreset instruction.<br/>
		/// <br/>
		/// <c>HRESET imm8, &lt;EAX&gt;</c><br/>
		/// <br/>
		/// <c>F3 0F 3A F0 C0 ib</c><br/>
		/// <br/>
		/// <c>HRESET</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664127)]
public static void hreset(sbyte imm) {}
		/// <summary>hreset instruction.<br/>
		/// <br/>
		/// <c>HRESET imm8, &lt;EAX&gt;</c><br/>
		/// <br/>
		/// <c>F3 0F 3A F0 C0 ib</c><br/>
		/// <br/>
		/// <c>HRESET</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664128)]
public static void hreset(byte imm) {}
		/// <summary>hsubpd instruction.<br/>
		/// <br/>
		/// <c>HSUBPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 7D /r</c><br/>
		/// <br/>
		/// <c>SSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664129)]
public static void hsubpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>hsubpd instruction.<br/>
		/// <br/>
		/// <c>HSUBPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 7D /r</c><br/>
		/// <br/>
		/// <c>SSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664130)]
public static void hsubpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>hsubps instruction.<br/>
		/// <br/>
		/// <c>HSUBPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>F2 0F 7D /r</c><br/>
		/// <br/>
		/// <c>SSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664131)]
public static void hsubps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>hsubps instruction.<br/>
		/// <br/>
		/// <c>HSUBPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>F2 0F 7D /r</c><br/>
		/// <br/>
		/// <c>SSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664132)]
public static void hsubps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>ibts instruction.<br/>
		/// <br/>
		/// <c>IBTS r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 0F A7 /r</c><br/>
		/// <br/>
		/// <c>386 A0</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664133)]
public static void ibts(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>ibts instruction.<br/>
		/// <br/>
		/// <c>IBTS r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 0F A7 /r</c><br/>
		/// <br/>
		/// <c>386 A0</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664134)]
public static void ibts(AssemblerMemoryOperand dst, AssemblerRegister16 src) {}
		/// <summary>ibts instruction.<br/>
		/// <br/>
		/// <c>IBTS r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 0F A7 /r</c><br/>
		/// <br/>
		/// <c>386 A0</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664135)]
public static void ibts(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>ibts instruction.<br/>
		/// <br/>
		/// <c>IBTS r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 0F A7 /r</c><br/>
		/// <br/>
		/// <c>386 A0</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664136)]
public static void ibts(AssemblerMemoryOperand dst, AssemblerRegister32 src) {}
		/// <summary>idiv instruction.<br/>
		/// <br/>
		/// <c>IDIV r/m8</c><br/>
		/// <br/>
		/// <c>F6 /7</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664137)]
public static void idiv(AssemblerRegister8 dst) {}
		/// <summary>idiv instruction.<br/>
		/// <br/>
		/// <c>IDIV r/m16</c><br/>
		/// <br/>
		/// <c>o16 F7 /7</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664138)]
public static void idiv(AssemblerRegister16 dst) {}
		/// <summary>idiv instruction.<br/>
		/// <br/>
		/// <c>IDIV r/m32</c><br/>
		/// <br/>
		/// <c>o32 F7 /7</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664139)]
public static void idiv(AssemblerRegister32 dst) {}
		/// <summary>idiv instruction.<br/>
		/// <br/>
		/// <c>IDIV r/m64</c><br/>
		/// <br/>
		/// <c>o64 F7 /7</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664140)]
public static void idiv(AssemblerRegister64 dst) {}
		/// <summary>idiv instruction.<br/>
		/// <br/>
		/// <c>IDIV r/m64</c><br/>
		/// <br/>
		/// <c>o64 F7 /7</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>IDIV r/m32</c><br/>
		/// <br/>
		/// <c>o32 F7 /7</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>IDIV r/m16</c><br/>
		/// <br/>
		/// <c>o16 F7 /7</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>IDIV r/m8</c><br/>
		/// <br/>
		/// <c>F6 /7</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664141)]
public static void idiv(AssemblerMemoryOperand dst) {}
		/// <summary>imul instruction.<br/>
		/// <br/>
		/// <c>IMUL r/m8</c><br/>
		/// <br/>
		/// <c>F6 /5</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664142)]
public static void imul(AssemblerRegister8 dst) {}
		/// <summary>imul instruction.<br/>
		/// <br/>
		/// <c>IMUL r/m16</c><br/>
		/// <br/>
		/// <c>o16 F7 /5</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664143)]
public static void imul(AssemblerRegister16 dst) {}
		/// <summary>imul instruction.<br/>
		/// <br/>
		/// <c>IMUL r/m32</c><br/>
		/// <br/>
		/// <c>o32 F7 /5</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664144)]
public static void imul(AssemblerRegister32 dst) {}
		/// <summary>imul instruction.<br/>
		/// <br/>
		/// <c>IMUL r/m64</c><br/>
		/// <br/>
		/// <c>o64 F7 /5</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664145)]
public static void imul(AssemblerRegister64 dst) {}
		/// <summary>imul instruction.<br/>
		/// <br/>
		/// <c>IMUL r/m64</c><br/>
		/// <br/>
		/// <c>o64 F7 /5</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>IMUL r/m32</c><br/>
		/// <br/>
		/// <c>o32 F7 /5</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>IMUL r/m16</c><br/>
		/// <br/>
		/// <c>o16 F7 /5</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>IMUL r/m8</c><br/>
		/// <br/>
		/// <c>F6 /5</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664146)]
public static void imul(AssemblerMemoryOperand dst) {}
		/// <summary>imul instruction.<br/>
		/// <br/>
		/// <c>IMUL r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F AF /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664147)]
public static void imul(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>imul instruction.<br/>
		/// <br/>
		/// <c>IMUL r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F AF /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664148)]
public static void imul(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>imul instruction.<br/>
		/// <br/>
		/// <c>IMUL r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F AF /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664149)]
public static void imul(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>imul instruction.<br/>
		/// <br/>
		/// <c>IMUL r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F AF /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664150)]
public static void imul(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>imul instruction.<br/>
		/// <br/>
		/// <c>IMUL r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F AF /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664151)]
public static void imul(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>imul instruction.<br/>
		/// <br/>
		/// <c>IMUL r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F AF /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664152)]
public static void imul(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>imul instruction.<br/>
		/// <br/>
		/// <c>IMUL r16, r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 69 /r iw</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>IMUL r16, r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 6B /r ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664153)]
public static void imul(AssemblerRegister16 dst, AssemblerRegister16 src1, short imm) {}
		/// <summary>imul instruction.<br/>
		/// <br/>
		/// <c>IMUL r32, r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 69 /r id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>IMUL r32, r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 6B /r ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664154)]
public static void imul(AssemblerRegister32 dst, AssemblerRegister32 src1, int imm) {}
		/// <summary>imul instruction.<br/>
		/// <br/>
		/// <c>IMUL r64, r/m64, imm32</c><br/>
		/// <br/>
		/// <c>o64 69 /r id</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>IMUL r64, r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 6B /r ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664155)]
public static void imul(AssemblerRegister64 dst, AssemblerRegister64 src1, int imm) {}
		/// <summary>imul instruction.<br/>
		/// <br/>
		/// <c>IMUL r16, r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 69 /r iw</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>IMUL r16, r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 6B /r ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664156)]
public static void imul(AssemblerRegister16 dst, AssemblerMemoryOperand src1, short imm) {}
		/// <summary>imul instruction.<br/>
		/// <br/>
		/// <c>IMUL r32, r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 69 /r id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>IMUL r32, r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 6B /r ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664157)]
public static void imul(AssemblerRegister32 dst, AssemblerMemoryOperand src1, int imm) {}
		/// <summary>imul instruction.<br/>
		/// <br/>
		/// <c>IMUL r64, r/m64, imm32</c><br/>
		/// <br/>
		/// <c>o64 69 /r id</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>IMUL r64, r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 6B /r ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664158)]
public static void imul(AssemblerRegister64 dst, AssemblerMemoryOperand src1, int imm) {}
		/// <summary>imul instruction.<br/>
		/// <br/>
		/// <c>IMUL r16, r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 69 /r iw</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>IMUL r16, r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 6B /r ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664159)]
public static void imul(AssemblerRegister16 dst, AssemblerRegister16 src1, ushort imm) {}
		/// <summary>imul instruction.<br/>
		/// <br/>
		/// <c>IMUL r32, r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 69 /r id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>IMUL r32, r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 6B /r ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664160)]
public static void imul(AssemblerRegister32 dst, AssemblerRegister32 src1, uint imm) {}
		/// <summary>imul instruction.<br/>
		/// <br/>
		/// <c>IMUL r16, r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 69 /r iw</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>IMUL r16, r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 6B /r ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664161)]
public static void imul(AssemblerRegister16 dst, AssemblerMemoryOperand src1, ushort imm) {}
		/// <summary>imul instruction.<br/>
		/// <br/>
		/// <c>IMUL r32, r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 69 /r id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>IMUL r32, r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 6B /r ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664162)]
public static void imul(AssemblerRegister32 dst, AssemblerMemoryOperand src1, uint imm) {}
		/// <summary>in instruction.<br/>
		/// <br/>
		/// <c>IN AL, DX</c><br/>
		/// <br/>
		/// <c>EC</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664163)]
public static void @in(AssemblerRegister8 dst, AssemblerRegister16 src) {}
		/// <summary>in instruction.<br/>
		/// <br/>
		/// <c>IN AX, DX</c><br/>
		/// <br/>
		/// <c>o16 ED</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664164)]
public static void @in(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>in instruction.<br/>
		/// <br/>
		/// <c>IN EAX, DX</c><br/>
		/// <br/>
		/// <c>o32 ED</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664165)]
public static void @in(AssemblerRegister32 dst, AssemblerRegister16 src) {}
		/// <summary>in instruction.<br/>
		/// <br/>
		/// <c>IN AL, imm8</c><br/>
		/// <br/>
		/// <c>E4 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664166)]
public static void @in(AssemblerRegister8 dst, sbyte imm) {}
		/// <summary>in instruction.<br/>
		/// <br/>
		/// <c>IN AX, imm8</c><br/>
		/// <br/>
		/// <c>o16 E5 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664167)]
public static void @in(AssemblerRegister16 dst, sbyte imm) {}
		/// <summary>in instruction.<br/>
		/// <br/>
		/// <c>IN EAX, imm8</c><br/>
		/// <br/>
		/// <c>o32 E5 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664168)]
public static void @in(AssemblerRegister32 dst, sbyte imm) {}
		/// <summary>in instruction.<br/>
		/// <br/>
		/// <c>IN AL, imm8</c><br/>
		/// <br/>
		/// <c>E4 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664169)]
public static void @in(AssemblerRegister8 dst, byte imm) {}
		/// <summary>in instruction.<br/>
		/// <br/>
		/// <c>IN AX, imm8</c><br/>
		/// <br/>
		/// <c>o16 E5 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664170)]
public static void @in(AssemblerRegister16 dst, byte imm) {}
		/// <summary>in instruction.<br/>
		/// <br/>
		/// <c>IN EAX, imm8</c><br/>
		/// <br/>
		/// <c>o32 E5 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664171)]
public static void @in(AssemblerRegister32 dst, byte imm) {}
		/// <summary>inc instruction.<br/>
		/// <br/>
		/// <c>INC r/m8</c><br/>
		/// <br/>
		/// <c>FE /0</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664172)]
public static void inc(AssemblerRegister8 dst) {}
		/// <summary>inc instruction.<br/>
		/// <br/>
		/// <c>INC r/m16</c><br/>
		/// <br/>
		/// <c>o16 FF /0</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>INC r16</c><br/>
		/// <br/>
		/// <c>o16 40+rw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664173)]
public static void inc(AssemblerRegister16 dst) {}
		/// <summary>inc instruction.<br/>
		/// <br/>
		/// <c>INC r/m32</c><br/>
		/// <br/>
		/// <c>o32 FF /0</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>INC r32</c><br/>
		/// <br/>
		/// <c>o32 40+rd</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664174)]
public static void inc(AssemblerRegister32 dst) {}
		/// <summary>inc instruction.<br/>
		/// <br/>
		/// <c>INC r/m64</c><br/>
		/// <br/>
		/// <c>o64 FF /0</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664175)]
public static void inc(AssemblerRegister64 dst) {}
		/// <summary>inc instruction.<br/>
		/// <br/>
		/// <c>INC r/m64</c><br/>
		/// <br/>
		/// <c>o64 FF /0</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>INC r/m32</c><br/>
		/// <br/>
		/// <c>o32 FF /0</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>INC r/m16</c><br/>
		/// <br/>
		/// <c>o16 FF /0</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>INC r/m8</c><br/>
		/// <br/>
		/// <c>FE /0</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664176)]
public static void inc(AssemblerMemoryOperand dst) {}
		/// <summary>incsspd instruction.<br/>
		/// <br/>
		/// <c>INCSSPD r32</c><br/>
		/// <br/>
		/// <c>F3 0F AE /5</c><br/>
		/// <br/>
		/// <c>CET_SS</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664177)]
public static void incsspd(AssemblerRegister32 dst) {}
		/// <summary>incsspq instruction.<br/>
		/// <br/>
		/// <c>INCSSPQ r64</c><br/>
		/// <br/>
		/// <c>F3 o64 0F AE /5</c><br/>
		/// <br/>
		/// <c>CET_SS</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664178)]
public static void incsspq(AssemblerRegister64 dst) {}
		/// <summary>insb instruction.<br/>
		/// <br/>
		/// <c>INSB</c><br/>
		/// <br/>
		/// <c>6C</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664179)]
public static void insb() {}
		/// <summary>insd instruction.<br/>
		/// <br/>
		/// <c>INSD</c><br/>
		/// <br/>
		/// <c>o32 6D</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664180)]
public static void insd() {}
		/// <summary>insertps instruction.<br/>
		/// <br/>
		/// <c>INSERTPS xmm1, xmm2/m32, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 21 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664181)]
public static void insertps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>insertps instruction.<br/>
		/// <br/>
		/// <c>INSERTPS xmm1, xmm2/m32, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 21 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664182)]
public static void insertps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>insertps instruction.<br/>
		/// <br/>
		/// <c>INSERTPS xmm1, xmm2/m32, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 21 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664183)]
public static void insertps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>insertps instruction.<br/>
		/// <br/>
		/// <c>INSERTPS xmm1, xmm2/m32, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 21 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664184)]
public static void insertps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>insertq instruction.<br/>
		/// <br/>
		/// <c>INSERTQ xmm1, xmm2</c><br/>
		/// <br/>
		/// <c>F2 0F 79 /r</c><br/>
		/// <br/>
		/// <c>SSE4A</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664185)]
public static void insertq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>insertq instruction.<br/>
		/// <br/>
		/// <c>INSERTQ xmm1, xmm2, imm8, imm8</c><br/>
		/// <br/>
		/// <c>F2 0F 78 /r ib ib</c><br/>
		/// <br/>
		/// <c>SSE4A</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664186)]
public static void insertq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm, sbyte imm1) {}
		/// <summary>insertq instruction.<br/>
		/// <br/>
		/// <c>INSERTQ xmm1, xmm2, imm8, imm8</c><br/>
		/// <br/>
		/// <c>F2 0F 78 /r ib ib</c><br/>
		/// <br/>
		/// <c>SSE4A</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664187)]
public static void insertq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm, byte imm1) {}
		/// <summary>insw instruction.<br/>
		/// <br/>
		/// <c>INSW</c><br/>
		/// <br/>
		/// <c>o16 6D</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664188)]
public static void insw() {}
		/// <summary>int instruction.<br/>
		/// <br/>
		/// <c>INT imm8</c><br/>
		/// <br/>
		/// <c>CD ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664189)]
public static void @int(sbyte imm) {}
		/// <summary>int instruction.<br/>
		/// <br/>
		/// <c>INT imm8</c><br/>
		/// <br/>
		/// <c>CD ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664190)]
public static void @int(byte imm) {}
		/// <summary>int1 instruction.<br/>
		/// <br/>
		/// <c>INT1</c><br/>
		/// <br/>
		/// <c>F1</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664191)]
public static void int1() {}
		/// <summary>int3 instruction.<br/>
		/// <br/>
		/// <c>INT3</c><br/>
		/// <br/>
		/// <c>CC</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664192)]
public static void int3() {}
		/// <summary>into instruction.<br/>
		/// <br/>
		/// <c>INTO</c><br/>
		/// <br/>
		/// <c>CE</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664193)]
public static void into() {}
		/// <summary>invd instruction.<br/>
		/// <br/>
		/// <c>INVD</c><br/>
		/// <br/>
		/// <c>0F 08</c><br/>
		/// <br/>
		/// <c>486+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664194)]
public static void invd() {}
		/// <summary>invept instruction.<br/>
		/// <br/>
		/// <c>INVEPT r32, m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 80 /r</c><br/>
		/// <br/>
		/// <c>VMX and IA32_VMX_EPT_VPID_CAP[bit 20]</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664195)]
public static void invept(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>invept instruction.<br/>
		/// <br/>
		/// <c>INVEPT r64, m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 80 /r</c><br/>
		/// <br/>
		/// <c>VMX and IA32_VMX_EPT_VPID_CAP[bit 20]</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664196)]
public static void invept(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>invlpg instruction.<br/>
		/// <br/>
		/// <c>INVLPG m</c><br/>
		/// <br/>
		/// <c>0F 01 /7</c><br/>
		/// <br/>
		/// <c>486+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664197)]
public static void invlpg(AssemblerMemoryOperand dst) {}
		/// <summary>invlpga instruction.<br/>
		/// <br/>
		/// <c>INVLPGA</c><br/>
		/// <br/>
		/// <c>a64 0F 01 DF</c><br/>
		/// <br/>
		/// <c>SVM</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>INVLPGA</c><br/>
		/// <br/>
		/// <c>a32 0F 01 DF</c><br/>
		/// <br/>
		/// <c>SVM</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>INVLPGA</c><br/>
		/// <br/>
		/// <c>a16 0F 01 DF</c><br/>
		/// <br/>
		/// <c>SVM</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664198)]
public static void invlpga() {}
		/// <summary>invlpgb instruction.<br/>
		/// <br/>
		/// <c>INVLPGB</c><br/>
		/// <br/>
		/// <c>a64 NP 0F 01 FE</c><br/>
		/// <br/>
		/// <c>INVLPGB</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>INVLPGB</c><br/>
		/// <br/>
		/// <c>a32 NP 0F 01 FE</c><br/>
		/// <br/>
		/// <c>INVLPGB</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>INVLPGB</c><br/>
		/// <br/>
		/// <c>a16 NP 0F 01 FE</c><br/>
		/// <br/>
		/// <c>INVLPGB</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664199)]
public static void invlpgb() {}
		/// <summary>invpcid instruction.<br/>
		/// <br/>
		/// <c>INVPCID r32, m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 82 /r</c><br/>
		/// <br/>
		/// <c>INVPCID</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664200)]
public static void invpcid(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>invpcid instruction.<br/>
		/// <br/>
		/// <c>INVPCID r64, m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 82 /r</c><br/>
		/// <br/>
		/// <c>INVPCID</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664201)]
public static void invpcid(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>invvpid instruction.<br/>
		/// <br/>
		/// <c>INVVPID r32, m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 81 /r</c><br/>
		/// <br/>
		/// <c>VMX and IA32_VMX_EPT_VPID_CAP[bit 32]</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664202)]
public static void invvpid(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>invvpid instruction.<br/>
		/// <br/>
		/// <c>INVVPID r64, m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 81 /r</c><br/>
		/// <br/>
		/// <c>VMX and IA32_VMX_EPT_VPID_CAP[bit 32]</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664203)]
public static void invvpid(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>iret instruction.<br/>
		/// <br/>
		/// <c>IRET</c><br/>
		/// <br/>
		/// <c>o16 CF</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664204)]
public static void iret() {}
		/// <summary>iretd instruction.<br/>
		/// <br/>
		/// <c>IRETD</c><br/>
		/// <br/>
		/// <c>o32 CF</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664205)]
public static void iretd() {}
		/// <summary>iretq instruction.<br/>
		/// <br/>
		/// <c>IRETQ</c><br/>
		/// <br/>
		/// <c>o64 CF</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664206)]
public static void iretq() {}
		/// <summary>ja instruction.<br/>
		/// <br/>
		/// <c>JA rel8</c><br/>
		/// <br/>
		/// <c>o64 77 cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JA rel32</c><br/>
		/// <br/>
		/// <c>o64 0F 87 cd</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JA rel8</c><br/>
		/// <br/>
		/// <c>o32 77 cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JA rel32</c><br/>
		/// <br/>
		/// <c>o32 0F 87 cd</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JA rel8</c><br/>
		/// <br/>
		/// <c>o16 77 cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>JA rel16</c><br/>
		/// <br/>
		/// <c>o16 0F 87 cw</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664207)]
public static void ja(Label dst) {}
		/// <summary>ja instruction.<br/>
		/// <br/>
		/// <c>JA rel8</c><br/>
		/// <br/>
		/// <c>o64 77 cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JA rel32</c><br/>
		/// <br/>
		/// <c>o64 0F 87 cd</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JA rel8</c><br/>
		/// <br/>
		/// <c>o32 77 cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JA rel32</c><br/>
		/// <br/>
		/// <c>o32 0F 87 cd</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JA rel8</c><br/>
		/// <br/>
		/// <c>o16 77 cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>JA rel16</c><br/>
		/// <br/>
		/// <c>o16 0F 87 cw</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664208)]
public static void ja(ulong dst) {}
		/// <summary>jae instruction.<br/>
		/// <br/>
		/// <c>JAE rel8</c><br/>
		/// <br/>
		/// <c>o64 73 cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JAE rel32</c><br/>
		/// <br/>
		/// <c>o64 0F 83 cd</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JAE rel8</c><br/>
		/// <br/>
		/// <c>o32 73 cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JAE rel32</c><br/>
		/// <br/>
		/// <c>o32 0F 83 cd</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JAE rel8</c><br/>
		/// <br/>
		/// <c>o16 73 cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>JAE rel16</c><br/>
		/// <br/>
		/// <c>o16 0F 83 cw</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664209)]
public static void jae(Label dst) {}
		/// <summary>jae instruction.<br/>
		/// <br/>
		/// <c>JAE rel8</c><br/>
		/// <br/>
		/// <c>o64 73 cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JAE rel32</c><br/>
		/// <br/>
		/// <c>o64 0F 83 cd</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JAE rel8</c><br/>
		/// <br/>
		/// <c>o32 73 cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JAE rel32</c><br/>
		/// <br/>
		/// <c>o32 0F 83 cd</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JAE rel8</c><br/>
		/// <br/>
		/// <c>o16 73 cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>JAE rel16</c><br/>
		/// <br/>
		/// <c>o16 0F 83 cw</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664210)]
public static void jae(ulong dst) {}
		/// <summary>jb instruction.<br/>
		/// <br/>
		/// <c>JB rel8</c><br/>
		/// <br/>
		/// <c>o64 72 cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JB rel32</c><br/>
		/// <br/>
		/// <c>o64 0F 82 cd</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JB rel8</c><br/>
		/// <br/>
		/// <c>o32 72 cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JB rel32</c><br/>
		/// <br/>
		/// <c>o32 0F 82 cd</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JB rel8</c><br/>
		/// <br/>
		/// <c>o16 72 cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>JB rel16</c><br/>
		/// <br/>
		/// <c>o16 0F 82 cw</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664211)]
public static void jb(Label dst) {}
		/// <summary>jb instruction.<br/>
		/// <br/>
		/// <c>JB rel8</c><br/>
		/// <br/>
		/// <c>o64 72 cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JB rel32</c><br/>
		/// <br/>
		/// <c>o64 0F 82 cd</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JB rel8</c><br/>
		/// <br/>
		/// <c>o32 72 cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JB rel32</c><br/>
		/// <br/>
		/// <c>o32 0F 82 cd</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JB rel8</c><br/>
		/// <br/>
		/// <c>o16 72 cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>JB rel16</c><br/>
		/// <br/>
		/// <c>o16 0F 82 cw</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664212)]
public static void jb(ulong dst) {}
		/// <summary>jbe instruction.<br/>
		/// <br/>
		/// <c>JBE rel8</c><br/>
		/// <br/>
		/// <c>o64 76 cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JBE rel32</c><br/>
		/// <br/>
		/// <c>o64 0F 86 cd</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JBE rel8</c><br/>
		/// <br/>
		/// <c>o32 76 cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JBE rel32</c><br/>
		/// <br/>
		/// <c>o32 0F 86 cd</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JBE rel8</c><br/>
		/// <br/>
		/// <c>o16 76 cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>JBE rel16</c><br/>
		/// <br/>
		/// <c>o16 0F 86 cw</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664213)]
public static void jbe(Label dst) {}
		/// <summary>jbe instruction.<br/>
		/// <br/>
		/// <c>JBE rel8</c><br/>
		/// <br/>
		/// <c>o64 76 cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JBE rel32</c><br/>
		/// <br/>
		/// <c>o64 0F 86 cd</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JBE rel8</c><br/>
		/// <br/>
		/// <c>o32 76 cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JBE rel32</c><br/>
		/// <br/>
		/// <c>o32 0F 86 cd</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JBE rel8</c><br/>
		/// <br/>
		/// <c>o16 76 cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>JBE rel16</c><br/>
		/// <br/>
		/// <c>o16 0F 86 cw</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664214)]
public static void jbe(ulong dst) {}
		/// <summary>jcxz instruction.<br/>
		/// <br/>
		/// <c>JCXZ rel8</c><br/>
		/// <br/>
		/// <c>a16 o16 E3 cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664215)]
public static void jcxz(Label dst) {}
		/// <summary>jcxz instruction.<br/>
		/// <br/>
		/// <c>JCXZ rel8</c><br/>
		/// <br/>
		/// <c>a16 o16 E3 cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664216)]
public static void jcxz(ulong dst) {}
		/// <summary>je instruction.<br/>
		/// <br/>
		/// <c>JE rel8</c><br/>
		/// <br/>
		/// <c>o64 74 cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JE rel32</c><br/>
		/// <br/>
		/// <c>o64 0F 84 cd</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JE rel8</c><br/>
		/// <br/>
		/// <c>o32 74 cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JE rel32</c><br/>
		/// <br/>
		/// <c>o32 0F 84 cd</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JE rel8</c><br/>
		/// <br/>
		/// <c>o16 74 cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>JE rel16</c><br/>
		/// <br/>
		/// <c>o16 0F 84 cw</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664217)]
public static void je(Label dst) {}
		/// <summary>je instruction.<br/>
		/// <br/>
		/// <c>JE rel8</c><br/>
		/// <br/>
		/// <c>o64 74 cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JE rel32</c><br/>
		/// <br/>
		/// <c>o64 0F 84 cd</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JE rel8</c><br/>
		/// <br/>
		/// <c>o32 74 cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JE rel32</c><br/>
		/// <br/>
		/// <c>o32 0F 84 cd</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JE rel8</c><br/>
		/// <br/>
		/// <c>o16 74 cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>JE rel16</c><br/>
		/// <br/>
		/// <c>o16 0F 84 cw</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664218)]
public static void je(ulong dst) {}
		/// <summary>jecxz instruction.<br/>
		/// <br/>
		/// <c>JECXZ rel8</c><br/>
		/// <br/>
		/// <c>a32 o32 E3 cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664219)]
public static void jecxz(Label dst) {}
		/// <summary>jecxz instruction.<br/>
		/// <br/>
		/// <c>JECXZ rel8</c><br/>
		/// <br/>
		/// <c>a32 o32 E3 cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664220)]
public static void jecxz(ulong dst) {}
		/// <summary>jg instruction.<br/>
		/// <br/>
		/// <c>JG rel8</c><br/>
		/// <br/>
		/// <c>o64 7F cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JG rel32</c><br/>
		/// <br/>
		/// <c>o64 0F 8F cd</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JG rel8</c><br/>
		/// <br/>
		/// <c>o32 7F cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JG rel32</c><br/>
		/// <br/>
		/// <c>o32 0F 8F cd</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JG rel8</c><br/>
		/// <br/>
		/// <c>o16 7F cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>JG rel16</c><br/>
		/// <br/>
		/// <c>o16 0F 8F cw</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664221)]
public static void jg(Label dst) {}
		/// <summary>jg instruction.<br/>
		/// <br/>
		/// <c>JG rel8</c><br/>
		/// <br/>
		/// <c>o64 7F cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JG rel32</c><br/>
		/// <br/>
		/// <c>o64 0F 8F cd</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JG rel8</c><br/>
		/// <br/>
		/// <c>o32 7F cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JG rel32</c><br/>
		/// <br/>
		/// <c>o32 0F 8F cd</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JG rel8</c><br/>
		/// <br/>
		/// <c>o16 7F cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>JG rel16</c><br/>
		/// <br/>
		/// <c>o16 0F 8F cw</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664222)]
public static void jg(ulong dst) {}
		/// <summary>jge instruction.<br/>
		/// <br/>
		/// <c>JGE rel8</c><br/>
		/// <br/>
		/// <c>o64 7D cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JGE rel32</c><br/>
		/// <br/>
		/// <c>o64 0F 8D cd</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JGE rel8</c><br/>
		/// <br/>
		/// <c>o32 7D cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JGE rel32</c><br/>
		/// <br/>
		/// <c>o32 0F 8D cd</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JGE rel8</c><br/>
		/// <br/>
		/// <c>o16 7D cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>JGE rel16</c><br/>
		/// <br/>
		/// <c>o16 0F 8D cw</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664223)]
public static void jge(Label dst) {}
		/// <summary>jge instruction.<br/>
		/// <br/>
		/// <c>JGE rel8</c><br/>
		/// <br/>
		/// <c>o64 7D cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JGE rel32</c><br/>
		/// <br/>
		/// <c>o64 0F 8D cd</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JGE rel8</c><br/>
		/// <br/>
		/// <c>o32 7D cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JGE rel32</c><br/>
		/// <br/>
		/// <c>o32 0F 8D cd</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JGE rel8</c><br/>
		/// <br/>
		/// <c>o16 7D cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>JGE rel16</c><br/>
		/// <br/>
		/// <c>o16 0F 8D cw</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664224)]
public static void jge(ulong dst) {}
		/// <summary>jl instruction.<br/>
		/// <br/>
		/// <c>JL rel8</c><br/>
		/// <br/>
		/// <c>o64 7C cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JL rel32</c><br/>
		/// <br/>
		/// <c>o64 0F 8C cd</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JL rel8</c><br/>
		/// <br/>
		/// <c>o32 7C cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JL rel32</c><br/>
		/// <br/>
		/// <c>o32 0F 8C cd</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JL rel8</c><br/>
		/// <br/>
		/// <c>o16 7C cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>JL rel16</c><br/>
		/// <br/>
		/// <c>o16 0F 8C cw</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664225)]
public static void jl(Label dst) {}
		/// <summary>jl instruction.<br/>
		/// <br/>
		/// <c>JL rel8</c><br/>
		/// <br/>
		/// <c>o64 7C cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JL rel32</c><br/>
		/// <br/>
		/// <c>o64 0F 8C cd</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JL rel8</c><br/>
		/// <br/>
		/// <c>o32 7C cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JL rel32</c><br/>
		/// <br/>
		/// <c>o32 0F 8C cd</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JL rel8</c><br/>
		/// <br/>
		/// <c>o16 7C cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>JL rel16</c><br/>
		/// <br/>
		/// <c>o16 0F 8C cw</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664226)]
public static void jl(ulong dst) {}
		/// <summary>jle instruction.<br/>
		/// <br/>
		/// <c>JLE rel8</c><br/>
		/// <br/>
		/// <c>o64 7E cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JLE rel32</c><br/>
		/// <br/>
		/// <c>o64 0F 8E cd</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JLE rel8</c><br/>
		/// <br/>
		/// <c>o32 7E cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JLE rel32</c><br/>
		/// <br/>
		/// <c>o32 0F 8E cd</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JLE rel8</c><br/>
		/// <br/>
		/// <c>o16 7E cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>JLE rel16</c><br/>
		/// <br/>
		/// <c>o16 0F 8E cw</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664227)]
public static void jle(Label dst) {}
		/// <summary>jle instruction.<br/>
		/// <br/>
		/// <c>JLE rel8</c><br/>
		/// <br/>
		/// <c>o64 7E cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JLE rel32</c><br/>
		/// <br/>
		/// <c>o64 0F 8E cd</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JLE rel8</c><br/>
		/// <br/>
		/// <c>o32 7E cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JLE rel32</c><br/>
		/// <br/>
		/// <c>o32 0F 8E cd</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JLE rel8</c><br/>
		/// <br/>
		/// <c>o16 7E cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>JLE rel16</c><br/>
		/// <br/>
		/// <c>o16 0F 8E cw</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664228)]
public static void jle(ulong dst) {}
		/// <summary>jmp instruction.<br/>
		/// <br/>
		/// <c>JMP r/m16</c><br/>
		/// <br/>
		/// <c>o16 FF /4</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664229)]
public static void jmp(AssemblerRegister16 dst) {}
		/// <summary>jmp instruction.<br/>
		/// <br/>
		/// <c>JMP r/m32</c><br/>
		/// <br/>
		/// <c>o32 FF /4</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664230)]
public static void jmp(AssemblerRegister32 dst) {}
		/// <summary>jmp instruction.<br/>
		/// <br/>
		/// <c>JMP r/m64</c><br/>
		/// <br/>
		/// <c>o64 FF /4</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664231)]
public static void jmp(AssemblerRegister64 dst) {}
		/// <summary>jmp instruction.<br/>
		/// <br/>
		/// <c>JMP m16:64</c><br/>
		/// <br/>
		/// <c>o64 FF /5</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JMP r/m64</c><br/>
		/// <br/>
		/// <c>o64 FF /4</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JMP m16:32</c><br/>
		/// <br/>
		/// <c>o32 FF /5</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>JMP r/m32</c><br/>
		/// <br/>
		/// <c>o32 FF /4</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JMP m16:16</c><br/>
		/// <br/>
		/// <c>o16 FF /5</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>JMP r/m16</c><br/>
		/// <br/>
		/// <c>o16 FF /4</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664232)]
public static void jmp(AssemblerMemoryOperand dst) {}
		/// <summary>jmp instruction.<br/>
		/// <br/>
		/// <c>JMP rel32</c><br/>
		/// <br/>
		/// <c>o64 E9 cd</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JMP rel8</c><br/>
		/// <br/>
		/// <c>o64 EB cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JMP rel32</c><br/>
		/// <br/>
		/// <c>o32 E9 cd</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JMP rel8</c><br/>
		/// <br/>
		/// <c>o32 EB cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JMP rel16</c><br/>
		/// <br/>
		/// <c>o16 E9 cw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>JMP rel8</c><br/>
		/// <br/>
		/// <c>o16 EB cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664233)]
public static void jmp(Label dst) {}
		/// <summary>jmp instruction.<br/>
		/// <br/>
		/// <c>JMP rel32</c><br/>
		/// <br/>
		/// <c>o64 E9 cd</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JMP rel8</c><br/>
		/// <br/>
		/// <c>o64 EB cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JMP rel32</c><br/>
		/// <br/>
		/// <c>o32 E9 cd</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JMP rel8</c><br/>
		/// <br/>
		/// <c>o32 EB cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JMP rel16</c><br/>
		/// <br/>
		/// <c>o16 E9 cw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>JMP rel8</c><br/>
		/// <br/>
		/// <c>o16 EB cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664234)]
public static void jmp(ulong dst) {}
		/// <summary>jmpe instruction.<br/>
		/// <br/>
		/// <c>JMPE r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 00 /6</c><br/>
		/// <br/>
		/// <c>IA-64</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664235)]
public static void jmpe(AssemblerRegister16 dst) {}
		/// <summary>jmpe instruction.<br/>
		/// <br/>
		/// <c>JMPE r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F 00 /6</c><br/>
		/// <br/>
		/// <c>IA-64</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664236)]
public static void jmpe(AssemblerRegister32 dst) {}
		/// <summary>jmpe instruction.<br/>
		/// <br/>
		/// <c>JMPE r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F 00 /6</c><br/>
		/// <br/>
		/// <c>IA-64</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JMPE r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 00 /6</c><br/>
		/// <br/>
		/// <c>IA-64</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664237)]
public static void jmpe(AssemblerMemoryOperand dst) {}
		/// <summary>jmpe instruction.<br/>
		/// <br/>
		/// <c>JMPE disp32</c><br/>
		/// <br/>
		/// <c>o32 0F B8 cd</c><br/>
		/// <br/>
		/// <c>IA-64</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JMPE disp16</c><br/>
		/// <br/>
		/// <c>o16 0F B8 cw</c><br/>
		/// <br/>
		/// <c>IA-64</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664238)]
public static void jmpe(Label dst) {}
		/// <summary>jmpe instruction.<br/>
		/// <br/>
		/// <c>JMPE disp32</c><br/>
		/// <br/>
		/// <c>o32 0F B8 cd</c><br/>
		/// <br/>
		/// <c>IA-64</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JMPE disp16</c><br/>
		/// <br/>
		/// <c>o16 0F B8 cw</c><br/>
		/// <br/>
		/// <c>IA-64</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664239)]
public static void jmpe(ulong dst) {}
		/// <summary>jne instruction.<br/>
		/// <br/>
		/// <c>JNE rel8</c><br/>
		/// <br/>
		/// <c>o64 75 cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JNE rel32</c><br/>
		/// <br/>
		/// <c>o64 0F 85 cd</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JNE rel8</c><br/>
		/// <br/>
		/// <c>o32 75 cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JNE rel32</c><br/>
		/// <br/>
		/// <c>o32 0F 85 cd</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JNE rel8</c><br/>
		/// <br/>
		/// <c>o16 75 cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>JNE rel16</c><br/>
		/// <br/>
		/// <c>o16 0F 85 cw</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664240)]
public static void jne(Label dst) {}
		/// <summary>jne instruction.<br/>
		/// <br/>
		/// <c>JNE rel8</c><br/>
		/// <br/>
		/// <c>o64 75 cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JNE rel32</c><br/>
		/// <br/>
		/// <c>o64 0F 85 cd</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JNE rel8</c><br/>
		/// <br/>
		/// <c>o32 75 cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JNE rel32</c><br/>
		/// <br/>
		/// <c>o32 0F 85 cd</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JNE rel8</c><br/>
		/// <br/>
		/// <c>o16 75 cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>JNE rel16</c><br/>
		/// <br/>
		/// <c>o16 0F 85 cw</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664241)]
public static void jne(ulong dst) {}
		/// <summary>jno instruction.<br/>
		/// <br/>
		/// <c>JNO rel8</c><br/>
		/// <br/>
		/// <c>o64 71 cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JNO rel32</c><br/>
		/// <br/>
		/// <c>o64 0F 81 cd</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JNO rel8</c><br/>
		/// <br/>
		/// <c>o32 71 cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JNO rel32</c><br/>
		/// <br/>
		/// <c>o32 0F 81 cd</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JNO rel8</c><br/>
		/// <br/>
		/// <c>o16 71 cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>JNO rel16</c><br/>
		/// <br/>
		/// <c>o16 0F 81 cw</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664242)]
public static void jno(Label dst) {}
		/// <summary>jno instruction.<br/>
		/// <br/>
		/// <c>JNO rel8</c><br/>
		/// <br/>
		/// <c>o64 71 cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JNO rel32</c><br/>
		/// <br/>
		/// <c>o64 0F 81 cd</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JNO rel8</c><br/>
		/// <br/>
		/// <c>o32 71 cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JNO rel32</c><br/>
		/// <br/>
		/// <c>o32 0F 81 cd</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JNO rel8</c><br/>
		/// <br/>
		/// <c>o16 71 cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>JNO rel16</c><br/>
		/// <br/>
		/// <c>o16 0F 81 cw</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664243)]
public static void jno(ulong dst) {}
		/// <summary>jnp instruction.<br/>
		/// <br/>
		/// <c>JNP rel8</c><br/>
		/// <br/>
		/// <c>o64 7B cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JNP rel32</c><br/>
		/// <br/>
		/// <c>o64 0F 8B cd</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JNP rel8</c><br/>
		/// <br/>
		/// <c>o32 7B cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JNP rel32</c><br/>
		/// <br/>
		/// <c>o32 0F 8B cd</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JNP rel8</c><br/>
		/// <br/>
		/// <c>o16 7B cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>JNP rel16</c><br/>
		/// <br/>
		/// <c>o16 0F 8B cw</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664244)]
public static void jnp(Label dst) {}
		/// <summary>jnp instruction.<br/>
		/// <br/>
		/// <c>JNP rel8</c><br/>
		/// <br/>
		/// <c>o64 7B cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JNP rel32</c><br/>
		/// <br/>
		/// <c>o64 0F 8B cd</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JNP rel8</c><br/>
		/// <br/>
		/// <c>o32 7B cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JNP rel32</c><br/>
		/// <br/>
		/// <c>o32 0F 8B cd</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JNP rel8</c><br/>
		/// <br/>
		/// <c>o16 7B cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>JNP rel16</c><br/>
		/// <br/>
		/// <c>o16 0F 8B cw</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664245)]
public static void jnp(ulong dst) {}
		/// <summary>jns instruction.<br/>
		/// <br/>
		/// <c>JNS rel8</c><br/>
		/// <br/>
		/// <c>o64 79 cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JNS rel32</c><br/>
		/// <br/>
		/// <c>o64 0F 89 cd</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JNS rel8</c><br/>
		/// <br/>
		/// <c>o32 79 cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JNS rel32</c><br/>
		/// <br/>
		/// <c>o32 0F 89 cd</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JNS rel8</c><br/>
		/// <br/>
		/// <c>o16 79 cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>JNS rel16</c><br/>
		/// <br/>
		/// <c>o16 0F 89 cw</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664246)]
public static void jns(Label dst) {}
		/// <summary>jns instruction.<br/>
		/// <br/>
		/// <c>JNS rel8</c><br/>
		/// <br/>
		/// <c>o64 79 cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JNS rel32</c><br/>
		/// <br/>
		/// <c>o64 0F 89 cd</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JNS rel8</c><br/>
		/// <br/>
		/// <c>o32 79 cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JNS rel32</c><br/>
		/// <br/>
		/// <c>o32 0F 89 cd</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JNS rel8</c><br/>
		/// <br/>
		/// <c>o16 79 cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>JNS rel16</c><br/>
		/// <br/>
		/// <c>o16 0F 89 cw</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664247)]
public static void jns(ulong dst) {}
		/// <summary>jo instruction.<br/>
		/// <br/>
		/// <c>JO rel8</c><br/>
		/// <br/>
		/// <c>o64 70 cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JO rel32</c><br/>
		/// <br/>
		/// <c>o64 0F 80 cd</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JO rel8</c><br/>
		/// <br/>
		/// <c>o32 70 cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JO rel32</c><br/>
		/// <br/>
		/// <c>o32 0F 80 cd</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JO rel8</c><br/>
		/// <br/>
		/// <c>o16 70 cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>JO rel16</c><br/>
		/// <br/>
		/// <c>o16 0F 80 cw</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664248)]
public static void jo(Label dst) {}
		/// <summary>jo instruction.<br/>
		/// <br/>
		/// <c>JO rel8</c><br/>
		/// <br/>
		/// <c>o64 70 cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JO rel32</c><br/>
		/// <br/>
		/// <c>o64 0F 80 cd</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JO rel8</c><br/>
		/// <br/>
		/// <c>o32 70 cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JO rel32</c><br/>
		/// <br/>
		/// <c>o32 0F 80 cd</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JO rel8</c><br/>
		/// <br/>
		/// <c>o16 70 cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>JO rel16</c><br/>
		/// <br/>
		/// <c>o16 0F 80 cw</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664249)]
public static void jo(ulong dst) {}
		/// <summary>jp instruction.<br/>
		/// <br/>
		/// <c>JP rel8</c><br/>
		/// <br/>
		/// <c>o64 7A cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JP rel32</c><br/>
		/// <br/>
		/// <c>o64 0F 8A cd</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JP rel8</c><br/>
		/// <br/>
		/// <c>o32 7A cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JP rel32</c><br/>
		/// <br/>
		/// <c>o32 0F 8A cd</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JP rel8</c><br/>
		/// <br/>
		/// <c>o16 7A cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>JP rel16</c><br/>
		/// <br/>
		/// <c>o16 0F 8A cw</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664250)]
public static void jp(Label dst) {}
		/// <summary>jp instruction.<br/>
		/// <br/>
		/// <c>JP rel8</c><br/>
		/// <br/>
		/// <c>o64 7A cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JP rel32</c><br/>
		/// <br/>
		/// <c>o64 0F 8A cd</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JP rel8</c><br/>
		/// <br/>
		/// <c>o32 7A cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JP rel32</c><br/>
		/// <br/>
		/// <c>o32 0F 8A cd</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JP rel8</c><br/>
		/// <br/>
		/// <c>o16 7A cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>JP rel16</c><br/>
		/// <br/>
		/// <c>o16 0F 8A cw</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664251)]
public static void jp(ulong dst) {}
		/// <summary>jrcxz instruction.<br/>
		/// <br/>
		/// <c>JRCXZ rel8</c><br/>
		/// <br/>
		/// <c>a64 o64 E3 cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664252)]
public static void jrcxz(Label dst) {}
		/// <summary>jrcxz instruction.<br/>
		/// <br/>
		/// <c>JRCXZ rel8</c><br/>
		/// <br/>
		/// <c>a64 o64 E3 cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664253)]
public static void jrcxz(ulong dst) {}
		/// <summary>js instruction.<br/>
		/// <br/>
		/// <c>JS rel8</c><br/>
		/// <br/>
		/// <c>o64 78 cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JS rel32</c><br/>
		/// <br/>
		/// <c>o64 0F 88 cd</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JS rel8</c><br/>
		/// <br/>
		/// <c>o32 78 cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JS rel32</c><br/>
		/// <br/>
		/// <c>o32 0F 88 cd</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JS rel8</c><br/>
		/// <br/>
		/// <c>o16 78 cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>JS rel16</c><br/>
		/// <br/>
		/// <c>o16 0F 88 cw</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664254)]
public static void js(Label dst) {}
		/// <summary>js instruction.<br/>
		/// <br/>
		/// <c>JS rel8</c><br/>
		/// <br/>
		/// <c>o64 78 cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JS rel32</c><br/>
		/// <br/>
		/// <c>o64 0F 88 cd</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>JS rel8</c><br/>
		/// <br/>
		/// <c>o32 78 cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JS rel32</c><br/>
		/// <br/>
		/// <c>o32 0F 88 cd</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>JS rel8</c><br/>
		/// <br/>
		/// <c>o16 78 cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>JS rel16</c><br/>
		/// <br/>
		/// <c>o16 0F 88 cw</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664255)]
public static void js(ulong dst) {}
		/// <summary>kaddb instruction.<br/>
		/// <br/>
		/// <c>KADDB k1, k2, k3</c><br/>
		/// <br/>
		/// <c>VEX.L1.66.0F.W0 4A /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664256)]
public static void kaddb(AssemblerRegisterK dst, AssemblerRegisterK src1, AssemblerRegisterK src2) {}
		/// <summary>kaddd instruction.<br/>
		/// <br/>
		/// <c>KADDD k1, k2, k3</c><br/>
		/// <br/>
		/// <c>VEX.L1.66.0F.W1 4A /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664257)]
public static void kaddd(AssemblerRegisterK dst, AssemblerRegisterK src1, AssemblerRegisterK src2) {}
		/// <summary>kaddq instruction.<br/>
		/// <br/>
		/// <c>KADDQ k1, k2, k3</c><br/>
		/// <br/>
		/// <c>VEX.L1.0F.W1 4A /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664258)]
public static void kaddq(AssemblerRegisterK dst, AssemblerRegisterK src1, AssemblerRegisterK src2) {}
		/// <summary>kaddw instruction.<br/>
		/// <br/>
		/// <c>KADDW k1, k2, k3</c><br/>
		/// <br/>
		/// <c>VEX.L1.0F.W0 4A /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664259)]
public static void kaddw(AssemblerRegisterK dst, AssemblerRegisterK src1, AssemblerRegisterK src2) {}
		/// <summary>kandb instruction.<br/>
		/// <br/>
		/// <c>KANDB k1, k2, k3</c><br/>
		/// <br/>
		/// <c>VEX.L1.66.0F.W0 41 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664260)]
public static void kandb(AssemblerRegisterK dst, AssemblerRegisterK src1, AssemblerRegisterK src2) {}
		/// <summary>kandd instruction.<br/>
		/// <br/>
		/// <c>KANDD k1, k2, k3</c><br/>
		/// <br/>
		/// <c>VEX.L1.66.0F.W1 41 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664261)]
public static void kandd(AssemblerRegisterK dst, AssemblerRegisterK src1, AssemblerRegisterK src2) {}
		/// <summary>kandnb instruction.<br/>
		/// <br/>
		/// <c>KANDNB k1, k2, k3</c><br/>
		/// <br/>
		/// <c>VEX.L1.66.0F.W0 42 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664262)]
public static void kandnb(AssemblerRegisterK dst, AssemblerRegisterK src1, AssemblerRegisterK src2) {}
		/// <summary>kandnd instruction.<br/>
		/// <br/>
		/// <c>KANDND k1, k2, k3</c><br/>
		/// <br/>
		/// <c>VEX.L1.66.0F.W1 42 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664263)]
public static void kandnd(AssemblerRegisterK dst, AssemblerRegisterK src1, AssemblerRegisterK src2) {}
		/// <summary>kandnq instruction.<br/>
		/// <br/>
		/// <c>KANDNQ k1, k2, k3</c><br/>
		/// <br/>
		/// <c>VEX.L1.0F.W1 42 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664264)]
public static void kandnq(AssemblerRegisterK dst, AssemblerRegisterK src1, AssemblerRegisterK src2) {}
		/// <summary>kandnw instruction.<br/>
		/// <br/>
		/// <c>KANDNW k1, k2, k3</c><br/>
		/// <br/>
		/// <c>VEX.L1.0F.W0 42 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664265)]
public static void kandnw(AssemblerRegisterK dst, AssemblerRegisterK src1, AssemblerRegisterK src2) {}
		/// <summary>kandq instruction.<br/>
		/// <br/>
		/// <c>KANDQ k1, k2, k3</c><br/>
		/// <br/>
		/// <c>VEX.L1.0F.W1 41 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664266)]
public static void kandq(AssemblerRegisterK dst, AssemblerRegisterK src1, AssemblerRegisterK src2) {}
		/// <summary>kandw instruction.<br/>
		/// <br/>
		/// <c>KANDW k1, k2, k3</c><br/>
		/// <br/>
		/// <c>VEX.L1.0F.W0 41 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664267)]
public static void kandw(AssemblerRegisterK dst, AssemblerRegisterK src1, AssemblerRegisterK src2) {}
		/// <summary>kmovb instruction.<br/>
		/// <br/>
		/// <c>KMOVB k1, r32</c><br/>
		/// <br/>
		/// <c>VEX.L0.66.0F.W0 92 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664268)]
public static void kmovb(AssemblerRegisterK dst, AssemblerRegister32 src) {}
		/// <summary>kmovb instruction.<br/>
		/// <br/>
		/// <c>KMOVB r32, k1</c><br/>
		/// <br/>
		/// <c>VEX.L0.66.0F.W0 93 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664269)]
public static void kmovb(AssemblerRegister32 dst, AssemblerRegisterK src) {}
		/// <summary>kmovb instruction.<br/>
		/// <br/>
		/// <c>KMOVB k1, k2/m8</c><br/>
		/// <br/>
		/// <c>VEX.L0.66.0F.W0 90 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664270)]
public static void kmovb(AssemblerRegisterK dst, AssemblerRegisterK src) {}
		/// <summary>kmovb instruction.<br/>
		/// <br/>
		/// <c>KMOVB m8, k1</c><br/>
		/// <br/>
		/// <c>VEX.L0.66.0F.W0 91 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664271)]
public static void kmovb(AssemblerMemoryOperand dst, AssemblerRegisterK src) {}
		/// <summary>kmovb instruction.<br/>
		/// <br/>
		/// <c>KMOVB k1, k2/m8</c><br/>
		/// <br/>
		/// <c>VEX.L0.66.0F.W0 90 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664272)]
public static void kmovb(AssemblerRegisterK dst, AssemblerMemoryOperand src) {}
		/// <summary>kmovd instruction.<br/>
		/// <br/>
		/// <c>KMOVD k1, r32</c><br/>
		/// <br/>
		/// <c>VEX.L0.F2.0F.W0 92 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664273)]
public static void kmovd(AssemblerRegisterK dst, AssemblerRegister32 src) {}
		/// <summary>kmovd instruction.<br/>
		/// <br/>
		/// <c>KMOVD r32, k1</c><br/>
		/// <br/>
		/// <c>VEX.L0.F2.0F.W0 93 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664274)]
public static void kmovd(AssemblerRegister32 dst, AssemblerRegisterK src) {}
		/// <summary>kmovd instruction.<br/>
		/// <br/>
		/// <c>KMOVD k1, k2/m32</c><br/>
		/// <br/>
		/// <c>VEX.L0.66.0F.W1 90 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664275)]
public static void kmovd(AssemblerRegisterK dst, AssemblerRegisterK src) {}
		/// <summary>kmovd instruction.<br/>
		/// <br/>
		/// <c>KMOVD m32, k1</c><br/>
		/// <br/>
		/// <c>VEX.L0.66.0F.W1 91 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664276)]
public static void kmovd(AssemblerMemoryOperand dst, AssemblerRegisterK src) {}
		/// <summary>kmovd instruction.<br/>
		/// <br/>
		/// <c>KMOVD k1, k2/m32</c><br/>
		/// <br/>
		/// <c>VEX.L0.66.0F.W1 90 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664277)]
public static void kmovd(AssemblerRegisterK dst, AssemblerMemoryOperand src) {}
		/// <summary>kmovq instruction.<br/>
		/// <br/>
		/// <c>KMOVQ k1, r64</c><br/>
		/// <br/>
		/// <c>VEX.L0.F2.0F.W1 92 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664278)]
public static void kmovq(AssemblerRegisterK dst, AssemblerRegister64 src) {}
		/// <summary>kmovq instruction.<br/>
		/// <br/>
		/// <c>KMOVQ r64, k1</c><br/>
		/// <br/>
		/// <c>VEX.L0.F2.0F.W1 93 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664279)]
public static void kmovq(AssemblerRegister64 dst, AssemblerRegisterK src) {}
		/// <summary>kmovq instruction.<br/>
		/// <br/>
		/// <c>KMOVQ k1, k2/m64</c><br/>
		/// <br/>
		/// <c>VEX.L0.0F.W1 90 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664280)]
public static void kmovq(AssemblerRegisterK dst, AssemblerRegisterK src) {}
		/// <summary>kmovq instruction.<br/>
		/// <br/>
		/// <c>KMOVQ m64, k1</c><br/>
		/// <br/>
		/// <c>VEX.L0.0F.W1 91 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664281)]
public static void kmovq(AssemblerMemoryOperand dst, AssemblerRegisterK src) {}
		/// <summary>kmovq instruction.<br/>
		/// <br/>
		/// <c>KMOVQ k1, k2/m64</c><br/>
		/// <br/>
		/// <c>VEX.L0.0F.W1 90 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664282)]
public static void kmovq(AssemblerRegisterK dst, AssemblerMemoryOperand src) {}
		/// <summary>kmovw instruction.<br/>
		/// <br/>
		/// <c>KMOVW k1, r32</c><br/>
		/// <br/>
		/// <c>VEX.L0.0F.W0 92 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664283)]
public static void kmovw(AssemblerRegisterK dst, AssemblerRegister32 src) {}
		/// <summary>kmovw instruction.<br/>
		/// <br/>
		/// <c>KMOVW r32, k1</c><br/>
		/// <br/>
		/// <c>VEX.L0.0F.W0 93 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664284)]
public static void kmovw(AssemblerRegister32 dst, AssemblerRegisterK src) {}
		/// <summary>kmovw instruction.<br/>
		/// <br/>
		/// <c>KMOVW k1, k2/m16</c><br/>
		/// <br/>
		/// <c>VEX.L0.0F.W0 90 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664285)]
public static void kmovw(AssemblerRegisterK dst, AssemblerRegisterK src) {}
		/// <summary>kmovw instruction.<br/>
		/// <br/>
		/// <c>KMOVW m16, k1</c><br/>
		/// <br/>
		/// <c>VEX.L0.0F.W0 91 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664286)]
public static void kmovw(AssemblerMemoryOperand dst, AssemblerRegisterK src) {}
		/// <summary>kmovw instruction.<br/>
		/// <br/>
		/// <c>KMOVW k1, k2/m16</c><br/>
		/// <br/>
		/// <c>VEX.L0.0F.W0 90 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664287)]
public static void kmovw(AssemblerRegisterK dst, AssemblerMemoryOperand src) {}
		/// <summary>knotb instruction.<br/>
		/// <br/>
		/// <c>KNOTB k1, k2</c><br/>
		/// <br/>
		/// <c>VEX.L0.66.0F.W0 44 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664288)]
public static void knotb(AssemblerRegisterK dst, AssemblerRegisterK src) {}
		/// <summary>knotd instruction.<br/>
		/// <br/>
		/// <c>KNOTD k1, k2</c><br/>
		/// <br/>
		/// <c>VEX.L0.66.0F.W1 44 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664289)]
public static void knotd(AssemblerRegisterK dst, AssemblerRegisterK src) {}
		/// <summary>knotq instruction.<br/>
		/// <br/>
		/// <c>KNOTQ k1, k2</c><br/>
		/// <br/>
		/// <c>VEX.L0.0F.W1 44 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664290)]
public static void knotq(AssemblerRegisterK dst, AssemblerRegisterK src) {}
		/// <summary>knotw instruction.<br/>
		/// <br/>
		/// <c>KNOTW k1, k2</c><br/>
		/// <br/>
		/// <c>VEX.L0.0F.W0 44 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664291)]
public static void knotw(AssemblerRegisterK dst, AssemblerRegisterK src) {}
		/// <summary>korb instruction.<br/>
		/// <br/>
		/// <c>KORB k1, k2, k3</c><br/>
		/// <br/>
		/// <c>VEX.L1.66.0F.W0 45 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664292)]
public static void korb(AssemblerRegisterK dst, AssemblerRegisterK src1, AssemblerRegisterK src2) {}
		/// <summary>kord instruction.<br/>
		/// <br/>
		/// <c>KORD k1, k2, k3</c><br/>
		/// <br/>
		/// <c>VEX.L1.66.0F.W1 45 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664293)]
public static void kord(AssemblerRegisterK dst, AssemblerRegisterK src1, AssemblerRegisterK src2) {}
		/// <summary>korq instruction.<br/>
		/// <br/>
		/// <c>KORQ k1, k2, k3</c><br/>
		/// <br/>
		/// <c>VEX.L1.0F.W1 45 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664294)]
public static void korq(AssemblerRegisterK dst, AssemblerRegisterK src1, AssemblerRegisterK src2) {}
		/// <summary>kortestb instruction.<br/>
		/// <br/>
		/// <c>KORTESTB k1, k2</c><br/>
		/// <br/>
		/// <c>VEX.L0.66.0F.W0 98 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664295)]
public static void kortestb(AssemblerRegisterK dst, AssemblerRegisterK src) {}
		/// <summary>kortestd instruction.<br/>
		/// <br/>
		/// <c>KORTESTD k1, k2</c><br/>
		/// <br/>
		/// <c>VEX.L0.66.0F.W1 98 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664296)]
public static void kortestd(AssemblerRegisterK dst, AssemblerRegisterK src) {}
		/// <summary>kortestq instruction.<br/>
		/// <br/>
		/// <c>KORTESTQ k1, k2</c><br/>
		/// <br/>
		/// <c>VEX.L0.0F.W1 98 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664297)]
public static void kortestq(AssemblerRegisterK dst, AssemblerRegisterK src) {}
		/// <summary>kortestw instruction.<br/>
		/// <br/>
		/// <c>KORTESTW k1, k2</c><br/>
		/// <br/>
		/// <c>VEX.L0.0F.W0 98 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664298)]
public static void kortestw(AssemblerRegisterK dst, AssemblerRegisterK src) {}
		/// <summary>korw instruction.<br/>
		/// <br/>
		/// <c>KORW k1, k2, k3</c><br/>
		/// <br/>
		/// <c>VEX.L1.0F.W0 45 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664299)]
public static void korw(AssemblerRegisterK dst, AssemblerRegisterK src1, AssemblerRegisterK src2) {}
		/// <summary>kshiftlb instruction.<br/>
		/// <br/>
		/// <c>KSHIFTLB k1, k2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.L0.66.0F3A.W0 32 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664300)]
public static void kshiftlb(AssemblerRegisterK dst, AssemblerRegisterK src1, sbyte imm) {}
		/// <summary>kshiftlb instruction.<br/>
		/// <br/>
		/// <c>KSHIFTLB k1, k2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.L0.66.0F3A.W0 32 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664301)]
public static void kshiftlb(AssemblerRegisterK dst, AssemblerRegisterK src1, byte imm) {}
		/// <summary>kshiftld instruction.<br/>
		/// <br/>
		/// <c>KSHIFTLD k1, k2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.L0.66.0F3A.W0 33 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664302)]
public static void kshiftld(AssemblerRegisterK dst, AssemblerRegisterK src1, sbyte imm) {}
		/// <summary>kshiftld instruction.<br/>
		/// <br/>
		/// <c>KSHIFTLD k1, k2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.L0.66.0F3A.W0 33 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664303)]
public static void kshiftld(AssemblerRegisterK dst, AssemblerRegisterK src1, byte imm) {}
		/// <summary>kshiftlq instruction.<br/>
		/// <br/>
		/// <c>KSHIFTLQ k1, k2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.L0.66.0F3A.W1 33 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664304)]
public static void kshiftlq(AssemblerRegisterK dst, AssemblerRegisterK src1, sbyte imm) {}
		/// <summary>kshiftlq instruction.<br/>
		/// <br/>
		/// <c>KSHIFTLQ k1, k2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.L0.66.0F3A.W1 33 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664305)]
public static void kshiftlq(AssemblerRegisterK dst, AssemblerRegisterK src1, byte imm) {}
		/// <summary>kshiftlw instruction.<br/>
		/// <br/>
		/// <c>KSHIFTLW k1, k2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.L0.66.0F3A.W1 32 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664306)]
public static void kshiftlw(AssemblerRegisterK dst, AssemblerRegisterK src1, sbyte imm) {}
		/// <summary>kshiftlw instruction.<br/>
		/// <br/>
		/// <c>KSHIFTLW k1, k2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.L0.66.0F3A.W1 32 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664307)]
public static void kshiftlw(AssemblerRegisterK dst, AssemblerRegisterK src1, byte imm) {}
		/// <summary>kshiftrb instruction.<br/>
		/// <br/>
		/// <c>KSHIFTRB k1, k2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.L0.66.0F3A.W0 30 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664308)]
public static void kshiftrb(AssemblerRegisterK dst, AssemblerRegisterK src1, sbyte imm) {}
		/// <summary>kshiftrb instruction.<br/>
		/// <br/>
		/// <c>KSHIFTRB k1, k2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.L0.66.0F3A.W0 30 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664309)]
public static void kshiftrb(AssemblerRegisterK dst, AssemblerRegisterK src1, byte imm) {}
		/// <summary>kshiftrd instruction.<br/>
		/// <br/>
		/// <c>KSHIFTRD k1, k2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.L0.66.0F3A.W0 31 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664310)]
public static void kshiftrd(AssemblerRegisterK dst, AssemblerRegisterK src1, sbyte imm) {}
		/// <summary>kshiftrd instruction.<br/>
		/// <br/>
		/// <c>KSHIFTRD k1, k2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.L0.66.0F3A.W0 31 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664311)]
public static void kshiftrd(AssemblerRegisterK dst, AssemblerRegisterK src1, byte imm) {}
		/// <summary>kshiftrq instruction.<br/>
		/// <br/>
		/// <c>KSHIFTRQ k1, k2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.L0.66.0F3A.W1 31 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664312)]
public static void kshiftrq(AssemblerRegisterK dst, AssemblerRegisterK src1, sbyte imm) {}
		/// <summary>kshiftrq instruction.<br/>
		/// <br/>
		/// <c>KSHIFTRQ k1, k2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.L0.66.0F3A.W1 31 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664313)]
public static void kshiftrq(AssemblerRegisterK dst, AssemblerRegisterK src1, byte imm) {}
		/// <summary>kshiftrw instruction.<br/>
		/// <br/>
		/// <c>KSHIFTRW k1, k2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.L0.66.0F3A.W1 30 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664314)]
public static void kshiftrw(AssemblerRegisterK dst, AssemblerRegisterK src1, sbyte imm) {}
		/// <summary>kshiftrw instruction.<br/>
		/// <br/>
		/// <c>KSHIFTRW k1, k2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.L0.66.0F3A.W1 30 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664315)]
public static void kshiftrw(AssemblerRegisterK dst, AssemblerRegisterK src1, byte imm) {}
		/// <summary>ktestb instruction.<br/>
		/// <br/>
		/// <c>KTESTB k1, k2</c><br/>
		/// <br/>
		/// <c>VEX.L0.66.0F.W0 99 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664316)]
public static void ktestb(AssemblerRegisterK dst, AssemblerRegisterK src) {}
		/// <summary>ktestd instruction.<br/>
		/// <br/>
		/// <c>KTESTD k1, k2</c><br/>
		/// <br/>
		/// <c>VEX.L0.66.0F.W1 99 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664317)]
public static void ktestd(AssemblerRegisterK dst, AssemblerRegisterK src) {}
		/// <summary>ktestq instruction.<br/>
		/// <br/>
		/// <c>KTESTQ k1, k2</c><br/>
		/// <br/>
		/// <c>VEX.L0.0F.W1 99 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664318)]
public static void ktestq(AssemblerRegisterK dst, AssemblerRegisterK src) {}
		/// <summary>ktestw instruction.<br/>
		/// <br/>
		/// <c>KTESTW k1, k2</c><br/>
		/// <br/>
		/// <c>VEX.L0.0F.W0 99 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664319)]
public static void ktestw(AssemblerRegisterK dst, AssemblerRegisterK src) {}
		/// <summary>kunpckbw instruction.<br/>
		/// <br/>
		/// <c>KUNPCKBW k1, k2, k3</c><br/>
		/// <br/>
		/// <c>VEX.L1.66.0F.W0 4B /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664320)]
public static void kunpckbw(AssemblerRegisterK dst, AssemblerRegisterK src1, AssemblerRegisterK src2) {}
		/// <summary>kunpckdq instruction.<br/>
		/// <br/>
		/// <c>KUNPCKDQ k1, k2, k3</c><br/>
		/// <br/>
		/// <c>VEX.L1.0F.W1 4B /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664321)]
public static void kunpckdq(AssemblerRegisterK dst, AssemblerRegisterK src1, AssemblerRegisterK src2) {}
		/// <summary>kunpckwd instruction.<br/>
		/// <br/>
		/// <c>KUNPCKWD k1, k2, k3</c><br/>
		/// <br/>
		/// <c>VEX.L1.0F.W0 4B /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664322)]
public static void kunpckwd(AssemblerRegisterK dst, AssemblerRegisterK src1, AssemblerRegisterK src2) {}
		/// <summary>kxnorb instruction.<br/>
		/// <br/>
		/// <c>KXNORB k1, k2, k3</c><br/>
		/// <br/>
		/// <c>VEX.L1.66.0F.W0 46 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664323)]
public static void kxnorb(AssemblerRegisterK dst, AssemblerRegisterK src1, AssemblerRegisterK src2) {}
		/// <summary>kxnord instruction.<br/>
		/// <br/>
		/// <c>KXNORD k1, k2, k3</c><br/>
		/// <br/>
		/// <c>VEX.L1.66.0F.W1 46 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664324)]
public static void kxnord(AssemblerRegisterK dst, AssemblerRegisterK src1, AssemblerRegisterK src2) {}
		/// <summary>kxnorq instruction.<br/>
		/// <br/>
		/// <c>KXNORQ k1, k2, k3</c><br/>
		/// <br/>
		/// <c>VEX.L1.0F.W1 46 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664325)]
public static void kxnorq(AssemblerRegisterK dst, AssemblerRegisterK src1, AssemblerRegisterK src2) {}
		/// <summary>kxnorw instruction.<br/>
		/// <br/>
		/// <c>KXNORW k1, k2, k3</c><br/>
		/// <br/>
		/// <c>VEX.L1.0F.W0 46 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664326)]
public static void kxnorw(AssemblerRegisterK dst, AssemblerRegisterK src1, AssemblerRegisterK src2) {}
		/// <summary>kxorb instruction.<br/>
		/// <br/>
		/// <c>KXORB k1, k2, k3</c><br/>
		/// <br/>
		/// <c>VEX.L1.66.0F.W0 47 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664327)]
public static void kxorb(AssemblerRegisterK dst, AssemblerRegisterK src1, AssemblerRegisterK src2) {}
		/// <summary>kxord instruction.<br/>
		/// <br/>
		/// <c>KXORD k1, k2, k3</c><br/>
		/// <br/>
		/// <c>VEX.L1.66.0F.W1 47 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664328)]
public static void kxord(AssemblerRegisterK dst, AssemblerRegisterK src1, AssemblerRegisterK src2) {}
		/// <summary>kxorq instruction.<br/>
		/// <br/>
		/// <c>KXORQ k1, k2, k3</c><br/>
		/// <br/>
		/// <c>VEX.L1.0F.W1 47 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664329)]
public static void kxorq(AssemblerRegisterK dst, AssemblerRegisterK src1, AssemblerRegisterK src2) {}
		/// <summary>kxorw instruction.<br/>
		/// <br/>
		/// <c>KXORW k1, k2, k3</c><br/>
		/// <br/>
		/// <c>VEX.L1.0F.W0 47 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664330)]
public static void kxorw(AssemblerRegisterK dst, AssemblerRegisterK src1, AssemblerRegisterK src2) {}
		/// <summary>lahf instruction.<br/>
		/// <br/>
		/// <c>LAHF</c><br/>
		/// <br/>
		/// <c>9F</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664331)]
public static void lahf() {}
		/// <summary>lar instruction.<br/>
		/// <br/>
		/// <c>LAR r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 02 /r</c><br/>
		/// <br/>
		/// <c>286+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664332)]
public static void lar(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>lar instruction.<br/>
		/// <br/>
		/// <c>LAR r32, r32/m16</c><br/>
		/// <br/>
		/// <c>o32 0F 02 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664333)]
public static void lar(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>lar instruction.<br/>
		/// <br/>
		/// <c>LAR r64, r64/m16</c><br/>
		/// <br/>
		/// <c>o64 0F 02 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664334)]
public static void lar(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>lar instruction.<br/>
		/// <br/>
		/// <c>LAR r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 02 /r</c><br/>
		/// <br/>
		/// <c>286+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664335)]
public static void lar(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>lar instruction.<br/>
		/// <br/>
		/// <c>LAR r32, r32/m16</c><br/>
		/// <br/>
		/// <c>o32 0F 02 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664336)]
public static void lar(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>lddqu instruction.<br/>
		/// <br/>
		/// <c>LDDQU xmm1, m128</c><br/>
		/// <br/>
		/// <c>F2 0F F0 /r</c><br/>
		/// <br/>
		/// <c>SSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664337)]
public static void lddqu(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>ldmxcsr instruction.<br/>
		/// <br/>
		/// <c>LDMXCSR m32</c><br/>
		/// <br/>
		/// <c>NP 0F AE /2</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664338)]
public static void ldmxcsr(AssemblerMemoryOperand dst) {}
		/// <summary>lds instruction.<br/>
		/// <br/>
		/// <c>LDS r16, m16:16</c><br/>
		/// <br/>
		/// <c>o16 C5 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664339)]
public static void lds(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>lds instruction.<br/>
		/// <br/>
		/// <c>LDS r32, m16:32</c><br/>
		/// <br/>
		/// <c>o32 C5 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664340)]
public static void lds(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>ldtilecfg instruction.<br/>
		/// <br/>
		/// <c>LDTILECFG m512</c><br/>
		/// <br/>
		/// <c>VEX.128.0F38.W0 49 !(11):000:bbb</c><br/>
		/// <br/>
		/// <c>AMX-TILE</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664341)]
public static void ldtilecfg(AssemblerMemoryOperand dst) {}
		/// <summary>lea instruction.<br/>
		/// <br/>
		/// <c>LEA r16, m</c><br/>
		/// <br/>
		/// <c>o16 8D /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664342)]
public static void lea(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>lea instruction.<br/>
		/// <br/>
		/// <c>LEA r32, m</c><br/>
		/// <br/>
		/// <c>o32 8D /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664343)]
public static void lea(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>lea instruction.<br/>
		/// <br/>
		/// <c>LEA r64, m</c><br/>
		/// <br/>
		/// <c>o64 8D /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664344)]
public static void lea(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>leave instruction.<br/>
		/// <br/>
		/// <c>LEAVE</c><br/>
		/// <br/>
		/// <c>o64 C9</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>LEAVE</c><br/>
		/// <br/>
		/// <c>o32 C9</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>LEAVE</c><br/>
		/// <br/>
		/// <c>o16 C9</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664345)]
public static void leave() {}
		/// <summary>les instruction.<br/>
		/// <br/>
		/// <c>LES r16, m16:16</c><br/>
		/// <br/>
		/// <c>o16 C4 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664346)]
public static void les(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>les instruction.<br/>
		/// <br/>
		/// <c>LES r32, m16:32</c><br/>
		/// <br/>
		/// <c>o32 C4 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664347)]
public static void les(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>lfence instruction.<br/>
		/// <br/>
		/// <c>LFENCE</c><br/>
		/// <br/>
		/// <c>NP 0F AE E8</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664348)]
public static void lfence() {}
		/// <summary>lfs instruction.<br/>
		/// <br/>
		/// <c>LFS r16, m16:16</c><br/>
		/// <br/>
		/// <c>o16 0F B4 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664349)]
public static void lfs(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>lfs instruction.<br/>
		/// <br/>
		/// <c>LFS r32, m16:32</c><br/>
		/// <br/>
		/// <c>o32 0F B4 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664350)]
public static void lfs(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>lfs instruction.<br/>
		/// <br/>
		/// <c>LFS r64, m16:64</c><br/>
		/// <br/>
		/// <c>o64 0F B4 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664351)]
public static void lfs(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>lgdt instruction.<br/>
		/// <br/>
		/// <c>LGDT m16&amp;64</c><br/>
		/// <br/>
		/// <c>0F 01 /2</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>LGDT m16&amp;32</c><br/>
		/// <br/>
		/// <c>o32 0F 01 /2</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>LGDT m16&amp;32</c><br/>
		/// <br/>
		/// <c>o16 0F 01 /2</c><br/>
		/// <br/>
		/// <c>286+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664352)]
public static void lgdt(AssemblerMemoryOperand dst) {}
		/// <summary>lgs instruction.<br/>
		/// <br/>
		/// <c>LGS r16, m16:16</c><br/>
		/// <br/>
		/// <c>o16 0F B5 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664353)]
public static void lgs(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>lgs instruction.<br/>
		/// <br/>
		/// <c>LGS r32, m16:32</c><br/>
		/// <br/>
		/// <c>o32 0F B5 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664354)]
public static void lgs(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>lgs instruction.<br/>
		/// <br/>
		/// <c>LGS r64, m16:64</c><br/>
		/// <br/>
		/// <c>o64 0F B5 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664355)]
public static void lgs(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>lidt instruction.<br/>
		/// <br/>
		/// <c>LIDT m16&amp;64</c><br/>
		/// <br/>
		/// <c>0F 01 /3</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>LIDT m16&amp;32</c><br/>
		/// <br/>
		/// <c>o32 0F 01 /3</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>LIDT m16&amp;32</c><br/>
		/// <br/>
		/// <c>o16 0F 01 /3</c><br/>
		/// <br/>
		/// <c>286+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664356)]
public static void lidt(AssemblerMemoryOperand dst) {}
		/// <summary>lkgs instruction.<br/>
		/// <br/>
		/// <c>LKGS r/m16</c><br/>
		/// <br/>
		/// <c>o16 F2 0F 00 /6</c><br/>
		/// <br/>
		/// <c>LKGS</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664357)]
public static void lkgs(AssemblerRegister16 dst) {}
		/// <summary>lkgs instruction.<br/>
		/// <br/>
		/// <c>LKGS r32/m16</c><br/>
		/// <br/>
		/// <c>o32 F2 0F 00 /6</c><br/>
		/// <br/>
		/// <c>LKGS</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664358)]
public static void lkgs(AssemblerRegister32 dst) {}
		/// <summary>lkgs instruction.<br/>
		/// <br/>
		/// <c>LKGS r64/m16</c><br/>
		/// <br/>
		/// <c>F2 o64 0F 00 /6</c><br/>
		/// <br/>
		/// <c>LKGS</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664359)]
public static void lkgs(AssemblerRegister64 dst) {}
		/// <summary>lkgs instruction.<br/>
		/// <br/>
		/// <c>LKGS r32/m16</c><br/>
		/// <br/>
		/// <c>o32 F2 0F 00 /6</c><br/>
		/// <br/>
		/// <c>LKGS</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>LKGS r/m16</c><br/>
		/// <br/>
		/// <c>o16 F2 0F 00 /6</c><br/>
		/// <br/>
		/// <c>LKGS</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664360)]
public static void lkgs(AssemblerMemoryOperand dst) {}
		/// <summary>lldt instruction.<br/>
		/// <br/>
		/// <c>LLDT r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 00 /2</c><br/>
		/// <br/>
		/// <c>286+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664361)]
public static void lldt(AssemblerRegister16 dst) {}
		/// <summary>lldt instruction.<br/>
		/// <br/>
		/// <c>LLDT r32/m16</c><br/>
		/// <br/>
		/// <c>o32 0F 00 /2</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664362)]
public static void lldt(AssemblerRegister32 dst) {}
		/// <summary>lldt instruction.<br/>
		/// <br/>
		/// <c>LLDT r64/m16</c><br/>
		/// <br/>
		/// <c>o64 0F 00 /2</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664363)]
public static void lldt(AssemblerRegister64 dst) {}
		/// <summary>lldt instruction.<br/>
		/// <br/>
		/// <c>LLDT r32/m16</c><br/>
		/// <br/>
		/// <c>o32 0F 00 /2</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>LLDT r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 00 /2</c><br/>
		/// <br/>
		/// <c>286+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664364)]
public static void lldt(AssemblerMemoryOperand dst) {}
		/// <summary>llwpcb instruction.<br/>
		/// <br/>
		/// <c>LLWPCB r32</c><br/>
		/// <br/>
		/// <c>XOP.L0.X9.W0 12 /0</c><br/>
		/// <br/>
		/// <c>LWP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664365)]
public static void llwpcb(AssemblerRegister32 dst) {}
		/// <summary>llwpcb instruction.<br/>
		/// <br/>
		/// <c>LLWPCB r64</c><br/>
		/// <br/>
		/// <c>XOP.L0.X9.W1 12 /0</c><br/>
		/// <br/>
		/// <c>LWP</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664366)]
public static void llwpcb(AssemblerRegister64 dst) {}
		/// <summary>lmsw instruction.<br/>
		/// <br/>
		/// <c>LMSW r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 01 /6</c><br/>
		/// <br/>
		/// <c>286+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664367)]
public static void lmsw(AssemblerRegister16 dst) {}
		/// <summary>lmsw instruction.<br/>
		/// <br/>
		/// <c>LMSW r32/m16</c><br/>
		/// <br/>
		/// <c>o32 0F 01 /6</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664368)]
public static void lmsw(AssemblerRegister32 dst) {}
		/// <summary>lmsw instruction.<br/>
		/// <br/>
		/// <c>LMSW r64/m16</c><br/>
		/// <br/>
		/// <c>o64 0F 01 /6</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664369)]
public static void lmsw(AssemblerRegister64 dst) {}
		/// <summary>lmsw instruction.<br/>
		/// <br/>
		/// <c>LMSW r32/m16</c><br/>
		/// <br/>
		/// <c>o32 0F 01 /6</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>LMSW r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 01 /6</c><br/>
		/// <br/>
		/// <c>286+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664370)]
public static void lmsw(AssemblerMemoryOperand dst) {}
		/// <summary>loadall instruction.<br/>
		/// <br/>
		/// <c>LOADALL</c><br/>
		/// <br/>
		/// <c>0F 07</c><br/>
		/// <br/>
		/// <c>386</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664371)]
public static void loadall() {}
		/// <summary>loadiwkey instruction.<br/>
		/// <br/>
		/// <c>LOADIWKEY xmm1, xmm2, &lt;EAX&gt;, &lt;XMM0&gt;</c><br/>
		/// <br/>
		/// <c>F3 0F 38 DC 11:rrr:bbb</c><br/>
		/// <br/>
		/// <c>KL</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664372)]
public static void loadiwkey(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>lodsb instruction.<br/>
		/// <br/>
		/// <c>LODSB</c><br/>
		/// <br/>
		/// <c>AC</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664373)]
public static void lodsb() {}
		/// <summary>lodsd instruction.<br/>
		/// <br/>
		/// <c>LODSD</c><br/>
		/// <br/>
		/// <c>o32 AD</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664374)]
public static void lodsd() {}
		/// <summary>lodsq instruction.<br/>
		/// <br/>
		/// <c>LODSQ</c><br/>
		/// <br/>
		/// <c>o64 AD</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664375)]
public static void lodsq() {}
		/// <summary>lodsw instruction.<br/>
		/// <br/>
		/// <c>LODSW</c><br/>
		/// <br/>
		/// <c>o16 AD</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664376)]
public static void lodsw() {}
		/// <summary>loop instruction.<br/>
		/// <br/>
		/// <c>LOOP rel8</c><br/>
		/// <br/>
		/// <c>a64 o64 E2 cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>LOOP rel8</c><br/>
		/// <br/>
		/// <c>a32 o32 E2 cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>LOOP rel8</c><br/>
		/// <br/>
		/// <c>a16 o16 E2 cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664377)]
public static void loop(Label dst) {}
		/// <summary>loop instruction.<br/>
		/// <br/>
		/// <c>LOOP rel8</c><br/>
		/// <br/>
		/// <c>a64 o64 E2 cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>LOOP rel8</c><br/>
		/// <br/>
		/// <c>a32 o32 E2 cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>LOOP rel8</c><br/>
		/// <br/>
		/// <c>a16 o16 E2 cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664378)]
public static void loop(ulong dst) {}
		/// <summary>loope instruction.<br/>
		/// <br/>
		/// <c>LOOPE rel8</c><br/>
		/// <br/>
		/// <c>a64 o64 E1 cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>LOOPE rel8</c><br/>
		/// <br/>
		/// <c>a32 o32 E1 cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>LOOPE rel8</c><br/>
		/// <br/>
		/// <c>a16 o16 E1 cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664379)]
public static void loope(Label dst) {}
		/// <summary>loope instruction.<br/>
		/// <br/>
		/// <c>LOOPE rel8</c><br/>
		/// <br/>
		/// <c>a64 o64 E1 cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>LOOPE rel8</c><br/>
		/// <br/>
		/// <c>a32 o32 E1 cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>LOOPE rel8</c><br/>
		/// <br/>
		/// <c>a16 o16 E1 cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664380)]
public static void loope(ulong dst) {}
		/// <summary>loopne instruction.<br/>
		/// <br/>
		/// <c>LOOPNE rel8</c><br/>
		/// <br/>
		/// <c>a64 o64 E0 cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>LOOPNE rel8</c><br/>
		/// <br/>
		/// <c>a32 o32 E0 cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>LOOPNE rel8</c><br/>
		/// <br/>
		/// <c>a16 o16 E0 cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664381)]
public static void loopne(Label dst) {}
		/// <summary>loopne instruction.<br/>
		/// <br/>
		/// <c>LOOPNE rel8</c><br/>
		/// <br/>
		/// <c>a64 o64 E0 cb</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>LOOPNE rel8</c><br/>
		/// <br/>
		/// <c>a32 o32 E0 cb</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>LOOPNE rel8</c><br/>
		/// <br/>
		/// <c>a16 o16 E0 cb</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664382)]
public static void loopne(ulong dst) {}
		/// <summary>lsl instruction.<br/>
		/// <br/>
		/// <c>LSL r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 03 /r</c><br/>
		/// <br/>
		/// <c>286+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664383)]
public static void lsl(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>lsl instruction.<br/>
		/// <br/>
		/// <c>LSL r32, r32/m16</c><br/>
		/// <br/>
		/// <c>o32 0F 03 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664384)]
public static void lsl(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>lsl instruction.<br/>
		/// <br/>
		/// <c>LSL r64, r64/m16</c><br/>
		/// <br/>
		/// <c>o64 0F 03 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664385)]
public static void lsl(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>lsl instruction.<br/>
		/// <br/>
		/// <c>LSL r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 03 /r</c><br/>
		/// <br/>
		/// <c>286+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664386)]
public static void lsl(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>lsl instruction.<br/>
		/// <br/>
		/// <c>LSL r32, r32/m16</c><br/>
		/// <br/>
		/// <c>o32 0F 03 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664387)]
public static void lsl(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>lss instruction.<br/>
		/// <br/>
		/// <c>LSS r16, m16:16</c><br/>
		/// <br/>
		/// <c>o16 0F B2 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664388)]
public static void lss(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>lss instruction.<br/>
		/// <br/>
		/// <c>LSS r32, m16:32</c><br/>
		/// <br/>
		/// <c>o32 0F B2 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664389)]
public static void lss(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>lss instruction.<br/>
		/// <br/>
		/// <c>LSS r64, m16:64</c><br/>
		/// <br/>
		/// <c>o64 0F B2 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664390)]
public static void lss(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>ltr instruction.<br/>
		/// <br/>
		/// <c>LTR r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 00 /3</c><br/>
		/// <br/>
		/// <c>286+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664391)]
public static void ltr(AssemblerRegister16 dst) {}
		/// <summary>ltr instruction.<br/>
		/// <br/>
		/// <c>LTR r32/m16</c><br/>
		/// <br/>
		/// <c>o32 0F 00 /3</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664392)]
public static void ltr(AssemblerRegister32 dst) {}
		/// <summary>ltr instruction.<br/>
		/// <br/>
		/// <c>LTR r64/m16</c><br/>
		/// <br/>
		/// <c>o64 0F 00 /3</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664393)]
public static void ltr(AssemblerRegister64 dst) {}
		/// <summary>ltr instruction.<br/>
		/// <br/>
		/// <c>LTR r32/m16</c><br/>
		/// <br/>
		/// <c>o32 0F 00 /3</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>LTR r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 00 /3</c><br/>
		/// <br/>
		/// <c>286+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664394)]
public static void ltr(AssemblerMemoryOperand dst) {}
		/// <summary>lwpins instruction.<br/>
		/// <br/>
		/// <c>LWPINS r32, r/m32, imm32</c><br/>
		/// <br/>
		/// <c>XOP.L0.XA.W0 12 /0 id</c><br/>
		/// <br/>
		/// <c>LWP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664395)]
public static void lwpins(AssemblerRegister32 dst, AssemblerRegister32 src1, int imm) {}
		/// <summary>lwpins instruction.<br/>
		/// <br/>
		/// <c>LWPINS r64, r/m32, imm32</c><br/>
		/// <br/>
		/// <c>XOP.L0.XA.W1 12 /0 id</c><br/>
		/// <br/>
		/// <c>LWP</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664396)]
public static void lwpins(AssemblerRegister64 dst, AssemblerRegister32 src1, int imm) {}
		/// <summary>lwpins instruction.<br/>
		/// <br/>
		/// <c>LWPINS r32, r/m32, imm32</c><br/>
		/// <br/>
		/// <c>XOP.L0.XA.W0 12 /0 id</c><br/>
		/// <br/>
		/// <c>LWP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664397)]
public static void lwpins(AssemblerRegister32 dst, AssemblerMemoryOperand src1, int imm) {}
		/// <summary>lwpins instruction.<br/>
		/// <br/>
		/// <c>LWPINS r64, r/m32, imm32</c><br/>
		/// <br/>
		/// <c>XOP.L0.XA.W1 12 /0 id</c><br/>
		/// <br/>
		/// <c>LWP</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664398)]
public static void lwpins(AssemblerRegister64 dst, AssemblerMemoryOperand src1, int imm) {}
		/// <summary>lwpins instruction.<br/>
		/// <br/>
		/// <c>LWPINS r32, r/m32, imm32</c><br/>
		/// <br/>
		/// <c>XOP.L0.XA.W0 12 /0 id</c><br/>
		/// <br/>
		/// <c>LWP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664399)]
public static void lwpins(AssemblerRegister32 dst, AssemblerRegister32 src1, uint imm) {}
		/// <summary>lwpins instruction.<br/>
		/// <br/>
		/// <c>LWPINS r64, r/m32, imm32</c><br/>
		/// <br/>
		/// <c>XOP.L0.XA.W1 12 /0 id</c><br/>
		/// <br/>
		/// <c>LWP</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664400)]
public static void lwpins(AssemblerRegister64 dst, AssemblerRegister32 src1, uint imm) {}
		/// <summary>lwpins instruction.<br/>
		/// <br/>
		/// <c>LWPINS r32, r/m32, imm32</c><br/>
		/// <br/>
		/// <c>XOP.L0.XA.W0 12 /0 id</c><br/>
		/// <br/>
		/// <c>LWP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664401)]
public static void lwpins(AssemblerRegister32 dst, AssemblerMemoryOperand src1, uint imm) {}
		/// <summary>lwpins instruction.<br/>
		/// <br/>
		/// <c>LWPINS r64, r/m32, imm32</c><br/>
		/// <br/>
		/// <c>XOP.L0.XA.W1 12 /0 id</c><br/>
		/// <br/>
		/// <c>LWP</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664402)]
public static void lwpins(AssemblerRegister64 dst, AssemblerMemoryOperand src1, uint imm) {}
		/// <summary>lwpval instruction.<br/>
		/// <br/>
		/// <c>LWPVAL r32, r/m32, imm32</c><br/>
		/// <br/>
		/// <c>XOP.L0.XA.W0 12 /1 id</c><br/>
		/// <br/>
		/// <c>LWP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664403)]
public static void lwpval(AssemblerRegister32 dst, AssemblerRegister32 src1, int imm) {}
		/// <summary>lwpval instruction.<br/>
		/// <br/>
		/// <c>LWPVAL r64, r/m32, imm32</c><br/>
		/// <br/>
		/// <c>XOP.L0.XA.W1 12 /1 id</c><br/>
		/// <br/>
		/// <c>LWP</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664404)]
public static void lwpval(AssemblerRegister64 dst, AssemblerRegister32 src1, int imm) {}
		/// <summary>lwpval instruction.<br/>
		/// <br/>
		/// <c>LWPVAL r32, r/m32, imm32</c><br/>
		/// <br/>
		/// <c>XOP.L0.XA.W0 12 /1 id</c><br/>
		/// <br/>
		/// <c>LWP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664405)]
public static void lwpval(AssemblerRegister32 dst, AssemblerMemoryOperand src1, int imm) {}
		/// <summary>lwpval instruction.<br/>
		/// <br/>
		/// <c>LWPVAL r64, r/m32, imm32</c><br/>
		/// <br/>
		/// <c>XOP.L0.XA.W1 12 /1 id</c><br/>
		/// <br/>
		/// <c>LWP</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664406)]
public static void lwpval(AssemblerRegister64 dst, AssemblerMemoryOperand src1, int imm) {}
		/// <summary>lwpval instruction.<br/>
		/// <br/>
		/// <c>LWPVAL r32, r/m32, imm32</c><br/>
		/// <br/>
		/// <c>XOP.L0.XA.W0 12 /1 id</c><br/>
		/// <br/>
		/// <c>LWP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664407)]
public static void lwpval(AssemblerRegister32 dst, AssemblerRegister32 src1, uint imm) {}
		/// <summary>lwpval instruction.<br/>
		/// <br/>
		/// <c>LWPVAL r64, r/m32, imm32</c><br/>
		/// <br/>
		/// <c>XOP.L0.XA.W1 12 /1 id</c><br/>
		/// <br/>
		/// <c>LWP</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664408)]
public static void lwpval(AssemblerRegister64 dst, AssemblerRegister32 src1, uint imm) {}
		/// <summary>lwpval instruction.<br/>
		/// <br/>
		/// <c>LWPVAL r32, r/m32, imm32</c><br/>
		/// <br/>
		/// <c>XOP.L0.XA.W0 12 /1 id</c><br/>
		/// <br/>
		/// <c>LWP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664409)]
public static void lwpval(AssemblerRegister32 dst, AssemblerMemoryOperand src1, uint imm) {}
		/// <summary>lwpval instruction.<br/>
		/// <br/>
		/// <c>LWPVAL r64, r/m32, imm32</c><br/>
		/// <br/>
		/// <c>XOP.L0.XA.W1 12 /1 id</c><br/>
		/// <br/>
		/// <c>LWP</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664410)]
public static void lwpval(AssemblerRegister64 dst, AssemblerMemoryOperand src1, uint imm) {}
		/// <summary>lzcnt instruction.<br/>
		/// <br/>
		/// <c>LZCNT r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 F3 0F BD /r</c><br/>
		/// <br/>
		/// <c>LZCNT</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664411)]
public static void lzcnt(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>lzcnt instruction.<br/>
		/// <br/>
		/// <c>LZCNT r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 F3 0F BD /r</c><br/>
		/// <br/>
		/// <c>LZCNT</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664412)]
public static void lzcnt(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>lzcnt instruction.<br/>
		/// <br/>
		/// <c>LZCNT r64, r/m64</c><br/>
		/// <br/>
		/// <c>F3 o64 0F BD /r</c><br/>
		/// <br/>
		/// <c>LZCNT</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664413)]
public static void lzcnt(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>lzcnt instruction.<br/>
		/// <br/>
		/// <c>LZCNT r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 F3 0F BD /r</c><br/>
		/// <br/>
		/// <c>LZCNT</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664414)]
public static void lzcnt(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>lzcnt instruction.<br/>
		/// <br/>
		/// <c>LZCNT r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 F3 0F BD /r</c><br/>
		/// <br/>
		/// <c>LZCNT</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664415)]
public static void lzcnt(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>lzcnt instruction.<br/>
		/// <br/>
		/// <c>LZCNT r64, r/m64</c><br/>
		/// <br/>
		/// <c>F3 o64 0F BD /r</c><br/>
		/// <br/>
		/// <c>LZCNT</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664416)]
public static void lzcnt(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>maskmovdqu instruction.<br/>
		/// <br/>
		/// <c>MASKMOVDQU xmm1, xmm2</c><br/>
		/// <br/>
		/// <c>66 0F F7 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664417)]
public static void maskmovdqu(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>maskmovq instruction.<br/>
		/// <br/>
		/// <c>MASKMOVQ mm1, mm2</c><br/>
		/// <br/>
		/// <c>NP 0F F7 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664418)]
public static void maskmovq(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>maxpd instruction.<br/>
		/// <br/>
		/// <c>MAXPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 5F /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664419)]
public static void maxpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>maxpd instruction.<br/>
		/// <br/>
		/// <c>MAXPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 5F /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664420)]
public static void maxpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>maxps instruction.<br/>
		/// <br/>
		/// <c>MAXPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 5F /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664421)]
public static void maxps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>maxps instruction.<br/>
		/// <br/>
		/// <c>MAXPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 5F /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664422)]
public static void maxps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>maxsd instruction.<br/>
		/// <br/>
		/// <c>MAXSD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>F2 0F 5F /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664423)]
public static void maxsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>maxsd instruction.<br/>
		/// <br/>
		/// <c>MAXSD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>F2 0F 5F /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664424)]
public static void maxsd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>maxss instruction.<br/>
		/// <br/>
		/// <c>MAXSS xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>F3 0F 5F /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664425)]
public static void maxss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>maxss instruction.<br/>
		/// <br/>
		/// <c>MAXSS xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>F3 0F 5F /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664426)]
public static void maxss(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>mcommit instruction.<br/>
		/// <br/>
		/// <c>MCOMMIT</c><br/>
		/// <br/>
		/// <c>F3 0F 01 FA</c><br/>
		/// <br/>
		/// <c>MCOMMIT</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664427)]
public static void mcommit() {}
		/// <summary>mfence instruction.<br/>
		/// <br/>
		/// <c>MFENCE</c><br/>
		/// <br/>
		/// <c>NP 0F AE F0</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664428)]
public static void mfence() {}
		/// <summary>minpd instruction.<br/>
		/// <br/>
		/// <c>MINPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 5D /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664429)]
public static void minpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>minpd instruction.<br/>
		/// <br/>
		/// <c>MINPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 5D /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664430)]
public static void minpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>minps instruction.<br/>
		/// <br/>
		/// <c>MINPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 5D /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664431)]
public static void minps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>minps instruction.<br/>
		/// <br/>
		/// <c>MINPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 5D /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664432)]
public static void minps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>minsd instruction.<br/>
		/// <br/>
		/// <c>MINSD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>F2 0F 5D /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664433)]
public static void minsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>minsd instruction.<br/>
		/// <br/>
		/// <c>MINSD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>F2 0F 5D /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664434)]
public static void minsd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>minss instruction.<br/>
		/// <br/>
		/// <c>MINSS xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>F3 0F 5D /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664435)]
public static void minss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>minss instruction.<br/>
		/// <br/>
		/// <c>MINSS xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>F3 0F 5D /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664436)]
public static void minss(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>monitor instruction.<br/>
		/// <br/>
		/// <c>MONITOR</c><br/>
		/// <br/>
		/// <c>a64 NP 0F 01 C8</c><br/>
		/// <br/>
		/// <c>MONITOR</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>MONITOR</c><br/>
		/// <br/>
		/// <c>a32 NP 0F 01 C8</c><br/>
		/// <br/>
		/// <c>MONITOR</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>MONITOR</c><br/>
		/// <br/>
		/// <c>a16 NP 0F 01 C8</c><br/>
		/// <br/>
		/// <c>MONITOR</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664437)]
public static void monitor() {}
		/// <summary>monitorx instruction.<br/>
		/// <br/>
		/// <c>MONITORX</c><br/>
		/// <br/>
		/// <c>a64 NP 0F 01 FA</c><br/>
		/// <br/>
		/// <c>MONITORX</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>MONITORX</c><br/>
		/// <br/>
		/// <c>a32 NP 0F 01 FA</c><br/>
		/// <br/>
		/// <c>MONITORX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>MONITORX</c><br/>
		/// <br/>
		/// <c>a16 NP 0F 01 FA</c><br/>
		/// <br/>
		/// <c>MONITORX</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664438)]
public static void monitorx() {}
		/// <summary>montmul instruction.<br/>
		/// <br/>
		/// <c>MONTMUL</c><br/>
		/// <br/>
		/// <c>a64 F3 0F A6 C0</c><br/>
		/// <br/>
		/// <c>PADLOCK_PMM</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>MONTMUL</c><br/>
		/// <br/>
		/// <c>a32 F3 0F A6 C0</c><br/>
		/// <br/>
		/// <c>PADLOCK_PMM</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>MONTMUL</c><br/>
		/// <br/>
		/// <c>a16 F3 0F A6 C0</c><br/>
		/// <br/>
		/// <c>PADLOCK_PMM</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664439)]
public static void montmul() {}
		/// <summary>mov instruction.<br/>
		/// <br/>
		/// <c>MOV r/m8, r8</c><br/>
		/// <br/>
		/// <c>88 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664440)]
public static void mov(AssemblerRegister8 dst, AssemblerRegister8 src) {}
		/// <summary>mov instruction.<br/>
		/// <br/>
		/// <c>MOV moffs8, AL</c><br/>
		/// <br/>
		/// <c>A2 mo</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>MOV r/m8, r8</c><br/>
		/// <br/>
		/// <c>88 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664441)]
public static void mov(AssemblerMemoryOperand dst, AssemblerRegister8 src) {}
		/// <summary>mov instruction.<br/>
		/// <br/>
		/// <c>MOV r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 89 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664442)]
public static void mov(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>mov instruction.<br/>
		/// <br/>
		/// <c>MOV Sreg, r/m16</c><br/>
		/// <br/>
		/// <c>o16 8E /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664443)]
public static void mov(AssemblerRegisterSegment dst, AssemblerRegister16 src) {}
		/// <summary>mov instruction.<br/>
		/// <br/>
		/// <c>MOV moffs16, AX</c><br/>
		/// <br/>
		/// <c>o16 A3 mo</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>MOV r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 89 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664444)]
public static void mov(AssemblerMemoryOperand dst, AssemblerRegister16 src) {}
		/// <summary>mov instruction.<br/>
		/// <br/>
		/// <c>MOV r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 89 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664445)]
public static void mov(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>mov instruction.<br/>
		/// <br/>
		/// <c>MOV Sreg, r32/m16</c><br/>
		/// <br/>
		/// <c>o32 8E /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664446)]
public static void mov(AssemblerRegisterSegment dst, AssemblerRegister32 src) {}
		/// <summary>mov instruction.<br/>
		/// <br/>
		/// <c>MOV cr, r32</c><br/>
		/// <br/>
		/// <c>0F 22 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664447)]
public static void mov(AssemblerRegisterCR dst, AssemblerRegister32 src) {}
		/// <summary>mov instruction.<br/>
		/// <br/>
		/// <c>MOV dr, r32</c><br/>
		/// <br/>
		/// <c>0F 23 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664448)]
public static void mov(AssemblerRegisterDR dst, AssemblerRegister32 src) {}
		/// <summary>mov instruction.<br/>
		/// <br/>
		/// <c>MOV tr, r32</c><br/>
		/// <br/>
		/// <c>0F 26 /r</c><br/>
		/// <br/>
		/// <c>386/486/Cyrix/Geode</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664449)]
public static void mov(AssemblerRegisterTR dst, AssemblerRegister32 src) {}
		/// <summary>mov instruction.<br/>
		/// <br/>
		/// <c>MOV moffs32, EAX</c><br/>
		/// <br/>
		/// <c>o32 A3 mo</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>MOV r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 89 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664450)]
public static void mov(AssemblerMemoryOperand dst, AssemblerRegister32 src) {}
		/// <summary>mov instruction.<br/>
		/// <br/>
		/// <c>MOV r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 89 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664451)]
public static void mov(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>mov instruction.<br/>
		/// <br/>
		/// <c>MOV Sreg, r64/m16</c><br/>
		/// <br/>
		/// <c>o64 8E /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664452)]
public static void mov(AssemblerRegisterSegment dst, AssemblerRegister64 src) {}
		/// <summary>mov instruction.<br/>
		/// <br/>
		/// <c>MOV cr, r64</c><br/>
		/// <br/>
		/// <c>0F 22 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664453)]
public static void mov(AssemblerRegisterCR dst, AssemblerRegister64 src) {}
		/// <summary>mov instruction.<br/>
		/// <br/>
		/// <c>MOV dr, r64</c><br/>
		/// <br/>
		/// <c>0F 23 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664454)]
public static void mov(AssemblerRegisterDR dst, AssemblerRegister64 src) {}
		/// <summary>mov instruction.<br/>
		/// <br/>
		/// <c>MOV moffs64, RAX</c><br/>
		/// <br/>
		/// <c>o64 A3 mo</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>MOV r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 89 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664455)]
public static void mov(AssemblerMemoryOperand dst, AssemblerRegister64 src) {}
		/// <summary>mov instruction.<br/>
		/// <br/>
		/// <c>MOV r/m16, Sreg</c><br/>
		/// <br/>
		/// <c>o16 8C /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664456)]
public static void mov(AssemblerRegister16 dst, AssemblerRegisterSegment src) {}
		/// <summary>mov instruction.<br/>
		/// <br/>
		/// <c>MOV r32/m16, Sreg</c><br/>
		/// <br/>
		/// <c>o32 8C /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664457)]
public static void mov(AssemblerRegister32 dst, AssemblerRegisterSegment src) {}
		/// <summary>mov instruction.<br/>
		/// <br/>
		/// <c>MOV r64/m16, Sreg</c><br/>
		/// <br/>
		/// <c>o64 8C /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664458)]
public static void mov(AssemblerRegister64 dst, AssemblerRegisterSegment src) {}
		/// <summary>mov instruction.<br/>
		/// <br/>
		/// <c>MOV r32/m16, Sreg</c><br/>
		/// <br/>
		/// <c>o32 8C /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>MOV r/m16, Sreg</c><br/>
		/// <br/>
		/// <c>o16 8C /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664459)]
public static void mov(AssemblerMemoryOperand dst, AssemblerRegisterSegment src) {}
		/// <summary>mov instruction.<br/>
		/// <br/>
		/// <c>MOV r32, cr</c><br/>
		/// <br/>
		/// <c>0F 20 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664460)]
public static void mov(AssemblerRegister32 dst, AssemblerRegisterCR src) {}
		/// <summary>mov instruction.<br/>
		/// <br/>
		/// <c>MOV r64, cr</c><br/>
		/// <br/>
		/// <c>0F 20 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664461)]
public static void mov(AssemblerRegister64 dst, AssemblerRegisterCR src) {}
		/// <summary>mov instruction.<br/>
		/// <br/>
		/// <c>MOV r32, dr</c><br/>
		/// <br/>
		/// <c>0F 21 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664462)]
public static void mov(AssemblerRegister32 dst, AssemblerRegisterDR src) {}
		/// <summary>mov instruction.<br/>
		/// <br/>
		/// <c>MOV r64, dr</c><br/>
		/// <br/>
		/// <c>0F 21 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664463)]
public static void mov(AssemblerRegister64 dst, AssemblerRegisterDR src) {}
		/// <summary>mov instruction.<br/>
		/// <br/>
		/// <c>MOV r32, tr</c><br/>
		/// <br/>
		/// <c>0F 24 /r</c><br/>
		/// <br/>
		/// <c>386/486/Cyrix/Geode</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664464)]
public static void mov(AssemblerRegister32 dst, AssemblerRegisterTR src) {}
		/// <summary>mov instruction.<br/>
		/// <br/>
		/// <c>MOV AL, moffs8</c><br/>
		/// <br/>
		/// <c>A0 mo</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>MOV r8, r/m8</c><br/>
		/// <br/>
		/// <c>8A /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664465)]
public static void mov(AssemblerRegister8 dst, AssemblerMemoryOperand src) {}
		/// <summary>mov instruction.<br/>
		/// <br/>
		/// <c>MOV AX, moffs16</c><br/>
		/// <br/>
		/// <c>o16 A1 mo</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>MOV r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 8B /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664466)]
public static void mov(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>mov instruction.<br/>
		/// <br/>
		/// <c>MOV EAX, moffs32</c><br/>
		/// <br/>
		/// <c>o32 A1 mo</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>MOV r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 8B /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664467)]
public static void mov(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>mov instruction.<br/>
		/// <br/>
		/// <c>MOV RAX, moffs64</c><br/>
		/// <br/>
		/// <c>o64 A1 mo</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>MOV r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 8B /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664468)]
public static void mov(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>mov instruction.<br/>
		/// <br/>
		/// <c>MOV Sreg, r32/m16</c><br/>
		/// <br/>
		/// <c>o32 8E /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>MOV Sreg, r/m16</c><br/>
		/// <br/>
		/// <c>o16 8E /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664469)]
public static void mov(AssemblerRegisterSegment dst, AssemblerMemoryOperand src) {}
		/// <summary>mov instruction.<br/>
		/// <br/>
		/// <c>MOV r8, imm8</c><br/>
		/// <br/>
		/// <c>B0+rb ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664470)]
public static void mov(AssemblerRegister8 dst, sbyte imm) {}
		/// <summary>mov instruction.<br/>
		/// <br/>
		/// <c>MOV r16, imm16</c><br/>
		/// <br/>
		/// <c>o16 B8+rw iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664471)]
public static void mov(AssemblerRegister16 dst, short imm) {}
		/// <summary>mov instruction.<br/>
		/// <br/>
		/// <c>MOV r32, imm32</c><br/>
		/// <br/>
		/// <c>o32 B8+rd id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664472)]
public static void mov(AssemblerRegister32 dst, int imm) {}
		/// <summary>mov instruction.<br/>
		/// <br/>
		/// <c>MOV r64, imm64</c><br/>
		/// <br/>
		/// <c>o64 B8+ro io</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664473)]
public static void mov(AssemblerRegister64 dst, long imm) {}
		/// <summary>mov instruction.<br/>
		/// <br/>
		/// <c>MOV r/m64, imm32</c><br/>
		/// <br/>
		/// <c>o64 C7 /0 id</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>MOV r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 C7 /0 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>MOV r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 C7 /0 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>MOV r/m8, imm8</c><br/>
		/// <br/>
		/// <c>C6 /0 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664474)]
public static void mov(AssemblerMemoryOperand dst, int imm) {}
		/// <summary>mov instruction.<br/>
		/// <br/>
		/// <c>MOV r8, imm8</c><br/>
		/// <br/>
		/// <c>B0+rb ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664475)]
public static void mov(AssemblerRegister8 dst, byte imm) {}
		/// <summary>mov instruction.<br/>
		/// <br/>
		/// <c>MOV r16, imm16</c><br/>
		/// <br/>
		/// <c>o16 B8+rw iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664476)]
public static void mov(AssemblerRegister16 dst, ushort imm) {}
		/// <summary>mov instruction.<br/>
		/// <br/>
		/// <c>MOV r32, imm32</c><br/>
		/// <br/>
		/// <c>o32 B8+rd id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664477)]
public static void mov(AssemblerRegister32 dst, uint imm) {}
		/// <summary>mov instruction.<br/>
		/// <br/>
		/// <c>MOV r64, imm64</c><br/>
		/// <br/>
		/// <c>o64 B8+ro io</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664478)]
public static void mov(AssemblerRegister64 dst, ulong imm) {}
		/// <summary>mov instruction.<br/>
		/// <br/>
		/// <c>MOV r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 C7 /0 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>MOV r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 C7 /0 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>MOV r/m8, imm8</c><br/>
		/// <br/>
		/// <c>C6 /0 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664479)]
public static void mov(AssemblerMemoryOperand dst, uint imm) {}
		/// <summary>movapd instruction.<br/>
		/// <br/>
		/// <c>MOVAPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 28 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664480)]
public static void movapd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>movapd instruction.<br/>
		/// <br/>
		/// <c>MOVAPD xmm2/m128, xmm1</c><br/>
		/// <br/>
		/// <c>66 0F 29 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664481)]
public static void movapd(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>movapd instruction.<br/>
		/// <br/>
		/// <c>MOVAPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 28 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664482)]
public static void movapd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>movaps instruction.<br/>
		/// <br/>
		/// <c>MOVAPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 28 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664483)]
public static void movaps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>movaps instruction.<br/>
		/// <br/>
		/// <c>MOVAPS xmm2/m128, xmm1</c><br/>
		/// <br/>
		/// <c>NP 0F 29 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664484)]
public static void movaps(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>movaps instruction.<br/>
		/// <br/>
		/// <c>MOVAPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 28 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664485)]
public static void movaps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>movbe instruction.<br/>
		/// <br/>
		/// <c>MOVBE m16, r16</c><br/>
		/// <br/>
		/// <c>o16 0F 38 F1 /r</c><br/>
		/// <br/>
		/// <c>MOVBE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664486)]
public static void movbe(AssemblerMemoryOperand dst, AssemblerRegister16 src) {}
		/// <summary>movbe instruction.<br/>
		/// <br/>
		/// <c>MOVBE m32, r32</c><br/>
		/// <br/>
		/// <c>o32 0F 38 F1 /r</c><br/>
		/// <br/>
		/// <c>MOVBE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664487)]
public static void movbe(AssemblerMemoryOperand dst, AssemblerRegister32 src) {}
		/// <summary>movbe instruction.<br/>
		/// <br/>
		/// <c>MOVBE m64, r64</c><br/>
		/// <br/>
		/// <c>o64 0F 38 F1 /r</c><br/>
		/// <br/>
		/// <c>MOVBE</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664488)]
public static void movbe(AssemblerMemoryOperand dst, AssemblerRegister64 src) {}
		/// <summary>movbe instruction.<br/>
		/// <br/>
		/// <c>MOVBE r16, m16</c><br/>
		/// <br/>
		/// <c>o16 0F 38 F0 /r</c><br/>
		/// <br/>
		/// <c>MOVBE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664489)]
public static void movbe(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>movbe instruction.<br/>
		/// <br/>
		/// <c>MOVBE r32, m32</c><br/>
		/// <br/>
		/// <c>o32 0F 38 F0 /r</c><br/>
		/// <br/>
		/// <c>MOVBE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664490)]
public static void movbe(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>movbe instruction.<br/>
		/// <br/>
		/// <c>MOVBE r64, m64</c><br/>
		/// <br/>
		/// <c>o64 0F 38 F0 /r</c><br/>
		/// <br/>
		/// <c>MOVBE</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664491)]
public static void movbe(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>movd instruction.<br/>
		/// <br/>
		/// <c>MOVD mm, r/m32</c><br/>
		/// <br/>
		/// <c>NP 0F 6E /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664492)]
public static void movd(AssemblerRegisterMM dst, AssemblerRegister32 src) {}
		/// <summary>movd instruction.<br/>
		/// <br/>
		/// <c>MOVD xmm, r/m32</c><br/>
		/// <br/>
		/// <c>66 0F 6E /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664493)]
public static void movd(AssemblerRegisterXMM dst, AssemblerRegister32 src) {}
		/// <summary>movd instruction.<br/>
		/// <br/>
		/// <c>MOVD r/m32, mm</c><br/>
		/// <br/>
		/// <c>NP 0F 7E /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664494)]
public static void movd(AssemblerRegister32 dst, AssemblerRegisterMM src) {}
		/// <summary>movd instruction.<br/>
		/// <br/>
		/// <c>MOVD r/m32, mm</c><br/>
		/// <br/>
		/// <c>NP 0F 7E /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664495)]
public static void movd(AssemblerMemoryOperand dst, AssemblerRegisterMM src) {}
		/// <summary>movd instruction.<br/>
		/// <br/>
		/// <c>MOVD r/m32, xmm</c><br/>
		/// <br/>
		/// <c>66 0F 7E /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664496)]
public static void movd(AssemblerRegister32 dst, AssemblerRegisterXMM src) {}
		/// <summary>movd instruction.<br/>
		/// <br/>
		/// <c>MOVD r/m32, xmm</c><br/>
		/// <br/>
		/// <c>66 0F 7E /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664497)]
public static void movd(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>movd instruction.<br/>
		/// <br/>
		/// <c>MOVD mm, r/m32</c><br/>
		/// <br/>
		/// <c>NP 0F 6E /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664498)]
public static void movd(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>movd instruction.<br/>
		/// <br/>
		/// <c>MOVD xmm, r/m32</c><br/>
		/// <br/>
		/// <c>66 0F 6E /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664499)]
public static void movd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>movddup instruction.<br/>
		/// <br/>
		/// <c>MOVDDUP xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>F2 0F 12 /r</c><br/>
		/// <br/>
		/// <c>SSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664500)]
public static void movddup(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>movddup instruction.<br/>
		/// <br/>
		/// <c>MOVDDUP xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>F2 0F 12 /r</c><br/>
		/// <br/>
		/// <c>SSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664501)]
public static void movddup(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>movdir64b instruction.<br/>
		/// <br/>
		/// <c>MOVDIR64B r16, m512</c><br/>
		/// <br/>
		/// <c>a16 66 0F 38 F8 /r</c><br/>
		/// <br/>
		/// <c>MOVDIR64B</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664502)]
public static void movdir64b(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>movdir64b instruction.<br/>
		/// <br/>
		/// <c>MOVDIR64B r32, m512</c><br/>
		/// <br/>
		/// <c>a32 66 0F 38 F8 /r</c><br/>
		/// <br/>
		/// <c>MOVDIR64B</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664503)]
public static void movdir64b(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>movdir64b instruction.<br/>
		/// <br/>
		/// <c>MOVDIR64B r64, m512</c><br/>
		/// <br/>
		/// <c>a64 66 0F 38 F8 /r</c><br/>
		/// <br/>
		/// <c>MOVDIR64B</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664504)]
public static void movdir64b(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>movdiri instruction.<br/>
		/// <br/>
		/// <c>MOVDIRI m32, r32</c><br/>
		/// <br/>
		/// <c>NP 0F 38 F9 /r</c><br/>
		/// <br/>
		/// <c>MOVDIRI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664505)]
public static void movdiri(AssemblerMemoryOperand dst, AssemblerRegister32 src) {}
		/// <summary>movdiri instruction.<br/>
		/// <br/>
		/// <c>MOVDIRI m64, r64</c><br/>
		/// <br/>
		/// <c>NP o64 0F 38 F9 /r</c><br/>
		/// <br/>
		/// <c>MOVDIRI</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664506)]
public static void movdiri(AssemblerMemoryOperand dst, AssemblerRegister64 src) {}
		/// <summary>movdq2q instruction.<br/>
		/// <br/>
		/// <c>MOVDQ2Q mm, xmm</c><br/>
		/// <br/>
		/// <c>F2 0F D6 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664507)]
public static void movdq2q(AssemblerRegisterMM dst, AssemblerRegisterXMM src) {}
		/// <summary>movdqa instruction.<br/>
		/// <br/>
		/// <c>MOVDQA xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 6F /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664508)]
public static void movdqa(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>movdqa instruction.<br/>
		/// <br/>
		/// <c>MOVDQA xmm2/m128, xmm1</c><br/>
		/// <br/>
		/// <c>66 0F 7F /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664509)]
public static void movdqa(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>movdqa instruction.<br/>
		/// <br/>
		/// <c>MOVDQA xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 6F /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664510)]
public static void movdqa(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>movdqu instruction.<br/>
		/// <br/>
		/// <c>MOVDQU xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>F3 0F 6F /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664511)]
public static void movdqu(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>movdqu instruction.<br/>
		/// <br/>
		/// <c>MOVDQU xmm2/m128, xmm1</c><br/>
		/// <br/>
		/// <c>F3 0F 7F /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664512)]
public static void movdqu(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>movdqu instruction.<br/>
		/// <br/>
		/// <c>MOVDQU xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>F3 0F 6F /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664513)]
public static void movdqu(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>movhlps instruction.<br/>
		/// <br/>
		/// <c>MOVHLPS xmm1, xmm2</c><br/>
		/// <br/>
		/// <c>NP 0F 12 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664514)]
public static void movhlps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>movhpd instruction.<br/>
		/// <br/>
		/// <c>MOVHPD m64, xmm1</c><br/>
		/// <br/>
		/// <c>66 0F 17 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664515)]
public static void movhpd(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>movhpd instruction.<br/>
		/// <br/>
		/// <c>MOVHPD xmm1, m64</c><br/>
		/// <br/>
		/// <c>66 0F 16 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664516)]
public static void movhpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>movhps instruction.<br/>
		/// <br/>
		/// <c>MOVHPS m64, xmm1</c><br/>
		/// <br/>
		/// <c>NP 0F 17 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664517)]
public static void movhps(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>movhps instruction.<br/>
		/// <br/>
		/// <c>MOVHPS xmm1, m64</c><br/>
		/// <br/>
		/// <c>NP 0F 16 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664518)]
public static void movhps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>movlhps instruction.<br/>
		/// <br/>
		/// <c>MOVLHPS xmm1, xmm2</c><br/>
		/// <br/>
		/// <c>NP 0F 16 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664519)]
public static void movlhps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>movlpd instruction.<br/>
		/// <br/>
		/// <c>MOVLPD m64, xmm1</c><br/>
		/// <br/>
		/// <c>66 0F 13 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664520)]
public static void movlpd(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>movlpd instruction.<br/>
		/// <br/>
		/// <c>MOVLPD xmm1, m64</c><br/>
		/// <br/>
		/// <c>66 0F 12 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664521)]
public static void movlpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>movlps instruction.<br/>
		/// <br/>
		/// <c>MOVLPS m64, xmm1</c><br/>
		/// <br/>
		/// <c>NP 0F 13 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664522)]
public static void movlps(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>movlps instruction.<br/>
		/// <br/>
		/// <c>MOVLPS xmm1, m64</c><br/>
		/// <br/>
		/// <c>NP 0F 12 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664523)]
public static void movlps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>movmskpd instruction.<br/>
		/// <br/>
		/// <c>MOVMSKPD r32, xmm</c><br/>
		/// <br/>
		/// <c>66 0F 50 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664524)]
public static void movmskpd(AssemblerRegister32 dst, AssemblerRegisterXMM src) {}
		/// <summary>movmskpd instruction.<br/>
		/// <br/>
		/// <c>MOVMSKPD r64, xmm</c><br/>
		/// <br/>
		/// <c>66 o64 0F 50 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664525)]
public static void movmskpd(AssemblerRegister64 dst, AssemblerRegisterXMM src) {}
		/// <summary>movmskps instruction.<br/>
		/// <br/>
		/// <c>MOVMSKPS r32, xmm</c><br/>
		/// <br/>
		/// <c>NP 0F 50 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664526)]
public static void movmskps(AssemblerRegister32 dst, AssemblerRegisterXMM src) {}
		/// <summary>movmskps instruction.<br/>
		/// <br/>
		/// <c>MOVMSKPS r64, xmm</c><br/>
		/// <br/>
		/// <c>NP o64 0F 50 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664527)]
public static void movmskps(AssemblerRegister64 dst, AssemblerRegisterXMM src) {}
		/// <summary>movntdq instruction.<br/>
		/// <br/>
		/// <c>MOVNTDQ m128, xmm1</c><br/>
		/// <br/>
		/// <c>66 0F E7 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664528)]
public static void movntdq(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>movntdqa instruction.<br/>
		/// <br/>
		/// <c>MOVNTDQA xmm1, m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 2A /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664529)]
public static void movntdqa(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>movnti instruction.<br/>
		/// <br/>
		/// <c>MOVNTI m32, r32</c><br/>
		/// <br/>
		/// <c>NP 0F C3 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664530)]
public static void movnti(AssemblerMemoryOperand dst, AssemblerRegister32 src) {}
		/// <summary>movnti instruction.<br/>
		/// <br/>
		/// <c>MOVNTI m64, r64</c><br/>
		/// <br/>
		/// <c>NP o64 0F C3 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664531)]
public static void movnti(AssemblerMemoryOperand dst, AssemblerRegister64 src) {}
		/// <summary>movntpd instruction.<br/>
		/// <br/>
		/// <c>MOVNTPD m128, xmm1</c><br/>
		/// <br/>
		/// <c>66 0F 2B /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664532)]
public static void movntpd(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>movntps instruction.<br/>
		/// <br/>
		/// <c>MOVNTPS m128, xmm1</c><br/>
		/// <br/>
		/// <c>NP 0F 2B /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664533)]
public static void movntps(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>movntq instruction.<br/>
		/// <br/>
		/// <c>MOVNTQ m64, mm</c><br/>
		/// <br/>
		/// <c>NP 0F E7 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664534)]
public static void movntq(AssemblerMemoryOperand dst, AssemblerRegisterMM src) {}
		/// <summary>movntsd instruction.<br/>
		/// <br/>
		/// <c>MOVNTSD m64, xmm1</c><br/>
		/// <br/>
		/// <c>F2 0F 2B /r</c><br/>
		/// <br/>
		/// <c>SSE4A</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664535)]
public static void movntsd(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>movntss instruction.<br/>
		/// <br/>
		/// <c>MOVNTSS m32, xmm1</c><br/>
		/// <br/>
		/// <c>F3 0F 2B /r</c><br/>
		/// <br/>
		/// <c>SSE4A</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664536)]
public static void movntss(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>movq instruction.<br/>
		/// <br/>
		/// <c>MOVQ mm, r/m64</c><br/>
		/// <br/>
		/// <c>NP o64 0F 6E /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664537)]
public static void movq(AssemblerRegisterMM dst, AssemblerRegister64 src) {}
		/// <summary>movq instruction.<br/>
		/// <br/>
		/// <c>MOVQ xmm, r/m64</c><br/>
		/// <br/>
		/// <c>66 o64 0F 6E /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664538)]
public static void movq(AssemblerRegisterXMM dst, AssemblerRegister64 src) {}
		/// <summary>movq instruction.<br/>
		/// <br/>
		/// <c>MOVQ r/m64, mm</c><br/>
		/// <br/>
		/// <c>NP o64 0F 7E /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664539)]
public static void movq(AssemblerRegister64 dst, AssemblerRegisterMM src) {}
		/// <summary>movq instruction.<br/>
		/// <br/>
		/// <c>MOVQ mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 6F /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664540)]
public static void movq(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>movq instruction.<br/>
		/// <br/>
		/// <c>MOVQ mm/m64, mm</c><br/>
		/// <br/>
		/// <c>NP 0F 7F /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664541)]
public static void movq(AssemblerMemoryOperand dst, AssemblerRegisterMM src) {}
		/// <summary>movq instruction.<br/>
		/// <br/>
		/// <c>MOVQ r/m64, xmm</c><br/>
		/// <br/>
		/// <c>66 o64 0F 7E /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664542)]
public static void movq(AssemblerRegister64 dst, AssemblerRegisterXMM src) {}
		/// <summary>movq instruction.<br/>
		/// <br/>
		/// <c>MOVQ xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>F3 0F 7E /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664543)]
public static void movq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>movq instruction.<br/>
		/// <br/>
		/// <c>MOVQ xmm2/m64, xmm1</c><br/>
		/// <br/>
		/// <c>66 0F D6 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664544)]
public static void movq(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>movq instruction.<br/>
		/// <br/>
		/// <c>MOVQ mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 6F /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664545)]
public static void movq(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>movq instruction.<br/>
		/// <br/>
		/// <c>MOVQ xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>F3 0F 7E /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664546)]
public static void movq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>movq2dq instruction.<br/>
		/// <br/>
		/// <c>MOVQ2DQ xmm, mm</c><br/>
		/// <br/>
		/// <c>F3 0F D6 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664547)]
public static void movq2dq(AssemblerRegisterXMM dst, AssemblerRegisterMM src) {}
		/// <summary>movsb instruction.<br/>
		/// <br/>
		/// <c>MOVSB</c><br/>
		/// <br/>
		/// <c>A4</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664548)]
public static void movsb() {}
		/// <summary>movsd instruction.<br/>
		/// <br/>
		/// <c>MOVSD</c><br/>
		/// <br/>
		/// <c>o32 A5</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664549)]
public static void movsd() {}
		/// <summary>movsd instruction.<br/>
		/// <br/>
		/// <c>MOVSD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>F2 0F 10 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664550)]
public static void movsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>movsd instruction.<br/>
		/// <br/>
		/// <c>MOVSD xmm1/m64, xmm2</c><br/>
		/// <br/>
		/// <c>F2 0F 11 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664551)]
public static void movsd(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>movsd instruction.<br/>
		/// <br/>
		/// <c>MOVSD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>F2 0F 10 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664552)]
public static void movsd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>movshdup instruction.<br/>
		/// <br/>
		/// <c>MOVSHDUP xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>F3 0F 16 /r</c><br/>
		/// <br/>
		/// <c>SSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664553)]
public static void movshdup(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>movshdup instruction.<br/>
		/// <br/>
		/// <c>MOVSHDUP xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>F3 0F 16 /r</c><br/>
		/// <br/>
		/// <c>SSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664554)]
public static void movshdup(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>movsldup instruction.<br/>
		/// <br/>
		/// <c>MOVSLDUP xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>F3 0F 12 /r</c><br/>
		/// <br/>
		/// <c>SSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664555)]
public static void movsldup(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>movsldup instruction.<br/>
		/// <br/>
		/// <c>MOVSLDUP xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>F3 0F 12 /r</c><br/>
		/// <br/>
		/// <c>SSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664556)]
public static void movsldup(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>movsq instruction.<br/>
		/// <br/>
		/// <c>MOVSQ</c><br/>
		/// <br/>
		/// <c>o64 A5</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664557)]
public static void movsq() {}
		/// <summary>movss instruction.<br/>
		/// <br/>
		/// <c>MOVSS xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>F3 0F 10 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664558)]
public static void movss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>movss instruction.<br/>
		/// <br/>
		/// <c>MOVSS xmm2/m32, xmm1</c><br/>
		/// <br/>
		/// <c>F3 0F 11 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664559)]
public static void movss(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>movss instruction.<br/>
		/// <br/>
		/// <c>MOVSS xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>F3 0F 10 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664560)]
public static void movss(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>movsw instruction.<br/>
		/// <br/>
		/// <c>MOVSW</c><br/>
		/// <br/>
		/// <c>o16 A5</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664561)]
public static void movsw() {}
		/// <summary>movsx instruction.<br/>
		/// <br/>
		/// <c>MOVSX r16, r/m8</c><br/>
		/// <br/>
		/// <c>o16 0F BE /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664562)]
public static void movsx(AssemblerRegister16 dst, AssemblerRegister8 src) {}
		/// <summary>movsx instruction.<br/>
		/// <br/>
		/// <c>MOVSX r32, r/m8</c><br/>
		/// <br/>
		/// <c>o32 0F BE /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664563)]
public static void movsx(AssemblerRegister32 dst, AssemblerRegister8 src) {}
		/// <summary>movsx instruction.<br/>
		/// <br/>
		/// <c>MOVSX r64, r/m8</c><br/>
		/// <br/>
		/// <c>o64 0F BE /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664564)]
public static void movsx(AssemblerRegister64 dst, AssemblerRegister8 src) {}
		/// <summary>movsx instruction.<br/>
		/// <br/>
		/// <c>MOVSX r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F BF /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664565)]
public static void movsx(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>movsx instruction.<br/>
		/// <br/>
		/// <c>MOVSX r32, r/m16</c><br/>
		/// <br/>
		/// <c>o32 0F BF /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664566)]
public static void movsx(AssemblerRegister32 dst, AssemblerRegister16 src) {}
		/// <summary>movsx instruction.<br/>
		/// <br/>
		/// <c>MOVSX r64, r/m16</c><br/>
		/// <br/>
		/// <c>o64 0F BF /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664567)]
public static void movsx(AssemblerRegister64 dst, AssemblerRegister16 src) {}
		/// <summary>movsx instruction.<br/>
		/// <br/>
		/// <c>MOVSX r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F BF /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>MOVSX r16, r/m8</c><br/>
		/// <br/>
		/// <c>o16 0F BE /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664568)]
public static void movsx(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>movsx instruction.<br/>
		/// <br/>
		/// <c>MOVSX r32, r/m16</c><br/>
		/// <br/>
		/// <c>o32 0F BF /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>MOVSX r32, r/m8</c><br/>
		/// <br/>
		/// <c>o32 0F BE /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664569)]
public static void movsx(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>movsx instruction.<br/>
		/// <br/>
		/// <c>MOVSX r64, r/m16</c><br/>
		/// <br/>
		/// <c>o64 0F BF /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>MOVSX r64, r/m8</c><br/>
		/// <br/>
		/// <c>o64 0F BE /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664570)]
public static void movsx(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>movsxd instruction.<br/>
		/// <br/>
		/// <c>MOVSXD r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 63 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664571)]
public static void movsxd(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>movsxd instruction.<br/>
		/// <br/>
		/// <c>MOVSXD r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 63 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664572)]
public static void movsxd(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>movsxd instruction.<br/>
		/// <br/>
		/// <c>MOVSXD r64, r/m32</c><br/>
		/// <br/>
		/// <c>o64 63 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664573)]
public static void movsxd(AssemblerRegister64 dst, AssemblerRegister32 src) {}
		/// <summary>movsxd instruction.<br/>
		/// <br/>
		/// <c>MOVSXD r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 63 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664574)]
public static void movsxd(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>movsxd instruction.<br/>
		/// <br/>
		/// <c>MOVSXD r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 63 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664575)]
public static void movsxd(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>movsxd instruction.<br/>
		/// <br/>
		/// <c>MOVSXD r64, r/m32</c><br/>
		/// <br/>
		/// <c>o64 63 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664576)]
public static void movsxd(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>movupd instruction.<br/>
		/// <br/>
		/// <c>MOVUPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 10 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664577)]
public static void movupd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>movupd instruction.<br/>
		/// <br/>
		/// <c>MOVUPD xmm2/m128, xmm1</c><br/>
		/// <br/>
		/// <c>66 0F 11 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664578)]
public static void movupd(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>movupd instruction.<br/>
		/// <br/>
		/// <c>MOVUPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 10 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664579)]
public static void movupd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>movups instruction.<br/>
		/// <br/>
		/// <c>MOVUPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 10 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664580)]
public static void movups(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>movups instruction.<br/>
		/// <br/>
		/// <c>MOVUPS xmm2/m128, xmm1</c><br/>
		/// <br/>
		/// <c>NP 0F 11 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664581)]
public static void movups(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>movups instruction.<br/>
		/// <br/>
		/// <c>MOVUPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 10 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664582)]
public static void movups(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>movzx instruction.<br/>
		/// <br/>
		/// <c>MOVZX r16, r/m8</c><br/>
		/// <br/>
		/// <c>o16 0F B6 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664583)]
public static void movzx(AssemblerRegister16 dst, AssemblerRegister8 src) {}
		/// <summary>movzx instruction.<br/>
		/// <br/>
		/// <c>MOVZX r32, r/m8</c><br/>
		/// <br/>
		/// <c>o32 0F B6 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664584)]
public static void movzx(AssemblerRegister32 dst, AssemblerRegister8 src) {}
		/// <summary>movzx instruction.<br/>
		/// <br/>
		/// <c>MOVZX r64, r/m8</c><br/>
		/// <br/>
		/// <c>o64 0F B6 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664585)]
public static void movzx(AssemblerRegister64 dst, AssemblerRegister8 src) {}
		/// <summary>movzx instruction.<br/>
		/// <br/>
		/// <c>MOVZX r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F B7 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664586)]
public static void movzx(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>movzx instruction.<br/>
		/// <br/>
		/// <c>MOVZX r32, r/m16</c><br/>
		/// <br/>
		/// <c>o32 0F B7 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664587)]
public static void movzx(AssemblerRegister32 dst, AssemblerRegister16 src) {}
		/// <summary>movzx instruction.<br/>
		/// <br/>
		/// <c>MOVZX r64, r/m16</c><br/>
		/// <br/>
		/// <c>o64 0F B7 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664588)]
public static void movzx(AssemblerRegister64 dst, AssemblerRegister16 src) {}
		/// <summary>movzx instruction.<br/>
		/// <br/>
		/// <c>MOVZX r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F B7 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>MOVZX r16, r/m8</c><br/>
		/// <br/>
		/// <c>o16 0F B6 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664589)]
public static void movzx(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>movzx instruction.<br/>
		/// <br/>
		/// <c>MOVZX r32, r/m16</c><br/>
		/// <br/>
		/// <c>o32 0F B7 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>MOVZX r32, r/m8</c><br/>
		/// <br/>
		/// <c>o32 0F B6 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664590)]
public static void movzx(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>movzx instruction.<br/>
		/// <br/>
		/// <c>MOVZX r64, r/m16</c><br/>
		/// <br/>
		/// <c>o64 0F B7 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>MOVZX r64, r/m8</c><br/>
		/// <br/>
		/// <c>o64 0F B6 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664591)]
public static void movzx(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>mpsadbw instruction.<br/>
		/// <br/>
		/// <c>MPSADBW xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 42 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664592)]
public static void mpsadbw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>mpsadbw instruction.<br/>
		/// <br/>
		/// <c>MPSADBW xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 42 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664593)]
public static void mpsadbw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>mpsadbw instruction.<br/>
		/// <br/>
		/// <c>MPSADBW xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 42 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664594)]
public static void mpsadbw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>mpsadbw instruction.<br/>
		/// <br/>
		/// <c>MPSADBW xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 42 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664595)]
public static void mpsadbw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>mul instruction.<br/>
		/// <br/>
		/// <c>MUL r/m8</c><br/>
		/// <br/>
		/// <c>F6 /4</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664596)]
public static void mul(AssemblerRegister8 dst) {}
		/// <summary>mul instruction.<br/>
		/// <br/>
		/// <c>MUL r/m16</c><br/>
		/// <br/>
		/// <c>o16 F7 /4</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664597)]
public static void mul(AssemblerRegister16 dst) {}
		/// <summary>mul instruction.<br/>
		/// <br/>
		/// <c>MUL r/m32</c><br/>
		/// <br/>
		/// <c>o32 F7 /4</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664598)]
public static void mul(AssemblerRegister32 dst) {}
		/// <summary>mul instruction.<br/>
		/// <br/>
		/// <c>MUL r/m64</c><br/>
		/// <br/>
		/// <c>o64 F7 /4</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664599)]
public static void mul(AssemblerRegister64 dst) {}
		/// <summary>mul instruction.<br/>
		/// <br/>
		/// <c>MUL r/m64</c><br/>
		/// <br/>
		/// <c>o64 F7 /4</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>MUL r/m32</c><br/>
		/// <br/>
		/// <c>o32 F7 /4</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>MUL r/m16</c><br/>
		/// <br/>
		/// <c>o16 F7 /4</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>MUL r/m8</c><br/>
		/// <br/>
		/// <c>F6 /4</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664600)]
public static void mul(AssemblerMemoryOperand dst) {}
		/// <summary>mulpd instruction.<br/>
		/// <br/>
		/// <c>MULPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 59 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664601)]
public static void mulpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>mulpd instruction.<br/>
		/// <br/>
		/// <c>MULPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 59 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664602)]
public static void mulpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>mulps instruction.<br/>
		/// <br/>
		/// <c>MULPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 59 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664603)]
public static void mulps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>mulps instruction.<br/>
		/// <br/>
		/// <c>MULPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 59 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664604)]
public static void mulps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>mulsd instruction.<br/>
		/// <br/>
		/// <c>MULSD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>F2 0F 59 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664605)]
public static void mulsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>mulsd instruction.<br/>
		/// <br/>
		/// <c>MULSD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>F2 0F 59 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664606)]
public static void mulsd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>mulss instruction.<br/>
		/// <br/>
		/// <c>MULSS xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>F3 0F 59 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664607)]
public static void mulss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>mulss instruction.<br/>
		/// <br/>
		/// <c>MULSS xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>F3 0F 59 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664608)]
public static void mulss(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>mulx instruction.<br/>
		/// <br/>
		/// <c>MULX r32a, r32b, r/m32</c><br/>
		/// <br/>
		/// <c>VEX.LZ.F2.0F38.W0 F6 /r</c><br/>
		/// <br/>
		/// <c>BMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664609)]
public static void mulx(AssemblerRegister32 dst, AssemblerRegister32 src1, AssemblerRegister32 src2) {}
		/// <summary>mulx instruction.<br/>
		/// <br/>
		/// <c>MULX r64a, r64b, r/m64</c><br/>
		/// <br/>
		/// <c>VEX.LZ.F2.0F38.W1 F6 /r</c><br/>
		/// <br/>
		/// <c>BMI2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664610)]
public static void mulx(AssemblerRegister64 dst, AssemblerRegister64 src1, AssemblerRegister64 src2) {}
		/// <summary>mulx instruction.<br/>
		/// <br/>
		/// <c>MULX r32a, r32b, r/m32</c><br/>
		/// <br/>
		/// <c>VEX.LZ.F2.0F38.W0 F6 /r</c><br/>
		/// <br/>
		/// <c>BMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664611)]
public static void mulx(AssemblerRegister32 dst, AssemblerRegister32 src1, AssemblerMemoryOperand src2) {}
		/// <summary>mulx instruction.<br/>
		/// <br/>
		/// <c>MULX r64a, r64b, r/m64</c><br/>
		/// <br/>
		/// <c>VEX.LZ.F2.0F38.W1 F6 /r</c><br/>
		/// <br/>
		/// <c>BMI2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664612)]
public static void mulx(AssemblerRegister64 dst, AssemblerRegister64 src1, AssemblerMemoryOperand src2) {}
		/// <summary>mwait instruction.<br/>
		/// <br/>
		/// <c>MWAIT</c><br/>
		/// <br/>
		/// <c>NP 0F 01 C9</c><br/>
		/// <br/>
		/// <c>MONITOR</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664613)]
public static void mwait() {}
		/// <summary>mwaitx instruction.<br/>
		/// <br/>
		/// <c>MWAITX</c><br/>
		/// <br/>
		/// <c>NP 0F 01 FB</c><br/>
		/// <br/>
		/// <c>MONITORX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664614)]
public static void mwaitx() {}
		/// <summary>neg instruction.<br/>
		/// <br/>
		/// <c>NEG r/m8</c><br/>
		/// <br/>
		/// <c>F6 /3</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664615)]
public static void neg(AssemblerRegister8 dst) {}
		/// <summary>neg instruction.<br/>
		/// <br/>
		/// <c>NEG r/m16</c><br/>
		/// <br/>
		/// <c>o16 F7 /3</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664616)]
public static void neg(AssemblerRegister16 dst) {}
		/// <summary>neg instruction.<br/>
		/// <br/>
		/// <c>NEG r/m32</c><br/>
		/// <br/>
		/// <c>o32 F7 /3</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664617)]
public static void neg(AssemblerRegister32 dst) {}
		/// <summary>neg instruction.<br/>
		/// <br/>
		/// <c>NEG r/m64</c><br/>
		/// <br/>
		/// <c>o64 F7 /3</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664618)]
public static void neg(AssemblerRegister64 dst) {}
		/// <summary>neg instruction.<br/>
		/// <br/>
		/// <c>NEG r/m64</c><br/>
		/// <br/>
		/// <c>o64 F7 /3</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>NEG r/m32</c><br/>
		/// <br/>
		/// <c>o32 F7 /3</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>NEG r/m16</c><br/>
		/// <br/>
		/// <c>o16 F7 /3</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>NEG r/m8</c><br/>
		/// <br/>
		/// <c>F6 /3</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664619)]
public static void neg(AssemblerMemoryOperand dst) {}
		/// <summary>nop instruction.<br/>
		/// <br/>
		/// <c>NOP</c><br/>
		/// <br/>
		/// <c>o32 90</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>NOP</c><br/>
		/// <br/>
		/// <c>o16 90</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664620)]
public static void nop() {}
		/// <summary>nop instruction.<br/>
		/// <br/>
		/// <c>NOP r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 1F /0</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664621)]
public static void nop(AssemblerRegister16 dst) {}
		/// <summary>nop instruction.<br/>
		/// <br/>
		/// <c>NOP r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F 1F /0</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664622)]
public static void nop(AssemblerRegister32 dst) {}
		/// <summary>nop instruction.<br/>
		/// <br/>
		/// <c>NOP r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F 1F /0</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664623)]
public static void nop(AssemblerRegister64 dst) {}
		/// <summary>nop instruction.<br/>
		/// <br/>
		/// <c>NOP r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F 1F /0</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>NOP r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F 1F /0</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>NOP r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 1F /0</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664624)]
public static void nop(AssemblerMemoryOperand dst) {}
		/// <summary>not instruction.<br/>
		/// <br/>
		/// <c>NOT r/m8</c><br/>
		/// <br/>
		/// <c>F6 /2</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664625)]
public static void not(AssemblerRegister8 dst) {}
		/// <summary>not instruction.<br/>
		/// <br/>
		/// <c>NOT r/m16</c><br/>
		/// <br/>
		/// <c>o16 F7 /2</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664626)]
public static void not(AssemblerRegister16 dst) {}
		/// <summary>not instruction.<br/>
		/// <br/>
		/// <c>NOT r/m32</c><br/>
		/// <br/>
		/// <c>o32 F7 /2</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664627)]
public static void not(AssemblerRegister32 dst) {}
		/// <summary>not instruction.<br/>
		/// <br/>
		/// <c>NOT r/m64</c><br/>
		/// <br/>
		/// <c>o64 F7 /2</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664628)]
public static void not(AssemblerRegister64 dst) {}
		/// <summary>not instruction.<br/>
		/// <br/>
		/// <c>NOT r/m64</c><br/>
		/// <br/>
		/// <c>o64 F7 /2</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>NOT r/m32</c><br/>
		/// <br/>
		/// <c>o32 F7 /2</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>NOT r/m16</c><br/>
		/// <br/>
		/// <c>o16 F7 /2</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>NOT r/m8</c><br/>
		/// <br/>
		/// <c>F6 /2</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664629)]
public static void not(AssemblerMemoryOperand dst) {}
		/// <summary>or instruction.<br/>
		/// <br/>
		/// <c>OR r/m8, r8</c><br/>
		/// <br/>
		/// <c>08 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664630)]
public static void or(AssemblerRegister8 dst, AssemblerRegister8 src) {}
		/// <summary>or instruction.<br/>
		/// <br/>
		/// <c>OR r/m8, r8</c><br/>
		/// <br/>
		/// <c>08 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664631)]
public static void or(AssemblerMemoryOperand dst, AssemblerRegister8 src) {}
		/// <summary>or instruction.<br/>
		/// <br/>
		/// <c>OR r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 09 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664632)]
public static void or(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>or instruction.<br/>
		/// <br/>
		/// <c>OR r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 09 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664633)]
public static void or(AssemblerMemoryOperand dst, AssemblerRegister16 src) {}
		/// <summary>or instruction.<br/>
		/// <br/>
		/// <c>OR r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 09 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664634)]
public static void or(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>or instruction.<br/>
		/// <br/>
		/// <c>OR r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 09 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664635)]
public static void or(AssemblerMemoryOperand dst, AssemblerRegister32 src) {}
		/// <summary>or instruction.<br/>
		/// <br/>
		/// <c>OR r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 09 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664636)]
public static void or(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>or instruction.<br/>
		/// <br/>
		/// <c>OR r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 09 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664637)]
public static void or(AssemblerMemoryOperand dst, AssemblerRegister64 src) {}
		/// <summary>or instruction.<br/>
		/// <br/>
		/// <c>OR r8, r/m8</c><br/>
		/// <br/>
		/// <c>0A /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664638)]
public static void or(AssemblerRegister8 dst, AssemblerMemoryOperand src) {}
		/// <summary>or instruction.<br/>
		/// <br/>
		/// <c>OR r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0B /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664639)]
public static void or(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>or instruction.<br/>
		/// <br/>
		/// <c>OR r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0B /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664640)]
public static void or(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>or instruction.<br/>
		/// <br/>
		/// <c>OR r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0B /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664641)]
public static void or(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>or instruction.<br/>
		/// <br/>
		/// <c>OR AL, imm8</c><br/>
		/// <br/>
		/// <c>0C ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>OR r/m8, imm8</c><br/>
		/// <br/>
		/// <c>80 /1 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664642)]
public static void or(AssemblerRegister8 dst, sbyte imm) {}
		/// <summary>or instruction.<br/>
		/// <br/>
		/// <c>OR AX, imm16</c><br/>
		/// <br/>
		/// <c>o16 0D iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>OR r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 81 /1 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>OR r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 83 /1 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664643)]
public static void or(AssemblerRegister16 dst, short imm) {}
		/// <summary>or instruction.<br/>
		/// <br/>
		/// <c>OR EAX, imm32</c><br/>
		/// <br/>
		/// <c>o32 0D id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>OR r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 81 /1 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>OR r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 83 /1 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664644)]
public static void or(AssemblerRegister32 dst, int imm) {}
		/// <summary>or instruction.<br/>
		/// <br/>
		/// <c>OR RAX, imm32</c><br/>
		/// <br/>
		/// <c>o64 0D id</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>OR r/m64, imm32</c><br/>
		/// <br/>
		/// <c>o64 81 /1 id</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>OR r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 83 /1 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664645)]
public static void or(AssemblerRegister64 dst, int imm) {}
		/// <summary>or instruction.<br/>
		/// <br/>
		/// <c>OR r/m64, imm32</c><br/>
		/// <br/>
		/// <c>o64 81 /1 id</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>OR r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 83 /1 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>OR r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 81 /1 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>OR r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 83 /1 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>OR r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 81 /1 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>OR r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 83 /1 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>OR r/m8, imm8</c><br/>
		/// <br/>
		/// <c>80 /1 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664646)]
public static void or(AssemblerMemoryOperand dst, int imm) {}
		/// <summary>or instruction.<br/>
		/// <br/>
		/// <c>OR AL, imm8</c><br/>
		/// <br/>
		/// <c>0C ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>OR r/m8, imm8</c><br/>
		/// <br/>
		/// <c>80 /1 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664647)]
public static void or(AssemblerRegister8 dst, byte imm) {}
		/// <summary>or instruction.<br/>
		/// <br/>
		/// <c>OR AX, imm16</c><br/>
		/// <br/>
		/// <c>o16 0D iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>OR r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 81 /1 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>OR r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 83 /1 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664648)]
public static void or(AssemblerRegister16 dst, ushort imm) {}
		/// <summary>or instruction.<br/>
		/// <br/>
		/// <c>OR EAX, imm32</c><br/>
		/// <br/>
		/// <c>o32 0D id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>OR r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 81 /1 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>OR r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 83 /1 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664649)]
public static void or(AssemblerRegister32 dst, uint imm) {}
		/// <summary>or instruction.<br/>
		/// <br/>
		/// <c>OR r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 81 /1 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>OR r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 83 /1 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>OR r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 81 /1 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>OR r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 83 /1 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>OR r/m8, imm8</c><br/>
		/// <br/>
		/// <c>80 /1 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664650)]
public static void or(AssemblerMemoryOperand dst, uint imm) {}
		/// <summary>orpd instruction.<br/>
		/// <br/>
		/// <c>ORPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 56 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664651)]
public static void orpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>orpd instruction.<br/>
		/// <br/>
		/// <c>ORPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 56 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664652)]
public static void orpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>orps instruction.<br/>
		/// <br/>
		/// <c>ORPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 56 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664653)]
public static void orps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>orps instruction.<br/>
		/// <br/>
		/// <c>ORPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 56 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664654)]
public static void orps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>out instruction.<br/>
		/// <br/>
		/// <c>OUT DX, AL</c><br/>
		/// <br/>
		/// <c>EE</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664655)]
public static void @out(AssemblerRegister16 dst, AssemblerRegister8 src) {}
		/// <summary>out instruction.<br/>
		/// <br/>
		/// <c>OUT imm8, AL</c><br/>
		/// <br/>
		/// <c>E6 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664656)]
public static void @out(sbyte imm, AssemblerRegister8 src) {}
		/// <summary>out instruction.<br/>
		/// <br/>
		/// <c>OUT imm8, AL</c><br/>
		/// <br/>
		/// <c>E6 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664657)]
public static void @out(byte imm, AssemblerRegister8 src) {}
		/// <summary>out instruction.<br/>
		/// <br/>
		/// <c>OUT DX, AX</c><br/>
		/// <br/>
		/// <c>o16 EF</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664658)]
public static void @out(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>out instruction.<br/>
		/// <br/>
		/// <c>OUT imm8, AX</c><br/>
		/// <br/>
		/// <c>o16 E7 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664659)]
public static void @out(sbyte imm, AssemblerRegister16 src) {}
		/// <summary>out instruction.<br/>
		/// <br/>
		/// <c>OUT imm8, AX</c><br/>
		/// <br/>
		/// <c>o16 E7 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664660)]
public static void @out(byte imm, AssemblerRegister16 src) {}
		/// <summary>out instruction.<br/>
		/// <br/>
		/// <c>OUT DX, EAX</c><br/>
		/// <br/>
		/// <c>o32 EF</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664661)]
public static void @out(AssemblerRegister16 dst, AssemblerRegister32 src) {}
		/// <summary>out instruction.<br/>
		/// <br/>
		/// <c>OUT imm8, EAX</c><br/>
		/// <br/>
		/// <c>o32 E7 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664662)]
public static void @out(sbyte imm, AssemblerRegister32 src) {}
		/// <summary>out instruction.<br/>
		/// <br/>
		/// <c>OUT imm8, EAX</c><br/>
		/// <br/>
		/// <c>o32 E7 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664663)]
public static void @out(byte imm, AssemblerRegister32 src) {}
		/// <summary>outsb instruction.<br/>
		/// <br/>
		/// <c>OUTSB</c><br/>
		/// <br/>
		/// <c>6E</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664664)]
public static void outsb() {}
		/// <summary>outsd instruction.<br/>
		/// <br/>
		/// <c>OUTSD</c><br/>
		/// <br/>
		/// <c>o32 6F</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664665)]
public static void outsd() {}
		/// <summary>outsw instruction.<br/>
		/// <br/>
		/// <c>OUTSW</c><br/>
		/// <br/>
		/// <c>o16 6F</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664666)]
public static void outsw() {}
		/// <summary>pabsb instruction.<br/>
		/// <br/>
		/// <c>PABSB mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 38 1C /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664667)]
public static void pabsb(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pabsb instruction.<br/>
		/// <br/>
		/// <c>PABSB xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 1C /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664668)]
public static void pabsb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pabsb instruction.<br/>
		/// <br/>
		/// <c>PABSB mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 38 1C /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664669)]
public static void pabsb(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pabsb instruction.<br/>
		/// <br/>
		/// <c>PABSB xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 1C /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664670)]
public static void pabsb(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pabsd instruction.<br/>
		/// <br/>
		/// <c>PABSD mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 38 1E /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664671)]
public static void pabsd(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pabsd instruction.<br/>
		/// <br/>
		/// <c>PABSD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 1E /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664672)]
public static void pabsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pabsd instruction.<br/>
		/// <br/>
		/// <c>PABSD mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 38 1E /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664673)]
public static void pabsd(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pabsd instruction.<br/>
		/// <br/>
		/// <c>PABSD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 1E /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664674)]
public static void pabsd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pabsw instruction.<br/>
		/// <br/>
		/// <c>PABSW mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 38 1D /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664675)]
public static void pabsw(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pabsw instruction.<br/>
		/// <br/>
		/// <c>PABSW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 1D /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664676)]
public static void pabsw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pabsw instruction.<br/>
		/// <br/>
		/// <c>PABSW mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 38 1D /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664677)]
public static void pabsw(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pabsw instruction.<br/>
		/// <br/>
		/// <c>PABSW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 1D /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664678)]
public static void pabsw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>packssdw instruction.<br/>
		/// <br/>
		/// <c>PACKSSDW mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 6B /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664679)]
public static void packssdw(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>packssdw instruction.<br/>
		/// <br/>
		/// <c>PACKSSDW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 6B /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664680)]
public static void packssdw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>packssdw instruction.<br/>
		/// <br/>
		/// <c>PACKSSDW mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 6B /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664681)]
public static void packssdw(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>packssdw instruction.<br/>
		/// <br/>
		/// <c>PACKSSDW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 6B /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664682)]
public static void packssdw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>packsswb instruction.<br/>
		/// <br/>
		/// <c>PACKSSWB mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 63 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664683)]
public static void packsswb(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>packsswb instruction.<br/>
		/// <br/>
		/// <c>PACKSSWB xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 63 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664684)]
public static void packsswb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>packsswb instruction.<br/>
		/// <br/>
		/// <c>PACKSSWB mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 63 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664685)]
public static void packsswb(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>packsswb instruction.<br/>
		/// <br/>
		/// <c>PACKSSWB xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 63 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664686)]
public static void packsswb(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>packusdw instruction.<br/>
		/// <br/>
		/// <c>PACKUSDW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 2B /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664687)]
public static void packusdw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>packusdw instruction.<br/>
		/// <br/>
		/// <c>PACKUSDW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 2B /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664688)]
public static void packusdw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>packuswb instruction.<br/>
		/// <br/>
		/// <c>PACKUSWB mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 67 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664689)]
public static void packuswb(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>packuswb instruction.<br/>
		/// <br/>
		/// <c>PACKUSWB xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 67 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664690)]
public static void packuswb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>packuswb instruction.<br/>
		/// <br/>
		/// <c>PACKUSWB mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 67 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664691)]
public static void packuswb(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>packuswb instruction.<br/>
		/// <br/>
		/// <c>PACKUSWB xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 67 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664692)]
public static void packuswb(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>paddb instruction.<br/>
		/// <br/>
		/// <c>PADDB mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F FC /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664693)]
public static void paddb(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>paddb instruction.<br/>
		/// <br/>
		/// <c>PADDB xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F FC /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664694)]
public static void paddb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>paddb instruction.<br/>
		/// <br/>
		/// <c>PADDB mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F FC /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664695)]
public static void paddb(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>paddb instruction.<br/>
		/// <br/>
		/// <c>PADDB xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F FC /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664696)]
public static void paddb(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>paddd instruction.<br/>
		/// <br/>
		/// <c>PADDD mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F FE /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664697)]
public static void paddd(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>paddd instruction.<br/>
		/// <br/>
		/// <c>PADDD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F FE /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664698)]
public static void paddd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>paddd instruction.<br/>
		/// <br/>
		/// <c>PADDD mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F FE /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664699)]
public static void paddd(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>paddd instruction.<br/>
		/// <br/>
		/// <c>PADDD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F FE /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664700)]
public static void paddd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>paddq instruction.<br/>
		/// <br/>
		/// <c>PADDQ mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F D4 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664701)]
public static void paddq(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>paddq instruction.<br/>
		/// <br/>
		/// <c>PADDQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F D4 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664702)]
public static void paddq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>paddq instruction.<br/>
		/// <br/>
		/// <c>PADDQ mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F D4 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664703)]
public static void paddq(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>paddq instruction.<br/>
		/// <br/>
		/// <c>PADDQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F D4 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664704)]
public static void paddq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>paddsb instruction.<br/>
		/// <br/>
		/// <c>PADDSB mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F EC /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664705)]
public static void paddsb(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>paddsb instruction.<br/>
		/// <br/>
		/// <c>PADDSB xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F EC /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664706)]
public static void paddsb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>paddsb instruction.<br/>
		/// <br/>
		/// <c>PADDSB mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F EC /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664707)]
public static void paddsb(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>paddsb instruction.<br/>
		/// <br/>
		/// <c>PADDSB xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F EC /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664708)]
public static void paddsb(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>paddsiw instruction.<br/>
		/// <br/>
		/// <c>PADDSIW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 51 /r</c><br/>
		/// <br/>
		/// <c>CYRIX_EMMI</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664709)]
public static void paddsiw(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>paddsiw instruction.<br/>
		/// <br/>
		/// <c>PADDSIW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 51 /r</c><br/>
		/// <br/>
		/// <c>CYRIX_EMMI</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664710)]
public static void paddsiw(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>paddsw instruction.<br/>
		/// <br/>
		/// <c>PADDSW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F ED /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664711)]
public static void paddsw(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>paddsw instruction.<br/>
		/// <br/>
		/// <c>PADDSW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F ED /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664712)]
public static void paddsw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>paddsw instruction.<br/>
		/// <br/>
		/// <c>PADDSW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F ED /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664713)]
public static void paddsw(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>paddsw instruction.<br/>
		/// <br/>
		/// <c>PADDSW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F ED /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664714)]
public static void paddsw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>paddusb instruction.<br/>
		/// <br/>
		/// <c>PADDUSB mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F DC /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664715)]
public static void paddusb(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>paddusb instruction.<br/>
		/// <br/>
		/// <c>PADDUSB xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F DC /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664716)]
public static void paddusb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>paddusb instruction.<br/>
		/// <br/>
		/// <c>PADDUSB mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F DC /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664717)]
public static void paddusb(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>paddusb instruction.<br/>
		/// <br/>
		/// <c>PADDUSB xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F DC /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664718)]
public static void paddusb(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>paddusw instruction.<br/>
		/// <br/>
		/// <c>PADDUSW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F DD /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664719)]
public static void paddusw(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>paddusw instruction.<br/>
		/// <br/>
		/// <c>PADDUSW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F DD /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664720)]
public static void paddusw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>paddusw instruction.<br/>
		/// <br/>
		/// <c>PADDUSW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F DD /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664721)]
public static void paddusw(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>paddusw instruction.<br/>
		/// <br/>
		/// <c>PADDUSW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F DD /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664722)]
public static void paddusw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>paddw instruction.<br/>
		/// <br/>
		/// <c>PADDW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F FD /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664723)]
public static void paddw(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>paddw instruction.<br/>
		/// <br/>
		/// <c>PADDW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F FD /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664724)]
public static void paddw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>paddw instruction.<br/>
		/// <br/>
		/// <c>PADDW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F FD /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664725)]
public static void paddw(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>paddw instruction.<br/>
		/// <br/>
		/// <c>PADDW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F FD /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664726)]
public static void paddw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>palignr instruction.<br/>
		/// <br/>
		/// <c>PALIGNR mm1, mm2/m64, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F 3A 0F /r ib</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664727)]
public static void palignr(AssemblerRegisterMM dst, AssemblerRegisterMM src1, sbyte imm) {}
		/// <summary>palignr instruction.<br/>
		/// <br/>
		/// <c>PALIGNR xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 0F /r ib</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664728)]
public static void palignr(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>palignr instruction.<br/>
		/// <br/>
		/// <c>PALIGNR mm1, mm2/m64, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F 3A 0F /r ib</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664729)]
public static void palignr(AssemblerRegisterMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>palignr instruction.<br/>
		/// <br/>
		/// <c>PALIGNR xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 0F /r ib</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664730)]
public static void palignr(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>palignr instruction.<br/>
		/// <br/>
		/// <c>PALIGNR mm1, mm2/m64, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F 3A 0F /r ib</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664731)]
public static void palignr(AssemblerRegisterMM dst, AssemblerRegisterMM src1, byte imm) {}
		/// <summary>palignr instruction.<br/>
		/// <br/>
		/// <c>PALIGNR xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 0F /r ib</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664732)]
public static void palignr(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>palignr instruction.<br/>
		/// <br/>
		/// <c>PALIGNR mm1, mm2/m64, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F 3A 0F /r ib</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664733)]
public static void palignr(AssemblerRegisterMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>palignr instruction.<br/>
		/// <br/>
		/// <c>PALIGNR xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 0F /r ib</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664734)]
public static void palignr(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>pand instruction.<br/>
		/// <br/>
		/// <c>PAND mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F DB /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664735)]
public static void pand(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pand instruction.<br/>
		/// <br/>
		/// <c>PAND xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F DB /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664736)]
public static void pand(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pand instruction.<br/>
		/// <br/>
		/// <c>PAND mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F DB /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664737)]
public static void pand(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pand instruction.<br/>
		/// <br/>
		/// <c>PAND xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F DB /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664738)]
public static void pand(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pandn instruction.<br/>
		/// <br/>
		/// <c>PANDN mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F DF /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664739)]
public static void pandn(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pandn instruction.<br/>
		/// <br/>
		/// <c>PANDN xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F DF /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664740)]
public static void pandn(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pandn instruction.<br/>
		/// <br/>
		/// <c>PANDN mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F DF /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664741)]
public static void pandn(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pandn instruction.<br/>
		/// <br/>
		/// <c>PANDN xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F DF /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664742)]
public static void pandn(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pause instruction.<br/>
		/// <br/>
		/// <c>PAUSE</c><br/>
		/// <br/>
		/// <c>F3 90</c><br/>
		/// <br/>
		/// <c>Pentium 4 or later</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664743)]
public static void pause() {}
		/// <summary>paveb instruction.<br/>
		/// <br/>
		/// <c>PAVEB mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 50 /r</c><br/>
		/// <br/>
		/// <c>CYRIX_EMMI</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664744)]
public static void paveb(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>paveb instruction.<br/>
		/// <br/>
		/// <c>PAVEB mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 50 /r</c><br/>
		/// <br/>
		/// <c>CYRIX_EMMI</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664745)]
public static void paveb(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pavgb instruction.<br/>
		/// <br/>
		/// <c>PAVGB mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F E0 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664746)]
public static void pavgb(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pavgb instruction.<br/>
		/// <br/>
		/// <c>PAVGB xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F E0 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664747)]
public static void pavgb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pavgb instruction.<br/>
		/// <br/>
		/// <c>PAVGB mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F E0 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664748)]
public static void pavgb(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pavgb instruction.<br/>
		/// <br/>
		/// <c>PAVGB xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F E0 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664749)]
public static void pavgb(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pavgusb instruction.<br/>
		/// <br/>
		/// <c>PAVGUSB mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r BF</c><br/>
		/// <br/>
		/// <c>3DNOW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664750)]
public static void pavgusb(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pavgusb instruction.<br/>
		/// <br/>
		/// <c>PAVGUSB mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r BF</c><br/>
		/// <br/>
		/// <c>3DNOW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664751)]
public static void pavgusb(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pavgw instruction.<br/>
		/// <br/>
		/// <c>PAVGW mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F E3 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664752)]
public static void pavgw(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pavgw instruction.<br/>
		/// <br/>
		/// <c>PAVGW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F E3 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664753)]
public static void pavgw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pavgw instruction.<br/>
		/// <br/>
		/// <c>PAVGW mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F E3 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664754)]
public static void pavgw(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pavgw instruction.<br/>
		/// <br/>
		/// <c>PAVGW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F E3 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664755)]
public static void pavgw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pblendvb instruction.<br/>
		/// <br/>
		/// <c>PBLENDVB xmm1, xmm2/m128, &lt;XMM0&gt;</c><br/>
		/// <br/>
		/// <c>66 0F 38 10 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664756)]
public static void pblendvb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pblendvb instruction.<br/>
		/// <br/>
		/// <c>PBLENDVB xmm1, xmm2/m128, &lt;XMM0&gt;</c><br/>
		/// <br/>
		/// <c>66 0F 38 10 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664757)]
public static void pblendvb(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pblendw instruction.<br/>
		/// <br/>
		/// <c>PBLENDW xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 0E /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664758)]
public static void pblendw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>pblendw instruction.<br/>
		/// <br/>
		/// <c>PBLENDW xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 0E /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664759)]
public static void pblendw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>pblendw instruction.<br/>
		/// <br/>
		/// <c>PBLENDW xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 0E /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664760)]
public static void pblendw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>pblendw instruction.<br/>
		/// <br/>
		/// <c>PBLENDW xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 0E /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664761)]
public static void pblendw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>pclmulhqhqdq instruction.</summary>
[MethodToken(100664762)]
public static void pclmulhqhqdq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pclmulhqhqdq instruction.</summary>
[MethodToken(100664763)]
public static void pclmulhqhqdq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pclmulhqlqdq instruction.</summary>
[MethodToken(100664764)]
public static void pclmulhqlqdq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pclmulhqlqdq instruction.</summary>
[MethodToken(100664765)]
public static void pclmulhqlqdq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pclmullqhqdq instruction.</summary>
[MethodToken(100664766)]
public static void pclmullqhqdq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pclmullqhqdq instruction.</summary>
[MethodToken(100664767)]
public static void pclmullqhqdq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pclmullqlqdq instruction.</summary>
[MethodToken(100664768)]
public static void pclmullqlqdq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pclmullqlqdq instruction.</summary>
[MethodToken(100664769)]
public static void pclmullqlqdq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pclmulqdq instruction.<br/>
		/// <br/>
		/// <c>PCLMULQDQ xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 44 /r ib</c><br/>
		/// <br/>
		/// <c>PCLMULQDQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664770)]
public static void pclmulqdq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>pclmulqdq instruction.<br/>
		/// <br/>
		/// <c>PCLMULQDQ xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 44 /r ib</c><br/>
		/// <br/>
		/// <c>PCLMULQDQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664771)]
public static void pclmulqdq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>pclmulqdq instruction.<br/>
		/// <br/>
		/// <c>PCLMULQDQ xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 44 /r ib</c><br/>
		/// <br/>
		/// <c>PCLMULQDQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664772)]
public static void pclmulqdq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>pclmulqdq instruction.<br/>
		/// <br/>
		/// <c>PCLMULQDQ xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 44 /r ib</c><br/>
		/// <br/>
		/// <c>PCLMULQDQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664773)]
public static void pclmulqdq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>pcmpeqb instruction.<br/>
		/// <br/>
		/// <c>PCMPEQB mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 74 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664774)]
public static void pcmpeqb(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pcmpeqb instruction.<br/>
		/// <br/>
		/// <c>PCMPEQB xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 74 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664775)]
public static void pcmpeqb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pcmpeqb instruction.<br/>
		/// <br/>
		/// <c>PCMPEQB mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 74 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664776)]
public static void pcmpeqb(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pcmpeqb instruction.<br/>
		/// <br/>
		/// <c>PCMPEQB xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 74 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664777)]
public static void pcmpeqb(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pcmpeqd instruction.<br/>
		/// <br/>
		/// <c>PCMPEQD mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 76 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664778)]
public static void pcmpeqd(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pcmpeqd instruction.<br/>
		/// <br/>
		/// <c>PCMPEQD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 76 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664779)]
public static void pcmpeqd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pcmpeqd instruction.<br/>
		/// <br/>
		/// <c>PCMPEQD mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 76 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664780)]
public static void pcmpeqd(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pcmpeqd instruction.<br/>
		/// <br/>
		/// <c>PCMPEQD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 76 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664781)]
public static void pcmpeqd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pcmpeqq instruction.<br/>
		/// <br/>
		/// <c>PCMPEQQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 29 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664782)]
public static void pcmpeqq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pcmpeqq instruction.<br/>
		/// <br/>
		/// <c>PCMPEQQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 29 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664783)]
public static void pcmpeqq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pcmpeqw instruction.<br/>
		/// <br/>
		/// <c>PCMPEQW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 75 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664784)]
public static void pcmpeqw(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pcmpeqw instruction.<br/>
		/// <br/>
		/// <c>PCMPEQW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 75 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664785)]
public static void pcmpeqw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pcmpeqw instruction.<br/>
		/// <br/>
		/// <c>PCMPEQW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 75 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664786)]
public static void pcmpeqw(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pcmpeqw instruction.<br/>
		/// <br/>
		/// <c>PCMPEQW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 75 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664787)]
public static void pcmpeqw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pcmpestri instruction.<br/>
		/// <br/>
		/// <c>PCMPESTRI xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 61 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664788)]
public static void pcmpestri(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>pcmpestri instruction.<br/>
		/// <br/>
		/// <c>PCMPESTRI xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 61 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664789)]
public static void pcmpestri(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>pcmpestri instruction.<br/>
		/// <br/>
		/// <c>PCMPESTRI xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 61 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664790)]
public static void pcmpestri(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>pcmpestri instruction.<br/>
		/// <br/>
		/// <c>PCMPESTRI xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 61 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664791)]
public static void pcmpestri(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>pcmpestri64 instruction.<br/>
		/// <br/>
		/// <c>PCMPESTRI64 xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 o64 0F 3A 61 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664792)]
public static void pcmpestri64(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>pcmpestri64 instruction.<br/>
		/// <br/>
		/// <c>PCMPESTRI64 xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 o64 0F 3A 61 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664793)]
public static void pcmpestri64(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>pcmpestri64 instruction.<br/>
		/// <br/>
		/// <c>PCMPESTRI64 xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 o64 0F 3A 61 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664794)]
public static void pcmpestri64(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>pcmpestri64 instruction.<br/>
		/// <br/>
		/// <c>PCMPESTRI64 xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 o64 0F 3A 61 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664795)]
public static void pcmpestri64(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>pcmpestrm instruction.<br/>
		/// <br/>
		/// <c>PCMPESTRM xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 60 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664796)]
public static void pcmpestrm(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>pcmpestrm instruction.<br/>
		/// <br/>
		/// <c>PCMPESTRM xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 60 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664797)]
public static void pcmpestrm(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>pcmpestrm instruction.<br/>
		/// <br/>
		/// <c>PCMPESTRM xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 60 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664798)]
public static void pcmpestrm(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>pcmpestrm instruction.<br/>
		/// <br/>
		/// <c>PCMPESTRM xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 60 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664799)]
public static void pcmpestrm(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>pcmpestrm64 instruction.<br/>
		/// <br/>
		/// <c>PCMPESTRM64 xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 o64 0F 3A 60 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664800)]
public static void pcmpestrm64(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>pcmpestrm64 instruction.<br/>
		/// <br/>
		/// <c>PCMPESTRM64 xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 o64 0F 3A 60 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664801)]
public static void pcmpestrm64(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>pcmpestrm64 instruction.<br/>
		/// <br/>
		/// <c>PCMPESTRM64 xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 o64 0F 3A 60 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664802)]
public static void pcmpestrm64(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>pcmpestrm64 instruction.<br/>
		/// <br/>
		/// <c>PCMPESTRM64 xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 o64 0F 3A 60 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664803)]
public static void pcmpestrm64(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>pcmpgtb instruction.<br/>
		/// <br/>
		/// <c>PCMPGTB mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 64 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664804)]
public static void pcmpgtb(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pcmpgtb instruction.<br/>
		/// <br/>
		/// <c>PCMPGTB xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 64 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664805)]
public static void pcmpgtb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pcmpgtb instruction.<br/>
		/// <br/>
		/// <c>PCMPGTB mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 64 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664806)]
public static void pcmpgtb(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pcmpgtb instruction.<br/>
		/// <br/>
		/// <c>PCMPGTB xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 64 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664807)]
public static void pcmpgtb(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pcmpgtd instruction.<br/>
		/// <br/>
		/// <c>PCMPGTD mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 66 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664808)]
public static void pcmpgtd(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pcmpgtd instruction.<br/>
		/// <br/>
		/// <c>PCMPGTD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 66 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664809)]
public static void pcmpgtd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pcmpgtd instruction.<br/>
		/// <br/>
		/// <c>PCMPGTD mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 66 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664810)]
public static void pcmpgtd(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pcmpgtd instruction.<br/>
		/// <br/>
		/// <c>PCMPGTD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 66 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664811)]
public static void pcmpgtd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pcmpgtq instruction.<br/>
		/// <br/>
		/// <c>PCMPGTQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 37 /r</c><br/>
		/// <br/>
		/// <c>SSE4.2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664812)]
public static void pcmpgtq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pcmpgtq instruction.<br/>
		/// <br/>
		/// <c>PCMPGTQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 37 /r</c><br/>
		/// <br/>
		/// <c>SSE4.2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664813)]
public static void pcmpgtq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pcmpgtw instruction.<br/>
		/// <br/>
		/// <c>PCMPGTW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 65 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664814)]
public static void pcmpgtw(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pcmpgtw instruction.<br/>
		/// <br/>
		/// <c>PCMPGTW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 65 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664815)]
public static void pcmpgtw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pcmpgtw instruction.<br/>
		/// <br/>
		/// <c>PCMPGTW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 65 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664816)]
public static void pcmpgtw(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pcmpgtw instruction.<br/>
		/// <br/>
		/// <c>PCMPGTW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 65 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664817)]
public static void pcmpgtw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pcmpistri instruction.<br/>
		/// <br/>
		/// <c>PCMPISTRI xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 63 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664818)]
public static void pcmpistri(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>pcmpistri instruction.<br/>
		/// <br/>
		/// <c>PCMPISTRI xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 63 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664819)]
public static void pcmpistri(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>pcmpistri instruction.<br/>
		/// <br/>
		/// <c>PCMPISTRI xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 63 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664820)]
public static void pcmpistri(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>pcmpistri instruction.<br/>
		/// <br/>
		/// <c>PCMPISTRI xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 63 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664821)]
public static void pcmpistri(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>pcmpistrm instruction.<br/>
		/// <br/>
		/// <c>PCMPISTRM xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 62 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664822)]
public static void pcmpistrm(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>pcmpistrm instruction.<br/>
		/// <br/>
		/// <c>PCMPISTRM xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 62 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664823)]
public static void pcmpistrm(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>pcmpistrm instruction.<br/>
		/// <br/>
		/// <c>PCMPISTRM xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 62 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664824)]
public static void pcmpistrm(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>pcmpistrm instruction.<br/>
		/// <br/>
		/// <c>PCMPISTRM xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 62 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664825)]
public static void pcmpistrm(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>pcommit instruction.<br/>
		/// <br/>
		/// <c>PCOMMIT</c><br/>
		/// <br/>
		/// <c>66 0F AE F8</c><br/>
		/// <br/>
		/// <c>PCOMMIT</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664826)]
public static void pcommit() {}
		/// <summary>pconfig instruction.<br/>
		/// <br/>
		/// <c>PCONFIG</c><br/>
		/// <br/>
		/// <c>NP 0F 01 C5</c><br/>
		/// <br/>
		/// <c>PCONFIG</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664827)]
public static void pconfig() {}
		/// <summary>pdep instruction.<br/>
		/// <br/>
		/// <c>PDEP r32a, r32b, r/m32</c><br/>
		/// <br/>
		/// <c>VEX.LZ.F2.0F38.W0 F5 /r</c><br/>
		/// <br/>
		/// <c>BMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664828)]
public static void pdep(AssemblerRegister32 dst, AssemblerRegister32 src1, AssemblerRegister32 src2) {}
		/// <summary>pdep instruction.<br/>
		/// <br/>
		/// <c>PDEP r64a, r64b, r/m64</c><br/>
		/// <br/>
		/// <c>VEX.LZ.F2.0F38.W1 F5 /r</c><br/>
		/// <br/>
		/// <c>BMI2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664829)]
public static void pdep(AssemblerRegister64 dst, AssemblerRegister64 src1, AssemblerRegister64 src2) {}
		/// <summary>pdep instruction.<br/>
		/// <br/>
		/// <c>PDEP r32a, r32b, r/m32</c><br/>
		/// <br/>
		/// <c>VEX.LZ.F2.0F38.W0 F5 /r</c><br/>
		/// <br/>
		/// <c>BMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664830)]
public static void pdep(AssemblerRegister32 dst, AssemblerRegister32 src1, AssemblerMemoryOperand src2) {}
		/// <summary>pdep instruction.<br/>
		/// <br/>
		/// <c>PDEP r64a, r64b, r/m64</c><br/>
		/// <br/>
		/// <c>VEX.LZ.F2.0F38.W1 F5 /r</c><br/>
		/// <br/>
		/// <c>BMI2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664831)]
public static void pdep(AssemblerRegister64 dst, AssemblerRegister64 src1, AssemblerMemoryOperand src2) {}
		/// <summary>pdistib instruction.<br/>
		/// <br/>
		/// <c>PDISTIB mm, m64</c><br/>
		/// <br/>
		/// <c>0F 54 /r</c><br/>
		/// <br/>
		/// <c>CYRIX_EMMI</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664832)]
public static void pdistib(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pext instruction.<br/>
		/// <br/>
		/// <c>PEXT r32a, r32b, r/m32</c><br/>
		/// <br/>
		/// <c>VEX.LZ.F3.0F38.W0 F5 /r</c><br/>
		/// <br/>
		/// <c>BMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664833)]
public static void pext(AssemblerRegister32 dst, AssemblerRegister32 src1, AssemblerRegister32 src2) {}
		/// <summary>pext instruction.<br/>
		/// <br/>
		/// <c>PEXT r64a, r64b, r/m64</c><br/>
		/// <br/>
		/// <c>VEX.LZ.F3.0F38.W1 F5 /r</c><br/>
		/// <br/>
		/// <c>BMI2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664834)]
public static void pext(AssemblerRegister64 dst, AssemblerRegister64 src1, AssemblerRegister64 src2) {}
		/// <summary>pext instruction.<br/>
		/// <br/>
		/// <c>PEXT r32a, r32b, r/m32</c><br/>
		/// <br/>
		/// <c>VEX.LZ.F3.0F38.W0 F5 /r</c><br/>
		/// <br/>
		/// <c>BMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664835)]
public static void pext(AssemblerRegister32 dst, AssemblerRegister32 src1, AssemblerMemoryOperand src2) {}
		/// <summary>pext instruction.<br/>
		/// <br/>
		/// <c>PEXT r64a, r64b, r/m64</c><br/>
		/// <br/>
		/// <c>VEX.LZ.F3.0F38.W1 F5 /r</c><br/>
		/// <br/>
		/// <c>BMI2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664836)]
public static void pext(AssemblerRegister64 dst, AssemblerRegister64 src1, AssemblerMemoryOperand src2) {}
		/// <summary>pextrb instruction.<br/>
		/// <br/>
		/// <c>PEXTRB r32/m8, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 14 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664837)]
public static void pextrb(AssemblerRegister32 dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>pextrb instruction.<br/>
		/// <br/>
		/// <c>PEXTRB r64/m8, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>66 o64 0F 3A 14 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664838)]
public static void pextrb(AssemblerRegister64 dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>pextrb instruction.<br/>
		/// <br/>
		/// <c>PEXTRB r32/m8, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 14 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664839)]
public static void pextrb(AssemblerMemoryOperand dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>pextrb instruction.<br/>
		/// <br/>
		/// <c>PEXTRB r32/m8, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 14 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664840)]
public static void pextrb(AssemblerRegister32 dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>pextrb instruction.<br/>
		/// <br/>
		/// <c>PEXTRB r64/m8, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>66 o64 0F 3A 14 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664841)]
public static void pextrb(AssemblerRegister64 dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>pextrb instruction.<br/>
		/// <br/>
		/// <c>PEXTRB r32/m8, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 14 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664842)]
public static void pextrb(AssemblerMemoryOperand dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>pextrd instruction.<br/>
		/// <br/>
		/// <c>PEXTRD r/m32, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 16 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664843)]
public static void pextrd(AssemblerRegister32 dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>pextrd instruction.<br/>
		/// <br/>
		/// <c>PEXTRD r/m32, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 16 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664844)]
public static void pextrd(AssemblerMemoryOperand dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>pextrd instruction.<br/>
		/// <br/>
		/// <c>PEXTRD r/m32, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 16 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664845)]
public static void pextrd(AssemblerRegister32 dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>pextrd instruction.<br/>
		/// <br/>
		/// <c>PEXTRD r/m32, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 16 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664846)]
public static void pextrd(AssemblerMemoryOperand dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>pextrq instruction.<br/>
		/// <br/>
		/// <c>PEXTRQ r/m64, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>66 o64 0F 3A 16 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664847)]
public static void pextrq(AssemblerRegister64 dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>pextrq instruction.<br/>
		/// <br/>
		/// <c>PEXTRQ r/m64, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>66 o64 0F 3A 16 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664848)]
public static void pextrq(AssemblerMemoryOperand dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>pextrq instruction.<br/>
		/// <br/>
		/// <c>PEXTRQ r/m64, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>66 o64 0F 3A 16 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664849)]
public static void pextrq(AssemblerRegister64 dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>pextrq instruction.<br/>
		/// <br/>
		/// <c>PEXTRQ r/m64, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>66 o64 0F 3A 16 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664850)]
public static void pextrq(AssemblerMemoryOperand dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>pextrw instruction.<br/>
		/// <br/>
		/// <c>PEXTRW r32, mm, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F C5 /r ib</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664851)]
public static void pextrw(AssemblerRegister32 dst, AssemblerRegisterMM src1, sbyte imm) {}
		/// <summary>pextrw instruction.<br/>
		/// <br/>
		/// <c>PEXTRW r64, mm, imm8</c><br/>
		/// <br/>
		/// <c>NP o64 0F C5 /r ib</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664852)]
public static void pextrw(AssemblerRegister64 dst, AssemblerRegisterMM src1, sbyte imm) {}
		/// <summary>pextrw instruction.<br/>
		/// <br/>
		/// <c>PEXTRW r32, xmm, imm8</c><br/>
		/// <br/>
		/// <c>66 0F C5 /r ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664853)]
public static void pextrw(AssemblerRegister32 dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>pextrw instruction.<br/>
		/// <br/>
		/// <c>PEXTRW r64, xmm, imm8</c><br/>
		/// <br/>
		/// <c>66 o64 0F C5 /r ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664854)]
public static void pextrw(AssemblerRegister64 dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>pextrw instruction.<br/>
		/// <br/>
		/// <c>PEXTRW r32/m16, xmm, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 15 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664855)]
public static void pextrw(AssemblerMemoryOperand dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>pextrw instruction.<br/>
		/// <br/>
		/// <c>PEXTRW r32, mm, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F C5 /r ib</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664856)]
public static void pextrw(AssemblerRegister32 dst, AssemblerRegisterMM src1, byte imm) {}
		/// <summary>pextrw instruction.<br/>
		/// <br/>
		/// <c>PEXTRW r64, mm, imm8</c><br/>
		/// <br/>
		/// <c>NP o64 0F C5 /r ib</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664857)]
public static void pextrw(AssemblerRegister64 dst, AssemblerRegisterMM src1, byte imm) {}
		/// <summary>pextrw instruction.<br/>
		/// <br/>
		/// <c>PEXTRW r32, xmm, imm8</c><br/>
		/// <br/>
		/// <c>66 0F C5 /r ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664858)]
public static void pextrw(AssemblerRegister32 dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>pextrw instruction.<br/>
		/// <br/>
		/// <c>PEXTRW r64, xmm, imm8</c><br/>
		/// <br/>
		/// <c>66 o64 0F C5 /r ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664859)]
public static void pextrw(AssemblerRegister64 dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>pextrw instruction.<br/>
		/// <br/>
		/// <c>PEXTRW r32/m16, xmm, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 15 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664860)]
public static void pextrw(AssemblerMemoryOperand dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>pf2id instruction.<br/>
		/// <br/>
		/// <c>PF2ID mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r 1D</c><br/>
		/// <br/>
		/// <c>3DNOW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664861)]
public static void pf2id(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pf2id instruction.<br/>
		/// <br/>
		/// <c>PF2ID mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r 1D</c><br/>
		/// <br/>
		/// <c>3DNOW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664862)]
public static void pf2id(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pf2iw instruction.<br/>
		/// <br/>
		/// <c>PF2IW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r 1C</c><br/>
		/// <br/>
		/// <c>3DNOWEXT</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664863)]
public static void pf2iw(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pf2iw instruction.<br/>
		/// <br/>
		/// <c>PF2IW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r 1C</c><br/>
		/// <br/>
		/// <c>3DNOWEXT</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664864)]
public static void pf2iw(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pfacc instruction.<br/>
		/// <br/>
		/// <c>PFACC mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r AE</c><br/>
		/// <br/>
		/// <c>3DNOW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664865)]
public static void pfacc(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pfacc instruction.<br/>
		/// <br/>
		/// <c>PFACC mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r AE</c><br/>
		/// <br/>
		/// <c>3DNOW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664866)]
public static void pfacc(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pfadd instruction.<br/>
		/// <br/>
		/// <c>PFADD mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r 9E</c><br/>
		/// <br/>
		/// <c>3DNOW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664867)]
public static void pfadd(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pfadd instruction.<br/>
		/// <br/>
		/// <c>PFADD mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r 9E</c><br/>
		/// <br/>
		/// <c>3DNOW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664868)]
public static void pfadd(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pfcmpeq instruction.<br/>
		/// <br/>
		/// <c>PFCMPEQ mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r B0</c><br/>
		/// <br/>
		/// <c>3DNOW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664869)]
public static void pfcmpeq(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pfcmpeq instruction.<br/>
		/// <br/>
		/// <c>PFCMPEQ mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r B0</c><br/>
		/// <br/>
		/// <c>3DNOW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664870)]
public static void pfcmpeq(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pfcmpge instruction.<br/>
		/// <br/>
		/// <c>PFCMPGE mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r 90</c><br/>
		/// <br/>
		/// <c>3DNOW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664871)]
public static void pfcmpge(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pfcmpge instruction.<br/>
		/// <br/>
		/// <c>PFCMPGE mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r 90</c><br/>
		/// <br/>
		/// <c>3DNOW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664872)]
public static void pfcmpge(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pfcmpgt instruction.<br/>
		/// <br/>
		/// <c>PFCMPGT mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r A0</c><br/>
		/// <br/>
		/// <c>3DNOW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664873)]
public static void pfcmpgt(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pfcmpgt instruction.<br/>
		/// <br/>
		/// <c>PFCMPGT mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r A0</c><br/>
		/// <br/>
		/// <c>3DNOW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664874)]
public static void pfcmpgt(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pfmax instruction.<br/>
		/// <br/>
		/// <c>PFMAX mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r A4</c><br/>
		/// <br/>
		/// <c>3DNOW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664875)]
public static void pfmax(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pfmax instruction.<br/>
		/// <br/>
		/// <c>PFMAX mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r A4</c><br/>
		/// <br/>
		/// <c>3DNOW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664876)]
public static void pfmax(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pfmin instruction.<br/>
		/// <br/>
		/// <c>PFMIN mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r 94</c><br/>
		/// <br/>
		/// <c>3DNOW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664877)]
public static void pfmin(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pfmin instruction.<br/>
		/// <br/>
		/// <c>PFMIN mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r 94</c><br/>
		/// <br/>
		/// <c>3DNOW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664878)]
public static void pfmin(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pfmul instruction.<br/>
		/// <br/>
		/// <c>PFMUL mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r B4</c><br/>
		/// <br/>
		/// <c>3DNOW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664879)]
public static void pfmul(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pfmul instruction.<br/>
		/// <br/>
		/// <c>PFMUL mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r B4</c><br/>
		/// <br/>
		/// <c>3DNOW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664880)]
public static void pfmul(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pfnacc instruction.<br/>
		/// <br/>
		/// <c>PFNACC mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r 8A</c><br/>
		/// <br/>
		/// <c>3DNOWEXT</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664881)]
public static void pfnacc(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pfnacc instruction.<br/>
		/// <br/>
		/// <c>PFNACC mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r 8A</c><br/>
		/// <br/>
		/// <c>3DNOWEXT</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664882)]
public static void pfnacc(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pfpnacc instruction.<br/>
		/// <br/>
		/// <c>PFPNACC mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r 8E</c><br/>
		/// <br/>
		/// <c>3DNOWEXT</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664883)]
public static void pfpnacc(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pfpnacc instruction.<br/>
		/// <br/>
		/// <c>PFPNACC mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r 8E</c><br/>
		/// <br/>
		/// <c>3DNOWEXT</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664884)]
public static void pfpnacc(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pfrcp instruction.<br/>
		/// <br/>
		/// <c>PFRCP mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r 96</c><br/>
		/// <br/>
		/// <c>3DNOW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664885)]
public static void pfrcp(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pfrcp instruction.<br/>
		/// <br/>
		/// <c>PFRCP mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r 96</c><br/>
		/// <br/>
		/// <c>3DNOW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664886)]
public static void pfrcp(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pfrcpit1 instruction.<br/>
		/// <br/>
		/// <c>PFRCPIT1 mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r A6</c><br/>
		/// <br/>
		/// <c>3DNOW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664887)]
public static void pfrcpit1(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pfrcpit1 instruction.<br/>
		/// <br/>
		/// <c>PFRCPIT1 mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r A6</c><br/>
		/// <br/>
		/// <c>3DNOW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664888)]
public static void pfrcpit1(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pfrcpit2 instruction.<br/>
		/// <br/>
		/// <c>PFRCPIT2 mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r B6</c><br/>
		/// <br/>
		/// <c>3DNOW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664889)]
public static void pfrcpit2(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pfrcpit2 instruction.<br/>
		/// <br/>
		/// <c>PFRCPIT2 mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r B6</c><br/>
		/// <br/>
		/// <c>3DNOW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664890)]
public static void pfrcpit2(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pfrcpv instruction.<br/>
		/// <br/>
		/// <c>PFRCPV mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r 86</c><br/>
		/// <br/>
		/// <c>AMD Geode GX/LX</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664891)]
public static void pfrcpv(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pfrcpv instruction.<br/>
		/// <br/>
		/// <c>PFRCPV mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r 86</c><br/>
		/// <br/>
		/// <c>AMD Geode GX/LX</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664892)]
public static void pfrcpv(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pfrsqit1 instruction.<br/>
		/// <br/>
		/// <c>PFRSQIT1 mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r A7</c><br/>
		/// <br/>
		/// <c>3DNOW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664893)]
public static void pfrsqit1(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pfrsqit1 instruction.<br/>
		/// <br/>
		/// <c>PFRSQIT1 mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r A7</c><br/>
		/// <br/>
		/// <c>3DNOW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664894)]
public static void pfrsqit1(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pfrsqrt instruction.<br/>
		/// <br/>
		/// <c>PFRSQRT mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r 97</c><br/>
		/// <br/>
		/// <c>3DNOW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664895)]
public static void pfrsqrt(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pfrsqrt instruction.<br/>
		/// <br/>
		/// <c>PFRSQRT mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r 97</c><br/>
		/// <br/>
		/// <c>3DNOW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664896)]
public static void pfrsqrt(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pfrsqrtv instruction.<br/>
		/// <br/>
		/// <c>PFRSQRTV mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r 87</c><br/>
		/// <br/>
		/// <c>AMD Geode GX/LX</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664897)]
public static void pfrsqrtv(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pfrsqrtv instruction.<br/>
		/// <br/>
		/// <c>PFRSQRTV mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r 87</c><br/>
		/// <br/>
		/// <c>AMD Geode GX/LX</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664898)]
public static void pfrsqrtv(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pfsub instruction.<br/>
		/// <br/>
		/// <c>PFSUB mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r 9A</c><br/>
		/// <br/>
		/// <c>3DNOW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664899)]
public static void pfsub(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pfsub instruction.<br/>
		/// <br/>
		/// <c>PFSUB mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r 9A</c><br/>
		/// <br/>
		/// <c>3DNOW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664900)]
public static void pfsub(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pfsubr instruction.<br/>
		/// <br/>
		/// <c>PFSUBR mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r AA</c><br/>
		/// <br/>
		/// <c>3DNOW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664901)]
public static void pfsubr(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pfsubr instruction.<br/>
		/// <br/>
		/// <c>PFSUBR mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r AA</c><br/>
		/// <br/>
		/// <c>3DNOW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664902)]
public static void pfsubr(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>phaddd instruction.<br/>
		/// <br/>
		/// <c>PHADDD mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 38 02 /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664903)]
public static void phaddd(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>phaddd instruction.<br/>
		/// <br/>
		/// <c>PHADDD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 02 /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664904)]
public static void phaddd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>phaddd instruction.<br/>
		/// <br/>
		/// <c>PHADDD mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 38 02 /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664905)]
public static void phaddd(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>phaddd instruction.<br/>
		/// <br/>
		/// <c>PHADDD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 02 /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664906)]
public static void phaddd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>phaddsw instruction.<br/>
		/// <br/>
		/// <c>PHADDSW mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 38 03 /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664907)]
public static void phaddsw(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>phaddsw instruction.<br/>
		/// <br/>
		/// <c>PHADDSW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 03 /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664908)]
public static void phaddsw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>phaddsw instruction.<br/>
		/// <br/>
		/// <c>PHADDSW mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 38 03 /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664909)]
public static void phaddsw(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>phaddsw instruction.<br/>
		/// <br/>
		/// <c>PHADDSW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 03 /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664910)]
public static void phaddsw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>phaddw instruction.<br/>
		/// <br/>
		/// <c>PHADDW mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 38 01 /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664911)]
public static void phaddw(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>phaddw instruction.<br/>
		/// <br/>
		/// <c>PHADDW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 01 /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664912)]
public static void phaddw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>phaddw instruction.<br/>
		/// <br/>
		/// <c>PHADDW mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 38 01 /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664913)]
public static void phaddw(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>phaddw instruction.<br/>
		/// <br/>
		/// <c>PHADDW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 01 /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664914)]
public static void phaddw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>phminposuw instruction.<br/>
		/// <br/>
		/// <c>PHMINPOSUW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 41 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664915)]
public static void phminposuw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>phminposuw instruction.<br/>
		/// <br/>
		/// <c>PHMINPOSUW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 41 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664916)]
public static void phminposuw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>phsubd instruction.<br/>
		/// <br/>
		/// <c>PHSUBD mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 38 06 /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664917)]
public static void phsubd(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>phsubd instruction.<br/>
		/// <br/>
		/// <c>PHSUBD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 06 /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664918)]
public static void phsubd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>phsubd instruction.<br/>
		/// <br/>
		/// <c>PHSUBD mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 38 06 /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664919)]
public static void phsubd(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>phsubd instruction.<br/>
		/// <br/>
		/// <c>PHSUBD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 06 /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664920)]
public static void phsubd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>phsubsw instruction.<br/>
		/// <br/>
		/// <c>PHSUBSW mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 38 07 /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664921)]
public static void phsubsw(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>phsubsw instruction.<br/>
		/// <br/>
		/// <c>PHSUBSW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 07 /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664922)]
public static void phsubsw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>phsubsw instruction.<br/>
		/// <br/>
		/// <c>PHSUBSW mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 38 07 /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664923)]
public static void phsubsw(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>phsubsw instruction.<br/>
		/// <br/>
		/// <c>PHSUBSW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 07 /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664924)]
public static void phsubsw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>phsubw instruction.<br/>
		/// <br/>
		/// <c>PHSUBW mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 38 05 /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664925)]
public static void phsubw(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>phsubw instruction.<br/>
		/// <br/>
		/// <c>PHSUBW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 05 /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664926)]
public static void phsubw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>phsubw instruction.<br/>
		/// <br/>
		/// <c>PHSUBW mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 38 05 /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664927)]
public static void phsubw(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>phsubw instruction.<br/>
		/// <br/>
		/// <c>PHSUBW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 05 /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664928)]
public static void phsubw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pi2fd instruction.<br/>
		/// <br/>
		/// <c>PI2FD mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r 0D</c><br/>
		/// <br/>
		/// <c>3DNOW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664929)]
public static void pi2fd(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pi2fd instruction.<br/>
		/// <br/>
		/// <c>PI2FD mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r 0D</c><br/>
		/// <br/>
		/// <c>3DNOW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664930)]
public static void pi2fd(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pi2fw instruction.<br/>
		/// <br/>
		/// <c>PI2FW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r 0C</c><br/>
		/// <br/>
		/// <c>3DNOWEXT</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664931)]
public static void pi2fw(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pi2fw instruction.<br/>
		/// <br/>
		/// <c>PI2FW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r 0C</c><br/>
		/// <br/>
		/// <c>3DNOWEXT</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664932)]
public static void pi2fw(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pinsrb instruction.<br/>
		/// <br/>
		/// <c>PINSRB xmm1, r32/m8, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 20 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664933)]
public static void pinsrb(AssemblerRegisterXMM dst, AssemblerRegister32 src1, sbyte imm) {}
		/// <summary>pinsrb instruction.<br/>
		/// <br/>
		/// <c>PINSRB xmm1, r64/m8, imm8</c><br/>
		/// <br/>
		/// <c>66 o64 0F 3A 20 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664934)]
public static void pinsrb(AssemblerRegisterXMM dst, AssemblerRegister64 src1, sbyte imm) {}
		/// <summary>pinsrb instruction.<br/>
		/// <br/>
		/// <c>PINSRB xmm1, r32/m8, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 20 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664935)]
public static void pinsrb(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>pinsrb instruction.<br/>
		/// <br/>
		/// <c>PINSRB xmm1, r32/m8, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 20 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664936)]
public static void pinsrb(AssemblerRegisterXMM dst, AssemblerRegister32 src1, byte imm) {}
		/// <summary>pinsrb instruction.<br/>
		/// <br/>
		/// <c>PINSRB xmm1, r64/m8, imm8</c><br/>
		/// <br/>
		/// <c>66 o64 0F 3A 20 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664937)]
public static void pinsrb(AssemblerRegisterXMM dst, AssemblerRegister64 src1, byte imm) {}
		/// <summary>pinsrb instruction.<br/>
		/// <br/>
		/// <c>PINSRB xmm1, r32/m8, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 20 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664938)]
public static void pinsrb(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>pinsrd instruction.<br/>
		/// <br/>
		/// <c>PINSRD xmm1, r/m32, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 22 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664939)]
public static void pinsrd(AssemblerRegisterXMM dst, AssemblerRegister32 src1, sbyte imm) {}
		/// <summary>pinsrd instruction.<br/>
		/// <br/>
		/// <c>PINSRD xmm1, r/m32, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 22 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664940)]
public static void pinsrd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>pinsrd instruction.<br/>
		/// <br/>
		/// <c>PINSRD xmm1, r/m32, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 22 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664941)]
public static void pinsrd(AssemblerRegisterXMM dst, AssemblerRegister32 src1, byte imm) {}
		/// <summary>pinsrd instruction.<br/>
		/// <br/>
		/// <c>PINSRD xmm1, r/m32, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 22 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664942)]
public static void pinsrd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>pinsrq instruction.<br/>
		/// <br/>
		/// <c>PINSRQ xmm1, r/m64, imm8</c><br/>
		/// <br/>
		/// <c>66 o64 0F 3A 22 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664943)]
public static void pinsrq(AssemblerRegisterXMM dst, AssemblerRegister64 src1, sbyte imm) {}
		/// <summary>pinsrq instruction.<br/>
		/// <br/>
		/// <c>PINSRQ xmm1, r/m64, imm8</c><br/>
		/// <br/>
		/// <c>66 o64 0F 3A 22 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664944)]
public static void pinsrq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>pinsrq instruction.<br/>
		/// <br/>
		/// <c>PINSRQ xmm1, r/m64, imm8</c><br/>
		/// <br/>
		/// <c>66 o64 0F 3A 22 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664945)]
public static void pinsrq(AssemblerRegisterXMM dst, AssemblerRegister64 src1, byte imm) {}
		/// <summary>pinsrq instruction.<br/>
		/// <br/>
		/// <c>PINSRQ xmm1, r/m64, imm8</c><br/>
		/// <br/>
		/// <c>66 o64 0F 3A 22 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664946)]
public static void pinsrq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>pinsrw instruction.<br/>
		/// <br/>
		/// <c>PINSRW mm, r32/m16, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F C4 /r ib</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664947)]
public static void pinsrw(AssemblerRegisterMM dst, AssemblerRegister32 src1, sbyte imm) {}
		/// <summary>pinsrw instruction.<br/>
		/// <br/>
		/// <c>PINSRW xmm, r32/m16, imm8</c><br/>
		/// <br/>
		/// <c>66 0F C4 /r ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664948)]
public static void pinsrw(AssemblerRegisterXMM dst, AssemblerRegister32 src1, sbyte imm) {}
		/// <summary>pinsrw instruction.<br/>
		/// <br/>
		/// <c>PINSRW mm, r64/m16, imm8</c><br/>
		/// <br/>
		/// <c>NP o64 0F C4 /r ib</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664949)]
public static void pinsrw(AssemblerRegisterMM dst, AssemblerRegister64 src1, sbyte imm) {}
		/// <summary>pinsrw instruction.<br/>
		/// <br/>
		/// <c>PINSRW xmm, r64/m16, imm8</c><br/>
		/// <br/>
		/// <c>66 o64 0F C4 /r ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664950)]
public static void pinsrw(AssemblerRegisterXMM dst, AssemblerRegister64 src1, sbyte imm) {}
		/// <summary>pinsrw instruction.<br/>
		/// <br/>
		/// <c>PINSRW mm, r32/m16, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F C4 /r ib</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664951)]
public static void pinsrw(AssemblerRegisterMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>pinsrw instruction.<br/>
		/// <br/>
		/// <c>PINSRW xmm, r32/m16, imm8</c><br/>
		/// <br/>
		/// <c>66 0F C4 /r ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664952)]
public static void pinsrw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>pinsrw instruction.<br/>
		/// <br/>
		/// <c>PINSRW mm, r32/m16, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F C4 /r ib</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664953)]
public static void pinsrw(AssemblerRegisterMM dst, AssemblerRegister32 src1, byte imm) {}
		/// <summary>pinsrw instruction.<br/>
		/// <br/>
		/// <c>PINSRW xmm, r32/m16, imm8</c><br/>
		/// <br/>
		/// <c>66 0F C4 /r ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664954)]
public static void pinsrw(AssemblerRegisterXMM dst, AssemblerRegister32 src1, byte imm) {}
		/// <summary>pinsrw instruction.<br/>
		/// <br/>
		/// <c>PINSRW mm, r64/m16, imm8</c><br/>
		/// <br/>
		/// <c>NP o64 0F C4 /r ib</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664955)]
public static void pinsrw(AssemblerRegisterMM dst, AssemblerRegister64 src1, byte imm) {}
		/// <summary>pinsrw instruction.<br/>
		/// <br/>
		/// <c>PINSRW xmm, r64/m16, imm8</c><br/>
		/// <br/>
		/// <c>66 o64 0F C4 /r ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100664956)]
public static void pinsrw(AssemblerRegisterXMM dst, AssemblerRegister64 src1, byte imm) {}
		/// <summary>pinsrw instruction.<br/>
		/// <br/>
		/// <c>PINSRW mm, r32/m16, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F C4 /r ib</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664957)]
public static void pinsrw(AssemblerRegisterMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>pinsrw instruction.<br/>
		/// <br/>
		/// <c>PINSRW xmm, r32/m16, imm8</c><br/>
		/// <br/>
		/// <c>66 0F C4 /r ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664958)]
public static void pinsrw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>pmachriw instruction.<br/>
		/// <br/>
		/// <c>PMACHRIW mm, m64</c><br/>
		/// <br/>
		/// <c>0F 5E /r</c><br/>
		/// <br/>
		/// <c>CYRIX_EMMI</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664959)]
public static void pmachriw(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmaddubsw instruction.<br/>
		/// <br/>
		/// <c>PMADDUBSW mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 38 04 /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664960)]
public static void pmaddubsw(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pmaddubsw instruction.<br/>
		/// <br/>
		/// <c>PMADDUBSW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 04 /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664961)]
public static void pmaddubsw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pmaddubsw instruction.<br/>
		/// <br/>
		/// <c>PMADDUBSW mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 38 04 /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664962)]
public static void pmaddubsw(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmaddubsw instruction.<br/>
		/// <br/>
		/// <c>PMADDUBSW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 04 /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664963)]
public static void pmaddubsw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmaddwd instruction.<br/>
		/// <br/>
		/// <c>PMADDWD mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F F5 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664964)]
public static void pmaddwd(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pmaddwd instruction.<br/>
		/// <br/>
		/// <c>PMADDWD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F F5 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664965)]
public static void pmaddwd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pmaddwd instruction.<br/>
		/// <br/>
		/// <c>PMADDWD mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F F5 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664966)]
public static void pmaddwd(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmaddwd instruction.<br/>
		/// <br/>
		/// <c>PMADDWD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F F5 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664967)]
public static void pmaddwd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmagw instruction.<br/>
		/// <br/>
		/// <c>PMAGW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 52 /r</c><br/>
		/// <br/>
		/// <c>CYRIX_EMMI</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664968)]
public static void pmagw(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pmagw instruction.<br/>
		/// <br/>
		/// <c>PMAGW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 52 /r</c><br/>
		/// <br/>
		/// <c>CYRIX_EMMI</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100664969)]
public static void pmagw(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmaxsb instruction.<br/>
		/// <br/>
		/// <c>PMAXSB xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 3C /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664970)]
public static void pmaxsb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pmaxsb instruction.<br/>
		/// <br/>
		/// <c>PMAXSB xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 3C /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664971)]
public static void pmaxsb(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmaxsd instruction.<br/>
		/// <br/>
		/// <c>PMAXSD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 3D /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664972)]
public static void pmaxsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pmaxsd instruction.<br/>
		/// <br/>
		/// <c>PMAXSD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 3D /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664973)]
public static void pmaxsd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmaxsw instruction.<br/>
		/// <br/>
		/// <c>PMAXSW mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F EE /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664974)]
public static void pmaxsw(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pmaxsw instruction.<br/>
		/// <br/>
		/// <c>PMAXSW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F EE /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664975)]
public static void pmaxsw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pmaxsw instruction.<br/>
		/// <br/>
		/// <c>PMAXSW mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F EE /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664976)]
public static void pmaxsw(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmaxsw instruction.<br/>
		/// <br/>
		/// <c>PMAXSW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F EE /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664977)]
public static void pmaxsw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmaxub instruction.<br/>
		/// <br/>
		/// <c>PMAXUB mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F DE /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664978)]
public static void pmaxub(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pmaxub instruction.<br/>
		/// <br/>
		/// <c>PMAXUB xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F DE /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664979)]
public static void pmaxub(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pmaxub instruction.<br/>
		/// <br/>
		/// <c>PMAXUB mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F DE /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664980)]
public static void pmaxub(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmaxub instruction.<br/>
		/// <br/>
		/// <c>PMAXUB xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F DE /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664981)]
public static void pmaxub(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmaxud instruction.<br/>
		/// <br/>
		/// <c>PMAXUD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 3F /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664982)]
public static void pmaxud(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pmaxud instruction.<br/>
		/// <br/>
		/// <c>PMAXUD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 3F /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664983)]
public static void pmaxud(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmaxuw instruction.<br/>
		/// <br/>
		/// <c>PMAXUW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 3E /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664984)]
public static void pmaxuw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pmaxuw instruction.<br/>
		/// <br/>
		/// <c>PMAXUW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 3E /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664985)]
public static void pmaxuw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pminsb instruction.<br/>
		/// <br/>
		/// <c>PMINSB xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 38 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664986)]
public static void pminsb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pminsb instruction.<br/>
		/// <br/>
		/// <c>PMINSB xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 38 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664987)]
public static void pminsb(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pminsd instruction.<br/>
		/// <br/>
		/// <c>PMINSD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 39 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664988)]
public static void pminsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pminsd instruction.<br/>
		/// <br/>
		/// <c>PMINSD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 39 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664989)]
public static void pminsd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pminsw instruction.<br/>
		/// <br/>
		/// <c>PMINSW mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F EA /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664990)]
public static void pminsw(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pminsw instruction.<br/>
		/// <br/>
		/// <c>PMINSW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F EA /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664991)]
public static void pminsw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pminsw instruction.<br/>
		/// <br/>
		/// <c>PMINSW mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F EA /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664992)]
public static void pminsw(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pminsw instruction.<br/>
		/// <br/>
		/// <c>PMINSW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F EA /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664993)]
public static void pminsw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pminub instruction.<br/>
		/// <br/>
		/// <c>PMINUB mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F DA /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664994)]
public static void pminub(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pminub instruction.<br/>
		/// <br/>
		/// <c>PMINUB xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F DA /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664995)]
public static void pminub(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pminub instruction.<br/>
		/// <br/>
		/// <c>PMINUB mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F DA /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664996)]
public static void pminub(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pminub instruction.<br/>
		/// <br/>
		/// <c>PMINUB xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F DA /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664997)]
public static void pminub(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pminud instruction.<br/>
		/// <br/>
		/// <c>PMINUD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 3B /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664998)]
public static void pminud(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pminud instruction.<br/>
		/// <br/>
		/// <c>PMINUD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 3B /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100664999)]
public static void pminud(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pminuw instruction.<br/>
		/// <br/>
		/// <c>PMINUW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 3A /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665000)]
public static void pminuw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pminuw instruction.<br/>
		/// <br/>
		/// <c>PMINUW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 3A /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665001)]
public static void pminuw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmovmskb instruction.<br/>
		/// <br/>
		/// <c>PMOVMSKB r32, mm</c><br/>
		/// <br/>
		/// <c>NP 0F D7 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665002)]
public static void pmovmskb(AssemblerRegister32 dst, AssemblerRegisterMM src) {}
		/// <summary>pmovmskb instruction.<br/>
		/// <br/>
		/// <c>PMOVMSKB r64, mm</c><br/>
		/// <br/>
		/// <c>NP o64 0F D7 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665003)]
public static void pmovmskb(AssemblerRegister64 dst, AssemblerRegisterMM src) {}
		/// <summary>pmovmskb instruction.<br/>
		/// <br/>
		/// <c>PMOVMSKB r32, xmm</c><br/>
		/// <br/>
		/// <c>66 0F D7 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665004)]
public static void pmovmskb(AssemblerRegister32 dst, AssemblerRegisterXMM src) {}
		/// <summary>pmovmskb instruction.<br/>
		/// <br/>
		/// <c>PMOVMSKB r64, xmm</c><br/>
		/// <br/>
		/// <c>66 o64 0F D7 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665005)]
public static void pmovmskb(AssemblerRegister64 dst, AssemblerRegisterXMM src) {}
		/// <summary>pmovsxbd instruction.<br/>
		/// <br/>
		/// <c>PMOVSXBD xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>66 0F 38 21 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665006)]
public static void pmovsxbd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pmovsxbd instruction.<br/>
		/// <br/>
		/// <c>PMOVSXBD xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>66 0F 38 21 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665007)]
public static void pmovsxbd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmovsxbq instruction.<br/>
		/// <br/>
		/// <c>PMOVSXBQ xmm1, xmm2/m16</c><br/>
		/// <br/>
		/// <c>66 0F 38 22 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665008)]
public static void pmovsxbq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pmovsxbq instruction.<br/>
		/// <br/>
		/// <c>PMOVSXBQ xmm1, xmm2/m16</c><br/>
		/// <br/>
		/// <c>66 0F 38 22 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665009)]
public static void pmovsxbq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmovsxbw instruction.<br/>
		/// <br/>
		/// <c>PMOVSXBW xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>66 0F 38 20 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665010)]
public static void pmovsxbw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pmovsxbw instruction.<br/>
		/// <br/>
		/// <c>PMOVSXBW xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>66 0F 38 20 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665011)]
public static void pmovsxbw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmovsxdq instruction.<br/>
		/// <br/>
		/// <c>PMOVSXDQ xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>66 0F 38 25 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665012)]
public static void pmovsxdq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pmovsxdq instruction.<br/>
		/// <br/>
		/// <c>PMOVSXDQ xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>66 0F 38 25 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665013)]
public static void pmovsxdq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmovsxwd instruction.<br/>
		/// <br/>
		/// <c>PMOVSXWD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>66 0F 38 23 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665014)]
public static void pmovsxwd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pmovsxwd instruction.<br/>
		/// <br/>
		/// <c>PMOVSXWD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>66 0F 38 23 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665015)]
public static void pmovsxwd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmovsxwq instruction.<br/>
		/// <br/>
		/// <c>PMOVSXWQ xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>66 0F 38 24 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665016)]
public static void pmovsxwq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pmovsxwq instruction.<br/>
		/// <br/>
		/// <c>PMOVSXWQ xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>66 0F 38 24 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665017)]
public static void pmovsxwq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmovzxbd instruction.<br/>
		/// <br/>
		/// <c>PMOVZXBD xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>66 0F 38 31 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665018)]
public static void pmovzxbd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pmovzxbd instruction.<br/>
		/// <br/>
		/// <c>PMOVZXBD xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>66 0F 38 31 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665019)]
public static void pmovzxbd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmovzxbq instruction.<br/>
		/// <br/>
		/// <c>PMOVZXBQ xmm1, xmm2/m16</c><br/>
		/// <br/>
		/// <c>66 0F 38 32 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665020)]
public static void pmovzxbq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pmovzxbq instruction.<br/>
		/// <br/>
		/// <c>PMOVZXBQ xmm1, xmm2/m16</c><br/>
		/// <br/>
		/// <c>66 0F 38 32 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665021)]
public static void pmovzxbq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmovzxbw instruction.<br/>
		/// <br/>
		/// <c>PMOVZXBW xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>66 0F 38 30 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665022)]
public static void pmovzxbw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pmovzxbw instruction.<br/>
		/// <br/>
		/// <c>PMOVZXBW xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>66 0F 38 30 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665023)]
public static void pmovzxbw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmovzxdq instruction.<br/>
		/// <br/>
		/// <c>PMOVZXDQ xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>66 0F 38 35 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665024)]
public static void pmovzxdq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pmovzxdq instruction.<br/>
		/// <br/>
		/// <c>PMOVZXDQ xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>66 0F 38 35 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665025)]
public static void pmovzxdq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmovzxwd instruction.<br/>
		/// <br/>
		/// <c>PMOVZXWD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>66 0F 38 33 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665026)]
public static void pmovzxwd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pmovzxwd instruction.<br/>
		/// <br/>
		/// <c>PMOVZXWD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>66 0F 38 33 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665027)]
public static void pmovzxwd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmovzxwq instruction.<br/>
		/// <br/>
		/// <c>PMOVZXWQ xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>66 0F 38 34 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665028)]
public static void pmovzxwq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pmovzxwq instruction.<br/>
		/// <br/>
		/// <c>PMOVZXWQ xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>66 0F 38 34 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665029)]
public static void pmovzxwq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmuldq instruction.<br/>
		/// <br/>
		/// <c>PMULDQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 28 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665030)]
public static void pmuldq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pmuldq instruction.<br/>
		/// <br/>
		/// <c>PMULDQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 28 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665031)]
public static void pmuldq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmulhriw instruction.<br/>
		/// <br/>
		/// <c>PMULHRIW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 5D /r</c><br/>
		/// <br/>
		/// <c>CYRIX_EMMI</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665032)]
public static void pmulhriw(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pmulhriw instruction.<br/>
		/// <br/>
		/// <c>PMULHRIW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 5D /r</c><br/>
		/// <br/>
		/// <c>CYRIX_EMMI</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665033)]
public static void pmulhriw(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmulhrsw instruction.<br/>
		/// <br/>
		/// <c>PMULHRSW mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 38 0B /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665034)]
public static void pmulhrsw(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pmulhrsw instruction.<br/>
		/// <br/>
		/// <c>PMULHRSW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 0B /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665035)]
public static void pmulhrsw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pmulhrsw instruction.<br/>
		/// <br/>
		/// <c>PMULHRSW mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 38 0B /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665036)]
public static void pmulhrsw(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmulhrsw instruction.<br/>
		/// <br/>
		/// <c>PMULHRSW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 0B /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665037)]
public static void pmulhrsw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmulhrw instruction.<br/>
		/// <br/>
		/// <c>PMULHRW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r B7</c><br/>
		/// <br/>
		/// <c>3DNOW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665038)]
public static void pmulhrw(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pmulhrw instruction.<br/>
		/// <br/>
		/// <c>PMULHRW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r B7</c><br/>
		/// <br/>
		/// <c>3DNOW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665039)]
public static void pmulhrw(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmulhrw_cyrix instruction.<br/>
		/// <br/>
		/// <c>PMULHRW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 59 /r</c><br/>
		/// <br/>
		/// <c>CYRIX_EMMI</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665040)]
public static void pmulhrw_cyrix(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pmulhrw_cyrix instruction.<br/>
		/// <br/>
		/// <c>PMULHRW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 59 /r</c><br/>
		/// <br/>
		/// <c>CYRIX_EMMI</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665041)]
public static void pmulhrw_cyrix(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmulhuw instruction.<br/>
		/// <br/>
		/// <c>PMULHUW mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F E4 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665042)]
public static void pmulhuw(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pmulhuw instruction.<br/>
		/// <br/>
		/// <c>PMULHUW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F E4 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665043)]
public static void pmulhuw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pmulhuw instruction.<br/>
		/// <br/>
		/// <c>PMULHUW mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F E4 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665044)]
public static void pmulhuw(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmulhuw instruction.<br/>
		/// <br/>
		/// <c>PMULHUW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F E4 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665045)]
public static void pmulhuw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmulhw instruction.<br/>
		/// <br/>
		/// <c>PMULHW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F E5 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665046)]
public static void pmulhw(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pmulhw instruction.<br/>
		/// <br/>
		/// <c>PMULHW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F E5 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665047)]
public static void pmulhw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pmulhw instruction.<br/>
		/// <br/>
		/// <c>PMULHW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F E5 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665048)]
public static void pmulhw(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmulhw instruction.<br/>
		/// <br/>
		/// <c>PMULHW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F E5 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665049)]
public static void pmulhw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmulld instruction.<br/>
		/// <br/>
		/// <c>PMULLD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 40 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665050)]
public static void pmulld(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pmulld instruction.<br/>
		/// <br/>
		/// <c>PMULLD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 40 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665051)]
public static void pmulld(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmullw instruction.<br/>
		/// <br/>
		/// <c>PMULLW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F D5 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665052)]
public static void pmullw(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pmullw instruction.<br/>
		/// <br/>
		/// <c>PMULLW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F D5 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665053)]
public static void pmullw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pmullw instruction.<br/>
		/// <br/>
		/// <c>PMULLW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F D5 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665054)]
public static void pmullw(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmullw instruction.<br/>
		/// <br/>
		/// <c>PMULLW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F D5 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665055)]
public static void pmullw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmuludq instruction.<br/>
		/// <br/>
		/// <c>PMULUDQ mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F F4 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665056)]
public static void pmuludq(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pmuludq instruction.<br/>
		/// <br/>
		/// <c>PMULUDQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F F4 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665057)]
public static void pmuludq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pmuludq instruction.<br/>
		/// <br/>
		/// <c>PMULUDQ mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F F4 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665058)]
public static void pmuludq(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmuludq instruction.<br/>
		/// <br/>
		/// <c>PMULUDQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F F4 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665059)]
public static void pmuludq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmvgezb instruction.<br/>
		/// <br/>
		/// <c>PMVGEZB mm, m64</c><br/>
		/// <br/>
		/// <c>0F 5C /r</c><br/>
		/// <br/>
		/// <c>CYRIX_EMMI</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665060)]
public static void pmvgezb(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmvlzb instruction.<br/>
		/// <br/>
		/// <c>PMVLZB mm, m64</c><br/>
		/// <br/>
		/// <c>0F 5B /r</c><br/>
		/// <br/>
		/// <c>CYRIX_EMMI</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665061)]
public static void pmvlzb(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmvnzb instruction.<br/>
		/// <br/>
		/// <c>PMVNZB mm, m64</c><br/>
		/// <br/>
		/// <c>0F 5A /r</c><br/>
		/// <br/>
		/// <c>CYRIX_EMMI</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665062)]
public static void pmvnzb(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pmvzb instruction.<br/>
		/// <br/>
		/// <c>PMVZB mm, m64</c><br/>
		/// <br/>
		/// <c>0F 58 /r</c><br/>
		/// <br/>
		/// <c>CYRIX_EMMI</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665063)]
public static void pmvzb(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pop instruction.<br/>
		/// <br/>
		/// <c>POP r16</c><br/>
		/// <br/>
		/// <c>o16 58+rw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665064)]
public static void pop(AssemblerRegister16 dst) {}
		/// <summary>pop instruction.<br/>
		/// <br/>
		/// <c>POP r32</c><br/>
		/// <br/>
		/// <c>o32 58+rd</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665065)]
public static void pop(AssemblerRegister32 dst) {}
		/// <summary>pop instruction.<br/>
		/// <br/>
		/// <c>POP r64</c><br/>
		/// <br/>
		/// <c>o64 58+ro</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665066)]
public static void pop(AssemblerRegister64 dst) {}
		/// <summary>pop instruction.<br/>
		/// <br/>
		/// <c>POP FS</c><br/>
		/// <br/>
		/// <c>o64 0F A1</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>POP GS</c><br/>
		/// <br/>
		/// <c>o64 0F A9</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>POP ES</c><br/>
		/// <br/>
		/// <c>o32 07</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>POP SS</c><br/>
		/// <br/>
		/// <c>o32 17</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>POP DS</c><br/>
		/// <br/>
		/// <c>o32 1F</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>POP FS</c><br/>
		/// <br/>
		/// <c>o32 0F A1</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>POP GS</c><br/>
		/// <br/>
		/// <c>o32 0F A9</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>POP ES</c><br/>
		/// <br/>
		/// <c>o16 07</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>POP SS</c><br/>
		/// <br/>
		/// <c>o16 17</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>POP DS</c><br/>
		/// <br/>
		/// <c>o16 1F</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>POP FS</c><br/>
		/// <br/>
		/// <c>o16 0F A1</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>POP GS</c><br/>
		/// <br/>
		/// <c>o16 0F A9</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665067)]
public static void pop(AssemblerRegisterSegment dst) {}
		/// <summary>pop instruction.<br/>
		/// <br/>
		/// <c>POP r/m64</c><br/>
		/// <br/>
		/// <c>o64 8F /0</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>POP r/m32</c><br/>
		/// <br/>
		/// <c>o32 8F /0</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>POP r/m16</c><br/>
		/// <br/>
		/// <c>o16 8F /0</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665068)]
public static void pop(AssemblerMemoryOperand dst) {}
		/// <summary>popa instruction.<br/>
		/// <br/>
		/// <c>POPA</c><br/>
		/// <br/>
		/// <c>o16 61</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665069)]
public static void popa() {}
		/// <summary>popad instruction.<br/>
		/// <br/>
		/// <c>POPAD</c><br/>
		/// <br/>
		/// <c>o32 61</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665070)]
public static void popad() {}
		/// <summary>popcnt instruction.<br/>
		/// <br/>
		/// <c>POPCNT r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 F3 0F B8 /r</c><br/>
		/// <br/>
		/// <c>POPCNT</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665071)]
public static void popcnt(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>popcnt instruction.<br/>
		/// <br/>
		/// <c>POPCNT r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 F3 0F B8 /r</c><br/>
		/// <br/>
		/// <c>POPCNT</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665072)]
public static void popcnt(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>popcnt instruction.<br/>
		/// <br/>
		/// <c>POPCNT r64, r/m64</c><br/>
		/// <br/>
		/// <c>F3 o64 0F B8 /r</c><br/>
		/// <br/>
		/// <c>POPCNT</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665073)]
public static void popcnt(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>popcnt instruction.<br/>
		/// <br/>
		/// <c>POPCNT r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 F3 0F B8 /r</c><br/>
		/// <br/>
		/// <c>POPCNT</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665074)]
public static void popcnt(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>popcnt instruction.<br/>
		/// <br/>
		/// <c>POPCNT r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 F3 0F B8 /r</c><br/>
		/// <br/>
		/// <c>POPCNT</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665075)]
public static void popcnt(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>popcnt instruction.<br/>
		/// <br/>
		/// <c>POPCNT r64, r/m64</c><br/>
		/// <br/>
		/// <c>F3 o64 0F B8 /r</c><br/>
		/// <br/>
		/// <c>POPCNT</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665076)]
public static void popcnt(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>popf instruction.<br/>
		/// <br/>
		/// <c>POPF</c><br/>
		/// <br/>
		/// <c>o16 9D</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665077)]
public static void popf() {}
		/// <summary>popfd instruction.<br/>
		/// <br/>
		/// <c>POPFD</c><br/>
		/// <br/>
		/// <c>o32 9D</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665078)]
public static void popfd() {}
		/// <summary>popfq instruction.<br/>
		/// <br/>
		/// <c>POPFQ</c><br/>
		/// <br/>
		/// <c>o64 9D</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665079)]
public static void popfq() {}
		/// <summary>por instruction.<br/>
		/// <br/>
		/// <c>POR mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F EB /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665080)]
public static void por(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>por instruction.<br/>
		/// <br/>
		/// <c>POR xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F EB /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665081)]
public static void por(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>por instruction.<br/>
		/// <br/>
		/// <c>POR mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F EB /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665082)]
public static void por(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>por instruction.<br/>
		/// <br/>
		/// <c>POR xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F EB /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665083)]
public static void por(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>prefetch instruction.<br/>
		/// <br/>
		/// <c>PREFETCH m8</c><br/>
		/// <br/>
		/// <c>0F 0D /0</c><br/>
		/// <br/>
		/// <c>PREFETCHW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665084)]
public static void prefetch(AssemblerMemoryOperand dst) {}
		/// <summary>prefetchnta instruction.<br/>
		/// <br/>
		/// <c>PREFETCHNTA m8</c><br/>
		/// <br/>
		/// <c>0F 18 /0</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665085)]
public static void prefetchnta(AssemblerMemoryOperand dst) {}
		/// <summary>prefetcht0 instruction.<br/>
		/// <br/>
		/// <c>PREFETCHT0 m8</c><br/>
		/// <br/>
		/// <c>0F 18 /1</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665086)]
public static void prefetcht0(AssemblerMemoryOperand dst) {}
		/// <summary>prefetcht1 instruction.<br/>
		/// <br/>
		/// <c>PREFETCHT1 m8</c><br/>
		/// <br/>
		/// <c>0F 18 /2</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665087)]
public static void prefetcht1(AssemblerMemoryOperand dst) {}
		/// <summary>prefetcht2 instruction.<br/>
		/// <br/>
		/// <c>PREFETCHT2 m8</c><br/>
		/// <br/>
		/// <c>0F 18 /3</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665088)]
public static void prefetcht2(AssemblerMemoryOperand dst) {}
		/// <summary>prefetchw instruction.<br/>
		/// <br/>
		/// <c>PREFETCHW m8</c><br/>
		/// <br/>
		/// <c>0F 0D /1</c><br/>
		/// <br/>
		/// <c>PREFETCHW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665089)]
public static void prefetchw(AssemblerMemoryOperand dst) {}
		/// <summary>prefetchwt1 instruction.<br/>
		/// <br/>
		/// <c>PREFETCHWT1 m8</c><br/>
		/// <br/>
		/// <c>0F 0D /2</c><br/>
		/// <br/>
		/// <c>PREFETCHWT1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665090)]
public static void prefetchwt1(AssemblerMemoryOperand dst) {}
		/// <summary>psadbw instruction.<br/>
		/// <br/>
		/// <c>PSADBW mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F F6 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665091)]
public static void psadbw(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>psadbw instruction.<br/>
		/// <br/>
		/// <c>PSADBW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F F6 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665092)]
public static void psadbw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>psadbw instruction.<br/>
		/// <br/>
		/// <c>PSADBW mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F F6 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665093)]
public static void psadbw(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>psadbw instruction.<br/>
		/// <br/>
		/// <c>PSADBW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F F6 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665094)]
public static void psadbw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pshufb instruction.<br/>
		/// <br/>
		/// <c>PSHUFB mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 38 00 /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665095)]
public static void pshufb(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pshufb instruction.<br/>
		/// <br/>
		/// <c>PSHUFB xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 00 /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665096)]
public static void pshufb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pshufb instruction.<br/>
		/// <br/>
		/// <c>PSHUFB mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 38 00 /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665097)]
public static void pshufb(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pshufb instruction.<br/>
		/// <br/>
		/// <c>PSHUFB xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 00 /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665098)]
public static void pshufb(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pshufd instruction.<br/>
		/// <br/>
		/// <c>PSHUFD xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 70 /r ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665099)]
public static void pshufd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>pshufd instruction.<br/>
		/// <br/>
		/// <c>PSHUFD xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 70 /r ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665100)]
public static void pshufd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>pshufd instruction.<br/>
		/// <br/>
		/// <c>PSHUFD xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 70 /r ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665101)]
public static void pshufd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>pshufd instruction.<br/>
		/// <br/>
		/// <c>PSHUFD xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 70 /r ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665102)]
public static void pshufd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>pshufhw instruction.<br/>
		/// <br/>
		/// <c>PSHUFHW xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>F3 0F 70 /r ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665103)]
public static void pshufhw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>pshufhw instruction.<br/>
		/// <br/>
		/// <c>PSHUFHW xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>F3 0F 70 /r ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665104)]
public static void pshufhw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>pshufhw instruction.<br/>
		/// <br/>
		/// <c>PSHUFHW xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>F3 0F 70 /r ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665105)]
public static void pshufhw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>pshufhw instruction.<br/>
		/// <br/>
		/// <c>PSHUFHW xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>F3 0F 70 /r ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665106)]
public static void pshufhw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>pshuflw instruction.<br/>
		/// <br/>
		/// <c>PSHUFLW xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>F2 0F 70 /r ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665107)]
public static void pshuflw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>pshuflw instruction.<br/>
		/// <br/>
		/// <c>PSHUFLW xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>F2 0F 70 /r ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665108)]
public static void pshuflw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>pshuflw instruction.<br/>
		/// <br/>
		/// <c>PSHUFLW xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>F2 0F 70 /r ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665109)]
public static void pshuflw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>pshuflw instruction.<br/>
		/// <br/>
		/// <c>PSHUFLW xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>F2 0F 70 /r ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665110)]
public static void pshuflw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>pshufw instruction.<br/>
		/// <br/>
		/// <c>PSHUFW mm1, mm2/m64, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F 70 /r ib</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665111)]
public static void pshufw(AssemblerRegisterMM dst, AssemblerRegisterMM src1, sbyte imm) {}
		/// <summary>pshufw instruction.<br/>
		/// <br/>
		/// <c>PSHUFW mm1, mm2/m64, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F 70 /r ib</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665112)]
public static void pshufw(AssemblerRegisterMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>pshufw instruction.<br/>
		/// <br/>
		/// <c>PSHUFW mm1, mm2/m64, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F 70 /r ib</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665113)]
public static void pshufw(AssemblerRegisterMM dst, AssemblerRegisterMM src1, byte imm) {}
		/// <summary>pshufw instruction.<br/>
		/// <br/>
		/// <c>PSHUFW mm1, mm2/m64, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F 70 /r ib</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665114)]
public static void pshufw(AssemblerRegisterMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>psignb instruction.<br/>
		/// <br/>
		/// <c>PSIGNB mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 38 08 /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665115)]
public static void psignb(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>psignb instruction.<br/>
		/// <br/>
		/// <c>PSIGNB xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 08 /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665116)]
public static void psignb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>psignb instruction.<br/>
		/// <br/>
		/// <c>PSIGNB mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 38 08 /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665117)]
public static void psignb(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>psignb instruction.<br/>
		/// <br/>
		/// <c>PSIGNB xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 08 /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665118)]
public static void psignb(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>psignd instruction.<br/>
		/// <br/>
		/// <c>PSIGND mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 38 0A /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665119)]
public static void psignd(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>psignd instruction.<br/>
		/// <br/>
		/// <c>PSIGND xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 0A /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665120)]
public static void psignd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>psignd instruction.<br/>
		/// <br/>
		/// <c>PSIGND mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 38 0A /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665121)]
public static void psignd(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>psignd instruction.<br/>
		/// <br/>
		/// <c>PSIGND xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 0A /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665122)]
public static void psignd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>psignw instruction.<br/>
		/// <br/>
		/// <c>PSIGNW mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 38 09 /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665123)]
public static void psignw(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>psignw instruction.<br/>
		/// <br/>
		/// <c>PSIGNW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 09 /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665124)]
public static void psignw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>psignw instruction.<br/>
		/// <br/>
		/// <c>PSIGNW mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 38 09 /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665125)]
public static void psignw(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>psignw instruction.<br/>
		/// <br/>
		/// <c>PSIGNW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 09 /r</c><br/>
		/// <br/>
		/// <c>SSSE3</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665126)]
public static void psignw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pslld instruction.<br/>
		/// <br/>
		/// <c>PSLLD mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F F2 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665127)]
public static void pslld(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pslld instruction.<br/>
		/// <br/>
		/// <c>PSLLD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F F2 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665128)]
public static void pslld(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pslld instruction.<br/>
		/// <br/>
		/// <c>PSLLD mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F F2 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665129)]
public static void pslld(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pslld instruction.<br/>
		/// <br/>
		/// <c>PSLLD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F F2 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665130)]
public static void pslld(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pslld instruction.<br/>
		/// <br/>
		/// <c>PSLLD mm, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F 72 /6 ib</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665131)]
public static void pslld(AssemblerRegisterMM dst, sbyte imm) {}
		/// <summary>pslld instruction.<br/>
		/// <br/>
		/// <c>PSLLD xmm1, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 72 /6 ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665132)]
public static void pslld(AssemblerRegisterXMM dst, sbyte imm) {}
		/// <summary>pslld instruction.<br/>
		/// <br/>
		/// <c>PSLLD mm, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F 72 /6 ib</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665133)]
public static void pslld(AssemblerRegisterMM dst, byte imm) {}
		/// <summary>pslld instruction.<br/>
		/// <br/>
		/// <c>PSLLD xmm1, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 72 /6 ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665134)]
public static void pslld(AssemblerRegisterXMM dst, byte imm) {}
		/// <summary>pslldq instruction.<br/>
		/// <br/>
		/// <c>PSLLDQ xmm1, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 73 /7 ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665135)]
public static void pslldq(AssemblerRegisterXMM dst, sbyte imm) {}
		/// <summary>pslldq instruction.<br/>
		/// <br/>
		/// <c>PSLLDQ xmm1, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 73 /7 ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665136)]
public static void pslldq(AssemblerRegisterXMM dst, byte imm) {}
		/// <summary>psllq instruction.<br/>
		/// <br/>
		/// <c>PSLLQ mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F F3 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665137)]
public static void psllq(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>psllq instruction.<br/>
		/// <br/>
		/// <c>PSLLQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F F3 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665138)]
public static void psllq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>psllq instruction.<br/>
		/// <br/>
		/// <c>PSLLQ mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F F3 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665139)]
public static void psllq(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>psllq instruction.<br/>
		/// <br/>
		/// <c>PSLLQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F F3 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665140)]
public static void psllq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>psllq instruction.<br/>
		/// <br/>
		/// <c>PSLLQ mm, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F 73 /6 ib</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665141)]
public static void psllq(AssemblerRegisterMM dst, sbyte imm) {}
		/// <summary>psllq instruction.<br/>
		/// <br/>
		/// <c>PSLLQ xmm1, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 73 /6 ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665142)]
public static void psllq(AssemblerRegisterXMM dst, sbyte imm) {}
		/// <summary>psllq instruction.<br/>
		/// <br/>
		/// <c>PSLLQ mm, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F 73 /6 ib</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665143)]
public static void psllq(AssemblerRegisterMM dst, byte imm) {}
		/// <summary>psllq instruction.<br/>
		/// <br/>
		/// <c>PSLLQ xmm1, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 73 /6 ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665144)]
public static void psllq(AssemblerRegisterXMM dst, byte imm) {}
		/// <summary>psllw instruction.<br/>
		/// <br/>
		/// <c>PSLLW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F F1 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665145)]
public static void psllw(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>psllw instruction.<br/>
		/// <br/>
		/// <c>PSLLW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F F1 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665146)]
public static void psllw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>psllw instruction.<br/>
		/// <br/>
		/// <c>PSLLW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F F1 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665147)]
public static void psllw(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>psllw instruction.<br/>
		/// <br/>
		/// <c>PSLLW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F F1 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665148)]
public static void psllw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>psllw instruction.<br/>
		/// <br/>
		/// <c>PSLLW mm1, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F 71 /6 ib</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665149)]
public static void psllw(AssemblerRegisterMM dst, sbyte imm) {}
		/// <summary>psllw instruction.<br/>
		/// <br/>
		/// <c>PSLLW xmm1, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 71 /6 ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665150)]
public static void psllw(AssemblerRegisterXMM dst, sbyte imm) {}
		/// <summary>psllw instruction.<br/>
		/// <br/>
		/// <c>PSLLW mm1, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F 71 /6 ib</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665151)]
public static void psllw(AssemblerRegisterMM dst, byte imm) {}
		/// <summary>psllw instruction.<br/>
		/// <br/>
		/// <c>PSLLW xmm1, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 71 /6 ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665152)]
public static void psllw(AssemblerRegisterXMM dst, byte imm) {}
		/// <summary>psmash instruction.<br/>
		/// <br/>
		/// <c>PSMASH</c><br/>
		/// <br/>
		/// <c>F3 0F 01 FF</c><br/>
		/// <br/>
		/// <c>SEV-SNP</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665153)]
public static void psmash() {}
		/// <summary>psrad instruction.<br/>
		/// <br/>
		/// <c>PSRAD mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F E2 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665154)]
public static void psrad(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>psrad instruction.<br/>
		/// <br/>
		/// <c>PSRAD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F E2 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665155)]
public static void psrad(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>psrad instruction.<br/>
		/// <br/>
		/// <c>PSRAD mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F E2 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665156)]
public static void psrad(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>psrad instruction.<br/>
		/// <br/>
		/// <c>PSRAD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F E2 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665157)]
public static void psrad(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>psrad instruction.<br/>
		/// <br/>
		/// <c>PSRAD mm, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F 72 /4 ib</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665158)]
public static void psrad(AssemblerRegisterMM dst, sbyte imm) {}
		/// <summary>psrad instruction.<br/>
		/// <br/>
		/// <c>PSRAD xmm1, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 72 /4 ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665159)]
public static void psrad(AssemblerRegisterXMM dst, sbyte imm) {}
		/// <summary>psrad instruction.<br/>
		/// <br/>
		/// <c>PSRAD mm, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F 72 /4 ib</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665160)]
public static void psrad(AssemblerRegisterMM dst, byte imm) {}
		/// <summary>psrad instruction.<br/>
		/// <br/>
		/// <c>PSRAD xmm1, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 72 /4 ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665161)]
public static void psrad(AssemblerRegisterXMM dst, byte imm) {}
		/// <summary>psraw instruction.<br/>
		/// <br/>
		/// <c>PSRAW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F E1 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665162)]
public static void psraw(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>psraw instruction.<br/>
		/// <br/>
		/// <c>PSRAW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F E1 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665163)]
public static void psraw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>psraw instruction.<br/>
		/// <br/>
		/// <c>PSRAW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F E1 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665164)]
public static void psraw(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>psraw instruction.<br/>
		/// <br/>
		/// <c>PSRAW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F E1 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665165)]
public static void psraw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>psraw instruction.<br/>
		/// <br/>
		/// <c>PSRAW mm, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F 71 /4 ib</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665166)]
public static void psraw(AssemblerRegisterMM dst, sbyte imm) {}
		/// <summary>psraw instruction.<br/>
		/// <br/>
		/// <c>PSRAW xmm1, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 71 /4 ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665167)]
public static void psraw(AssemblerRegisterXMM dst, sbyte imm) {}
		/// <summary>psraw instruction.<br/>
		/// <br/>
		/// <c>PSRAW mm, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F 71 /4 ib</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665168)]
public static void psraw(AssemblerRegisterMM dst, byte imm) {}
		/// <summary>psraw instruction.<br/>
		/// <br/>
		/// <c>PSRAW xmm1, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 71 /4 ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665169)]
public static void psraw(AssemblerRegisterXMM dst, byte imm) {}
		/// <summary>psrld instruction.<br/>
		/// <br/>
		/// <c>PSRLD mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F D2 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665170)]
public static void psrld(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>psrld instruction.<br/>
		/// <br/>
		/// <c>PSRLD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F D2 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665171)]
public static void psrld(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>psrld instruction.<br/>
		/// <br/>
		/// <c>PSRLD mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F D2 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665172)]
public static void psrld(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>psrld instruction.<br/>
		/// <br/>
		/// <c>PSRLD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F D2 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665173)]
public static void psrld(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>psrld instruction.<br/>
		/// <br/>
		/// <c>PSRLD mm, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F 72 /2 ib</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665174)]
public static void psrld(AssemblerRegisterMM dst, sbyte imm) {}
		/// <summary>psrld instruction.<br/>
		/// <br/>
		/// <c>PSRLD xmm1, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 72 /2 ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665175)]
public static void psrld(AssemblerRegisterXMM dst, sbyte imm) {}
		/// <summary>psrld instruction.<br/>
		/// <br/>
		/// <c>PSRLD mm, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F 72 /2 ib</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665176)]
public static void psrld(AssemblerRegisterMM dst, byte imm) {}
		/// <summary>psrld instruction.<br/>
		/// <br/>
		/// <c>PSRLD xmm1, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 72 /2 ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665177)]
public static void psrld(AssemblerRegisterXMM dst, byte imm) {}
		/// <summary>psrldq instruction.<br/>
		/// <br/>
		/// <c>PSRLDQ xmm1, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 73 /3 ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665178)]
public static void psrldq(AssemblerRegisterXMM dst, sbyte imm) {}
		/// <summary>psrldq instruction.<br/>
		/// <br/>
		/// <c>PSRLDQ xmm1, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 73 /3 ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665179)]
public static void psrldq(AssemblerRegisterXMM dst, byte imm) {}
		/// <summary>psrlq instruction.<br/>
		/// <br/>
		/// <c>PSRLQ mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F D3 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665180)]
public static void psrlq(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>psrlq instruction.<br/>
		/// <br/>
		/// <c>PSRLQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F D3 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665181)]
public static void psrlq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>psrlq instruction.<br/>
		/// <br/>
		/// <c>PSRLQ mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F D3 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665182)]
public static void psrlq(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>psrlq instruction.<br/>
		/// <br/>
		/// <c>PSRLQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F D3 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665183)]
public static void psrlq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>psrlq instruction.<br/>
		/// <br/>
		/// <c>PSRLQ mm, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F 73 /2 ib</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665184)]
public static void psrlq(AssemblerRegisterMM dst, sbyte imm) {}
		/// <summary>psrlq instruction.<br/>
		/// <br/>
		/// <c>PSRLQ xmm1, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 73 /2 ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665185)]
public static void psrlq(AssemblerRegisterXMM dst, sbyte imm) {}
		/// <summary>psrlq instruction.<br/>
		/// <br/>
		/// <c>PSRLQ mm, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F 73 /2 ib</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665186)]
public static void psrlq(AssemblerRegisterMM dst, byte imm) {}
		/// <summary>psrlq instruction.<br/>
		/// <br/>
		/// <c>PSRLQ xmm1, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 73 /2 ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665187)]
public static void psrlq(AssemblerRegisterXMM dst, byte imm) {}
		/// <summary>psrlw instruction.<br/>
		/// <br/>
		/// <c>PSRLW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F D1 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665188)]
public static void psrlw(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>psrlw instruction.<br/>
		/// <br/>
		/// <c>PSRLW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F D1 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665189)]
public static void psrlw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>psrlw instruction.<br/>
		/// <br/>
		/// <c>PSRLW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F D1 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665190)]
public static void psrlw(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>psrlw instruction.<br/>
		/// <br/>
		/// <c>PSRLW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F D1 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665191)]
public static void psrlw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>psrlw instruction.<br/>
		/// <br/>
		/// <c>PSRLW mm, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F 71 /2 ib</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665192)]
public static void psrlw(AssemblerRegisterMM dst, sbyte imm) {}
		/// <summary>psrlw instruction.<br/>
		/// <br/>
		/// <c>PSRLW xmm1, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 71 /2 ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665193)]
public static void psrlw(AssemblerRegisterXMM dst, sbyte imm) {}
		/// <summary>psrlw instruction.<br/>
		/// <br/>
		/// <c>PSRLW mm, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F 71 /2 ib</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665194)]
public static void psrlw(AssemblerRegisterMM dst, byte imm) {}
		/// <summary>psrlw instruction.<br/>
		/// <br/>
		/// <c>PSRLW xmm1, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 71 /2 ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665195)]
public static void psrlw(AssemblerRegisterXMM dst, byte imm) {}
		/// <summary>psubb instruction.<br/>
		/// <br/>
		/// <c>PSUBB mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F F8 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665196)]
public static void psubb(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>psubb instruction.<br/>
		/// <br/>
		/// <c>PSUBB xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F F8 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665197)]
public static void psubb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>psubb instruction.<br/>
		/// <br/>
		/// <c>PSUBB mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F F8 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665198)]
public static void psubb(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>psubb instruction.<br/>
		/// <br/>
		/// <c>PSUBB xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F F8 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665199)]
public static void psubb(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>psubd instruction.<br/>
		/// <br/>
		/// <c>PSUBD mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F FA /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665200)]
public static void psubd(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>psubd instruction.<br/>
		/// <br/>
		/// <c>PSUBD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F FA /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665201)]
public static void psubd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>psubd instruction.<br/>
		/// <br/>
		/// <c>PSUBD mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F FA /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665202)]
public static void psubd(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>psubd instruction.<br/>
		/// <br/>
		/// <c>PSUBD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F FA /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665203)]
public static void psubd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>psubq instruction.<br/>
		/// <br/>
		/// <c>PSUBQ mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F FB /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665204)]
public static void psubq(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>psubq instruction.<br/>
		/// <br/>
		/// <c>PSUBQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F FB /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665205)]
public static void psubq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>psubq instruction.<br/>
		/// <br/>
		/// <c>PSUBQ mm1, mm2/m64</c><br/>
		/// <br/>
		/// <c>NP 0F FB /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665206)]
public static void psubq(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>psubq instruction.<br/>
		/// <br/>
		/// <c>PSUBQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F FB /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665207)]
public static void psubq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>psubsb instruction.<br/>
		/// <br/>
		/// <c>PSUBSB mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F E8 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665208)]
public static void psubsb(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>psubsb instruction.<br/>
		/// <br/>
		/// <c>PSUBSB xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F E8 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665209)]
public static void psubsb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>psubsb instruction.<br/>
		/// <br/>
		/// <c>PSUBSB mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F E8 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665210)]
public static void psubsb(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>psubsb instruction.<br/>
		/// <br/>
		/// <c>PSUBSB xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F E8 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665211)]
public static void psubsb(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>psubsiw instruction.<br/>
		/// <br/>
		/// <c>PSUBSIW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 55 /r</c><br/>
		/// <br/>
		/// <c>CYRIX_EMMI</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665212)]
public static void psubsiw(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>psubsiw instruction.<br/>
		/// <br/>
		/// <c>PSUBSIW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 55 /r</c><br/>
		/// <br/>
		/// <c>CYRIX_EMMI</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665213)]
public static void psubsiw(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>psubsw instruction.<br/>
		/// <br/>
		/// <c>PSUBSW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F E9 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665214)]
public static void psubsw(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>psubsw instruction.<br/>
		/// <br/>
		/// <c>PSUBSW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F E9 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665215)]
public static void psubsw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>psubsw instruction.<br/>
		/// <br/>
		/// <c>PSUBSW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F E9 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665216)]
public static void psubsw(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>psubsw instruction.<br/>
		/// <br/>
		/// <c>PSUBSW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F E9 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665217)]
public static void psubsw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>psubusb instruction.<br/>
		/// <br/>
		/// <c>PSUBUSB mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F D8 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665218)]
public static void psubusb(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>psubusb instruction.<br/>
		/// <br/>
		/// <c>PSUBUSB xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F D8 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665219)]
public static void psubusb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>psubusb instruction.<br/>
		/// <br/>
		/// <c>PSUBUSB mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F D8 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665220)]
public static void psubusb(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>psubusb instruction.<br/>
		/// <br/>
		/// <c>PSUBUSB xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F D8 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665221)]
public static void psubusb(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>psubusw instruction.<br/>
		/// <br/>
		/// <c>PSUBUSW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F D9 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665222)]
public static void psubusw(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>psubusw instruction.<br/>
		/// <br/>
		/// <c>PSUBUSW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F D9 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665223)]
public static void psubusw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>psubusw instruction.<br/>
		/// <br/>
		/// <c>PSUBUSW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F D9 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665224)]
public static void psubusw(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>psubusw instruction.<br/>
		/// <br/>
		/// <c>PSUBUSW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F D9 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665225)]
public static void psubusw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>psubw instruction.<br/>
		/// <br/>
		/// <c>PSUBW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F F9 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665226)]
public static void psubw(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>psubw instruction.<br/>
		/// <br/>
		/// <c>PSUBW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F F9 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665227)]
public static void psubw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>psubw instruction.<br/>
		/// <br/>
		/// <c>PSUBW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F F9 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665228)]
public static void psubw(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>psubw instruction.<br/>
		/// <br/>
		/// <c>PSUBW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F F9 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665229)]
public static void psubw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pswapd instruction.<br/>
		/// <br/>
		/// <c>PSWAPD mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r BB</c><br/>
		/// <br/>
		/// <c>3DNOWEXT</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665230)]
public static void pswapd(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pswapd instruction.<br/>
		/// <br/>
		/// <c>PSWAPD mm, mm/m64</c><br/>
		/// <br/>
		/// <c>0F 0F /r BB</c><br/>
		/// <br/>
		/// <c>3DNOWEXT</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665231)]
public static void pswapd(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>ptest instruction.<br/>
		/// <br/>
		/// <c>PTEST xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 17 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665232)]
public static void ptest(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>ptest instruction.<br/>
		/// <br/>
		/// <c>PTEST xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 38 17 /r</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665233)]
public static void ptest(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>ptwrite instruction.<br/>
		/// <br/>
		/// <c>PTWRITE r/m32</c><br/>
		/// <br/>
		/// <c>F3 0F AE /4</c><br/>
		/// <br/>
		/// <c>PTWRITE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665234)]
public static void ptwrite(AssemblerRegister32 dst) {}
		/// <summary>ptwrite instruction.<br/>
		/// <br/>
		/// <c>PTWRITE r/m64</c><br/>
		/// <br/>
		/// <c>F3 o64 0F AE /4</c><br/>
		/// <br/>
		/// <c>PTWRITE</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665235)]
public static void ptwrite(AssemblerRegister64 dst) {}
		/// <summary>ptwrite instruction.<br/>
		/// <br/>
		/// <c>PTWRITE r/m64</c><br/>
		/// <br/>
		/// <c>F3 o64 0F AE /4</c><br/>
		/// <br/>
		/// <c>PTWRITE</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>PTWRITE r/m32</c><br/>
		/// <br/>
		/// <c>F3 0F AE /4</c><br/>
		/// <br/>
		/// <c>PTWRITE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665236)]
public static void ptwrite(AssemblerMemoryOperand dst) {}
		/// <summary>punpckhbw instruction.<br/>
		/// <br/>
		/// <c>PUNPCKHBW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 68 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665237)]
public static void punpckhbw(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>punpckhbw instruction.<br/>
		/// <br/>
		/// <c>PUNPCKHBW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 68 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665238)]
public static void punpckhbw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>punpckhbw instruction.<br/>
		/// <br/>
		/// <c>PUNPCKHBW mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 68 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665239)]
public static void punpckhbw(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>punpckhbw instruction.<br/>
		/// <br/>
		/// <c>PUNPCKHBW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 68 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665240)]
public static void punpckhbw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>punpckhdq instruction.<br/>
		/// <br/>
		/// <c>PUNPCKHDQ mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 6A /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665241)]
public static void punpckhdq(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>punpckhdq instruction.<br/>
		/// <br/>
		/// <c>PUNPCKHDQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 6A /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665242)]
public static void punpckhdq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>punpckhdq instruction.<br/>
		/// <br/>
		/// <c>PUNPCKHDQ mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 6A /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665243)]
public static void punpckhdq(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>punpckhdq instruction.<br/>
		/// <br/>
		/// <c>PUNPCKHDQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 6A /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665244)]
public static void punpckhdq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>punpckhqdq instruction.<br/>
		/// <br/>
		/// <c>PUNPCKHQDQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 6D /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665245)]
public static void punpckhqdq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>punpckhqdq instruction.<br/>
		/// <br/>
		/// <c>PUNPCKHQDQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 6D /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665246)]
public static void punpckhqdq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>punpckhwd instruction.<br/>
		/// <br/>
		/// <c>PUNPCKHWD mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 69 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665247)]
public static void punpckhwd(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>punpckhwd instruction.<br/>
		/// <br/>
		/// <c>PUNPCKHWD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 69 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665248)]
public static void punpckhwd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>punpckhwd instruction.<br/>
		/// <br/>
		/// <c>PUNPCKHWD mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 69 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665249)]
public static void punpckhwd(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>punpckhwd instruction.<br/>
		/// <br/>
		/// <c>PUNPCKHWD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 69 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665250)]
public static void punpckhwd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>punpcklbw instruction.<br/>
		/// <br/>
		/// <c>PUNPCKLBW mm, mm/m32</c><br/>
		/// <br/>
		/// <c>NP 0F 60 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665251)]
public static void punpcklbw(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>punpcklbw instruction.<br/>
		/// <br/>
		/// <c>PUNPCKLBW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 60 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665252)]
public static void punpcklbw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>punpcklbw instruction.<br/>
		/// <br/>
		/// <c>PUNPCKLBW mm, mm/m32</c><br/>
		/// <br/>
		/// <c>NP 0F 60 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665253)]
public static void punpcklbw(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>punpcklbw instruction.<br/>
		/// <br/>
		/// <c>PUNPCKLBW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 60 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665254)]
public static void punpcklbw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>punpckldq instruction.<br/>
		/// <br/>
		/// <c>PUNPCKLDQ mm, mm/m32</c><br/>
		/// <br/>
		/// <c>NP 0F 62 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665255)]
public static void punpckldq(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>punpckldq instruction.<br/>
		/// <br/>
		/// <c>PUNPCKLDQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 62 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665256)]
public static void punpckldq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>punpckldq instruction.<br/>
		/// <br/>
		/// <c>PUNPCKLDQ mm, mm/m32</c><br/>
		/// <br/>
		/// <c>NP 0F 62 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665257)]
public static void punpckldq(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>punpckldq instruction.<br/>
		/// <br/>
		/// <c>PUNPCKLDQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 62 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665258)]
public static void punpckldq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>punpcklqdq instruction.<br/>
		/// <br/>
		/// <c>PUNPCKLQDQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 6C /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665259)]
public static void punpcklqdq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>punpcklqdq instruction.<br/>
		/// <br/>
		/// <c>PUNPCKLQDQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 6C /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665260)]
public static void punpcklqdq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>punpcklwd instruction.<br/>
		/// <br/>
		/// <c>PUNPCKLWD mm, mm/m32</c><br/>
		/// <br/>
		/// <c>NP 0F 61 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665261)]
public static void punpcklwd(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>punpcklwd instruction.<br/>
		/// <br/>
		/// <c>PUNPCKLWD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 61 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665262)]
public static void punpcklwd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>punpcklwd instruction.<br/>
		/// <br/>
		/// <c>PUNPCKLWD mm, mm/m32</c><br/>
		/// <br/>
		/// <c>NP 0F 61 /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665263)]
public static void punpcklwd(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>punpcklwd instruction.<br/>
		/// <br/>
		/// <c>PUNPCKLWD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 61 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665264)]
public static void punpcklwd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>push instruction.<br/>
		/// <br/>
		/// <c>PUSH r16</c><br/>
		/// <br/>
		/// <c>o16 50+rw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665265)]
public static void push(AssemblerRegister16 dst) {}
		/// <summary>push instruction.<br/>
		/// <br/>
		/// <c>PUSH r32</c><br/>
		/// <br/>
		/// <c>o32 50+rd</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665266)]
public static void push(AssemblerRegister32 dst) {}
		/// <summary>push instruction.<br/>
		/// <br/>
		/// <c>PUSH r64</c><br/>
		/// <br/>
		/// <c>o64 50+ro</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665267)]
public static void push(AssemblerRegister64 dst) {}
		/// <summary>push instruction.<br/>
		/// <br/>
		/// <c>PUSH FS</c><br/>
		/// <br/>
		/// <c>o64 0F A0</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>PUSH GS</c><br/>
		/// <br/>
		/// <c>o64 0F A8</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>PUSH ES</c><br/>
		/// <br/>
		/// <c>o32 06</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>PUSH CS</c><br/>
		/// <br/>
		/// <c>o32 0E</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>PUSH SS</c><br/>
		/// <br/>
		/// <c>o32 16</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>PUSH DS</c><br/>
		/// <br/>
		/// <c>o32 1E</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>PUSH FS</c><br/>
		/// <br/>
		/// <c>o32 0F A0</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>PUSH GS</c><br/>
		/// <br/>
		/// <c>o32 0F A8</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>PUSH ES</c><br/>
		/// <br/>
		/// <c>o16 06</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>PUSH CS</c><br/>
		/// <br/>
		/// <c>o16 0E</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>PUSH SS</c><br/>
		/// <br/>
		/// <c>o16 16</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>PUSH DS</c><br/>
		/// <br/>
		/// <c>o16 1E</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>PUSH FS</c><br/>
		/// <br/>
		/// <c>o16 0F A0</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>PUSH GS</c><br/>
		/// <br/>
		/// <c>o16 0F A8</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665268)]
public static void push(AssemblerRegisterSegment dst) {}
		/// <summary>push instruction.<br/>
		/// <br/>
		/// <c>PUSH r/m64</c><br/>
		/// <br/>
		/// <c>o64 FF /6</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>PUSH r/m32</c><br/>
		/// <br/>
		/// <c>o32 FF /6</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>PUSH r/m16</c><br/>
		/// <br/>
		/// <c>o16 FF /6</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665269)]
public static void push(AssemblerMemoryOperand dst) {}
		/// <summary>push instruction.<br/>
		/// <br/>
		/// <c>PUSH imm32</c><br/>
		/// <br/>
		/// <c>o64 68 id</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>PUSH imm32</c><br/>
		/// <br/>
		/// <c>o32 68 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>PUSH imm16</c><br/>
		/// <br/>
		/// <c>o16 68 iw</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>PUSH imm8</c><br/>
		/// <br/>
		/// <c>o64 6A ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>PUSH imm8</c><br/>
		/// <br/>
		/// <c>o32 6A ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>PUSH imm8</c><br/>
		/// <br/>
		/// <c>o16 6A ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665270)]
public static void push(int imm) {}
		/// <summary>push instruction.<br/>
		/// <br/>
		/// <c>PUSH imm32</c><br/>
		/// <br/>
		/// <c>o32 68 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>PUSH imm16</c><br/>
		/// <br/>
		/// <c>o16 68 iw</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>PUSH imm8</c><br/>
		/// <br/>
		/// <c>o32 6A ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>PUSH imm8</c><br/>
		/// <br/>
		/// <c>o16 6A ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665271)]
public static void push(uint imm) {}
		/// <summary>pusha instruction.<br/>
		/// <br/>
		/// <c>PUSHA</c><br/>
		/// <br/>
		/// <c>o16 60</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665272)]
public static void pusha() {}
		/// <summary>pushad instruction.<br/>
		/// <br/>
		/// <c>PUSHAD</c><br/>
		/// <br/>
		/// <c>o32 60</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665273)]
public static void pushad() {}
		/// <summary>pushf instruction.<br/>
		/// <br/>
		/// <c>PUSHF</c><br/>
		/// <br/>
		/// <c>o16 9C</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665274)]
public static void pushf() {}
		/// <summary>pushfd instruction.<br/>
		/// <br/>
		/// <c>PUSHFD</c><br/>
		/// <br/>
		/// <c>o32 9C</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665275)]
public static void pushfd() {}
		/// <summary>pushfq instruction.<br/>
		/// <br/>
		/// <c>PUSHFQ</c><br/>
		/// <br/>
		/// <c>o64 9C</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665276)]
public static void pushfq() {}
		/// <summary>pvalidate instruction.<br/>
		/// <br/>
		/// <c>PVALIDATE</c><br/>
		/// <br/>
		/// <c>a64 F2 0F 01 FF</c><br/>
		/// <br/>
		/// <c>SEV-SNP</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>PVALIDATE</c><br/>
		/// <br/>
		/// <c>a32 F2 0F 01 FF</c><br/>
		/// <br/>
		/// <c>SEV-SNP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>PVALIDATE</c><br/>
		/// <br/>
		/// <c>a16 F2 0F 01 FF</c><br/>
		/// <br/>
		/// <c>SEV-SNP</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665277)]
public static void pvalidate() {}
		/// <summary>pxor instruction.<br/>
		/// <br/>
		/// <c>PXOR mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F EF /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665278)]
public static void pxor(AssemblerRegisterMM dst, AssemblerRegisterMM src) {}
		/// <summary>pxor instruction.<br/>
		/// <br/>
		/// <c>PXOR xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F EF /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665279)]
public static void pxor(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>pxor instruction.<br/>
		/// <br/>
		/// <c>PXOR mm, mm/m64</c><br/>
		/// <br/>
		/// <c>NP 0F EF /r</c><br/>
		/// <br/>
		/// <c>MMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665280)]
public static void pxor(AssemblerRegisterMM dst, AssemblerMemoryOperand src) {}
		/// <summary>pxor instruction.<br/>
		/// <br/>
		/// <c>PXOR xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F EF /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665281)]
public static void pxor(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>rcl instruction.<br/>
		/// <br/>
		/// <c>RCL r/m8, CL</c><br/>
		/// <br/>
		/// <c>D2 /2</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665282)]
public static void rcl(AssemblerRegister8 dst, AssemblerRegister8 src) {}
		/// <summary>rcl instruction.<br/>
		/// <br/>
		/// <c>RCL r/m16, CL</c><br/>
		/// <br/>
		/// <c>o16 D3 /2</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665283)]
public static void rcl(AssemblerRegister16 dst, AssemblerRegister8 src) {}
		/// <summary>rcl instruction.<br/>
		/// <br/>
		/// <c>RCL r/m32, CL</c><br/>
		/// <br/>
		/// <c>o32 D3 /2</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665284)]
public static void rcl(AssemblerRegister32 dst, AssemblerRegister8 src) {}
		/// <summary>rcl instruction.<br/>
		/// <br/>
		/// <c>RCL r/m64, CL</c><br/>
		/// <br/>
		/// <c>o64 D3 /2</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665285)]
public static void rcl(AssemblerRegister64 dst, AssemblerRegister8 src) {}
		/// <summary>rcl instruction.<br/>
		/// <br/>
		/// <c>RCL r/m64, CL</c><br/>
		/// <br/>
		/// <c>o64 D3 /2</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>RCL r/m32, CL</c><br/>
		/// <br/>
		/// <c>o32 D3 /2</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>RCL r/m16, CL</c><br/>
		/// <br/>
		/// <c>o16 D3 /2</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>RCL r/m8, CL</c><br/>
		/// <br/>
		/// <c>D2 /2</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665286)]
public static void rcl(AssemblerMemoryOperand dst, AssemblerRegister8 src) {}
		/// <summary>rcl instruction.<br/>
		/// <br/>
		/// <c>RCL r/m8, 1</c><br/>
		/// <br/>
		/// <c>D0 /2</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>RCL r/m8, imm8</c><br/>
		/// <br/>
		/// <c>C0 /2 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665287)]
public static void rcl(AssemblerRegister8 dst, sbyte imm) {}
		/// <summary>rcl instruction.<br/>
		/// <br/>
		/// <c>RCL r/m16, 1</c><br/>
		/// <br/>
		/// <c>o16 D1 /2</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>RCL r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 C1 /2 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665288)]
public static void rcl(AssemblerRegister16 dst, sbyte imm) {}
		/// <summary>rcl instruction.<br/>
		/// <br/>
		/// <c>RCL r/m32, 1</c><br/>
		/// <br/>
		/// <c>o32 D1 /2</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>RCL r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 C1 /2 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665289)]
public static void rcl(AssemblerRegister32 dst, sbyte imm) {}
		/// <summary>rcl instruction.<br/>
		/// <br/>
		/// <c>RCL r/m64, 1</c><br/>
		/// <br/>
		/// <c>o64 D1 /2</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>RCL r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 C1 /2 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665290)]
public static void rcl(AssemblerRegister64 dst, sbyte imm) {}
		/// <summary>rcl instruction.<br/>
		/// <br/>
		/// <c>RCL r/m64, 1</c><br/>
		/// <br/>
		/// <c>o64 D1 /2</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>RCL r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 C1 /2 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>RCL r/m32, 1</c><br/>
		/// <br/>
		/// <c>o32 D1 /2</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>RCL r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 C1 /2 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>RCL r/m16, 1</c><br/>
		/// <br/>
		/// <c>o16 D1 /2</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>RCL r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 C1 /2 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>RCL r/m8, 1</c><br/>
		/// <br/>
		/// <c>D0 /2</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>RCL r/m8, imm8</c><br/>
		/// <br/>
		/// <c>C0 /2 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665291)]
public static void rcl(AssemblerMemoryOperand dst, sbyte imm) {}
		/// <summary>rcl instruction.<br/>
		/// <br/>
		/// <c>RCL r/m8, 1</c><br/>
		/// <br/>
		/// <c>D0 /2</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>RCL r/m8, imm8</c><br/>
		/// <br/>
		/// <c>C0 /2 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665292)]
public static void rcl(AssemblerRegister8 dst, byte imm) {}
		/// <summary>rcl instruction.<br/>
		/// <br/>
		/// <c>RCL r/m16, 1</c><br/>
		/// <br/>
		/// <c>o16 D1 /2</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>RCL r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 C1 /2 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665293)]
public static void rcl(AssemblerRegister16 dst, byte imm) {}
		/// <summary>rcl instruction.<br/>
		/// <br/>
		/// <c>RCL r/m32, 1</c><br/>
		/// <br/>
		/// <c>o32 D1 /2</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>RCL r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 C1 /2 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665294)]
public static void rcl(AssemblerRegister32 dst, byte imm) {}
		/// <summary>rcl instruction.<br/>
		/// <br/>
		/// <c>RCL r/m64, 1</c><br/>
		/// <br/>
		/// <c>o64 D1 /2</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>RCL r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 C1 /2 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665295)]
public static void rcl(AssemblerRegister64 dst, byte imm) {}
		/// <summary>rcl instruction.<br/>
		/// <br/>
		/// <c>RCL r/m64, 1</c><br/>
		/// <br/>
		/// <c>o64 D1 /2</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>RCL r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 C1 /2 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>RCL r/m32, 1</c><br/>
		/// <br/>
		/// <c>o32 D1 /2</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>RCL r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 C1 /2 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>RCL r/m16, 1</c><br/>
		/// <br/>
		/// <c>o16 D1 /2</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>RCL r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 C1 /2 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>RCL r/m8, 1</c><br/>
		/// <br/>
		/// <c>D0 /2</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>RCL r/m8, imm8</c><br/>
		/// <br/>
		/// <c>C0 /2 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665296)]
public static void rcl(AssemblerMemoryOperand dst, byte imm) {}
		/// <summary>rcpps instruction.<br/>
		/// <br/>
		/// <c>RCPPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 53 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665297)]
public static void rcpps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>rcpps instruction.<br/>
		/// <br/>
		/// <c>RCPPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 53 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665298)]
public static void rcpps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>rcpss instruction.<br/>
		/// <br/>
		/// <c>RCPSS xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>F3 0F 53 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665299)]
public static void rcpss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>rcpss instruction.<br/>
		/// <br/>
		/// <c>RCPSS xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>F3 0F 53 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665300)]
public static void rcpss(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>rcr instruction.<br/>
		/// <br/>
		/// <c>RCR r/m8, CL</c><br/>
		/// <br/>
		/// <c>D2 /3</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665301)]
public static void rcr(AssemblerRegister8 dst, AssemblerRegister8 src) {}
		/// <summary>rcr instruction.<br/>
		/// <br/>
		/// <c>RCR r/m16, CL</c><br/>
		/// <br/>
		/// <c>o16 D3 /3</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665302)]
public static void rcr(AssemblerRegister16 dst, AssemblerRegister8 src) {}
		/// <summary>rcr instruction.<br/>
		/// <br/>
		/// <c>RCR r/m32, CL</c><br/>
		/// <br/>
		/// <c>o32 D3 /3</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665303)]
public static void rcr(AssemblerRegister32 dst, AssemblerRegister8 src) {}
		/// <summary>rcr instruction.<br/>
		/// <br/>
		/// <c>RCR r/m64, CL</c><br/>
		/// <br/>
		/// <c>o64 D3 /3</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665304)]
public static void rcr(AssemblerRegister64 dst, AssemblerRegister8 src) {}
		/// <summary>rcr instruction.<br/>
		/// <br/>
		/// <c>RCR r/m64, CL</c><br/>
		/// <br/>
		/// <c>o64 D3 /3</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>RCR r/m32, CL</c><br/>
		/// <br/>
		/// <c>o32 D3 /3</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>RCR r/m16, CL</c><br/>
		/// <br/>
		/// <c>o16 D3 /3</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>RCR r/m8, CL</c><br/>
		/// <br/>
		/// <c>D2 /3</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665305)]
public static void rcr(AssemblerMemoryOperand dst, AssemblerRegister8 src) {}
		/// <summary>rcr instruction.<br/>
		/// <br/>
		/// <c>RCR r/m8, 1</c><br/>
		/// <br/>
		/// <c>D0 /3</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>RCR r/m8, imm8</c><br/>
		/// <br/>
		/// <c>C0 /3 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665306)]
public static void rcr(AssemblerRegister8 dst, sbyte imm) {}
		/// <summary>rcr instruction.<br/>
		/// <br/>
		/// <c>RCR r/m16, 1</c><br/>
		/// <br/>
		/// <c>o16 D1 /3</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>RCR r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 C1 /3 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665307)]
public static void rcr(AssemblerRegister16 dst, sbyte imm) {}
		/// <summary>rcr instruction.<br/>
		/// <br/>
		/// <c>RCR r/m32, 1</c><br/>
		/// <br/>
		/// <c>o32 D1 /3</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>RCR r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 C1 /3 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665308)]
public static void rcr(AssemblerRegister32 dst, sbyte imm) {}
		/// <summary>rcr instruction.<br/>
		/// <br/>
		/// <c>RCR r/m64, 1</c><br/>
		/// <br/>
		/// <c>o64 D1 /3</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>RCR r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 C1 /3 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665309)]
public static void rcr(AssemblerRegister64 dst, sbyte imm) {}
		/// <summary>rcr instruction.<br/>
		/// <br/>
		/// <c>RCR r/m64, 1</c><br/>
		/// <br/>
		/// <c>o64 D1 /3</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>RCR r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 C1 /3 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>RCR r/m32, 1</c><br/>
		/// <br/>
		/// <c>o32 D1 /3</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>RCR r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 C1 /3 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>RCR r/m16, 1</c><br/>
		/// <br/>
		/// <c>o16 D1 /3</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>RCR r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 C1 /3 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>RCR r/m8, 1</c><br/>
		/// <br/>
		/// <c>D0 /3</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>RCR r/m8, imm8</c><br/>
		/// <br/>
		/// <c>C0 /3 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665310)]
public static void rcr(AssemblerMemoryOperand dst, sbyte imm) {}
		/// <summary>rcr instruction.<br/>
		/// <br/>
		/// <c>RCR r/m8, 1</c><br/>
		/// <br/>
		/// <c>D0 /3</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>RCR r/m8, imm8</c><br/>
		/// <br/>
		/// <c>C0 /3 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665311)]
public static void rcr(AssemblerRegister8 dst, byte imm) {}
		/// <summary>rcr instruction.<br/>
		/// <br/>
		/// <c>RCR r/m16, 1</c><br/>
		/// <br/>
		/// <c>o16 D1 /3</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>RCR r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 C1 /3 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665312)]
public static void rcr(AssemblerRegister16 dst, byte imm) {}
		/// <summary>rcr instruction.<br/>
		/// <br/>
		/// <c>RCR r/m32, 1</c><br/>
		/// <br/>
		/// <c>o32 D1 /3</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>RCR r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 C1 /3 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665313)]
public static void rcr(AssemblerRegister32 dst, byte imm) {}
		/// <summary>rcr instruction.<br/>
		/// <br/>
		/// <c>RCR r/m64, 1</c><br/>
		/// <br/>
		/// <c>o64 D1 /3</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>RCR r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 C1 /3 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665314)]
public static void rcr(AssemblerRegister64 dst, byte imm) {}
		/// <summary>rcr instruction.<br/>
		/// <br/>
		/// <c>RCR r/m64, 1</c><br/>
		/// <br/>
		/// <c>o64 D1 /3</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>RCR r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 C1 /3 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>RCR r/m32, 1</c><br/>
		/// <br/>
		/// <c>o32 D1 /3</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>RCR r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 C1 /3 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>RCR r/m16, 1</c><br/>
		/// <br/>
		/// <c>o16 D1 /3</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>RCR r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 C1 /3 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>RCR r/m8, 1</c><br/>
		/// <br/>
		/// <c>D0 /3</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>RCR r/m8, imm8</c><br/>
		/// <br/>
		/// <c>C0 /3 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665315)]
public static void rcr(AssemblerMemoryOperand dst, byte imm) {}
		/// <summary>rdfsbase instruction.<br/>
		/// <br/>
		/// <c>RDFSBASE r32</c><br/>
		/// <br/>
		/// <c>F3 0F AE /0</c><br/>
		/// <br/>
		/// <c>FSGSBASE</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665316)]
public static void rdfsbase(AssemblerRegister32 dst) {}
		/// <summary>rdfsbase instruction.<br/>
		/// <br/>
		/// <c>RDFSBASE r64</c><br/>
		/// <br/>
		/// <c>F3 o64 0F AE /0</c><br/>
		/// <br/>
		/// <c>FSGSBASE</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665317)]
public static void rdfsbase(AssemblerRegister64 dst) {}
		/// <summary>rdgsbase instruction.<br/>
		/// <br/>
		/// <c>RDGSBASE r32</c><br/>
		/// <br/>
		/// <c>F3 0F AE /1</c><br/>
		/// <br/>
		/// <c>FSGSBASE</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665318)]
public static void rdgsbase(AssemblerRegister32 dst) {}
		/// <summary>rdgsbase instruction.<br/>
		/// <br/>
		/// <c>RDGSBASE r64</c><br/>
		/// <br/>
		/// <c>F3 o64 0F AE /1</c><br/>
		/// <br/>
		/// <c>FSGSBASE</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665319)]
public static void rdgsbase(AssemblerRegister64 dst) {}
		/// <summary>rdm instruction.<br/>
		/// <br/>
		/// <c>RDM</c><br/>
		/// <br/>
		/// <c>0F 3A</c><br/>
		/// <br/>
		/// <c>AMD Geode GX/LX</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665320)]
public static void rdm() {}
		/// <summary>rdmsr instruction.<br/>
		/// <br/>
		/// <c>RDMSR</c><br/>
		/// <br/>
		/// <c>0F 32</c><br/>
		/// <br/>
		/// <c>MSR</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665321)]
public static void rdmsr() {}
		/// <summary>rdpid instruction.<br/>
		/// <br/>
		/// <c>RDPID r32</c><br/>
		/// <br/>
		/// <c>F3 0F C7 /7</c><br/>
		/// <br/>
		/// <c>RDPID</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665322)]
public static void rdpid(AssemblerRegister32 dst) {}
		/// <summary>rdpid instruction.<br/>
		/// <br/>
		/// <c>RDPID r64</c><br/>
		/// <br/>
		/// <c>F3 0F C7 /7</c><br/>
		/// <br/>
		/// <c>RDPID</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665323)]
public static void rdpid(AssemblerRegister64 dst) {}
		/// <summary>rdpkru instruction.<br/>
		/// <br/>
		/// <c>RDPKRU</c><br/>
		/// <br/>
		/// <c>NP 0F 01 EE</c><br/>
		/// <br/>
		/// <c>PKU</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665324)]
public static void rdpkru() {}
		/// <summary>rdpmc instruction.<br/>
		/// <br/>
		/// <c>RDPMC</c><br/>
		/// <br/>
		/// <c>0F 33</c><br/>
		/// <br/>
		/// <c>Pentium MMX or later, or Pentium Pro or later</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665325)]
public static void rdpmc() {}
		/// <summary>rdpru instruction.<br/>
		/// <br/>
		/// <c>RDPRU</c><br/>
		/// <br/>
		/// <c>0F 01 FD</c><br/>
		/// <br/>
		/// <c>RDPRU</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665326)]
public static void rdpru() {}
		/// <summary>rdrand instruction.<br/>
		/// <br/>
		/// <c>RDRAND r16</c><br/>
		/// <br/>
		/// <c>o16 0F C7 /6</c><br/>
		/// <br/>
		/// <c>RDRAND</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665327)]
public static void rdrand(AssemblerRegister16 dst) {}
		/// <summary>rdrand instruction.<br/>
		/// <br/>
		/// <c>RDRAND r32</c><br/>
		/// <br/>
		/// <c>o32 0F C7 /6</c><br/>
		/// <br/>
		/// <c>RDRAND</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665328)]
public static void rdrand(AssemblerRegister32 dst) {}
		/// <summary>rdrand instruction.<br/>
		/// <br/>
		/// <c>RDRAND r64</c><br/>
		/// <br/>
		/// <c>o64 0F C7 /6</c><br/>
		/// <br/>
		/// <c>RDRAND</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665329)]
public static void rdrand(AssemblerRegister64 dst) {}
		/// <summary>rdseed instruction.<br/>
		/// <br/>
		/// <c>RDSEED r16</c><br/>
		/// <br/>
		/// <c>o16 0F C7 /7</c><br/>
		/// <br/>
		/// <c>RDSEED</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665330)]
public static void rdseed(AssemblerRegister16 dst) {}
		/// <summary>rdseed instruction.<br/>
		/// <br/>
		/// <c>RDSEED r32</c><br/>
		/// <br/>
		/// <c>o32 0F C7 /7</c><br/>
		/// <br/>
		/// <c>RDSEED</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665331)]
public static void rdseed(AssemblerRegister32 dst) {}
		/// <summary>rdseed instruction.<br/>
		/// <br/>
		/// <c>RDSEED r64</c><br/>
		/// <br/>
		/// <c>o64 0F C7 /7</c><br/>
		/// <br/>
		/// <c>RDSEED</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665332)]
public static void rdseed(AssemblerRegister64 dst) {}
		/// <summary>rdshr instruction.<br/>
		/// <br/>
		/// <c>RDSHR r/m32</c><br/>
		/// <br/>
		/// <c>0F 36 /0</c><br/>
		/// <br/>
		/// <c>Cyrix 6x86MX, M II, III</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665333)]
public static void rdshr(AssemblerRegister32 dst) {}
		/// <summary>rdshr instruction.<br/>
		/// <br/>
		/// <c>RDSHR r/m32</c><br/>
		/// <br/>
		/// <c>0F 36 /0</c><br/>
		/// <br/>
		/// <c>Cyrix 6x86MX, M II, III</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665334)]
public static void rdshr(AssemblerMemoryOperand dst) {}
		/// <summary>rdsspd instruction.<br/>
		/// <br/>
		/// <c>RDSSPD r32</c><br/>
		/// <br/>
		/// <c>F3 0F 1E /1</c><br/>
		/// <br/>
		/// <c>CET_SS</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665335)]
public static void rdsspd(AssemblerRegister32 dst) {}
		/// <summary>rdsspq instruction.<br/>
		/// <br/>
		/// <c>RDSSPQ r64</c><br/>
		/// <br/>
		/// <c>F3 o64 0F 1E /1</c><br/>
		/// <br/>
		/// <c>CET_SS</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665336)]
public static void rdsspq(AssemblerRegister64 dst) {}
		/// <summary>rdtsc instruction.<br/>
		/// <br/>
		/// <c>RDTSC</c><br/>
		/// <br/>
		/// <c>0F 31</c><br/>
		/// <br/>
		/// <c>TSC</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665337)]
public static void rdtsc() {}
		/// <summary>rdtscp instruction.<br/>
		/// <br/>
		/// <c>RDTSCP</c><br/>
		/// <br/>
		/// <c>0F 01 F9</c><br/>
		/// <br/>
		/// <c>RDTSCP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665338)]
public static void rdtscp() {}
		/// <summary>reservednop_0f0d instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 0F 0D /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665339)]
public static void reservednop_0f0d(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>reservednop_0f0d instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 0F 0D /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665340)]
public static void reservednop_0f0d(AssemblerMemoryOperand dst, AssemblerRegister16 src) {}
		/// <summary>reservednop_0f0d instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 0F 0D /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665341)]
public static void reservednop_0f0d(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>reservednop_0f0d instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 0F 0D /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665342)]
public static void reservednop_0f0d(AssemblerMemoryOperand dst, AssemblerRegister32 src) {}
		/// <summary>reservednop_0f0d instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 0F 0D /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665343)]
public static void reservednop_0f0d(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>reservednop_0f0d instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 0F 0D /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665344)]
public static void reservednop_0f0d(AssemblerMemoryOperand dst, AssemblerRegister64 src) {}
		/// <summary>reservednop_0f18 instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 0F 18 /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665345)]
public static void reservednop_0f18(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>reservednop_0f18 instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 0F 18 /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665346)]
public static void reservednop_0f18(AssemblerMemoryOperand dst, AssemblerRegister16 src) {}
		/// <summary>reservednop_0f18 instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 0F 18 /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665347)]
public static void reservednop_0f18(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>reservednop_0f18 instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 0F 18 /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665348)]
public static void reservednop_0f18(AssemblerMemoryOperand dst, AssemblerRegister32 src) {}
		/// <summary>reservednop_0f18 instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 0F 18 /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665349)]
public static void reservednop_0f18(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>reservednop_0f18 instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 0F 18 /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665350)]
public static void reservednop_0f18(AssemblerMemoryOperand dst, AssemblerRegister64 src) {}
		/// <summary>reservednop_0f19 instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 0F 19 /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665351)]
public static void reservednop_0f19(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>reservednop_0f19 instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 0F 19 /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665352)]
public static void reservednop_0f19(AssemblerMemoryOperand dst, AssemblerRegister16 src) {}
		/// <summary>reservednop_0f19 instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 0F 19 /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665353)]
public static void reservednop_0f19(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>reservednop_0f19 instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 0F 19 /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665354)]
public static void reservednop_0f19(AssemblerMemoryOperand dst, AssemblerRegister32 src) {}
		/// <summary>reservednop_0f19 instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 0F 19 /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665355)]
public static void reservednop_0f19(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>reservednop_0f19 instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 0F 19 /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665356)]
public static void reservednop_0f19(AssemblerMemoryOperand dst, AssemblerRegister64 src) {}
		/// <summary>reservednop_0f1a instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 0F 1A /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665357)]
public static void reservednop_0f1a(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>reservednop_0f1a instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 0F 1A /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665358)]
public static void reservednop_0f1a(AssemblerMemoryOperand dst, AssemblerRegister16 src) {}
		/// <summary>reservednop_0f1a instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 0F 1A /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665359)]
public static void reservednop_0f1a(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>reservednop_0f1a instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 0F 1A /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665360)]
public static void reservednop_0f1a(AssemblerMemoryOperand dst, AssemblerRegister32 src) {}
		/// <summary>reservednop_0f1a instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 0F 1A /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665361)]
public static void reservednop_0f1a(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>reservednop_0f1a instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 0F 1A /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665362)]
public static void reservednop_0f1a(AssemblerMemoryOperand dst, AssemblerRegister64 src) {}
		/// <summary>reservednop_0f1b instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 0F 1B /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665363)]
public static void reservednop_0f1b(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>reservednop_0f1b instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 0F 1B /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665364)]
public static void reservednop_0f1b(AssemblerMemoryOperand dst, AssemblerRegister16 src) {}
		/// <summary>reservednop_0f1b instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 0F 1B /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665365)]
public static void reservednop_0f1b(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>reservednop_0f1b instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 0F 1B /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665366)]
public static void reservednop_0f1b(AssemblerMemoryOperand dst, AssemblerRegister32 src) {}
		/// <summary>reservednop_0f1b instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 0F 1B /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665367)]
public static void reservednop_0f1b(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>reservednop_0f1b instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 0F 1B /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665368)]
public static void reservednop_0f1b(AssemblerMemoryOperand dst, AssemblerRegister64 src) {}
		/// <summary>reservednop_0f1c instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 0F 1C /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665369)]
public static void reservednop_0f1c(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>reservednop_0f1c instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 0F 1C /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665370)]
public static void reservednop_0f1c(AssemblerMemoryOperand dst, AssemblerRegister16 src) {}
		/// <summary>reservednop_0f1c instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 0F 1C /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665371)]
public static void reservednop_0f1c(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>reservednop_0f1c instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 0F 1C /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665372)]
public static void reservednop_0f1c(AssemblerMemoryOperand dst, AssemblerRegister32 src) {}
		/// <summary>reservednop_0f1c instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 0F 1C /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665373)]
public static void reservednop_0f1c(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>reservednop_0f1c instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 0F 1C /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665374)]
public static void reservednop_0f1c(AssemblerMemoryOperand dst, AssemblerRegister64 src) {}
		/// <summary>reservednop_0f1d instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 0F 1D /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665375)]
public static void reservednop_0f1d(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>reservednop_0f1d instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 0F 1D /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665376)]
public static void reservednop_0f1d(AssemblerMemoryOperand dst, AssemblerRegister16 src) {}
		/// <summary>reservednop_0f1d instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 0F 1D /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665377)]
public static void reservednop_0f1d(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>reservednop_0f1d instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 0F 1D /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665378)]
public static void reservednop_0f1d(AssemblerMemoryOperand dst, AssemblerRegister32 src) {}
		/// <summary>reservednop_0f1d instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 0F 1D /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665379)]
public static void reservednop_0f1d(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>reservednop_0f1d instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 0F 1D /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665380)]
public static void reservednop_0f1d(AssemblerMemoryOperand dst, AssemblerRegister64 src) {}
		/// <summary>reservednop_0f1e instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 0F 1E /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665381)]
public static void reservednop_0f1e(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>reservednop_0f1e instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 0F 1E /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665382)]
public static void reservednop_0f1e(AssemblerMemoryOperand dst, AssemblerRegister16 src) {}
		/// <summary>reservednop_0f1e instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 0F 1E /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665383)]
public static void reservednop_0f1e(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>reservednop_0f1e instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 0F 1E /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665384)]
public static void reservednop_0f1e(AssemblerMemoryOperand dst, AssemblerRegister32 src) {}
		/// <summary>reservednop_0f1e instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 0F 1E /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665385)]
public static void reservednop_0f1e(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>reservednop_0f1e instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 0F 1E /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665386)]
public static void reservednop_0f1e(AssemblerMemoryOperand dst, AssemblerRegister64 src) {}
		/// <summary>reservednop_0f1f instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 0F 1F /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665387)]
public static void reservednop_0f1f(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>reservednop_0f1f instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 0F 1F /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665388)]
public static void reservednop_0f1f(AssemblerMemoryOperand dst, AssemblerRegister16 src) {}
		/// <summary>reservednop_0f1f instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 0F 1F /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665389)]
public static void reservednop_0f1f(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>reservednop_0f1f instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 0F 1F /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665390)]
public static void reservednop_0f1f(AssemblerMemoryOperand dst, AssemblerRegister32 src) {}
		/// <summary>reservednop_0f1f instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 0F 1F /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665391)]
public static void reservednop_0f1f(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>reservednop_0f1f instruction.<br/>
		/// <br/>
		/// <c>RESERVEDNOP r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 0F 1F /r</c><br/>
		/// <br/>
		/// <c>CPUID.01H.EAX[Bits 11:8] = 0110B or 1111B</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665392)]
public static void reservednop_0f1f(AssemblerMemoryOperand dst, AssemblerRegister64 src) {}
		/// <summary>ret instruction.<br/>
		/// <br/>
		/// <c>RET</c><br/>
		/// <br/>
		/// <c>o64 C3</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>RET</c><br/>
		/// <br/>
		/// <c>o32 C3</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>RET</c><br/>
		/// <br/>
		/// <c>o16 C3</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665393)]
public static void ret() {}
		/// <summary>ret instruction.<br/>
		/// <br/>
		/// <c>RET imm16</c><br/>
		/// <br/>
		/// <c>o64 C2 iw</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>RET imm16</c><br/>
		/// <br/>
		/// <c>o32 C2 iw</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>RET imm16</c><br/>
		/// <br/>
		/// <c>o16 C2 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665394)]
public static void ret(short imm) {}
		/// <summary>ret instruction.<br/>
		/// <br/>
		/// <c>RET imm16</c><br/>
		/// <br/>
		/// <c>o64 C2 iw</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>RET imm16</c><br/>
		/// <br/>
		/// <c>o32 C2 iw</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>RET imm16</c><br/>
		/// <br/>
		/// <c>o16 C2 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665395)]
public static void ret(ushort imm) {}
		/// <summary>retf instruction.<br/>
		/// <br/>
		/// <c>RETF</c><br/>
		/// <br/>
		/// <c>o64 CB</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>RETF</c><br/>
		/// <br/>
		/// <c>o32 CB</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>RETF</c><br/>
		/// <br/>
		/// <c>o16 CB</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665396)]
public static void retf() {}
		/// <summary>retf instruction.<br/>
		/// <br/>
		/// <c>RETF imm16</c><br/>
		/// <br/>
		/// <c>o64 CA iw</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>RETF imm16</c><br/>
		/// <br/>
		/// <c>o32 CA iw</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>RETF imm16</c><br/>
		/// <br/>
		/// <c>o16 CA iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665397)]
public static void retf(short imm) {}
		/// <summary>retf instruction.<br/>
		/// <br/>
		/// <c>RETF imm16</c><br/>
		/// <br/>
		/// <c>o64 CA iw</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>RETF imm16</c><br/>
		/// <br/>
		/// <c>o32 CA iw</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>RETF imm16</c><br/>
		/// <br/>
		/// <c>o16 CA iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665398)]
public static void retf(ushort imm) {}
		/// <summary>rmpadjust instruction.<br/>
		/// <br/>
		/// <c>RMPADJUST</c><br/>
		/// <br/>
		/// <c>F3 0F 01 FE</c><br/>
		/// <br/>
		/// <c>SEV-SNP</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665399)]
public static void rmpadjust() {}
		/// <summary>rmpupdate instruction.<br/>
		/// <br/>
		/// <c>RMPUPDATE</c><br/>
		/// <br/>
		/// <c>F2 0F 01 FE</c><br/>
		/// <br/>
		/// <c>SEV-SNP</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665400)]
public static void rmpupdate() {}
		/// <summary>rol instruction.<br/>
		/// <br/>
		/// <c>ROL r/m8, CL</c><br/>
		/// <br/>
		/// <c>D2 /0</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665401)]
public static void rol(AssemblerRegister8 dst, AssemblerRegister8 src) {}
		/// <summary>rol instruction.<br/>
		/// <br/>
		/// <c>ROL r/m16, CL</c><br/>
		/// <br/>
		/// <c>o16 D3 /0</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665402)]
public static void rol(AssemblerRegister16 dst, AssemblerRegister8 src) {}
		/// <summary>rol instruction.<br/>
		/// <br/>
		/// <c>ROL r/m32, CL</c><br/>
		/// <br/>
		/// <c>o32 D3 /0</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665403)]
public static void rol(AssemblerRegister32 dst, AssemblerRegister8 src) {}
		/// <summary>rol instruction.<br/>
		/// <br/>
		/// <c>ROL r/m64, CL</c><br/>
		/// <br/>
		/// <c>o64 D3 /0</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665404)]
public static void rol(AssemblerRegister64 dst, AssemblerRegister8 src) {}
		/// <summary>rol instruction.<br/>
		/// <br/>
		/// <c>ROL r/m64, CL</c><br/>
		/// <br/>
		/// <c>o64 D3 /0</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>ROL r/m32, CL</c><br/>
		/// <br/>
		/// <c>o32 D3 /0</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ROL r/m16, CL</c><br/>
		/// <br/>
		/// <c>o16 D3 /0</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ROL r/m8, CL</c><br/>
		/// <br/>
		/// <c>D2 /0</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665405)]
public static void rol(AssemblerMemoryOperand dst, AssemblerRegister8 src) {}
		/// <summary>rol instruction.<br/>
		/// <br/>
		/// <c>ROL r/m8, 1</c><br/>
		/// <br/>
		/// <c>D0 /0</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ROL r/m8, imm8</c><br/>
		/// <br/>
		/// <c>C0 /0 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665406)]
public static void rol(AssemblerRegister8 dst, sbyte imm) {}
		/// <summary>rol instruction.<br/>
		/// <br/>
		/// <c>ROL r/m16, 1</c><br/>
		/// <br/>
		/// <c>o16 D1 /0</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ROL r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 C1 /0 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665407)]
public static void rol(AssemblerRegister16 dst, sbyte imm) {}
		/// <summary>rol instruction.<br/>
		/// <br/>
		/// <c>ROL r/m32, 1</c><br/>
		/// <br/>
		/// <c>o32 D1 /0</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ROL r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 C1 /0 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665408)]
public static void rol(AssemblerRegister32 dst, sbyte imm) {}
		/// <summary>rol instruction.<br/>
		/// <br/>
		/// <c>ROL r/m64, 1</c><br/>
		/// <br/>
		/// <c>o64 D1 /0</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>ROL r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 C1 /0 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665409)]
public static void rol(AssemblerRegister64 dst, sbyte imm) {}
		/// <summary>rol instruction.<br/>
		/// <br/>
		/// <c>ROL r/m64, 1</c><br/>
		/// <br/>
		/// <c>o64 D1 /0</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>ROL r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 C1 /0 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>ROL r/m32, 1</c><br/>
		/// <br/>
		/// <c>o32 D1 /0</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ROL r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 C1 /0 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ROL r/m16, 1</c><br/>
		/// <br/>
		/// <c>o16 D1 /0</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ROL r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 C1 /0 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ROL r/m8, 1</c><br/>
		/// <br/>
		/// <c>D0 /0</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ROL r/m8, imm8</c><br/>
		/// <br/>
		/// <c>C0 /0 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665410)]
public static void rol(AssemblerMemoryOperand dst, sbyte imm) {}
		/// <summary>rol instruction.<br/>
		/// <br/>
		/// <c>ROL r/m8, 1</c><br/>
		/// <br/>
		/// <c>D0 /0</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ROL r/m8, imm8</c><br/>
		/// <br/>
		/// <c>C0 /0 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665411)]
public static void rol(AssemblerRegister8 dst, byte imm) {}
		/// <summary>rol instruction.<br/>
		/// <br/>
		/// <c>ROL r/m16, 1</c><br/>
		/// <br/>
		/// <c>o16 D1 /0</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ROL r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 C1 /0 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665412)]
public static void rol(AssemblerRegister16 dst, byte imm) {}
		/// <summary>rol instruction.<br/>
		/// <br/>
		/// <c>ROL r/m32, 1</c><br/>
		/// <br/>
		/// <c>o32 D1 /0</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ROL r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 C1 /0 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665413)]
public static void rol(AssemblerRegister32 dst, byte imm) {}
		/// <summary>rol instruction.<br/>
		/// <br/>
		/// <c>ROL r/m64, 1</c><br/>
		/// <br/>
		/// <c>o64 D1 /0</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>ROL r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 C1 /0 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665414)]
public static void rol(AssemblerRegister64 dst, byte imm) {}
		/// <summary>rol instruction.<br/>
		/// <br/>
		/// <c>ROL r/m64, 1</c><br/>
		/// <br/>
		/// <c>o64 D1 /0</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>ROL r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 C1 /0 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>ROL r/m32, 1</c><br/>
		/// <br/>
		/// <c>o32 D1 /0</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ROL r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 C1 /0 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ROL r/m16, 1</c><br/>
		/// <br/>
		/// <c>o16 D1 /0</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ROL r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 C1 /0 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ROL r/m8, 1</c><br/>
		/// <br/>
		/// <c>D0 /0</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ROL r/m8, imm8</c><br/>
		/// <br/>
		/// <c>C0 /0 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665415)]
public static void rol(AssemblerMemoryOperand dst, byte imm) {}
		/// <summary>ror instruction.<br/>
		/// <br/>
		/// <c>ROR r/m8, CL</c><br/>
		/// <br/>
		/// <c>D2 /1</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665416)]
public static void ror(AssemblerRegister8 dst, AssemblerRegister8 src) {}
		/// <summary>ror instruction.<br/>
		/// <br/>
		/// <c>ROR r/m16, CL</c><br/>
		/// <br/>
		/// <c>o16 D3 /1</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665417)]
public static void ror(AssemblerRegister16 dst, AssemblerRegister8 src) {}
		/// <summary>ror instruction.<br/>
		/// <br/>
		/// <c>ROR r/m32, CL</c><br/>
		/// <br/>
		/// <c>o32 D3 /1</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665418)]
public static void ror(AssemblerRegister32 dst, AssemblerRegister8 src) {}
		/// <summary>ror instruction.<br/>
		/// <br/>
		/// <c>ROR r/m64, CL</c><br/>
		/// <br/>
		/// <c>o64 D3 /1</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665419)]
public static void ror(AssemblerRegister64 dst, AssemblerRegister8 src) {}
		/// <summary>ror instruction.<br/>
		/// <br/>
		/// <c>ROR r/m64, CL</c><br/>
		/// <br/>
		/// <c>o64 D3 /1</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>ROR r/m32, CL</c><br/>
		/// <br/>
		/// <c>o32 D3 /1</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ROR r/m16, CL</c><br/>
		/// <br/>
		/// <c>o16 D3 /1</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ROR r/m8, CL</c><br/>
		/// <br/>
		/// <c>D2 /1</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665420)]
public static void ror(AssemblerMemoryOperand dst, AssemblerRegister8 src) {}
		/// <summary>ror instruction.<br/>
		/// <br/>
		/// <c>ROR r/m8, 1</c><br/>
		/// <br/>
		/// <c>D0 /1</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ROR r/m8, imm8</c><br/>
		/// <br/>
		/// <c>C0 /1 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665421)]
public static void ror(AssemblerRegister8 dst, sbyte imm) {}
		/// <summary>ror instruction.<br/>
		/// <br/>
		/// <c>ROR r/m16, 1</c><br/>
		/// <br/>
		/// <c>o16 D1 /1</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ROR r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 C1 /1 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665422)]
public static void ror(AssemblerRegister16 dst, sbyte imm) {}
		/// <summary>ror instruction.<br/>
		/// <br/>
		/// <c>ROR r/m32, 1</c><br/>
		/// <br/>
		/// <c>o32 D1 /1</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ROR r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 C1 /1 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665423)]
public static void ror(AssemblerRegister32 dst, sbyte imm) {}
		/// <summary>ror instruction.<br/>
		/// <br/>
		/// <c>ROR r/m64, 1</c><br/>
		/// <br/>
		/// <c>o64 D1 /1</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>ROR r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 C1 /1 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665424)]
public static void ror(AssemblerRegister64 dst, sbyte imm) {}
		/// <summary>ror instruction.<br/>
		/// <br/>
		/// <c>ROR r/m64, 1</c><br/>
		/// <br/>
		/// <c>o64 D1 /1</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>ROR r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 C1 /1 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>ROR r/m32, 1</c><br/>
		/// <br/>
		/// <c>o32 D1 /1</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ROR r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 C1 /1 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ROR r/m16, 1</c><br/>
		/// <br/>
		/// <c>o16 D1 /1</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ROR r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 C1 /1 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ROR r/m8, 1</c><br/>
		/// <br/>
		/// <c>D0 /1</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ROR r/m8, imm8</c><br/>
		/// <br/>
		/// <c>C0 /1 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665425)]
public static void ror(AssemblerMemoryOperand dst, sbyte imm) {}
		/// <summary>ror instruction.<br/>
		/// <br/>
		/// <c>ROR r/m8, 1</c><br/>
		/// <br/>
		/// <c>D0 /1</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ROR r/m8, imm8</c><br/>
		/// <br/>
		/// <c>C0 /1 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665426)]
public static void ror(AssemblerRegister8 dst, byte imm) {}
		/// <summary>ror instruction.<br/>
		/// <br/>
		/// <c>ROR r/m16, 1</c><br/>
		/// <br/>
		/// <c>o16 D1 /1</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ROR r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 C1 /1 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665427)]
public static void ror(AssemblerRegister16 dst, byte imm) {}
		/// <summary>ror instruction.<br/>
		/// <br/>
		/// <c>ROR r/m32, 1</c><br/>
		/// <br/>
		/// <c>o32 D1 /1</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ROR r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 C1 /1 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665428)]
public static void ror(AssemblerRegister32 dst, byte imm) {}
		/// <summary>ror instruction.<br/>
		/// <br/>
		/// <c>ROR r/m64, 1</c><br/>
		/// <br/>
		/// <c>o64 D1 /1</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>ROR r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 C1 /1 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665429)]
public static void ror(AssemblerRegister64 dst, byte imm) {}
		/// <summary>ror instruction.<br/>
		/// <br/>
		/// <c>ROR r/m64, 1</c><br/>
		/// <br/>
		/// <c>o64 D1 /1</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>ROR r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 C1 /1 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>ROR r/m32, 1</c><br/>
		/// <br/>
		/// <c>o32 D1 /1</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ROR r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 C1 /1 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ROR r/m16, 1</c><br/>
		/// <br/>
		/// <c>o16 D1 /1</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ROR r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 C1 /1 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ROR r/m8, 1</c><br/>
		/// <br/>
		/// <c>D0 /1</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>ROR r/m8, imm8</c><br/>
		/// <br/>
		/// <c>C0 /1 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665430)]
public static void ror(AssemblerMemoryOperand dst, byte imm) {}
		/// <summary>rorx instruction.<br/>
		/// <br/>
		/// <c>RORX r32, r/m32, imm8</c><br/>
		/// <br/>
		/// <c>VEX.LZ.F2.0F3A.W0 F0 /r ib</c><br/>
		/// <br/>
		/// <c>BMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665431)]
public static void rorx(AssemblerRegister32 dst, AssemblerRegister32 src1, sbyte imm) {}
		/// <summary>rorx instruction.<br/>
		/// <br/>
		/// <c>RORX r64, r/m64, imm8</c><br/>
		/// <br/>
		/// <c>VEX.LZ.F2.0F3A.W1 F0 /r ib</c><br/>
		/// <br/>
		/// <c>BMI2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665432)]
public static void rorx(AssemblerRegister64 dst, AssemblerRegister64 src1, sbyte imm) {}
		/// <summary>rorx instruction.<br/>
		/// <br/>
		/// <c>RORX r32, r/m32, imm8</c><br/>
		/// <br/>
		/// <c>VEX.LZ.F2.0F3A.W0 F0 /r ib</c><br/>
		/// <br/>
		/// <c>BMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665433)]
public static void rorx(AssemblerRegister32 dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>rorx instruction.<br/>
		/// <br/>
		/// <c>RORX r64, r/m64, imm8</c><br/>
		/// <br/>
		/// <c>VEX.LZ.F2.0F3A.W1 F0 /r ib</c><br/>
		/// <br/>
		/// <c>BMI2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665434)]
public static void rorx(AssemblerRegister64 dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>rorx instruction.<br/>
		/// <br/>
		/// <c>RORX r32, r/m32, imm8</c><br/>
		/// <br/>
		/// <c>VEX.LZ.F2.0F3A.W0 F0 /r ib</c><br/>
		/// <br/>
		/// <c>BMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665435)]
public static void rorx(AssemblerRegister32 dst, AssemblerRegister32 src1, byte imm) {}
		/// <summary>rorx instruction.<br/>
		/// <br/>
		/// <c>RORX r64, r/m64, imm8</c><br/>
		/// <br/>
		/// <c>VEX.LZ.F2.0F3A.W1 F0 /r ib</c><br/>
		/// <br/>
		/// <c>BMI2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665436)]
public static void rorx(AssemblerRegister64 dst, AssemblerRegister64 src1, byte imm) {}
		/// <summary>rorx instruction.<br/>
		/// <br/>
		/// <c>RORX r32, r/m32, imm8</c><br/>
		/// <br/>
		/// <c>VEX.LZ.F2.0F3A.W0 F0 /r ib</c><br/>
		/// <br/>
		/// <c>BMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665437)]
public static void rorx(AssemblerRegister32 dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>rorx instruction.<br/>
		/// <br/>
		/// <c>RORX r64, r/m64, imm8</c><br/>
		/// <br/>
		/// <c>VEX.LZ.F2.0F3A.W1 F0 /r ib</c><br/>
		/// <br/>
		/// <c>BMI2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665438)]
public static void rorx(AssemblerRegister64 dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>roundpd instruction.<br/>
		/// <br/>
		/// <c>ROUNDPD xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 09 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665439)]
public static void roundpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>roundpd instruction.<br/>
		/// <br/>
		/// <c>ROUNDPD xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 09 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665440)]
public static void roundpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>roundpd instruction.<br/>
		/// <br/>
		/// <c>ROUNDPD xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 09 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665441)]
public static void roundpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>roundpd instruction.<br/>
		/// <br/>
		/// <c>ROUNDPD xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 09 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665442)]
public static void roundpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>roundps instruction.<br/>
		/// <br/>
		/// <c>ROUNDPS xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 08 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665443)]
public static void roundps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>roundps instruction.<br/>
		/// <br/>
		/// <c>ROUNDPS xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 08 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665444)]
public static void roundps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>roundps instruction.<br/>
		/// <br/>
		/// <c>ROUNDPS xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 08 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665445)]
public static void roundps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>roundps instruction.<br/>
		/// <br/>
		/// <c>ROUNDPS xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 08 /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665446)]
public static void roundps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>roundsd instruction.<br/>
		/// <br/>
		/// <c>ROUNDSD xmm1, xmm2/m64, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 0B /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665447)]
public static void roundsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>roundsd instruction.<br/>
		/// <br/>
		/// <c>ROUNDSD xmm1, xmm2/m64, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 0B /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665448)]
public static void roundsd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>roundsd instruction.<br/>
		/// <br/>
		/// <c>ROUNDSD xmm1, xmm2/m64, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 0B /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665449)]
public static void roundsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>roundsd instruction.<br/>
		/// <br/>
		/// <c>ROUNDSD xmm1, xmm2/m64, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 0B /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665450)]
public static void roundsd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>roundss instruction.<br/>
		/// <br/>
		/// <c>ROUNDSS xmm1, xmm2/m32, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 0A /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665451)]
public static void roundss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>roundss instruction.<br/>
		/// <br/>
		/// <c>ROUNDSS xmm1, xmm2/m32, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 0A /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665452)]
public static void roundss(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>roundss instruction.<br/>
		/// <br/>
		/// <c>ROUNDSS xmm1, xmm2/m32, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 0A /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665453)]
public static void roundss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>roundss instruction.<br/>
		/// <br/>
		/// <c>ROUNDSS xmm1, xmm2/m32, imm8</c><br/>
		/// <br/>
		/// <c>66 0F 3A 0A /r ib</c><br/>
		/// <br/>
		/// <c>SSE4.1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665454)]
public static void roundss(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>rsdc instruction.<br/>
		/// <br/>
		/// <c>RSDC Sreg, m80</c><br/>
		/// <br/>
		/// <c>0F 79 /r</c><br/>
		/// <br/>
		/// <c>Cyrix, AMD Geode GX/LX</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665455)]
public static void rsdc(AssemblerRegisterSegment dst, AssemblerMemoryOperand src) {}
		/// <summary>rsldt instruction.<br/>
		/// <br/>
		/// <c>RSLDT m80</c><br/>
		/// <br/>
		/// <c>0F 7B /0</c><br/>
		/// <br/>
		/// <c>Cyrix, AMD Geode GX/LX</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665456)]
public static void rsldt(AssemblerMemoryOperand dst) {}
		/// <summary>rsm instruction.<br/>
		/// <br/>
		/// <c>RSM</c><br/>
		/// <br/>
		/// <c>0F AA</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665457)]
public static void rsm() {}
		/// <summary>rsqrtps instruction.<br/>
		/// <br/>
		/// <c>RSQRTPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 52 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665458)]
public static void rsqrtps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>rsqrtps instruction.<br/>
		/// <br/>
		/// <c>RSQRTPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 52 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665459)]
public static void rsqrtps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>rsqrtss instruction.<br/>
		/// <br/>
		/// <c>RSQRTSS xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>F3 0F 52 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665460)]
public static void rsqrtss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>rsqrtss instruction.<br/>
		/// <br/>
		/// <c>RSQRTSS xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>F3 0F 52 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665461)]
public static void rsqrtss(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>rstorssp instruction.<br/>
		/// <br/>
		/// <c>RSTORSSP m64</c><br/>
		/// <br/>
		/// <c>F3 0F 01 /5</c><br/>
		/// <br/>
		/// <c>CET_SS</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665462)]
public static void rstorssp(AssemblerMemoryOperand dst) {}
		/// <summary>rsts instruction.<br/>
		/// <br/>
		/// <c>RSTS m80</c><br/>
		/// <br/>
		/// <c>0F 7D /0</c><br/>
		/// <br/>
		/// <c>Cyrix, AMD Geode GX/LX</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665463)]
public static void rsts(AssemblerMemoryOperand dst) {}
		/// <summary>sahf instruction.<br/>
		/// <br/>
		/// <c>SAHF</c><br/>
		/// <br/>
		/// <c>9E</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665464)]
public static void sahf() {}
		/// <summary>sal instruction.<br/>
		/// <br/>
		/// <c>SAL r/m8, CL</c><br/>
		/// <br/>
		/// <c>D2 /6</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665465)]
public static void sal(AssemblerRegister8 dst, AssemblerRegister8 src) {}
		/// <summary>sal instruction.<br/>
		/// <br/>
		/// <c>SAL r/m16, CL</c><br/>
		/// <br/>
		/// <c>o16 D3 /6</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665466)]
public static void sal(AssemblerRegister16 dst, AssemblerRegister8 src) {}
		/// <summary>sal instruction.<br/>
		/// <br/>
		/// <c>SAL r/m32, CL</c><br/>
		/// <br/>
		/// <c>o32 D3 /6</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665467)]
public static void sal(AssemblerRegister32 dst, AssemblerRegister8 src) {}
		/// <summary>sal instruction.<br/>
		/// <br/>
		/// <c>SAL r/m64, CL</c><br/>
		/// <br/>
		/// <c>o64 D3 /6</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665468)]
public static void sal(AssemblerRegister64 dst, AssemblerRegister8 src) {}
		/// <summary>sal instruction.<br/>
		/// <br/>
		/// <c>SAL r/m64, CL</c><br/>
		/// <br/>
		/// <c>o64 D3 /6</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>SAL r/m32, CL</c><br/>
		/// <br/>
		/// <c>o32 D3 /6</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SAL r/m16, CL</c><br/>
		/// <br/>
		/// <c>o16 D3 /6</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SAL r/m8, CL</c><br/>
		/// <br/>
		/// <c>D2 /6</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665469)]
public static void sal(AssemblerMemoryOperand dst, AssemblerRegister8 src) {}
		/// <summary>sal instruction.<br/>
		/// <br/>
		/// <c>SAL r/m8, 1</c><br/>
		/// <br/>
		/// <c>D0 /6</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SAL r/m8, imm8</c><br/>
		/// <br/>
		/// <c>C0 /6 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665470)]
public static void sal(AssemblerRegister8 dst, sbyte imm) {}
		/// <summary>sal instruction.<br/>
		/// <br/>
		/// <c>SAL r/m16, 1</c><br/>
		/// <br/>
		/// <c>o16 D1 /6</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SAL r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 C1 /6 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665471)]
public static void sal(AssemblerRegister16 dst, sbyte imm) {}
		/// <summary>sal instruction.<br/>
		/// <br/>
		/// <c>SAL r/m32, 1</c><br/>
		/// <br/>
		/// <c>o32 D1 /6</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SAL r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 C1 /6 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665472)]
public static void sal(AssemblerRegister32 dst, sbyte imm) {}
		/// <summary>sal instruction.<br/>
		/// <br/>
		/// <c>SAL r/m64, 1</c><br/>
		/// <br/>
		/// <c>o64 D1 /6</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>SAL r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 C1 /6 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665473)]
public static void sal(AssemblerRegister64 dst, sbyte imm) {}
		/// <summary>sal instruction.<br/>
		/// <br/>
		/// <c>SAL r/m64, 1</c><br/>
		/// <br/>
		/// <c>o64 D1 /6</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>SAL r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 C1 /6 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>SAL r/m32, 1</c><br/>
		/// <br/>
		/// <c>o32 D1 /6</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SAL r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 C1 /6 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SAL r/m16, 1</c><br/>
		/// <br/>
		/// <c>o16 D1 /6</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SAL r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 C1 /6 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SAL r/m8, 1</c><br/>
		/// <br/>
		/// <c>D0 /6</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SAL r/m8, imm8</c><br/>
		/// <br/>
		/// <c>C0 /6 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665474)]
public static void sal(AssemblerMemoryOperand dst, sbyte imm) {}
		/// <summary>sal instruction.<br/>
		/// <br/>
		/// <c>SAL r/m8, 1</c><br/>
		/// <br/>
		/// <c>D0 /6</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SAL r/m8, imm8</c><br/>
		/// <br/>
		/// <c>C0 /6 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665475)]
public static void sal(AssemblerRegister8 dst, byte imm) {}
		/// <summary>sal instruction.<br/>
		/// <br/>
		/// <c>SAL r/m16, 1</c><br/>
		/// <br/>
		/// <c>o16 D1 /6</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SAL r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 C1 /6 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665476)]
public static void sal(AssemblerRegister16 dst, byte imm) {}
		/// <summary>sal instruction.<br/>
		/// <br/>
		/// <c>SAL r/m32, 1</c><br/>
		/// <br/>
		/// <c>o32 D1 /6</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SAL r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 C1 /6 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665477)]
public static void sal(AssemblerRegister32 dst, byte imm) {}
		/// <summary>sal instruction.<br/>
		/// <br/>
		/// <c>SAL r/m64, 1</c><br/>
		/// <br/>
		/// <c>o64 D1 /6</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>SAL r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 C1 /6 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665478)]
public static void sal(AssemblerRegister64 dst, byte imm) {}
		/// <summary>sal instruction.<br/>
		/// <br/>
		/// <c>SAL r/m64, 1</c><br/>
		/// <br/>
		/// <c>o64 D1 /6</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>SAL r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 C1 /6 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>SAL r/m32, 1</c><br/>
		/// <br/>
		/// <c>o32 D1 /6</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SAL r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 C1 /6 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SAL r/m16, 1</c><br/>
		/// <br/>
		/// <c>o16 D1 /6</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SAL r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 C1 /6 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SAL r/m8, 1</c><br/>
		/// <br/>
		/// <c>D0 /6</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SAL r/m8, imm8</c><br/>
		/// <br/>
		/// <c>C0 /6 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665479)]
public static void sal(AssemblerMemoryOperand dst, byte imm) {}
		/// <summary>salc instruction.<br/>
		/// <br/>
		/// <c>SALC</c><br/>
		/// <br/>
		/// <c>D6</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665480)]
public static void salc() {}
		/// <summary>sar instruction.<br/>
		/// <br/>
		/// <c>SAR r/m8, CL</c><br/>
		/// <br/>
		/// <c>D2 /7</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665481)]
public static void sar(AssemblerRegister8 dst, AssemblerRegister8 src) {}
		/// <summary>sar instruction.<br/>
		/// <br/>
		/// <c>SAR r/m16, CL</c><br/>
		/// <br/>
		/// <c>o16 D3 /7</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665482)]
public static void sar(AssemblerRegister16 dst, AssemblerRegister8 src) {}
		/// <summary>sar instruction.<br/>
		/// <br/>
		/// <c>SAR r/m32, CL</c><br/>
		/// <br/>
		/// <c>o32 D3 /7</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665483)]
public static void sar(AssemblerRegister32 dst, AssemblerRegister8 src) {}
		/// <summary>sar instruction.<br/>
		/// <br/>
		/// <c>SAR r/m64, CL</c><br/>
		/// <br/>
		/// <c>o64 D3 /7</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665484)]
public static void sar(AssemblerRegister64 dst, AssemblerRegister8 src) {}
		/// <summary>sar instruction.<br/>
		/// <br/>
		/// <c>SAR r/m64, CL</c><br/>
		/// <br/>
		/// <c>o64 D3 /7</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>SAR r/m32, CL</c><br/>
		/// <br/>
		/// <c>o32 D3 /7</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SAR r/m16, CL</c><br/>
		/// <br/>
		/// <c>o16 D3 /7</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SAR r/m8, CL</c><br/>
		/// <br/>
		/// <c>D2 /7</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665485)]
public static void sar(AssemblerMemoryOperand dst, AssemblerRegister8 src) {}
		/// <summary>sar instruction.<br/>
		/// <br/>
		/// <c>SAR r/m8, 1</c><br/>
		/// <br/>
		/// <c>D0 /7</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SAR r/m8, imm8</c><br/>
		/// <br/>
		/// <c>C0 /7 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665486)]
public static void sar(AssemblerRegister8 dst, sbyte imm) {}
		/// <summary>sar instruction.<br/>
		/// <br/>
		/// <c>SAR r/m16, 1</c><br/>
		/// <br/>
		/// <c>o16 D1 /7</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SAR r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 C1 /7 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665487)]
public static void sar(AssemblerRegister16 dst, sbyte imm) {}
		/// <summary>sar instruction.<br/>
		/// <br/>
		/// <c>SAR r/m32, 1</c><br/>
		/// <br/>
		/// <c>o32 D1 /7</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SAR r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 C1 /7 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665488)]
public static void sar(AssemblerRegister32 dst, sbyte imm) {}
		/// <summary>sar instruction.<br/>
		/// <br/>
		/// <c>SAR r/m64, 1</c><br/>
		/// <br/>
		/// <c>o64 D1 /7</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>SAR r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 C1 /7 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665489)]
public static void sar(AssemblerRegister64 dst, sbyte imm) {}
		/// <summary>sar instruction.<br/>
		/// <br/>
		/// <c>SAR r/m64, 1</c><br/>
		/// <br/>
		/// <c>o64 D1 /7</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>SAR r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 C1 /7 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>SAR r/m32, 1</c><br/>
		/// <br/>
		/// <c>o32 D1 /7</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SAR r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 C1 /7 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SAR r/m16, 1</c><br/>
		/// <br/>
		/// <c>o16 D1 /7</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SAR r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 C1 /7 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SAR r/m8, 1</c><br/>
		/// <br/>
		/// <c>D0 /7</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SAR r/m8, imm8</c><br/>
		/// <br/>
		/// <c>C0 /7 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665490)]
public static void sar(AssemblerMemoryOperand dst, sbyte imm) {}
		/// <summary>sar instruction.<br/>
		/// <br/>
		/// <c>SAR r/m8, 1</c><br/>
		/// <br/>
		/// <c>D0 /7</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SAR r/m8, imm8</c><br/>
		/// <br/>
		/// <c>C0 /7 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665491)]
public static void sar(AssemblerRegister8 dst, byte imm) {}
		/// <summary>sar instruction.<br/>
		/// <br/>
		/// <c>SAR r/m16, 1</c><br/>
		/// <br/>
		/// <c>o16 D1 /7</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SAR r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 C1 /7 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665492)]
public static void sar(AssemblerRegister16 dst, byte imm) {}
		/// <summary>sar instruction.<br/>
		/// <br/>
		/// <c>SAR r/m32, 1</c><br/>
		/// <br/>
		/// <c>o32 D1 /7</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SAR r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 C1 /7 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665493)]
public static void sar(AssemblerRegister32 dst, byte imm) {}
		/// <summary>sar instruction.<br/>
		/// <br/>
		/// <c>SAR r/m64, 1</c><br/>
		/// <br/>
		/// <c>o64 D1 /7</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>SAR r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 C1 /7 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665494)]
public static void sar(AssemblerRegister64 dst, byte imm) {}
		/// <summary>sar instruction.<br/>
		/// <br/>
		/// <c>SAR r/m64, 1</c><br/>
		/// <br/>
		/// <c>o64 D1 /7</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>SAR r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 C1 /7 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>SAR r/m32, 1</c><br/>
		/// <br/>
		/// <c>o32 D1 /7</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SAR r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 C1 /7 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SAR r/m16, 1</c><br/>
		/// <br/>
		/// <c>o16 D1 /7</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SAR r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 C1 /7 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SAR r/m8, 1</c><br/>
		/// <br/>
		/// <c>D0 /7</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SAR r/m8, imm8</c><br/>
		/// <br/>
		/// <c>C0 /7 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665495)]
public static void sar(AssemblerMemoryOperand dst, byte imm) {}
		/// <summary>sarx instruction.<br/>
		/// <br/>
		/// <c>SARX r32a, r/m32, r32b</c><br/>
		/// <br/>
		/// <c>VEX.LZ.F3.0F38.W0 F7 /r</c><br/>
		/// <br/>
		/// <c>BMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665496)]
public static void sarx(AssemblerRegister32 dst, AssemblerRegister32 src1, AssemblerRegister32 src2) {}
		/// <summary>sarx instruction.<br/>
		/// <br/>
		/// <c>SARX r32a, r/m32, r32b</c><br/>
		/// <br/>
		/// <c>VEX.LZ.F3.0F38.W0 F7 /r</c><br/>
		/// <br/>
		/// <c>BMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665497)]
public static void sarx(AssemblerRegister32 dst, AssemblerMemoryOperand src1, AssemblerRegister32 src2) {}
		/// <summary>sarx instruction.<br/>
		/// <br/>
		/// <c>SARX r64a, r/m64, r64b</c><br/>
		/// <br/>
		/// <c>VEX.LZ.F3.0F38.W1 F7 /r</c><br/>
		/// <br/>
		/// <c>BMI2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665498)]
public static void sarx(AssemblerRegister64 dst, AssemblerRegister64 src1, AssemblerRegister64 src2) {}
		/// <summary>sarx instruction.<br/>
		/// <br/>
		/// <c>SARX r64a, r/m64, r64b</c><br/>
		/// <br/>
		/// <c>VEX.LZ.F3.0F38.W1 F7 /r</c><br/>
		/// <br/>
		/// <c>BMI2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665499)]
public static void sarx(AssemblerRegister64 dst, AssemblerMemoryOperand src1, AssemblerRegister64 src2) {}
		/// <summary>saveprevssp instruction.<br/>
		/// <br/>
		/// <c>SAVEPREVSSP</c><br/>
		/// <br/>
		/// <c>F3 0F 01 EA</c><br/>
		/// <br/>
		/// <c>CET_SS</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665500)]
public static void saveprevssp() {}
		/// <summary>sbb instruction.<br/>
		/// <br/>
		/// <c>SBB r/m8, r8</c><br/>
		/// <br/>
		/// <c>18 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665501)]
public static void sbb(AssemblerRegister8 dst, AssemblerRegister8 src) {}
		/// <summary>sbb instruction.<br/>
		/// <br/>
		/// <c>SBB r/m8, r8</c><br/>
		/// <br/>
		/// <c>18 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665502)]
public static void sbb(AssemblerMemoryOperand dst, AssemblerRegister8 src) {}
		/// <summary>sbb instruction.<br/>
		/// <br/>
		/// <c>SBB r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 19 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665503)]
public static void sbb(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>sbb instruction.<br/>
		/// <br/>
		/// <c>SBB r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 19 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665504)]
public static void sbb(AssemblerMemoryOperand dst, AssemblerRegister16 src) {}
		/// <summary>sbb instruction.<br/>
		/// <br/>
		/// <c>SBB r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 19 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665505)]
public static void sbb(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>sbb instruction.<br/>
		/// <br/>
		/// <c>SBB r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 19 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665506)]
public static void sbb(AssemblerMemoryOperand dst, AssemblerRegister32 src) {}
		/// <summary>sbb instruction.<br/>
		/// <br/>
		/// <c>SBB r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 19 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665507)]
public static void sbb(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>sbb instruction.<br/>
		/// <br/>
		/// <c>SBB r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 19 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665508)]
public static void sbb(AssemblerMemoryOperand dst, AssemblerRegister64 src) {}
		/// <summary>sbb instruction.<br/>
		/// <br/>
		/// <c>SBB r8, r/m8</c><br/>
		/// <br/>
		/// <c>1A /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665509)]
public static void sbb(AssemblerRegister8 dst, AssemblerMemoryOperand src) {}
		/// <summary>sbb instruction.<br/>
		/// <br/>
		/// <c>SBB r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 1B /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665510)]
public static void sbb(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>sbb instruction.<br/>
		/// <br/>
		/// <c>SBB r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 1B /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665511)]
public static void sbb(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>sbb instruction.<br/>
		/// <br/>
		/// <c>SBB r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 1B /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665512)]
public static void sbb(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>sbb instruction.<br/>
		/// <br/>
		/// <c>SBB AL, imm8</c><br/>
		/// <br/>
		/// <c>1C ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SBB r/m8, imm8</c><br/>
		/// <br/>
		/// <c>80 /3 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665513)]
public static void sbb(AssemblerRegister8 dst, sbyte imm) {}
		/// <summary>sbb instruction.<br/>
		/// <br/>
		/// <c>SBB AX, imm16</c><br/>
		/// <br/>
		/// <c>o16 1D iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SBB r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 81 /3 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SBB r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 83 /3 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665514)]
public static void sbb(AssemblerRegister16 dst, short imm) {}
		/// <summary>sbb instruction.<br/>
		/// <br/>
		/// <c>SBB EAX, imm32</c><br/>
		/// <br/>
		/// <c>o32 1D id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SBB r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 81 /3 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SBB r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 83 /3 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665515)]
public static void sbb(AssemblerRegister32 dst, int imm) {}
		/// <summary>sbb instruction.<br/>
		/// <br/>
		/// <c>SBB RAX, imm32</c><br/>
		/// <br/>
		/// <c>o64 1D id</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>SBB r/m64, imm32</c><br/>
		/// <br/>
		/// <c>o64 81 /3 id</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>SBB r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 83 /3 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665516)]
public static void sbb(AssemblerRegister64 dst, int imm) {}
		/// <summary>sbb instruction.<br/>
		/// <br/>
		/// <c>SBB r/m64, imm32</c><br/>
		/// <br/>
		/// <c>o64 81 /3 id</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>SBB r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 83 /3 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>SBB r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 81 /3 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SBB r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 83 /3 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SBB r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 81 /3 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SBB r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 83 /3 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SBB r/m8, imm8</c><br/>
		/// <br/>
		/// <c>80 /3 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665517)]
public static void sbb(AssemblerMemoryOperand dst, int imm) {}
		/// <summary>sbb instruction.<br/>
		/// <br/>
		/// <c>SBB AL, imm8</c><br/>
		/// <br/>
		/// <c>1C ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SBB r/m8, imm8</c><br/>
		/// <br/>
		/// <c>80 /3 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665518)]
public static void sbb(AssemblerRegister8 dst, byte imm) {}
		/// <summary>sbb instruction.<br/>
		/// <br/>
		/// <c>SBB AX, imm16</c><br/>
		/// <br/>
		/// <c>o16 1D iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SBB r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 81 /3 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SBB r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 83 /3 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665519)]
public static void sbb(AssemblerRegister16 dst, ushort imm) {}
		/// <summary>sbb instruction.<br/>
		/// <br/>
		/// <c>SBB EAX, imm32</c><br/>
		/// <br/>
		/// <c>o32 1D id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SBB r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 81 /3 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SBB r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 83 /3 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665520)]
public static void sbb(AssemblerRegister32 dst, uint imm) {}
		/// <summary>sbb instruction.<br/>
		/// <br/>
		/// <c>SBB r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 81 /3 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SBB r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 83 /3 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SBB r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 81 /3 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SBB r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 83 /3 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SBB r/m8, imm8</c><br/>
		/// <br/>
		/// <c>80 /3 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665521)]
public static void sbb(AssemblerMemoryOperand dst, uint imm) {}
		/// <summary>scasb instruction.<br/>
		/// <br/>
		/// <c>SCASB</c><br/>
		/// <br/>
		/// <c>AE</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665522)]
public static void scasb() {}
		/// <summary>scasd instruction.<br/>
		/// <br/>
		/// <c>SCASD</c><br/>
		/// <br/>
		/// <c>o32 AF</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665523)]
public static void scasd() {}
		/// <summary>scasq instruction.<br/>
		/// <br/>
		/// <c>SCASQ</c><br/>
		/// <br/>
		/// <c>o64 AF</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665524)]
public static void scasq() {}
		/// <summary>scasw instruction.<br/>
		/// <br/>
		/// <c>SCASW</c><br/>
		/// <br/>
		/// <c>o16 AF</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665525)]
public static void scasw() {}
		/// <summary>seamcall instruction.<br/>
		/// <br/>
		/// <c>SEAMCALL</c><br/>
		/// <br/>
		/// <c>66 0F 01 CF</c><br/>
		/// <br/>
		/// <c>TDX</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665526)]
public static void seamcall() {}
		/// <summary>seamops instruction.<br/>
		/// <br/>
		/// <c>SEAMOPS</c><br/>
		/// <br/>
		/// <c>66 0F 01 CE</c><br/>
		/// <br/>
		/// <c>TDX</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665527)]
public static void seamops() {}
		/// <summary>seamret instruction.<br/>
		/// <br/>
		/// <c>SEAMRET</c><br/>
		/// <br/>
		/// <c>66 0F 01 CD</c><br/>
		/// <br/>
		/// <c>TDX</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665528)]
public static void seamret() {}
		/// <summary>senduipi instruction.<br/>
		/// <br/>
		/// <c>SENDUIPI r64</c><br/>
		/// <br/>
		/// <c>F3 0F C7 /6</c><br/>
		/// <br/>
		/// <c>UINTR</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665529)]
public static void senduipi(AssemblerRegister64 dst) {}
		/// <summary>serialize instruction.<br/>
		/// <br/>
		/// <c>SERIALIZE</c><br/>
		/// <br/>
		/// <c>NP 0F 01 E8</c><br/>
		/// <br/>
		/// <c>SERIALIZE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665530)]
public static void serialize() {}
		/// <summary>seta instruction.<br/>
		/// <br/>
		/// <c>SETA r/m8</c><br/>
		/// <br/>
		/// <c>0F 97 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665531)]
public static void seta(AssemblerRegister8 dst) {}
		/// <summary>seta instruction.<br/>
		/// <br/>
		/// <c>SETA r/m8</c><br/>
		/// <br/>
		/// <c>0F 97 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665532)]
public static void seta(AssemblerMemoryOperand dst) {}
		/// <summary>setae instruction.<br/>
		/// <br/>
		/// <c>SETAE r/m8</c><br/>
		/// <br/>
		/// <c>0F 93 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665533)]
public static void setae(AssemblerRegister8 dst) {}
		/// <summary>setae instruction.<br/>
		/// <br/>
		/// <c>SETAE r/m8</c><br/>
		/// <br/>
		/// <c>0F 93 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665534)]
public static void setae(AssemblerMemoryOperand dst) {}
		/// <summary>setb instruction.<br/>
		/// <br/>
		/// <c>SETB r/m8</c><br/>
		/// <br/>
		/// <c>0F 92 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665535)]
public static void setb(AssemblerRegister8 dst) {}
		/// <summary>setb instruction.<br/>
		/// <br/>
		/// <c>SETB r/m8</c><br/>
		/// <br/>
		/// <c>0F 92 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665536)]
public static void setb(AssemblerMemoryOperand dst) {}
		/// <summary>setbe instruction.<br/>
		/// <br/>
		/// <c>SETBE r/m8</c><br/>
		/// <br/>
		/// <c>0F 96 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665537)]
public static void setbe(AssemblerRegister8 dst) {}
		/// <summary>setbe instruction.<br/>
		/// <br/>
		/// <c>SETBE r/m8</c><br/>
		/// <br/>
		/// <c>0F 96 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665538)]
public static void setbe(AssemblerMemoryOperand dst) {}
		/// <summary>sete instruction.<br/>
		/// <br/>
		/// <c>SETE r/m8</c><br/>
		/// <br/>
		/// <c>0F 94 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665539)]
public static void sete(AssemblerRegister8 dst) {}
		/// <summary>sete instruction.<br/>
		/// <br/>
		/// <c>SETE r/m8</c><br/>
		/// <br/>
		/// <c>0F 94 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665540)]
public static void sete(AssemblerMemoryOperand dst) {}
		/// <summary>setg instruction.<br/>
		/// <br/>
		/// <c>SETG r/m8</c><br/>
		/// <br/>
		/// <c>0F 9F /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665541)]
public static void setg(AssemblerRegister8 dst) {}
		/// <summary>setg instruction.<br/>
		/// <br/>
		/// <c>SETG r/m8</c><br/>
		/// <br/>
		/// <c>0F 9F /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665542)]
public static void setg(AssemblerMemoryOperand dst) {}
		/// <summary>setge instruction.<br/>
		/// <br/>
		/// <c>SETGE r/m8</c><br/>
		/// <br/>
		/// <c>0F 9D /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665543)]
public static void setge(AssemblerRegister8 dst) {}
		/// <summary>setge instruction.<br/>
		/// <br/>
		/// <c>SETGE r/m8</c><br/>
		/// <br/>
		/// <c>0F 9D /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665544)]
public static void setge(AssemblerMemoryOperand dst) {}
		/// <summary>setl instruction.<br/>
		/// <br/>
		/// <c>SETL r/m8</c><br/>
		/// <br/>
		/// <c>0F 9C /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665545)]
public static void setl(AssemblerRegister8 dst) {}
		/// <summary>setl instruction.<br/>
		/// <br/>
		/// <c>SETL r/m8</c><br/>
		/// <br/>
		/// <c>0F 9C /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665546)]
public static void setl(AssemblerMemoryOperand dst) {}
		/// <summary>setle instruction.<br/>
		/// <br/>
		/// <c>SETLE r/m8</c><br/>
		/// <br/>
		/// <c>0F 9E /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665547)]
public static void setle(AssemblerRegister8 dst) {}
		/// <summary>setle instruction.<br/>
		/// <br/>
		/// <c>SETLE r/m8</c><br/>
		/// <br/>
		/// <c>0F 9E /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665548)]
public static void setle(AssemblerMemoryOperand dst) {}
		/// <summary>setne instruction.<br/>
		/// <br/>
		/// <c>SETNE r/m8</c><br/>
		/// <br/>
		/// <c>0F 95 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665549)]
public static void setne(AssemblerRegister8 dst) {}
		/// <summary>setne instruction.<br/>
		/// <br/>
		/// <c>SETNE r/m8</c><br/>
		/// <br/>
		/// <c>0F 95 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665550)]
public static void setne(AssemblerMemoryOperand dst) {}
		/// <summary>setno instruction.<br/>
		/// <br/>
		/// <c>SETNO r/m8</c><br/>
		/// <br/>
		/// <c>0F 91 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665551)]
public static void setno(AssemblerRegister8 dst) {}
		/// <summary>setno instruction.<br/>
		/// <br/>
		/// <c>SETNO r/m8</c><br/>
		/// <br/>
		/// <c>0F 91 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665552)]
public static void setno(AssemblerMemoryOperand dst) {}
		/// <summary>setnp instruction.<br/>
		/// <br/>
		/// <c>SETNP r/m8</c><br/>
		/// <br/>
		/// <c>0F 9B /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665553)]
public static void setnp(AssemblerRegister8 dst) {}
		/// <summary>setnp instruction.<br/>
		/// <br/>
		/// <c>SETNP r/m8</c><br/>
		/// <br/>
		/// <c>0F 9B /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665554)]
public static void setnp(AssemblerMemoryOperand dst) {}
		/// <summary>setns instruction.<br/>
		/// <br/>
		/// <c>SETNS r/m8</c><br/>
		/// <br/>
		/// <c>0F 99 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665555)]
public static void setns(AssemblerRegister8 dst) {}
		/// <summary>setns instruction.<br/>
		/// <br/>
		/// <c>SETNS r/m8</c><br/>
		/// <br/>
		/// <c>0F 99 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665556)]
public static void setns(AssemblerMemoryOperand dst) {}
		/// <summary>seto instruction.<br/>
		/// <br/>
		/// <c>SETO r/m8</c><br/>
		/// <br/>
		/// <c>0F 90 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665557)]
public static void seto(AssemblerRegister8 dst) {}
		/// <summary>seto instruction.<br/>
		/// <br/>
		/// <c>SETO r/m8</c><br/>
		/// <br/>
		/// <c>0F 90 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665558)]
public static void seto(AssemblerMemoryOperand dst) {}
		/// <summary>setp instruction.<br/>
		/// <br/>
		/// <c>SETP r/m8</c><br/>
		/// <br/>
		/// <c>0F 9A /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665559)]
public static void setp(AssemblerRegister8 dst) {}
		/// <summary>setp instruction.<br/>
		/// <br/>
		/// <c>SETP r/m8</c><br/>
		/// <br/>
		/// <c>0F 9A /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665560)]
public static void setp(AssemblerMemoryOperand dst) {}
		/// <summary>sets instruction.<br/>
		/// <br/>
		/// <c>SETS r/m8</c><br/>
		/// <br/>
		/// <c>0F 98 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665561)]
public static void sets(AssemblerRegister8 dst) {}
		/// <summary>sets instruction.<br/>
		/// <br/>
		/// <c>SETS r/m8</c><br/>
		/// <br/>
		/// <c>0F 98 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665562)]
public static void sets(AssemblerMemoryOperand dst) {}
		/// <summary>setssbsy instruction.<br/>
		/// <br/>
		/// <c>SETSSBSY</c><br/>
		/// <br/>
		/// <c>F3 0F 01 E8</c><br/>
		/// <br/>
		/// <c>CET_SS</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665563)]
public static void setssbsy() {}
		/// <summary>sfence instruction.<br/>
		/// <br/>
		/// <c>SFENCE</c><br/>
		/// <br/>
		/// <c>NP 0F AE F8</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665564)]
public static void sfence() {}
		/// <summary>sgdt instruction.<br/>
		/// <br/>
		/// <c>SGDT m</c><br/>
		/// <br/>
		/// <c>0F 01 /0</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>SGDT m</c><br/>
		/// <br/>
		/// <c>o32 0F 01 /0</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>SGDT m</c><br/>
		/// <br/>
		/// <c>o16 0F 01 /0</c><br/>
		/// <br/>
		/// <c>286+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665565)]
public static void sgdt(AssemblerMemoryOperand dst) {}
		/// <summary>sha1msg1 instruction.<br/>
		/// <br/>
		/// <c>SHA1MSG1 xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 38 C9 /r</c><br/>
		/// <br/>
		/// <c>SHA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665566)]
public static void sha1msg1(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>sha1msg1 instruction.<br/>
		/// <br/>
		/// <c>SHA1MSG1 xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 38 C9 /r</c><br/>
		/// <br/>
		/// <c>SHA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665567)]
public static void sha1msg1(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>sha1msg2 instruction.<br/>
		/// <br/>
		/// <c>SHA1MSG2 xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 38 CA /r</c><br/>
		/// <br/>
		/// <c>SHA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665568)]
public static void sha1msg2(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>sha1msg2 instruction.<br/>
		/// <br/>
		/// <c>SHA1MSG2 xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 38 CA /r</c><br/>
		/// <br/>
		/// <c>SHA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665569)]
public static void sha1msg2(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>sha1nexte instruction.<br/>
		/// <br/>
		/// <c>SHA1NEXTE xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 38 C8 /r</c><br/>
		/// <br/>
		/// <c>SHA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665570)]
public static void sha1nexte(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>sha1nexte instruction.<br/>
		/// <br/>
		/// <c>SHA1NEXTE xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 38 C8 /r</c><br/>
		/// <br/>
		/// <c>SHA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665571)]
public static void sha1nexte(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>sha1rnds4 instruction.<br/>
		/// <br/>
		/// <c>SHA1RNDS4 xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F 3A CC /r ib</c><br/>
		/// <br/>
		/// <c>SHA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665572)]
public static void sha1rnds4(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>sha1rnds4 instruction.<br/>
		/// <br/>
		/// <c>SHA1RNDS4 xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F 3A CC /r ib</c><br/>
		/// <br/>
		/// <c>SHA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665573)]
public static void sha1rnds4(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>sha1rnds4 instruction.<br/>
		/// <br/>
		/// <c>SHA1RNDS4 xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F 3A CC /r ib</c><br/>
		/// <br/>
		/// <c>SHA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665574)]
public static void sha1rnds4(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>sha1rnds4 instruction.<br/>
		/// <br/>
		/// <c>SHA1RNDS4 xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F 3A CC /r ib</c><br/>
		/// <br/>
		/// <c>SHA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665575)]
public static void sha1rnds4(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>sha256msg1 instruction.<br/>
		/// <br/>
		/// <c>SHA256MSG1 xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 38 CC /r</c><br/>
		/// <br/>
		/// <c>SHA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665576)]
public static void sha256msg1(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>sha256msg1 instruction.<br/>
		/// <br/>
		/// <c>SHA256MSG1 xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 38 CC /r</c><br/>
		/// <br/>
		/// <c>SHA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665577)]
public static void sha256msg1(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>sha256msg2 instruction.<br/>
		/// <br/>
		/// <c>SHA256MSG2 xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 38 CD /r</c><br/>
		/// <br/>
		/// <c>SHA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665578)]
public static void sha256msg2(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>sha256msg2 instruction.<br/>
		/// <br/>
		/// <c>SHA256MSG2 xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 38 CD /r</c><br/>
		/// <br/>
		/// <c>SHA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665579)]
public static void sha256msg2(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>sha256rnds2 instruction.<br/>
		/// <br/>
		/// <c>SHA256RNDS2 xmm1, xmm2/m128, &lt;XMM0&gt;</c><br/>
		/// <br/>
		/// <c>NP 0F 38 CB /r</c><br/>
		/// <br/>
		/// <c>SHA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665580)]
public static void sha256rnds2(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>sha256rnds2 instruction.<br/>
		/// <br/>
		/// <c>SHA256RNDS2 xmm1, xmm2/m128, &lt;XMM0&gt;</c><br/>
		/// <br/>
		/// <c>NP 0F 38 CB /r</c><br/>
		/// <br/>
		/// <c>SHA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665581)]
public static void sha256rnds2(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>shl instruction.<br/>
		/// <br/>
		/// <c>SHL r/m8, CL</c><br/>
		/// <br/>
		/// <c>D2 /4</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665582)]
public static void shl(AssemblerRegister8 dst, AssemblerRegister8 src) {}
		/// <summary>shl instruction.<br/>
		/// <br/>
		/// <c>SHL r/m16, CL</c><br/>
		/// <br/>
		/// <c>o16 D3 /4</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665583)]
public static void shl(AssemblerRegister16 dst, AssemblerRegister8 src) {}
		/// <summary>shl instruction.<br/>
		/// <br/>
		/// <c>SHL r/m32, CL</c><br/>
		/// <br/>
		/// <c>o32 D3 /4</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665584)]
public static void shl(AssemblerRegister32 dst, AssemblerRegister8 src) {}
		/// <summary>shl instruction.<br/>
		/// <br/>
		/// <c>SHL r/m64, CL</c><br/>
		/// <br/>
		/// <c>o64 D3 /4</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665585)]
public static void shl(AssemblerRegister64 dst, AssemblerRegister8 src) {}
		/// <summary>shl instruction.<br/>
		/// <br/>
		/// <c>SHL r/m64, CL</c><br/>
		/// <br/>
		/// <c>o64 D3 /4</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>SHL r/m32, CL</c><br/>
		/// <br/>
		/// <c>o32 D3 /4</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SHL r/m16, CL</c><br/>
		/// <br/>
		/// <c>o16 D3 /4</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SHL r/m8, CL</c><br/>
		/// <br/>
		/// <c>D2 /4</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665586)]
public static void shl(AssemblerMemoryOperand dst, AssemblerRegister8 src) {}
		/// <summary>shl instruction.<br/>
		/// <br/>
		/// <c>SHL r/m8, 1</c><br/>
		/// <br/>
		/// <c>D0 /4</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SHL r/m8, imm8</c><br/>
		/// <br/>
		/// <c>C0 /4 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665587)]
public static void shl(AssemblerRegister8 dst, sbyte imm) {}
		/// <summary>shl instruction.<br/>
		/// <br/>
		/// <c>SHL r/m16, 1</c><br/>
		/// <br/>
		/// <c>o16 D1 /4</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SHL r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 C1 /4 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665588)]
public static void shl(AssemblerRegister16 dst, sbyte imm) {}
		/// <summary>shl instruction.<br/>
		/// <br/>
		/// <c>SHL r/m32, 1</c><br/>
		/// <br/>
		/// <c>o32 D1 /4</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SHL r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 C1 /4 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665589)]
public static void shl(AssemblerRegister32 dst, sbyte imm) {}
		/// <summary>shl instruction.<br/>
		/// <br/>
		/// <c>SHL r/m64, 1</c><br/>
		/// <br/>
		/// <c>o64 D1 /4</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>SHL r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 C1 /4 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665590)]
public static void shl(AssemblerRegister64 dst, sbyte imm) {}
		/// <summary>shl instruction.<br/>
		/// <br/>
		/// <c>SHL r/m64, 1</c><br/>
		/// <br/>
		/// <c>o64 D1 /4</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>SHL r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 C1 /4 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>SHL r/m32, 1</c><br/>
		/// <br/>
		/// <c>o32 D1 /4</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SHL r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 C1 /4 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SHL r/m16, 1</c><br/>
		/// <br/>
		/// <c>o16 D1 /4</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SHL r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 C1 /4 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SHL r/m8, 1</c><br/>
		/// <br/>
		/// <c>D0 /4</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SHL r/m8, imm8</c><br/>
		/// <br/>
		/// <c>C0 /4 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665591)]
public static void shl(AssemblerMemoryOperand dst, sbyte imm) {}
		/// <summary>shl instruction.<br/>
		/// <br/>
		/// <c>SHL r/m8, 1</c><br/>
		/// <br/>
		/// <c>D0 /4</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SHL r/m8, imm8</c><br/>
		/// <br/>
		/// <c>C0 /4 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665592)]
public static void shl(AssemblerRegister8 dst, byte imm) {}
		/// <summary>shl instruction.<br/>
		/// <br/>
		/// <c>SHL r/m16, 1</c><br/>
		/// <br/>
		/// <c>o16 D1 /4</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SHL r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 C1 /4 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665593)]
public static void shl(AssemblerRegister16 dst, byte imm) {}
		/// <summary>shl instruction.<br/>
		/// <br/>
		/// <c>SHL r/m32, 1</c><br/>
		/// <br/>
		/// <c>o32 D1 /4</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SHL r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 C1 /4 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665594)]
public static void shl(AssemblerRegister32 dst, byte imm) {}
		/// <summary>shl instruction.<br/>
		/// <br/>
		/// <c>SHL r/m64, 1</c><br/>
		/// <br/>
		/// <c>o64 D1 /4</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>SHL r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 C1 /4 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665595)]
public static void shl(AssemblerRegister64 dst, byte imm) {}
		/// <summary>shl instruction.<br/>
		/// <br/>
		/// <c>SHL r/m64, 1</c><br/>
		/// <br/>
		/// <c>o64 D1 /4</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>SHL r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 C1 /4 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>SHL r/m32, 1</c><br/>
		/// <br/>
		/// <c>o32 D1 /4</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SHL r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 C1 /4 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SHL r/m16, 1</c><br/>
		/// <br/>
		/// <c>o16 D1 /4</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SHL r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 C1 /4 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SHL r/m8, 1</c><br/>
		/// <br/>
		/// <c>D0 /4</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SHL r/m8, imm8</c><br/>
		/// <br/>
		/// <c>C0 /4 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665596)]
public static void shl(AssemblerMemoryOperand dst, byte imm) {}
		/// <summary>shld instruction.<br/>
		/// <br/>
		/// <c>SHLD r/m16, r16, CL</c><br/>
		/// <br/>
		/// <c>o16 0F A5 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665597)]
public static void shld(AssemblerRegister16 dst, AssemblerRegister16 src1, AssemblerRegister8 src2) {}
		/// <summary>shld instruction.<br/>
		/// <br/>
		/// <c>SHLD r/m16, r16, CL</c><br/>
		/// <br/>
		/// <c>o16 0F A5 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665598)]
public static void shld(AssemblerMemoryOperand dst, AssemblerRegister16 src1, AssemblerRegister8 src2) {}
		/// <summary>shld instruction.<br/>
		/// <br/>
		/// <c>SHLD r/m32, r32, CL</c><br/>
		/// <br/>
		/// <c>o32 0F A5 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665599)]
public static void shld(AssemblerRegister32 dst, AssemblerRegister32 src1, AssemblerRegister8 src2) {}
		/// <summary>shld instruction.<br/>
		/// <br/>
		/// <c>SHLD r/m32, r32, CL</c><br/>
		/// <br/>
		/// <c>o32 0F A5 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665600)]
public static void shld(AssemblerMemoryOperand dst, AssemblerRegister32 src1, AssemblerRegister8 src2) {}
		/// <summary>shld instruction.<br/>
		/// <br/>
		/// <c>SHLD r/m64, r64, CL</c><br/>
		/// <br/>
		/// <c>o64 0F A5 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665601)]
public static void shld(AssemblerRegister64 dst, AssemblerRegister64 src1, AssemblerRegister8 src2) {}
		/// <summary>shld instruction.<br/>
		/// <br/>
		/// <c>SHLD r/m64, r64, CL</c><br/>
		/// <br/>
		/// <c>o64 0F A5 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665602)]
public static void shld(AssemblerMemoryOperand dst, AssemblerRegister64 src1, AssemblerRegister8 src2) {}
		/// <summary>shld instruction.<br/>
		/// <br/>
		/// <c>SHLD r/m16, r16, imm8</c><br/>
		/// <br/>
		/// <c>o16 0F A4 /r ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665603)]
public static void shld(AssemblerRegister16 dst, AssemblerRegister16 src1, sbyte imm) {}
		/// <summary>shld instruction.<br/>
		/// <br/>
		/// <c>SHLD r/m16, r16, imm8</c><br/>
		/// <br/>
		/// <c>o16 0F A4 /r ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665604)]
public static void shld(AssemblerMemoryOperand dst, AssemblerRegister16 src1, sbyte imm) {}
		/// <summary>shld instruction.<br/>
		/// <br/>
		/// <c>SHLD r/m32, r32, imm8</c><br/>
		/// <br/>
		/// <c>o32 0F A4 /r ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665605)]
public static void shld(AssemblerRegister32 dst, AssemblerRegister32 src1, sbyte imm) {}
		/// <summary>shld instruction.<br/>
		/// <br/>
		/// <c>SHLD r/m32, r32, imm8</c><br/>
		/// <br/>
		/// <c>o32 0F A4 /r ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665606)]
public static void shld(AssemblerMemoryOperand dst, AssemblerRegister32 src1, sbyte imm) {}
		/// <summary>shld instruction.<br/>
		/// <br/>
		/// <c>SHLD r/m64, r64, imm8</c><br/>
		/// <br/>
		/// <c>o64 0F A4 /r ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665607)]
public static void shld(AssemblerRegister64 dst, AssemblerRegister64 src1, sbyte imm) {}
		/// <summary>shld instruction.<br/>
		/// <br/>
		/// <c>SHLD r/m64, r64, imm8</c><br/>
		/// <br/>
		/// <c>o64 0F A4 /r ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665608)]
public static void shld(AssemblerMemoryOperand dst, AssemblerRegister64 src1, sbyte imm) {}
		/// <summary>shld instruction.<br/>
		/// <br/>
		/// <c>SHLD r/m16, r16, imm8</c><br/>
		/// <br/>
		/// <c>o16 0F A4 /r ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665609)]
public static void shld(AssemblerRegister16 dst, AssemblerRegister16 src1, byte imm) {}
		/// <summary>shld instruction.<br/>
		/// <br/>
		/// <c>SHLD r/m16, r16, imm8</c><br/>
		/// <br/>
		/// <c>o16 0F A4 /r ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665610)]
public static void shld(AssemblerMemoryOperand dst, AssemblerRegister16 src1, byte imm) {}
		/// <summary>shld instruction.<br/>
		/// <br/>
		/// <c>SHLD r/m32, r32, imm8</c><br/>
		/// <br/>
		/// <c>o32 0F A4 /r ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665611)]
public static void shld(AssemblerRegister32 dst, AssemblerRegister32 src1, byte imm) {}
		/// <summary>shld instruction.<br/>
		/// <br/>
		/// <c>SHLD r/m32, r32, imm8</c><br/>
		/// <br/>
		/// <c>o32 0F A4 /r ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665612)]
public static void shld(AssemblerMemoryOperand dst, AssemblerRegister32 src1, byte imm) {}
		/// <summary>shld instruction.<br/>
		/// <br/>
		/// <c>SHLD r/m64, r64, imm8</c><br/>
		/// <br/>
		/// <c>o64 0F A4 /r ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665613)]
public static void shld(AssemblerRegister64 dst, AssemblerRegister64 src1, byte imm) {}
		/// <summary>shld instruction.<br/>
		/// <br/>
		/// <c>SHLD r/m64, r64, imm8</c><br/>
		/// <br/>
		/// <c>o64 0F A4 /r ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665614)]
public static void shld(AssemblerMemoryOperand dst, AssemblerRegister64 src1, byte imm) {}
		/// <summary>shlx instruction.<br/>
		/// <br/>
		/// <c>SHLX r32a, r/m32, r32b</c><br/>
		/// <br/>
		/// <c>VEX.LZ.66.0F38.W0 F7 /r</c><br/>
		/// <br/>
		/// <c>BMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665615)]
public static void shlx(AssemblerRegister32 dst, AssemblerRegister32 src1, AssemblerRegister32 src2) {}
		/// <summary>shlx instruction.<br/>
		/// <br/>
		/// <c>SHLX r32a, r/m32, r32b</c><br/>
		/// <br/>
		/// <c>VEX.LZ.66.0F38.W0 F7 /r</c><br/>
		/// <br/>
		/// <c>BMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665616)]
public static void shlx(AssemblerRegister32 dst, AssemblerMemoryOperand src1, AssemblerRegister32 src2) {}
		/// <summary>shlx instruction.<br/>
		/// <br/>
		/// <c>SHLX r64a, r/m64, r64b</c><br/>
		/// <br/>
		/// <c>VEX.LZ.66.0F38.W1 F7 /r</c><br/>
		/// <br/>
		/// <c>BMI2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665617)]
public static void shlx(AssemblerRegister64 dst, AssemblerRegister64 src1, AssemblerRegister64 src2) {}
		/// <summary>shlx instruction.<br/>
		/// <br/>
		/// <c>SHLX r64a, r/m64, r64b</c><br/>
		/// <br/>
		/// <c>VEX.LZ.66.0F38.W1 F7 /r</c><br/>
		/// <br/>
		/// <c>BMI2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665618)]
public static void shlx(AssemblerRegister64 dst, AssemblerMemoryOperand src1, AssemblerRegister64 src2) {}
		/// <summary>shr instruction.<br/>
		/// <br/>
		/// <c>SHR r/m8, CL</c><br/>
		/// <br/>
		/// <c>D2 /5</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665619)]
public static void shr(AssemblerRegister8 dst, AssemblerRegister8 src) {}
		/// <summary>shr instruction.<br/>
		/// <br/>
		/// <c>SHR r/m16, CL</c><br/>
		/// <br/>
		/// <c>o16 D3 /5</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665620)]
public static void shr(AssemblerRegister16 dst, AssemblerRegister8 src) {}
		/// <summary>shr instruction.<br/>
		/// <br/>
		/// <c>SHR r/m32, CL</c><br/>
		/// <br/>
		/// <c>o32 D3 /5</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665621)]
public static void shr(AssemblerRegister32 dst, AssemblerRegister8 src) {}
		/// <summary>shr instruction.<br/>
		/// <br/>
		/// <c>SHR r/m64, CL</c><br/>
		/// <br/>
		/// <c>o64 D3 /5</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665622)]
public static void shr(AssemblerRegister64 dst, AssemblerRegister8 src) {}
		/// <summary>shr instruction.<br/>
		/// <br/>
		/// <c>SHR r/m64, CL</c><br/>
		/// <br/>
		/// <c>o64 D3 /5</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>SHR r/m32, CL</c><br/>
		/// <br/>
		/// <c>o32 D3 /5</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SHR r/m16, CL</c><br/>
		/// <br/>
		/// <c>o16 D3 /5</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SHR r/m8, CL</c><br/>
		/// <br/>
		/// <c>D2 /5</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665623)]
public static void shr(AssemblerMemoryOperand dst, AssemblerRegister8 src) {}
		/// <summary>shr instruction.<br/>
		/// <br/>
		/// <c>SHR r/m8, 1</c><br/>
		/// <br/>
		/// <c>D0 /5</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SHR r/m8, imm8</c><br/>
		/// <br/>
		/// <c>C0 /5 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665624)]
public static void shr(AssemblerRegister8 dst, sbyte imm) {}
		/// <summary>shr instruction.<br/>
		/// <br/>
		/// <c>SHR r/m16, 1</c><br/>
		/// <br/>
		/// <c>o16 D1 /5</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SHR r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 C1 /5 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665625)]
public static void shr(AssemblerRegister16 dst, sbyte imm) {}
		/// <summary>shr instruction.<br/>
		/// <br/>
		/// <c>SHR r/m32, 1</c><br/>
		/// <br/>
		/// <c>o32 D1 /5</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SHR r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 C1 /5 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665626)]
public static void shr(AssemblerRegister32 dst, sbyte imm) {}
		/// <summary>shr instruction.<br/>
		/// <br/>
		/// <c>SHR r/m64, 1</c><br/>
		/// <br/>
		/// <c>o64 D1 /5</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>SHR r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 C1 /5 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665627)]
public static void shr(AssemblerRegister64 dst, sbyte imm) {}
		/// <summary>shr instruction.<br/>
		/// <br/>
		/// <c>SHR r/m64, 1</c><br/>
		/// <br/>
		/// <c>o64 D1 /5</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>SHR r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 C1 /5 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>SHR r/m32, 1</c><br/>
		/// <br/>
		/// <c>o32 D1 /5</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SHR r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 C1 /5 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SHR r/m16, 1</c><br/>
		/// <br/>
		/// <c>o16 D1 /5</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SHR r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 C1 /5 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SHR r/m8, 1</c><br/>
		/// <br/>
		/// <c>D0 /5</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SHR r/m8, imm8</c><br/>
		/// <br/>
		/// <c>C0 /5 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665628)]
public static void shr(AssemblerMemoryOperand dst, sbyte imm) {}
		/// <summary>shr instruction.<br/>
		/// <br/>
		/// <c>SHR r/m8, 1</c><br/>
		/// <br/>
		/// <c>D0 /5</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SHR r/m8, imm8</c><br/>
		/// <br/>
		/// <c>C0 /5 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665629)]
public static void shr(AssemblerRegister8 dst, byte imm) {}
		/// <summary>shr instruction.<br/>
		/// <br/>
		/// <c>SHR r/m16, 1</c><br/>
		/// <br/>
		/// <c>o16 D1 /5</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SHR r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 C1 /5 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665630)]
public static void shr(AssemblerRegister16 dst, byte imm) {}
		/// <summary>shr instruction.<br/>
		/// <br/>
		/// <c>SHR r/m32, 1</c><br/>
		/// <br/>
		/// <c>o32 D1 /5</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SHR r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 C1 /5 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665631)]
public static void shr(AssemblerRegister32 dst, byte imm) {}
		/// <summary>shr instruction.<br/>
		/// <br/>
		/// <c>SHR r/m64, 1</c><br/>
		/// <br/>
		/// <c>o64 D1 /5</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>SHR r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 C1 /5 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665632)]
public static void shr(AssemblerRegister64 dst, byte imm) {}
		/// <summary>shr instruction.<br/>
		/// <br/>
		/// <c>SHR r/m64, 1</c><br/>
		/// <br/>
		/// <c>o64 D1 /5</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>SHR r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 C1 /5 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>SHR r/m32, 1</c><br/>
		/// <br/>
		/// <c>o32 D1 /5</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SHR r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 C1 /5 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SHR r/m16, 1</c><br/>
		/// <br/>
		/// <c>o16 D1 /5</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SHR r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 C1 /5 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SHR r/m8, 1</c><br/>
		/// <br/>
		/// <c>D0 /5</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SHR r/m8, imm8</c><br/>
		/// <br/>
		/// <c>C0 /5 ib</c><br/>
		/// <br/>
		/// <c>186+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665633)]
public static void shr(AssemblerMemoryOperand dst, byte imm) {}
		/// <summary>shrd instruction.<br/>
		/// <br/>
		/// <c>SHRD r/m16, r16, CL</c><br/>
		/// <br/>
		/// <c>o16 0F AD /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665634)]
public static void shrd(AssemblerRegister16 dst, AssemblerRegister16 src1, AssemblerRegister8 src2) {}
		/// <summary>shrd instruction.<br/>
		/// <br/>
		/// <c>SHRD r/m16, r16, CL</c><br/>
		/// <br/>
		/// <c>o16 0F AD /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665635)]
public static void shrd(AssemblerMemoryOperand dst, AssemblerRegister16 src1, AssemblerRegister8 src2) {}
		/// <summary>shrd instruction.<br/>
		/// <br/>
		/// <c>SHRD r/m32, r32, CL</c><br/>
		/// <br/>
		/// <c>o32 0F AD /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665636)]
public static void shrd(AssemblerRegister32 dst, AssemblerRegister32 src1, AssemblerRegister8 src2) {}
		/// <summary>shrd instruction.<br/>
		/// <br/>
		/// <c>SHRD r/m32, r32, CL</c><br/>
		/// <br/>
		/// <c>o32 0F AD /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665637)]
public static void shrd(AssemblerMemoryOperand dst, AssemblerRegister32 src1, AssemblerRegister8 src2) {}
		/// <summary>shrd instruction.<br/>
		/// <br/>
		/// <c>SHRD r/m64, r64, CL</c><br/>
		/// <br/>
		/// <c>o64 0F AD /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665638)]
public static void shrd(AssemblerRegister64 dst, AssemblerRegister64 src1, AssemblerRegister8 src2) {}
		/// <summary>shrd instruction.<br/>
		/// <br/>
		/// <c>SHRD r/m64, r64, CL</c><br/>
		/// <br/>
		/// <c>o64 0F AD /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665639)]
public static void shrd(AssemblerMemoryOperand dst, AssemblerRegister64 src1, AssemblerRegister8 src2) {}
		/// <summary>shrd instruction.<br/>
		/// <br/>
		/// <c>SHRD r/m16, r16, imm8</c><br/>
		/// <br/>
		/// <c>o16 0F AC /r ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665640)]
public static void shrd(AssemblerRegister16 dst, AssemblerRegister16 src1, sbyte imm) {}
		/// <summary>shrd instruction.<br/>
		/// <br/>
		/// <c>SHRD r/m16, r16, imm8</c><br/>
		/// <br/>
		/// <c>o16 0F AC /r ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665641)]
public static void shrd(AssemblerMemoryOperand dst, AssemblerRegister16 src1, sbyte imm) {}
		/// <summary>shrd instruction.<br/>
		/// <br/>
		/// <c>SHRD r/m32, r32, imm8</c><br/>
		/// <br/>
		/// <c>o32 0F AC /r ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665642)]
public static void shrd(AssemblerRegister32 dst, AssemblerRegister32 src1, sbyte imm) {}
		/// <summary>shrd instruction.<br/>
		/// <br/>
		/// <c>SHRD r/m32, r32, imm8</c><br/>
		/// <br/>
		/// <c>o32 0F AC /r ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665643)]
public static void shrd(AssemblerMemoryOperand dst, AssemblerRegister32 src1, sbyte imm) {}
		/// <summary>shrd instruction.<br/>
		/// <br/>
		/// <c>SHRD r/m64, r64, imm8</c><br/>
		/// <br/>
		/// <c>o64 0F AC /r ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665644)]
public static void shrd(AssemblerRegister64 dst, AssemblerRegister64 src1, sbyte imm) {}
		/// <summary>shrd instruction.<br/>
		/// <br/>
		/// <c>SHRD r/m64, r64, imm8</c><br/>
		/// <br/>
		/// <c>o64 0F AC /r ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665645)]
public static void shrd(AssemblerMemoryOperand dst, AssemblerRegister64 src1, sbyte imm) {}
		/// <summary>shrd instruction.<br/>
		/// <br/>
		/// <c>SHRD r/m16, r16, imm8</c><br/>
		/// <br/>
		/// <c>o16 0F AC /r ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665646)]
public static void shrd(AssemblerRegister16 dst, AssemblerRegister16 src1, byte imm) {}
		/// <summary>shrd instruction.<br/>
		/// <br/>
		/// <c>SHRD r/m16, r16, imm8</c><br/>
		/// <br/>
		/// <c>o16 0F AC /r ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665647)]
public static void shrd(AssemblerMemoryOperand dst, AssemblerRegister16 src1, byte imm) {}
		/// <summary>shrd instruction.<br/>
		/// <br/>
		/// <c>SHRD r/m32, r32, imm8</c><br/>
		/// <br/>
		/// <c>o32 0F AC /r ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665648)]
public static void shrd(AssemblerRegister32 dst, AssemblerRegister32 src1, byte imm) {}
		/// <summary>shrd instruction.<br/>
		/// <br/>
		/// <c>SHRD r/m32, r32, imm8</c><br/>
		/// <br/>
		/// <c>o32 0F AC /r ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665649)]
public static void shrd(AssemblerMemoryOperand dst, AssemblerRegister32 src1, byte imm) {}
		/// <summary>shrd instruction.<br/>
		/// <br/>
		/// <c>SHRD r/m64, r64, imm8</c><br/>
		/// <br/>
		/// <c>o64 0F AC /r ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665650)]
public static void shrd(AssemblerRegister64 dst, AssemblerRegister64 src1, byte imm) {}
		/// <summary>shrd instruction.<br/>
		/// <br/>
		/// <c>SHRD r/m64, r64, imm8</c><br/>
		/// <br/>
		/// <c>o64 0F AC /r ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665651)]
public static void shrd(AssemblerMemoryOperand dst, AssemblerRegister64 src1, byte imm) {}
		/// <summary>shrx instruction.<br/>
		/// <br/>
		/// <c>SHRX r32a, r/m32, r32b</c><br/>
		/// <br/>
		/// <c>VEX.LZ.F2.0F38.W0 F7 /r</c><br/>
		/// <br/>
		/// <c>BMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665652)]
public static void shrx(AssemblerRegister32 dst, AssemblerRegister32 src1, AssemblerRegister32 src2) {}
		/// <summary>shrx instruction.<br/>
		/// <br/>
		/// <c>SHRX r32a, r/m32, r32b</c><br/>
		/// <br/>
		/// <c>VEX.LZ.F2.0F38.W0 F7 /r</c><br/>
		/// <br/>
		/// <c>BMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665653)]
public static void shrx(AssemblerRegister32 dst, AssemblerMemoryOperand src1, AssemblerRegister32 src2) {}
		/// <summary>shrx instruction.<br/>
		/// <br/>
		/// <c>SHRX r64a, r/m64, r64b</c><br/>
		/// <br/>
		/// <c>VEX.LZ.F2.0F38.W1 F7 /r</c><br/>
		/// <br/>
		/// <c>BMI2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665654)]
public static void shrx(AssemblerRegister64 dst, AssemblerRegister64 src1, AssemblerRegister64 src2) {}
		/// <summary>shrx instruction.<br/>
		/// <br/>
		/// <c>SHRX r64a, r/m64, r64b</c><br/>
		/// <br/>
		/// <c>VEX.LZ.F2.0F38.W1 F7 /r</c><br/>
		/// <br/>
		/// <c>BMI2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665655)]
public static void shrx(AssemblerRegister64 dst, AssemblerMemoryOperand src1, AssemblerRegister64 src2) {}
		/// <summary>shufpd instruction.<br/>
		/// <br/>
		/// <c>SHUFPD xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F C6 /r ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665656)]
public static void shufpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>shufpd instruction.<br/>
		/// <br/>
		/// <c>SHUFPD xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F C6 /r ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665657)]
public static void shufpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>shufpd instruction.<br/>
		/// <br/>
		/// <c>SHUFPD xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F C6 /r ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665658)]
public static void shufpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>shufpd instruction.<br/>
		/// <br/>
		/// <c>SHUFPD xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>66 0F C6 /r ib</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665659)]
public static void shufpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>shufps instruction.<br/>
		/// <br/>
		/// <c>SHUFPS xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F C6 /r ib</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665660)]
public static void shufps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>shufps instruction.<br/>
		/// <br/>
		/// <c>SHUFPS xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F C6 /r ib</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665661)]
public static void shufps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>shufps instruction.<br/>
		/// <br/>
		/// <c>SHUFPS xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F C6 /r ib</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665662)]
public static void shufps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>shufps instruction.<br/>
		/// <br/>
		/// <c>SHUFPS xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>NP 0F C6 /r ib</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665663)]
public static void shufps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>sidt instruction.<br/>
		/// <br/>
		/// <c>SIDT m</c><br/>
		/// <br/>
		/// <c>0F 01 /1</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>SIDT m</c><br/>
		/// <br/>
		/// <c>o32 0F 01 /1</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c><br/>
		/// <br/>
		/// <c>SIDT m</c><br/>
		/// <br/>
		/// <c>o16 0F 01 /1</c><br/>
		/// <br/>
		/// <c>286+</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665664)]
public static void sidt(AssemblerMemoryOperand dst) {}
		/// <summary>skinit instruction.<br/>
		/// <br/>
		/// <c>SKINIT</c><br/>
		/// <br/>
		/// <c>0F 01 DE</c><br/>
		/// <br/>
		/// <c>SKINIT or SVM</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665665)]
public static void skinit() {}
		/// <summary>sldt instruction.<br/>
		/// <br/>
		/// <c>SLDT r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 00 /0</c><br/>
		/// <br/>
		/// <c>286+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665666)]
public static void sldt(AssemblerRegister16 dst) {}
		/// <summary>sldt instruction.<br/>
		/// <br/>
		/// <c>SLDT r32/m16</c><br/>
		/// <br/>
		/// <c>o32 0F 00 /0</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665667)]
public static void sldt(AssemblerRegister32 dst) {}
		/// <summary>sldt instruction.<br/>
		/// <br/>
		/// <c>SLDT r64/m16</c><br/>
		/// <br/>
		/// <c>o64 0F 00 /0</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665668)]
public static void sldt(AssemblerRegister64 dst) {}
		/// <summary>sldt instruction.<br/>
		/// <br/>
		/// <c>SLDT r32/m16</c><br/>
		/// <br/>
		/// <c>o32 0F 00 /0</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SLDT r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 00 /0</c><br/>
		/// <br/>
		/// <c>286+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665669)]
public static void sldt(AssemblerMemoryOperand dst) {}
		/// <summary>slwpcb instruction.<br/>
		/// <br/>
		/// <c>SLWPCB r32</c><br/>
		/// <br/>
		/// <c>XOP.L0.X9.W0 12 /1</c><br/>
		/// <br/>
		/// <c>LWP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665670)]
public static void slwpcb(AssemblerRegister32 dst) {}
		/// <summary>slwpcb instruction.<br/>
		/// <br/>
		/// <c>SLWPCB r64</c><br/>
		/// <br/>
		/// <c>XOP.L0.X9.W1 12 /1</c><br/>
		/// <br/>
		/// <c>LWP</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665671)]
public static void slwpcb(AssemblerRegister64 dst) {}
		/// <summary>smint instruction.<br/>
		/// <br/>
		/// <c>SMINT</c><br/>
		/// <br/>
		/// <c>0F 38</c><br/>
		/// <br/>
		/// <c>Cyrix 6x86MX+, AMD Geode GX/LX</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665672)]
public static void smint() {}
		/// <summary>smint_0f7e instruction.<br/>
		/// <br/>
		/// <c>SMINT</c><br/>
		/// <br/>
		/// <c>0F 7E</c><br/>
		/// <br/>
		/// <c>Cyrix 6x86 or earlier</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665673)]
public static void smint_0f7e() {}
		/// <summary>smsw instruction.<br/>
		/// <br/>
		/// <c>SMSW r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 01 /4</c><br/>
		/// <br/>
		/// <c>286+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665674)]
public static void smsw(AssemblerRegister16 dst) {}
		/// <summary>smsw instruction.<br/>
		/// <br/>
		/// <c>SMSW r32/m16</c><br/>
		/// <br/>
		/// <c>o32 0F 01 /4</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665675)]
public static void smsw(AssemblerRegister32 dst) {}
		/// <summary>smsw instruction.<br/>
		/// <br/>
		/// <c>SMSW r64/m16</c><br/>
		/// <br/>
		/// <c>o64 0F 01 /4</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665676)]
public static void smsw(AssemblerRegister64 dst) {}
		/// <summary>smsw instruction.<br/>
		/// <br/>
		/// <c>SMSW r32/m16</c><br/>
		/// <br/>
		/// <c>o32 0F 01 /4</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SMSW r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 01 /4</c><br/>
		/// <br/>
		/// <c>286+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665677)]
public static void smsw(AssemblerMemoryOperand dst) {}
		/// <summary>sqrtpd instruction.<br/>
		/// <br/>
		/// <c>SQRTPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 51 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665678)]
public static void sqrtpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>sqrtpd instruction.<br/>
		/// <br/>
		/// <c>SQRTPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 51 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665679)]
public static void sqrtpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>sqrtps instruction.<br/>
		/// <br/>
		/// <c>SQRTPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 51 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665680)]
public static void sqrtps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>sqrtps instruction.<br/>
		/// <br/>
		/// <c>SQRTPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 51 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665681)]
public static void sqrtps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>sqrtsd instruction.<br/>
		/// <br/>
		/// <c>SQRTSD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>F2 0F 51 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665682)]
public static void sqrtsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>sqrtsd instruction.<br/>
		/// <br/>
		/// <c>SQRTSD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>F2 0F 51 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665683)]
public static void sqrtsd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>sqrtss instruction.<br/>
		/// <br/>
		/// <c>SQRTSS xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>F3 0F 51 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665684)]
public static void sqrtss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>sqrtss instruction.<br/>
		/// <br/>
		/// <c>SQRTSS xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>F3 0F 51 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665685)]
public static void sqrtss(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>stac instruction.<br/>
		/// <br/>
		/// <c>STAC</c><br/>
		/// <br/>
		/// <c>NP 0F 01 CB</c><br/>
		/// <br/>
		/// <c>SMAP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665686)]
public static void stac() {}
		/// <summary>stc instruction.<br/>
		/// <br/>
		/// <c>STC</c><br/>
		/// <br/>
		/// <c>F9</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665687)]
public static void stc() {}
		/// <summary>std instruction.<br/>
		/// <br/>
		/// <c>STD</c><br/>
		/// <br/>
		/// <c>FD</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665688)]
public static void std() {}
		/// <summary>stgi instruction.<br/>
		/// <br/>
		/// <c>STGI</c><br/>
		/// <br/>
		/// <c>0F 01 DC</c><br/>
		/// <br/>
		/// <c>SKINIT or SVM</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665689)]
public static void stgi() {}
		/// <summary>sti instruction.<br/>
		/// <br/>
		/// <c>STI</c><br/>
		/// <br/>
		/// <c>FB</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665690)]
public static void sti() {}
		/// <summary>stmxcsr instruction.<br/>
		/// <br/>
		/// <c>STMXCSR m32</c><br/>
		/// <br/>
		/// <c>NP 0F AE /3</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665691)]
public static void stmxcsr(AssemblerMemoryOperand dst) {}
		/// <summary>stosb instruction.<br/>
		/// <br/>
		/// <c>STOSB</c><br/>
		/// <br/>
		/// <c>AA</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665692)]
public static void stosb() {}
		/// <summary>stosd instruction.<br/>
		/// <br/>
		/// <c>STOSD</c><br/>
		/// <br/>
		/// <c>o32 AB</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665693)]
public static void stosd() {}
		/// <summary>stosq instruction.<br/>
		/// <br/>
		/// <c>STOSQ</c><br/>
		/// <br/>
		/// <c>o64 AB</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665694)]
public static void stosq() {}
		/// <summary>stosw instruction.<br/>
		/// <br/>
		/// <c>STOSW</c><br/>
		/// <br/>
		/// <c>o16 AB</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665695)]
public static void stosw() {}
		/// <summary>str instruction.<br/>
		/// <br/>
		/// <c>STR r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 00 /1</c><br/>
		/// <br/>
		/// <c>286+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665696)]
public static void str(AssemblerRegister16 dst) {}
		/// <summary>str instruction.<br/>
		/// <br/>
		/// <c>STR r32/m16</c><br/>
		/// <br/>
		/// <c>o32 0F 00 /1</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665697)]
public static void str(AssemblerRegister32 dst) {}
		/// <summary>str instruction.<br/>
		/// <br/>
		/// <c>STR r64/m16</c><br/>
		/// <br/>
		/// <c>o64 0F 00 /1</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665698)]
public static void str(AssemblerRegister64 dst) {}
		/// <summary>str instruction.<br/>
		/// <br/>
		/// <c>STR r32/m16</c><br/>
		/// <br/>
		/// <c>o32 0F 00 /1</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>STR r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 00 /1</c><br/>
		/// <br/>
		/// <c>286+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665699)]
public static void str(AssemblerMemoryOperand dst) {}
		/// <summary>sttilecfg instruction.<br/>
		/// <br/>
		/// <c>STTILECFG m512</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 49 !(11):000:bbb</c><br/>
		/// <br/>
		/// <c>AMX-TILE</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665700)]
public static void sttilecfg(AssemblerMemoryOperand dst) {}
		/// <summary>stui instruction.<br/>
		/// <br/>
		/// <c>STUI</c><br/>
		/// <br/>
		/// <c>F3 0F 01 EF</c><br/>
		/// <br/>
		/// <c>UINTR</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665701)]
public static void stui() {}
		/// <summary>sub instruction.<br/>
		/// <br/>
		/// <c>SUB r/m8, r8</c><br/>
		/// <br/>
		/// <c>28 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665702)]
public static void sub(AssemblerRegister8 dst, AssemblerRegister8 src) {}
		/// <summary>sub instruction.<br/>
		/// <br/>
		/// <c>SUB r/m8, r8</c><br/>
		/// <br/>
		/// <c>28 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665703)]
public static void sub(AssemblerMemoryOperand dst, AssemblerRegister8 src) {}
		/// <summary>sub instruction.<br/>
		/// <br/>
		/// <c>SUB r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 29 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665704)]
public static void sub(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>sub instruction.<br/>
		/// <br/>
		/// <c>SUB r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 29 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665705)]
public static void sub(AssemblerMemoryOperand dst, AssemblerRegister16 src) {}
		/// <summary>sub instruction.<br/>
		/// <br/>
		/// <c>SUB r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 29 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665706)]
public static void sub(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>sub instruction.<br/>
		/// <br/>
		/// <c>SUB r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 29 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665707)]
public static void sub(AssemblerMemoryOperand dst, AssemblerRegister32 src) {}
		/// <summary>sub instruction.<br/>
		/// <br/>
		/// <c>SUB r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 29 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665708)]
public static void sub(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>sub instruction.<br/>
		/// <br/>
		/// <c>SUB r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 29 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665709)]
public static void sub(AssemblerMemoryOperand dst, AssemblerRegister64 src) {}
		/// <summary>sub instruction.<br/>
		/// <br/>
		/// <c>SUB r8, r/m8</c><br/>
		/// <br/>
		/// <c>2A /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665710)]
public static void sub(AssemblerRegister8 dst, AssemblerMemoryOperand src) {}
		/// <summary>sub instruction.<br/>
		/// <br/>
		/// <c>SUB r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 2B /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665711)]
public static void sub(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>sub instruction.<br/>
		/// <br/>
		/// <c>SUB r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 2B /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665712)]
public static void sub(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>sub instruction.<br/>
		/// <br/>
		/// <c>SUB r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 2B /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665713)]
public static void sub(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>sub instruction.<br/>
		/// <br/>
		/// <c>SUB AL, imm8</c><br/>
		/// <br/>
		/// <c>2C ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SUB r/m8, imm8</c><br/>
		/// <br/>
		/// <c>80 /5 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665714)]
public static void sub(AssemblerRegister8 dst, sbyte imm) {}
		/// <summary>sub instruction.<br/>
		/// <br/>
		/// <c>SUB AX, imm16</c><br/>
		/// <br/>
		/// <c>o16 2D iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SUB r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 81 /5 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SUB r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 83 /5 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665715)]
public static void sub(AssemblerRegister16 dst, short imm) {}
		/// <summary>sub instruction.<br/>
		/// <br/>
		/// <c>SUB EAX, imm32</c><br/>
		/// <br/>
		/// <c>o32 2D id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SUB r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 81 /5 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SUB r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 83 /5 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665716)]
public static void sub(AssemblerRegister32 dst, int imm) {}
		/// <summary>sub instruction.<br/>
		/// <br/>
		/// <c>SUB RAX, imm32</c><br/>
		/// <br/>
		/// <c>o64 2D id</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>SUB r/m64, imm32</c><br/>
		/// <br/>
		/// <c>o64 81 /5 id</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>SUB r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 83 /5 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665717)]
public static void sub(AssemblerRegister64 dst, int imm) {}
		/// <summary>sub instruction.<br/>
		/// <br/>
		/// <c>SUB r/m64, imm32</c><br/>
		/// <br/>
		/// <c>o64 81 /5 id</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>SUB r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 83 /5 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>SUB r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 81 /5 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SUB r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 83 /5 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SUB r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 81 /5 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SUB r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 83 /5 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SUB r/m8, imm8</c><br/>
		/// <br/>
		/// <c>80 /5 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665718)]
public static void sub(AssemblerMemoryOperand dst, int imm) {}
		/// <summary>sub instruction.<br/>
		/// <br/>
		/// <c>SUB AL, imm8</c><br/>
		/// <br/>
		/// <c>2C ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SUB r/m8, imm8</c><br/>
		/// <br/>
		/// <c>80 /5 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665719)]
public static void sub(AssemblerRegister8 dst, byte imm) {}
		/// <summary>sub instruction.<br/>
		/// <br/>
		/// <c>SUB AX, imm16</c><br/>
		/// <br/>
		/// <c>o16 2D iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SUB r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 81 /5 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SUB r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 83 /5 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665720)]
public static void sub(AssemblerRegister16 dst, ushort imm) {}
		/// <summary>sub instruction.<br/>
		/// <br/>
		/// <c>SUB EAX, imm32</c><br/>
		/// <br/>
		/// <c>o32 2D id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SUB r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 81 /5 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SUB r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 83 /5 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665721)]
public static void sub(AssemblerRegister32 dst, uint imm) {}
		/// <summary>sub instruction.<br/>
		/// <br/>
		/// <c>SUB r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 81 /5 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SUB r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 83 /5 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SUB r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 81 /5 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SUB r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 83 /5 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>SUB r/m8, imm8</c><br/>
		/// <br/>
		/// <c>80 /5 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665722)]
public static void sub(AssemblerMemoryOperand dst, uint imm) {}
		/// <summary>subpd instruction.<br/>
		/// <br/>
		/// <c>SUBPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 5C /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665723)]
public static void subpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>subpd instruction.<br/>
		/// <br/>
		/// <c>SUBPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 5C /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665724)]
public static void subpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>subps instruction.<br/>
		/// <br/>
		/// <c>SUBPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 5C /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665725)]
public static void subps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>subps instruction.<br/>
		/// <br/>
		/// <c>SUBPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 5C /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665726)]
public static void subps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>subsd instruction.<br/>
		/// <br/>
		/// <c>SUBSD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>F2 0F 5C /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665727)]
public static void subsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>subsd instruction.<br/>
		/// <br/>
		/// <c>SUBSD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>F2 0F 5C /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665728)]
public static void subsd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>subss instruction.<br/>
		/// <br/>
		/// <c>SUBSS xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>F3 0F 5C /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665729)]
public static void subss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>subss instruction.<br/>
		/// <br/>
		/// <c>SUBSS xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>F3 0F 5C /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665730)]
public static void subss(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>svdc instruction.<br/>
		/// <br/>
		/// <c>SVDC m80, Sreg</c><br/>
		/// <br/>
		/// <c>0F 78 /r</c><br/>
		/// <br/>
		/// <c>Cyrix, AMD Geode GX/LX</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665731)]
public static void svdc(AssemblerMemoryOperand dst, AssemblerRegisterSegment src) {}
		/// <summary>svldt instruction.<br/>
		/// <br/>
		/// <c>SVLDT m80</c><br/>
		/// <br/>
		/// <c>0F 7A /0</c><br/>
		/// <br/>
		/// <c>Cyrix, AMD Geode GX/LX</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665732)]
public static void svldt(AssemblerMemoryOperand dst) {}
		/// <summary>svts instruction.<br/>
		/// <br/>
		/// <c>SVTS m80</c><br/>
		/// <br/>
		/// <c>0F 7C /0</c><br/>
		/// <br/>
		/// <c>Cyrix, AMD Geode GX/LX</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665733)]
public static void svts(AssemblerMemoryOperand dst) {}
		/// <summary>swapgs instruction.<br/>
		/// <br/>
		/// <c>SWAPGS</c><br/>
		/// <br/>
		/// <c>0F 01 F8</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665734)]
public static void swapgs() {}
		/// <summary>syscall instruction.<br/>
		/// <br/>
		/// <c>SYSCALL</c><br/>
		/// <br/>
		/// <c>0F 05</c><br/>
		/// <br/>
		/// <c>SYSCALL</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665735)]
public static void syscall() {}
		/// <summary>sysenter instruction.<br/>
		/// <br/>
		/// <c>SYSENTER</c><br/>
		/// <br/>
		/// <c>0F 34</c><br/>
		/// <br/>
		/// <c>SEP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665736)]
public static void sysenter() {}
		/// <summary>sysexit instruction.<br/>
		/// <br/>
		/// <c>SYSEXIT</c><br/>
		/// <br/>
		/// <c>0F 35</c><br/>
		/// <br/>
		/// <c>SEP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665737)]
public static void sysexit() {}
		/// <summary>sysexitq instruction.<br/>
		/// <br/>
		/// <c>SYSEXITQ</c><br/>
		/// <br/>
		/// <c>o64 0F 35</c><br/>
		/// <br/>
		/// <c>SEP</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665738)]
public static void sysexitq() {}
		/// <summary>sysret instruction.<br/>
		/// <br/>
		/// <c>SYSRET</c><br/>
		/// <br/>
		/// <c>0F 07</c><br/>
		/// <br/>
		/// <c>SYSCALL</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665739)]
public static void sysret() {}
		/// <summary>sysretq instruction.<br/>
		/// <br/>
		/// <c>SYSRETQ</c><br/>
		/// <br/>
		/// <c>o64 0F 07</c><br/>
		/// <br/>
		/// <c>SYSCALL</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665740)]
public static void sysretq() {}
		/// <summary>t1mskc instruction.<br/>
		/// <br/>
		/// <c>T1MSKC r32, r/m32</c><br/>
		/// <br/>
		/// <c>XOP.L0.X9.W0 01 /7</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665741)]
public static void t1mskc(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>t1mskc instruction.<br/>
		/// <br/>
		/// <c>T1MSKC r64, r/m64</c><br/>
		/// <br/>
		/// <c>XOP.L0.X9.W1 01 /7</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665742)]
public static void t1mskc(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>t1mskc instruction.<br/>
		/// <br/>
		/// <c>T1MSKC r32, r/m32</c><br/>
		/// <br/>
		/// <c>XOP.L0.X9.W0 01 /7</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665743)]
public static void t1mskc(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>t1mskc instruction.<br/>
		/// <br/>
		/// <c>T1MSKC r64, r/m64</c><br/>
		/// <br/>
		/// <c>XOP.L0.X9.W1 01 /7</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665744)]
public static void t1mskc(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>tdcall instruction.<br/>
		/// <br/>
		/// <c>TDCALL</c><br/>
		/// <br/>
		/// <c>66 0F 01 CC</c><br/>
		/// <br/>
		/// <c>TDX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665745)]
public static void tdcall() {}
		/// <summary>tdpbf16ps instruction.<br/>
		/// <br/>
		/// <c>TDPBF16PS tmm1, tmm2, tmm3</c><br/>
		/// <br/>
		/// <c>VEX.128.F3.0F38.W0 5C 11:rrr:bbb</c><br/>
		/// <br/>
		/// <c>AMX-BF16</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665746)]
public static void tdpbf16ps(AssemblerRegisterTMM dst, AssemblerRegisterTMM src1, AssemblerRegisterTMM src2) {}
		/// <summary>tdpbssd instruction.<br/>
		/// <br/>
		/// <c>TDPBSSD tmm1, tmm2, tmm3</c><br/>
		/// <br/>
		/// <c>VEX.128.F2.0F38.W0 5E 11:rrr:bbb</c><br/>
		/// <br/>
		/// <c>AMX-INT8</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665747)]
public static void tdpbssd(AssemblerRegisterTMM dst, AssemblerRegisterTMM src1, AssemblerRegisterTMM src2) {}
		/// <summary>tdpbsud instruction.<br/>
		/// <br/>
		/// <c>TDPBSUD tmm1, tmm2, tmm3</c><br/>
		/// <br/>
		/// <c>VEX.128.F3.0F38.W0 5E 11:rrr:bbb</c><br/>
		/// <br/>
		/// <c>AMX-INT8</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665748)]
public static void tdpbsud(AssemblerRegisterTMM dst, AssemblerRegisterTMM src1, AssemblerRegisterTMM src2) {}
		/// <summary>tdpbusd instruction.<br/>
		/// <br/>
		/// <c>TDPBUSD tmm1, tmm2, tmm3</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 5E 11:rrr:bbb</c><br/>
		/// <br/>
		/// <c>AMX-INT8</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665749)]
public static void tdpbusd(AssemblerRegisterTMM dst, AssemblerRegisterTMM src1, AssemblerRegisterTMM src2) {}
		/// <summary>tdpbuud instruction.<br/>
		/// <br/>
		/// <c>TDPBUUD tmm1, tmm2, tmm3</c><br/>
		/// <br/>
		/// <c>VEX.128.0F38.W0 5E 11:rrr:bbb</c><br/>
		/// <br/>
		/// <c>AMX-INT8</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665750)]
public static void tdpbuud(AssemblerRegisterTMM dst, AssemblerRegisterTMM src1, AssemblerRegisterTMM src2) {}
		/// <summary>test instruction.<br/>
		/// <br/>
		/// <c>TEST r/m8, r8</c><br/>
		/// <br/>
		/// <c>84 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665751)]
public static void test(AssemblerRegister8 dst, AssemblerRegister8 src) {}
		/// <summary>test instruction.<br/>
		/// <br/>
		/// <c>TEST r/m8, r8</c><br/>
		/// <br/>
		/// <c>84 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665752)]
public static void test(AssemblerMemoryOperand dst, AssemblerRegister8 src) {}
		/// <summary>test instruction.<br/>
		/// <br/>
		/// <c>TEST r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 85 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665753)]
public static void test(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>test instruction.<br/>
		/// <br/>
		/// <c>TEST r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 85 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665754)]
public static void test(AssemblerMemoryOperand dst, AssemblerRegister16 src) {}
		/// <summary>test instruction.<br/>
		/// <br/>
		/// <c>TEST r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 85 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665755)]
public static void test(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>test instruction.<br/>
		/// <br/>
		/// <c>TEST r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 85 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665756)]
public static void test(AssemblerMemoryOperand dst, AssemblerRegister32 src) {}
		/// <summary>test instruction.<br/>
		/// <br/>
		/// <c>TEST r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 85 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665757)]
public static void test(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>test instruction.<br/>
		/// <br/>
		/// <c>TEST r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 85 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665758)]
public static void test(AssemblerMemoryOperand dst, AssemblerRegister64 src) {}
		/// <summary>test instruction.<br/>
		/// <br/>
		/// <c>TEST AL, imm8</c><br/>
		/// <br/>
		/// <c>A8 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>TEST r/m8, imm8</c><br/>
		/// <br/>
		/// <c>F6 /0 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665759)]
public static void test(AssemblerRegister8 dst, sbyte imm) {}
		/// <summary>test instruction.<br/>
		/// <br/>
		/// <c>TEST AX, imm16</c><br/>
		/// <br/>
		/// <c>o16 A9 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>TEST r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 F7 /0 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665760)]
public static void test(AssemblerRegister16 dst, short imm) {}
		/// <summary>test instruction.<br/>
		/// <br/>
		/// <c>TEST EAX, imm32</c><br/>
		/// <br/>
		/// <c>o32 A9 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>TEST r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 F7 /0 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665761)]
public static void test(AssemblerRegister32 dst, int imm) {}
		/// <summary>test instruction.<br/>
		/// <br/>
		/// <c>TEST RAX, imm32</c><br/>
		/// <br/>
		/// <c>o64 A9 id</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>TEST r/m64, imm32</c><br/>
		/// <br/>
		/// <c>o64 F7 /0 id</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665762)]
public static void test(AssemblerRegister64 dst, int imm) {}
		/// <summary>test instruction.<br/>
		/// <br/>
		/// <c>TEST r/m64, imm32</c><br/>
		/// <br/>
		/// <c>o64 F7 /0 id</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>TEST r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 F7 /0 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>TEST r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 F7 /0 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>TEST r/m8, imm8</c><br/>
		/// <br/>
		/// <c>F6 /0 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665763)]
public static void test(AssemblerMemoryOperand dst, int imm) {}
		/// <summary>test instruction.<br/>
		/// <br/>
		/// <c>TEST AL, imm8</c><br/>
		/// <br/>
		/// <c>A8 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>TEST r/m8, imm8</c><br/>
		/// <br/>
		/// <c>F6 /0 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665764)]
public static void test(AssemblerRegister8 dst, byte imm) {}
		/// <summary>test instruction.<br/>
		/// <br/>
		/// <c>TEST AX, imm16</c><br/>
		/// <br/>
		/// <c>o16 A9 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>TEST r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 F7 /0 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665765)]
public static void test(AssemblerRegister16 dst, ushort imm) {}
		/// <summary>test instruction.<br/>
		/// <br/>
		/// <c>TEST EAX, imm32</c><br/>
		/// <br/>
		/// <c>o32 A9 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>TEST r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 F7 /0 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665766)]
public static void test(AssemblerRegister32 dst, uint imm) {}
		/// <summary>test instruction.<br/>
		/// <br/>
		/// <c>TEST r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 F7 /0 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>TEST r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 F7 /0 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>TEST r/m8, imm8</c><br/>
		/// <br/>
		/// <c>F6 /0 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665767)]
public static void test(AssemblerMemoryOperand dst, uint imm) {}
		/// <summary>testui instruction.<br/>
		/// <br/>
		/// <c>TESTUI</c><br/>
		/// <br/>
		/// <c>F3 0F 01 ED</c><br/>
		/// <br/>
		/// <c>UINTR</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665768)]
public static void testui() {}
		/// <summary>tileloadd instruction.<br/>
		/// <br/>
		/// <c>TILELOADD tmm1, sibmem</c><br/>
		/// <br/>
		/// <c>VEX.128.F2.0F38.W0 4B !(11):rrr:100</c><br/>
		/// <br/>
		/// <c>AMX-TILE</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665769)]
public static void tileloadd(AssemblerRegisterTMM dst, AssemblerMemoryOperand src) {}
		/// <summary>tileloaddt1 instruction.<br/>
		/// <br/>
		/// <c>TILELOADDT1 tmm1, sibmem</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 4B !(11):rrr:100</c><br/>
		/// <br/>
		/// <c>AMX-TILE</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665770)]
public static void tileloaddt1(AssemblerRegisterTMM dst, AssemblerMemoryOperand src) {}
		/// <summary>tilerelease instruction.<br/>
		/// <br/>
		/// <c>TILERELEASE</c><br/>
		/// <br/>
		/// <c>VEX.128.0F38.W0 49 C0</c><br/>
		/// <br/>
		/// <c>AMX-TILE</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665771)]
public static void tilerelease() {}
		/// <summary>tilestored instruction.<br/>
		/// <br/>
		/// <c>TILESTORED sibmem, tmm1</c><br/>
		/// <br/>
		/// <c>VEX.128.F3.0F38.W0 4B !(11):rrr:100</c><br/>
		/// <br/>
		/// <c>AMX-TILE</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665772)]
public static void tilestored(AssemblerMemoryOperand dst, AssemblerRegisterTMM src) {}
		/// <summary>tilezero instruction.<br/>
		/// <br/>
		/// <c>TILEZERO tmm1</c><br/>
		/// <br/>
		/// <c>VEX.128.F2.0F38.W0 49 11:rrr:000</c><br/>
		/// <br/>
		/// <c>AMX-TILE</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665773)]
public static void tilezero(AssemblerRegisterTMM dst) {}
		/// <summary>tlbsync instruction.<br/>
		/// <br/>
		/// <c>TLBSYNC</c><br/>
		/// <br/>
		/// <c>NP 0F 01 FF</c><br/>
		/// <br/>
		/// <c>INVLPGB</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665774)]
public static void tlbsync() {}
		/// <summary>tpause instruction.<br/>
		/// <br/>
		/// <c>TPAUSE r32, &lt;edx&gt;, &lt;eax&gt;</c><br/>
		/// <br/>
		/// <c>66 0F AE /6</c><br/>
		/// <br/>
		/// <c>WAITPKG</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665775)]
public static void tpause(AssemblerRegister32 dst) {}
		/// <summary>tpause instruction.<br/>
		/// <br/>
		/// <c>TPAUSE r64, &lt;edx&gt;, &lt;eax&gt;</c><br/>
		/// <br/>
		/// <c>66 o64 0F AE /6</c><br/>
		/// <br/>
		/// <c>WAITPKG</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665776)]
public static void tpause(AssemblerRegister64 dst) {}
		/// <summary>tzcnt instruction.<br/>
		/// <br/>
		/// <c>TZCNT r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 F3 0F BC /r</c><br/>
		/// <br/>
		/// <c>BMI1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665777)]
public static void tzcnt(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>tzcnt instruction.<br/>
		/// <br/>
		/// <c>TZCNT r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 F3 0F BC /r</c><br/>
		/// <br/>
		/// <c>BMI1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665778)]
public static void tzcnt(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>tzcnt instruction.<br/>
		/// <br/>
		/// <c>TZCNT r64, r/m64</c><br/>
		/// <br/>
		/// <c>F3 o64 0F BC /r</c><br/>
		/// <br/>
		/// <c>BMI1</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665779)]
public static void tzcnt(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>tzcnt instruction.<br/>
		/// <br/>
		/// <c>TZCNT r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 F3 0F BC /r</c><br/>
		/// <br/>
		/// <c>BMI1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665780)]
public static void tzcnt(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>tzcnt instruction.<br/>
		/// <br/>
		/// <c>TZCNT r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 F3 0F BC /r</c><br/>
		/// <br/>
		/// <c>BMI1</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665781)]
public static void tzcnt(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>tzcnt instruction.<br/>
		/// <br/>
		/// <c>TZCNT r64, r/m64</c><br/>
		/// <br/>
		/// <c>F3 o64 0F BC /r</c><br/>
		/// <br/>
		/// <c>BMI1</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665782)]
public static void tzcnt(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>tzmsk instruction.<br/>
		/// <br/>
		/// <c>TZMSK r32, r/m32</c><br/>
		/// <br/>
		/// <c>XOP.L0.X9.W0 01 /4</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665783)]
public static void tzmsk(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>tzmsk instruction.<br/>
		/// <br/>
		/// <c>TZMSK r64, r/m64</c><br/>
		/// <br/>
		/// <c>XOP.L0.X9.W1 01 /4</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665784)]
public static void tzmsk(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>tzmsk instruction.<br/>
		/// <br/>
		/// <c>TZMSK r32, r/m32</c><br/>
		/// <br/>
		/// <c>XOP.L0.X9.W0 01 /4</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665785)]
public static void tzmsk(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>tzmsk instruction.<br/>
		/// <br/>
		/// <c>TZMSK r64, r/m64</c><br/>
		/// <br/>
		/// <c>XOP.L0.X9.W1 01 /4</c><br/>
		/// <br/>
		/// <c>TBM</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665786)]
public static void tzmsk(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>ucomisd instruction.<br/>
		/// <br/>
		/// <c>UCOMISD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>66 0F 2E /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665787)]
public static void ucomisd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>ucomisd instruction.<br/>
		/// <br/>
		/// <c>UCOMISD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>66 0F 2E /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665788)]
public static void ucomisd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>ucomiss instruction.<br/>
		/// <br/>
		/// <c>UCOMISS xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>NP 0F 2E /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665789)]
public static void ucomiss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>ucomiss instruction.<br/>
		/// <br/>
		/// <c>UCOMISS xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>NP 0F 2E /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665790)]
public static void ucomiss(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>ud0 instruction.<br/>
		/// <br/>
		/// <c>UD0</c><br/>
		/// <br/>
		/// <c>0F FF</c><br/>
		/// <br/>
		/// <c>286+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665791)]
public static void ud0() {}
		/// <summary>ud0 instruction.<br/>
		/// <br/>
		/// <c>UD0 r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F FF /r</c><br/>
		/// <br/>
		/// <c>286+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665792)]
public static void ud0(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>ud0 instruction.<br/>
		/// <br/>
		/// <c>UD0 r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F FF /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665793)]
public static void ud0(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>ud0 instruction.<br/>
		/// <br/>
		/// <c>UD0 r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F FF /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665794)]
public static void ud0(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>ud0 instruction.<br/>
		/// <br/>
		/// <c>UD0 r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F FF /r</c><br/>
		/// <br/>
		/// <c>286+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665795)]
public static void ud0(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>ud0 instruction.<br/>
		/// <br/>
		/// <c>UD0 r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F FF /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665796)]
public static void ud0(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>ud0 instruction.<br/>
		/// <br/>
		/// <c>UD0 r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F FF /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665797)]
public static void ud0(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>ud1 instruction.<br/>
		/// <br/>
		/// <c>UD1 r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F B9 /r</c><br/>
		/// <br/>
		/// <c>286+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665798)]
public static void ud1(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>ud1 instruction.<br/>
		/// <br/>
		/// <c>UD1 r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F B9 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665799)]
public static void ud1(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>ud1 instruction.<br/>
		/// <br/>
		/// <c>UD1 r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F B9 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665800)]
public static void ud1(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>ud1 instruction.<br/>
		/// <br/>
		/// <c>UD1 r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F B9 /r</c><br/>
		/// <br/>
		/// <c>286+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665801)]
public static void ud1(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>ud1 instruction.<br/>
		/// <br/>
		/// <c>UD1 r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F B9 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665802)]
public static void ud1(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>ud1 instruction.<br/>
		/// <br/>
		/// <c>UD1 r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 0F B9 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665803)]
public static void ud1(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>ud2 instruction.<br/>
		/// <br/>
		/// <c>UD2</c><br/>
		/// <br/>
		/// <c>0F 0B</c><br/>
		/// <br/>
		/// <c>286+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665804)]
public static void ud2() {}
		/// <summary>uiret instruction.<br/>
		/// <br/>
		/// <c>UIRET</c><br/>
		/// <br/>
		/// <c>F3 0F 01 EC</c><br/>
		/// <br/>
		/// <c>UINTR</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665805)]
public static void uiret() {}
		/// <summary>umonitor instruction.<br/>
		/// <br/>
		/// <c>UMONITOR r16</c><br/>
		/// <br/>
		/// <c>a16 F3 0F AE /6</c><br/>
		/// <br/>
		/// <c>WAITPKG</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665806)]
public static void umonitor(AssemblerRegister16 dst) {}
		/// <summary>umonitor instruction.<br/>
		/// <br/>
		/// <c>UMONITOR r32</c><br/>
		/// <br/>
		/// <c>a32 F3 0F AE /6</c><br/>
		/// <br/>
		/// <c>WAITPKG</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665807)]
public static void umonitor(AssemblerRegister32 dst) {}
		/// <summary>umonitor instruction.<br/>
		/// <br/>
		/// <c>UMONITOR r64</c><br/>
		/// <br/>
		/// <c>a64 F3 0F AE /6</c><br/>
		/// <br/>
		/// <c>WAITPKG</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665808)]
public static void umonitor(AssemblerRegister64 dst) {}
		/// <summary>umov instruction.<br/>
		/// <br/>
		/// <c>UMOV r/m8, r8</c><br/>
		/// <br/>
		/// <c>0F 10 /r</c><br/>
		/// <br/>
		/// <c>386/486</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665809)]
public static void umov(AssemblerRegister8 dst, AssemblerRegister8 src) {}
		/// <summary>umov instruction.<br/>
		/// <br/>
		/// <c>UMOV r/m8, r8</c><br/>
		/// <br/>
		/// <c>0F 10 /r</c><br/>
		/// <br/>
		/// <c>386/486</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665810)]
public static void umov(AssemblerMemoryOperand dst, AssemblerRegister8 src) {}
		/// <summary>umov instruction.<br/>
		/// <br/>
		/// <c>UMOV r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 0F 11 /r</c><br/>
		/// <br/>
		/// <c>386/486</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665811)]
public static void umov(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>umov instruction.<br/>
		/// <br/>
		/// <c>UMOV r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 0F 11 /r</c><br/>
		/// <br/>
		/// <c>386/486</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665812)]
public static void umov(AssemblerMemoryOperand dst, AssemblerRegister16 src) {}
		/// <summary>umov instruction.<br/>
		/// <br/>
		/// <c>UMOV r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 0F 11 /r</c><br/>
		/// <br/>
		/// <c>386/486</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665813)]
public static void umov(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>umov instruction.<br/>
		/// <br/>
		/// <c>UMOV r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 0F 11 /r</c><br/>
		/// <br/>
		/// <c>386/486</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665814)]
public static void umov(AssemblerMemoryOperand dst, AssemblerRegister32 src) {}
		/// <summary>umov instruction.<br/>
		/// <br/>
		/// <c>UMOV r8, r/m8</c><br/>
		/// <br/>
		/// <c>0F 12 /r</c><br/>
		/// <br/>
		/// <c>386/486</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665815)]
public static void umov(AssemblerRegister8 dst, AssemblerMemoryOperand src) {}
		/// <summary>umov instruction.<br/>
		/// <br/>
		/// <c>UMOV r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 13 /r</c><br/>
		/// <br/>
		/// <c>386/486</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665816)]
public static void umov(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>umov instruction.<br/>
		/// <br/>
		/// <c>UMOV r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F 13 /r</c><br/>
		/// <br/>
		/// <c>386/486</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100665817)]
public static void umov(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>umwait instruction.<br/>
		/// <br/>
		/// <c>UMWAIT r32, &lt;edx&gt;, &lt;eax&gt;</c><br/>
		/// <br/>
		/// <c>F2 0F AE /6</c><br/>
		/// <br/>
		/// <c>WAITPKG</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665818)]
public static void umwait(AssemblerRegister32 dst) {}
		/// <summary>umwait instruction.<br/>
		/// <br/>
		/// <c>UMWAIT r64, &lt;edx&gt;, &lt;eax&gt;</c><br/>
		/// <br/>
		/// <c>F2 o64 0F AE /6</c><br/>
		/// <br/>
		/// <c>WAITPKG</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100665819)]
public static void umwait(AssemblerRegister64 dst) {}
		/// <summary>unpckhpd instruction.<br/>
		/// <br/>
		/// <c>UNPCKHPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 15 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665820)]
public static void unpckhpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>unpckhpd instruction.<br/>
		/// <br/>
		/// <c>UNPCKHPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 15 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665821)]
public static void unpckhpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>unpckhps instruction.<br/>
		/// <br/>
		/// <c>UNPCKHPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 15 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665822)]
public static void unpckhps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>unpckhps instruction.<br/>
		/// <br/>
		/// <c>UNPCKHPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 15 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665823)]
public static void unpckhps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>unpcklpd instruction.<br/>
		/// <br/>
		/// <c>UNPCKLPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 14 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665824)]
public static void unpcklpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>unpcklpd instruction.<br/>
		/// <br/>
		/// <c>UNPCKLPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 14 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665825)]
public static void unpcklpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>unpcklps instruction.<br/>
		/// <br/>
		/// <c>UNPCKLPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 14 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665826)]
public static void unpcklps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>unpcklps instruction.<br/>
		/// <br/>
		/// <c>UNPCKLPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 14 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665827)]
public static void unpcklps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>v4fmaddps instruction.<br/>
		/// <br/>
		/// <c>V4FMADDPS zmm1 {k1}{z}, zmm2+3, m128</c><br/>
		/// <br/>
		/// <c>EVEX.512.F2.0F38.W0 9A /r</c><br/>
		/// <br/>
		/// <c>AVX512_4FMAPS</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665828)]
public static void v4fmaddps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>v4fmaddss instruction.<br/>
		/// <br/>
		/// <c>V4FMADDSS xmm1 {k1}{z}, xmm2+3, m128</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F38.W0 9B /r</c><br/>
		/// <br/>
		/// <c>AVX512_4FMAPS</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665829)]
public static void v4fmaddss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>v4fnmaddps instruction.<br/>
		/// <br/>
		/// <c>V4FNMADDPS zmm1 {k1}{z}, zmm2+3, m128</c><br/>
		/// <br/>
		/// <c>EVEX.512.F2.0F38.W0 AA /r</c><br/>
		/// <br/>
		/// <c>AVX512_4FMAPS</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665830)]
public static void v4fnmaddps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>v4fnmaddss instruction.<br/>
		/// <br/>
		/// <c>V4FNMADDSS xmm1 {k1}{z}, xmm2+3, m128</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F38.W0 AB /r</c><br/>
		/// <br/>
		/// <c>AVX512_4FMAPS</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665831)]
public static void v4fnmaddss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vaddpd instruction.<br/>
		/// <br/>
		/// <c>VADDPD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 58 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VADDPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 58 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665832)]
public static void vaddpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vaddpd instruction.<br/>
		/// <br/>
		/// <c>VADDPD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 58 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VADDPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 58 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665833)]
public static void vaddpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vaddpd instruction.<br/>
		/// <br/>
		/// <c>VADDPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 58 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665834)]
public static void vaddpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vaddpd instruction.<br/>
		/// <br/>
		/// <c>VADDPD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 58 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VADDPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 58 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665835)]
public static void vaddpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vaddpd instruction.<br/>
		/// <br/>
		/// <c>VADDPD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 58 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VADDPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 58 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665836)]
public static void vaddpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vaddpd instruction.<br/>
		/// <br/>
		/// <c>VADDPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 58 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665837)]
public static void vaddpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vaddps instruction.<br/>
		/// <br/>
		/// <c>VADDPS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 58 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VADDPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 58 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665838)]
public static void vaddps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vaddps instruction.<br/>
		/// <br/>
		/// <c>VADDPS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 58 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VADDPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 58 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665839)]
public static void vaddps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vaddps instruction.<br/>
		/// <br/>
		/// <c>VADDPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 58 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665840)]
public static void vaddps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vaddps instruction.<br/>
		/// <br/>
		/// <c>VADDPS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 58 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VADDPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 58 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665841)]
public static void vaddps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vaddps instruction.<br/>
		/// <br/>
		/// <c>VADDPS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 58 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VADDPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 58 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665842)]
public static void vaddps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vaddps instruction.<br/>
		/// <br/>
		/// <c>VADDPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 58 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665843)]
public static void vaddps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vaddsd instruction.<br/>
		/// <br/>
		/// <c>VADDSD xmm1, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F2.0F.WIG 58 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VADDSD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W1 58 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665844)]
public static void vaddsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vaddsd instruction.<br/>
		/// <br/>
		/// <c>VADDSD xmm1, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F2.0F.WIG 58 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VADDSD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W1 58 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665845)]
public static void vaddsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vaddss instruction.<br/>
		/// <br/>
		/// <c>VADDSS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F3.0F.WIG 58 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VADDSS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W0 58 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665846)]
public static void vaddss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vaddss instruction.<br/>
		/// <br/>
		/// <c>VADDSS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F3.0F.WIG 58 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VADDSS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W0 58 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665847)]
public static void vaddss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vaddsubpd instruction.<br/>
		/// <br/>
		/// <c>VADDSUBPD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG D0 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665848)]
public static void vaddsubpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vaddsubpd instruction.<br/>
		/// <br/>
		/// <c>VADDSUBPD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG D0 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665849)]
public static void vaddsubpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vaddsubpd instruction.<br/>
		/// <br/>
		/// <c>VADDSUBPD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG D0 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665850)]
public static void vaddsubpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vaddsubpd instruction.<br/>
		/// <br/>
		/// <c>VADDSUBPD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG D0 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665851)]
public static void vaddsubpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vaddsubps instruction.<br/>
		/// <br/>
		/// <c>VADDSUBPS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.F2.0F.WIG D0 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665852)]
public static void vaddsubps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vaddsubps instruction.<br/>
		/// <br/>
		/// <c>VADDSUBPS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.F2.0F.WIG D0 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665853)]
public static void vaddsubps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vaddsubps instruction.<br/>
		/// <br/>
		/// <c>VADDSUBPS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.F2.0F.WIG D0 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665854)]
public static void vaddsubps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vaddsubps instruction.<br/>
		/// <br/>
		/// <c>VADDSUBPS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.F2.0F.WIG D0 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665855)]
public static void vaddsubps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vaesdec instruction.<br/>
		/// <br/>
		/// <c>VAESDEC xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG DE /r</c><br/>
		/// <br/>
		/// <c>AES and AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VAESDEC xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG DE /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and VAES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665856)]
public static void vaesdec(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vaesdec instruction.<br/>
		/// <br/>
		/// <c>VAESDEC ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG DE /r</c><br/>
		/// <br/>
		/// <c>VAES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VAESDEC ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG DE /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and VAES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665857)]
public static void vaesdec(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vaesdec instruction.<br/>
		/// <br/>
		/// <c>VAESDEC zmm1, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG DE /r</c><br/>
		/// <br/>
		/// <c>AVX512F and VAES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665858)]
public static void vaesdec(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vaesdec instruction.<br/>
		/// <br/>
		/// <c>VAESDEC xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG DE /r</c><br/>
		/// <br/>
		/// <c>AES and AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VAESDEC xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG DE /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and VAES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665859)]
public static void vaesdec(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vaesdec instruction.<br/>
		/// <br/>
		/// <c>VAESDEC ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG DE /r</c><br/>
		/// <br/>
		/// <c>VAES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VAESDEC ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG DE /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and VAES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665860)]
public static void vaesdec(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vaesdec instruction.<br/>
		/// <br/>
		/// <c>VAESDEC zmm1, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG DE /r</c><br/>
		/// <br/>
		/// <c>AVX512F and VAES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665861)]
public static void vaesdec(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vaesdeclast instruction.<br/>
		/// <br/>
		/// <c>VAESDECLAST xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG DF /r</c><br/>
		/// <br/>
		/// <c>AES and AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VAESDECLAST xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG DF /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and VAES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665862)]
public static void vaesdeclast(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vaesdeclast instruction.<br/>
		/// <br/>
		/// <c>VAESDECLAST ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG DF /r</c><br/>
		/// <br/>
		/// <c>VAES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VAESDECLAST ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG DF /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and VAES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665863)]
public static void vaesdeclast(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vaesdeclast instruction.<br/>
		/// <br/>
		/// <c>VAESDECLAST zmm1, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG DF /r</c><br/>
		/// <br/>
		/// <c>AVX512F and VAES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665864)]
public static void vaesdeclast(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vaesdeclast instruction.<br/>
		/// <br/>
		/// <c>VAESDECLAST xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG DF /r</c><br/>
		/// <br/>
		/// <c>AES and AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VAESDECLAST xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG DF /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and VAES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665865)]
public static void vaesdeclast(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vaesdeclast instruction.<br/>
		/// <br/>
		/// <c>VAESDECLAST ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG DF /r</c><br/>
		/// <br/>
		/// <c>VAES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VAESDECLAST ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG DF /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and VAES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665866)]
public static void vaesdeclast(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vaesdeclast instruction.<br/>
		/// <br/>
		/// <c>VAESDECLAST zmm1, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG DF /r</c><br/>
		/// <br/>
		/// <c>AVX512F and VAES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665867)]
public static void vaesdeclast(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vaesenc instruction.<br/>
		/// <br/>
		/// <c>VAESENC xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG DC /r</c><br/>
		/// <br/>
		/// <c>AES and AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VAESENC xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG DC /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and VAES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665868)]
public static void vaesenc(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vaesenc instruction.<br/>
		/// <br/>
		/// <c>VAESENC ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG DC /r</c><br/>
		/// <br/>
		/// <c>VAES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VAESENC ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG DC /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and VAES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665869)]
public static void vaesenc(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vaesenc instruction.<br/>
		/// <br/>
		/// <c>VAESENC zmm1, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG DC /r</c><br/>
		/// <br/>
		/// <c>AVX512F and VAES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665870)]
public static void vaesenc(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vaesenc instruction.<br/>
		/// <br/>
		/// <c>VAESENC xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG DC /r</c><br/>
		/// <br/>
		/// <c>AES and AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VAESENC xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG DC /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and VAES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665871)]
public static void vaesenc(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vaesenc instruction.<br/>
		/// <br/>
		/// <c>VAESENC ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG DC /r</c><br/>
		/// <br/>
		/// <c>VAES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VAESENC ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG DC /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and VAES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665872)]
public static void vaesenc(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vaesenc instruction.<br/>
		/// <br/>
		/// <c>VAESENC zmm1, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG DC /r</c><br/>
		/// <br/>
		/// <c>AVX512F and VAES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665873)]
public static void vaesenc(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vaesenclast instruction.<br/>
		/// <br/>
		/// <c>VAESENCLAST xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG DD /r</c><br/>
		/// <br/>
		/// <c>AES and AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VAESENCLAST xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG DD /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and VAES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665874)]
public static void vaesenclast(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vaesenclast instruction.<br/>
		/// <br/>
		/// <c>VAESENCLAST ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG DD /r</c><br/>
		/// <br/>
		/// <c>VAES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VAESENCLAST ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG DD /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and VAES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665875)]
public static void vaesenclast(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vaesenclast instruction.<br/>
		/// <br/>
		/// <c>VAESENCLAST zmm1, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG DD /r</c><br/>
		/// <br/>
		/// <c>AVX512F and VAES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665876)]
public static void vaesenclast(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vaesenclast instruction.<br/>
		/// <br/>
		/// <c>VAESENCLAST xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG DD /r</c><br/>
		/// <br/>
		/// <c>AES and AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VAESENCLAST xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG DD /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and VAES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665877)]
public static void vaesenclast(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vaesenclast instruction.<br/>
		/// <br/>
		/// <c>VAESENCLAST ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG DD /r</c><br/>
		/// <br/>
		/// <c>VAES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VAESENCLAST ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG DD /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and VAES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665878)]
public static void vaesenclast(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vaesenclast instruction.<br/>
		/// <br/>
		/// <c>VAESENCLAST zmm1, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG DD /r</c><br/>
		/// <br/>
		/// <c>AVX512F and VAES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665879)]
public static void vaesenclast(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vaesimc instruction.<br/>
		/// <br/>
		/// <c>VAESIMC xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG DB /r</c><br/>
		/// <br/>
		/// <c>AES and AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665880)]
public static void vaesimc(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vaesimc instruction.<br/>
		/// <br/>
		/// <c>VAESIMC xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG DB /r</c><br/>
		/// <br/>
		/// <c>AES and AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665881)]
public static void vaesimc(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vaeskeygenassist instruction.<br/>
		/// <br/>
		/// <c>VAESKEYGENASSIST xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG DF /r ib</c><br/>
		/// <br/>
		/// <c>AES and AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665882)]
public static void vaeskeygenassist(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vaeskeygenassist instruction.<br/>
		/// <br/>
		/// <c>VAESKEYGENASSIST xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG DF /r ib</c><br/>
		/// <br/>
		/// <c>AES and AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665883)]
public static void vaeskeygenassist(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vaeskeygenassist instruction.<br/>
		/// <br/>
		/// <c>VAESKEYGENASSIST xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG DF /r ib</c><br/>
		/// <br/>
		/// <c>AES and AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665884)]
public static void vaeskeygenassist(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vaeskeygenassist instruction.<br/>
		/// <br/>
		/// <c>VAESKEYGENASSIST xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG DF /r ib</c><br/>
		/// <br/>
		/// <c>AES and AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665885)]
public static void vaeskeygenassist(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>valignd instruction.<br/>
		/// <br/>
		/// <c>VALIGND xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 03 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665886)]
public static void valignd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>valignd instruction.<br/>
		/// <br/>
		/// <c>VALIGND ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 03 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665887)]
public static void valignd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>valignd instruction.<br/>
		/// <br/>
		/// <c>VALIGND zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 03 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665888)]
public static void valignd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, sbyte imm) {}
		/// <summary>valignd instruction.<br/>
		/// <br/>
		/// <c>VALIGND xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 03 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665889)]
public static void valignd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>valignd instruction.<br/>
		/// <br/>
		/// <c>VALIGND ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 03 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665890)]
public static void valignd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>valignd instruction.<br/>
		/// <br/>
		/// <c>VALIGND zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 03 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665891)]
public static void valignd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>valignd instruction.<br/>
		/// <br/>
		/// <c>VALIGND xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 03 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665892)]
public static void valignd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>valignd instruction.<br/>
		/// <br/>
		/// <c>VALIGND ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 03 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665893)]
public static void valignd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>valignd instruction.<br/>
		/// <br/>
		/// <c>VALIGND zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 03 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665894)]
public static void valignd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, byte imm) {}
		/// <summary>valignd instruction.<br/>
		/// <br/>
		/// <c>VALIGND xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 03 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665895)]
public static void valignd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>valignd instruction.<br/>
		/// <br/>
		/// <c>VALIGND ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 03 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665896)]
public static void valignd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>valignd instruction.<br/>
		/// <br/>
		/// <c>VALIGND zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 03 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665897)]
public static void valignd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>valignq instruction.<br/>
		/// <br/>
		/// <c>VALIGNQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 03 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665898)]
public static void valignq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>valignq instruction.<br/>
		/// <br/>
		/// <c>VALIGNQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 03 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665899)]
public static void valignq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>valignq instruction.<br/>
		/// <br/>
		/// <c>VALIGNQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 03 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665900)]
public static void valignq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, sbyte imm) {}
		/// <summary>valignq instruction.<br/>
		/// <br/>
		/// <c>VALIGNQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 03 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665901)]
public static void valignq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>valignq instruction.<br/>
		/// <br/>
		/// <c>VALIGNQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 03 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665902)]
public static void valignq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>valignq instruction.<br/>
		/// <br/>
		/// <c>VALIGNQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 03 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665903)]
public static void valignq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>valignq instruction.<br/>
		/// <br/>
		/// <c>VALIGNQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 03 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665904)]
public static void valignq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>valignq instruction.<br/>
		/// <br/>
		/// <c>VALIGNQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 03 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665905)]
public static void valignq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>valignq instruction.<br/>
		/// <br/>
		/// <c>VALIGNQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 03 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665906)]
public static void valignq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, byte imm) {}
		/// <summary>valignq instruction.<br/>
		/// <br/>
		/// <c>VALIGNQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 03 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665907)]
public static void valignq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>valignq instruction.<br/>
		/// <br/>
		/// <c>VALIGNQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 03 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665908)]
public static void valignq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>valignq instruction.<br/>
		/// <br/>
		/// <c>VALIGNQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 03 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665909)]
public static void valignq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vandnpd instruction.<br/>
		/// <br/>
		/// <c>VANDNPD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 55 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VANDNPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 55 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665910)]
public static void vandnpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vandnpd instruction.<br/>
		/// <br/>
		/// <c>VANDNPD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 55 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VANDNPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 55 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665911)]
public static void vandnpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vandnpd instruction.<br/>
		/// <br/>
		/// <c>VANDNPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 55 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665912)]
public static void vandnpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vandnpd instruction.<br/>
		/// <br/>
		/// <c>VANDNPD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 55 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VANDNPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 55 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665913)]
public static void vandnpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vandnpd instruction.<br/>
		/// <br/>
		/// <c>VANDNPD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 55 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VANDNPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 55 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665914)]
public static void vandnpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vandnpd instruction.<br/>
		/// <br/>
		/// <c>VANDNPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 55 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665915)]
public static void vandnpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vandnps instruction.<br/>
		/// <br/>
		/// <c>VANDNPS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 55 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VANDNPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 55 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665916)]
public static void vandnps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vandnps instruction.<br/>
		/// <br/>
		/// <c>VANDNPS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 55 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VANDNPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 55 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665917)]
public static void vandnps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vandnps instruction.<br/>
		/// <br/>
		/// <c>VANDNPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 55 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665918)]
public static void vandnps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vandnps instruction.<br/>
		/// <br/>
		/// <c>VANDNPS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 55 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VANDNPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 55 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665919)]
public static void vandnps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vandnps instruction.<br/>
		/// <br/>
		/// <c>VANDNPS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 55 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VANDNPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 55 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665920)]
public static void vandnps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vandnps instruction.<br/>
		/// <br/>
		/// <c>VANDNPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 55 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665921)]
public static void vandnps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vandpd instruction.<br/>
		/// <br/>
		/// <c>VANDPD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 54 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VANDPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 54 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665922)]
public static void vandpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vandpd instruction.<br/>
		/// <br/>
		/// <c>VANDPD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 54 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VANDPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 54 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665923)]
public static void vandpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vandpd instruction.<br/>
		/// <br/>
		/// <c>VANDPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 54 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665924)]
public static void vandpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vandpd instruction.<br/>
		/// <br/>
		/// <c>VANDPD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 54 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VANDPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 54 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665925)]
public static void vandpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vandpd instruction.<br/>
		/// <br/>
		/// <c>VANDPD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 54 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VANDPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 54 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665926)]
public static void vandpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vandpd instruction.<br/>
		/// <br/>
		/// <c>VANDPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 54 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665927)]
public static void vandpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vandps instruction.<br/>
		/// <br/>
		/// <c>VANDPS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 54 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VANDPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 54 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665928)]
public static void vandps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vandps instruction.<br/>
		/// <br/>
		/// <c>VANDPS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 54 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VANDPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 54 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665929)]
public static void vandps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vandps instruction.<br/>
		/// <br/>
		/// <c>VANDPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 54 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665930)]
public static void vandps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vandps instruction.<br/>
		/// <br/>
		/// <c>VANDPS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 54 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VANDPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 54 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665931)]
public static void vandps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vandps instruction.<br/>
		/// <br/>
		/// <c>VANDPS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 54 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VANDPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 54 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665932)]
public static void vandps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vandps instruction.<br/>
		/// <br/>
		/// <c>VANDPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 54 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665933)]
public static void vandps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vblendmpd instruction.<br/>
		/// <br/>
		/// <c>VBLENDMPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 65 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665934)]
public static void vblendmpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vblendmpd instruction.<br/>
		/// <br/>
		/// <c>VBLENDMPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 65 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665935)]
public static void vblendmpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vblendmpd instruction.<br/>
		/// <br/>
		/// <c>VBLENDMPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 65 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665936)]
public static void vblendmpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vblendmpd instruction.<br/>
		/// <br/>
		/// <c>VBLENDMPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 65 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665937)]
public static void vblendmpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vblendmpd instruction.<br/>
		/// <br/>
		/// <c>VBLENDMPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 65 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665938)]
public static void vblendmpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vblendmpd instruction.<br/>
		/// <br/>
		/// <c>VBLENDMPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 65 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665939)]
public static void vblendmpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vblendmps instruction.<br/>
		/// <br/>
		/// <c>VBLENDMPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 65 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665940)]
public static void vblendmps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vblendmps instruction.<br/>
		/// <br/>
		/// <c>VBLENDMPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 65 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665941)]
public static void vblendmps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vblendmps instruction.<br/>
		/// <br/>
		/// <c>VBLENDMPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 65 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665942)]
public static void vblendmps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vblendmps instruction.<br/>
		/// <br/>
		/// <c>VBLENDMPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 65 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665943)]
public static void vblendmps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vblendmps instruction.<br/>
		/// <br/>
		/// <c>VBLENDMPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 65 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665944)]
public static void vblendmps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vblendmps instruction.<br/>
		/// <br/>
		/// <c>VBLENDMPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 65 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665945)]
public static void vblendmps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vblendpd instruction.<br/>
		/// <br/>
		/// <c>VBLENDPD xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 0D /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665946)]
public static void vblendpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vblendpd instruction.<br/>
		/// <br/>
		/// <c>VBLENDPD ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.WIG 0D /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665947)]
public static void vblendpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vblendpd instruction.<br/>
		/// <br/>
		/// <c>VBLENDPD xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 0D /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665948)]
public static void vblendpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vblendpd instruction.<br/>
		/// <br/>
		/// <c>VBLENDPD ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.WIG 0D /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665949)]
public static void vblendpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vblendpd instruction.<br/>
		/// <br/>
		/// <c>VBLENDPD xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 0D /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665950)]
public static void vblendpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vblendpd instruction.<br/>
		/// <br/>
		/// <c>VBLENDPD ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.WIG 0D /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665951)]
public static void vblendpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vblendpd instruction.<br/>
		/// <br/>
		/// <c>VBLENDPD xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 0D /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665952)]
public static void vblendpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vblendpd instruction.<br/>
		/// <br/>
		/// <c>VBLENDPD ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.WIG 0D /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665953)]
public static void vblendpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vblendps instruction.<br/>
		/// <br/>
		/// <c>VBLENDPS xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 0C /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665954)]
public static void vblendps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vblendps instruction.<br/>
		/// <br/>
		/// <c>VBLENDPS ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.WIG 0C /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665955)]
public static void vblendps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vblendps instruction.<br/>
		/// <br/>
		/// <c>VBLENDPS xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 0C /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665956)]
public static void vblendps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vblendps instruction.<br/>
		/// <br/>
		/// <c>VBLENDPS ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.WIG 0C /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665957)]
public static void vblendps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vblendps instruction.<br/>
		/// <br/>
		/// <c>VBLENDPS xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 0C /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665958)]
public static void vblendps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vblendps instruction.<br/>
		/// <br/>
		/// <c>VBLENDPS ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.WIG 0C /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665959)]
public static void vblendps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vblendps instruction.<br/>
		/// <br/>
		/// <c>VBLENDPS xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 0C /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665960)]
public static void vblendps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vblendps instruction.<br/>
		/// <br/>
		/// <c>VBLENDPS ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.WIG 0C /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665961)]
public static void vblendps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vblendvpd instruction.<br/>
		/// <br/>
		/// <c>VBLENDVPD xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 4B /r /is4</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665962)]
public static void vblendvpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerRegisterXMM src3) {}
		/// <summary>vblendvpd instruction.<br/>
		/// <br/>
		/// <c>VBLENDVPD xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 4B /r /is4</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665963)]
public static void vblendvpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, AssemblerRegisterXMM src3) {}
		/// <summary>vblendvpd instruction.<br/>
		/// <br/>
		/// <c>VBLENDVPD ymm1, ymm2, ymm3/m256, ymm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 4B /r /is4</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665964)]
public static void vblendvpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, AssemblerRegisterYMM src3) {}
		/// <summary>vblendvpd instruction.<br/>
		/// <br/>
		/// <c>VBLENDVPD ymm1, ymm2, ymm3/m256, ymm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 4B /r /is4</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665965)]
public static void vblendvpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, AssemblerRegisterYMM src3) {}
		/// <summary>vblendvps instruction.<br/>
		/// <br/>
		/// <c>VBLENDVPS xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 4A /r /is4</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665966)]
public static void vblendvps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerRegisterXMM src3) {}
		/// <summary>vblendvps instruction.<br/>
		/// <br/>
		/// <c>VBLENDVPS xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 4A /r /is4</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665967)]
public static void vblendvps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, AssemblerRegisterXMM src3) {}
		/// <summary>vblendvps instruction.<br/>
		/// <br/>
		/// <c>VBLENDVPS ymm1, ymm2, ymm3/m256, ymm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 4A /r /is4</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665968)]
public static void vblendvps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, AssemblerRegisterYMM src3) {}
		/// <summary>vblendvps instruction.<br/>
		/// <br/>
		/// <c>VBLENDVPS ymm1, ymm2, ymm3/m256, ymm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 4A /r /is4</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665969)]
public static void vblendvps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, AssemblerRegisterYMM src3) {}
		/// <summary>vbroadcastf128 instruction.<br/>
		/// <br/>
		/// <c>VBROADCASTF128 ymm1, m128</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 1A /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665970)]
public static void vbroadcastf128(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vbroadcastf32x2 instruction.<br/>
		/// <br/>
		/// <c>VBROADCASTF32X2 ymm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 19 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665971)]
public static void vbroadcastf32x2(AssemblerRegisterYMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vbroadcastf32x2 instruction.<br/>
		/// <br/>
		/// <c>VBROADCASTF32X2 zmm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 19 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665972)]
public static void vbroadcastf32x2(AssemblerRegisterZMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vbroadcastf32x2 instruction.<br/>
		/// <br/>
		/// <c>VBROADCASTF32X2 ymm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 19 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665973)]
public static void vbroadcastf32x2(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vbroadcastf32x2 instruction.<br/>
		/// <br/>
		/// <c>VBROADCASTF32X2 zmm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 19 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665974)]
public static void vbroadcastf32x2(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vbroadcastf32x4 instruction.<br/>
		/// <br/>
		/// <c>VBROADCASTF32X4 ymm1 {k1}{z}, m128</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 1A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665975)]
public static void vbroadcastf32x4(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vbroadcastf32x4 instruction.<br/>
		/// <br/>
		/// <c>VBROADCASTF32X4 zmm1 {k1}{z}, m128</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 1A /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665976)]
public static void vbroadcastf32x4(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vbroadcastf32x8 instruction.<br/>
		/// <br/>
		/// <c>VBROADCASTF32X8 zmm1 {k1}{z}, m256</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 1B /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665977)]
public static void vbroadcastf32x8(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vbroadcastf64x2 instruction.<br/>
		/// <br/>
		/// <c>VBROADCASTF64X2 ymm1 {k1}{z}, m128</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 1A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665978)]
public static void vbroadcastf64x2(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vbroadcastf64x2 instruction.<br/>
		/// <br/>
		/// <c>VBROADCASTF64X2 zmm1 {k1}{z}, m128</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 1A /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665979)]
public static void vbroadcastf64x2(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vbroadcastf64x4 instruction.<br/>
		/// <br/>
		/// <c>VBROADCASTF64X4 zmm1 {k1}{z}, m256</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 1B /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665980)]
public static void vbroadcastf64x4(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vbroadcasti128 instruction.<br/>
		/// <br/>
		/// <c>VBROADCASTI128 ymm1, m128</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 5A /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665981)]
public static void vbroadcasti128(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vbroadcasti32x2 instruction.<br/>
		/// <br/>
		/// <c>VBROADCASTI32X2 xmm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 59 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665982)]
public static void vbroadcasti32x2(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vbroadcasti32x2 instruction.<br/>
		/// <br/>
		/// <c>VBROADCASTI32X2 ymm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 59 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665983)]
public static void vbroadcasti32x2(AssemblerRegisterYMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vbroadcasti32x2 instruction.<br/>
		/// <br/>
		/// <c>VBROADCASTI32X2 zmm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 59 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665984)]
public static void vbroadcasti32x2(AssemblerRegisterZMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vbroadcasti32x2 instruction.<br/>
		/// <br/>
		/// <c>VBROADCASTI32X2 xmm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 59 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665985)]
public static void vbroadcasti32x2(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vbroadcasti32x2 instruction.<br/>
		/// <br/>
		/// <c>VBROADCASTI32X2 ymm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 59 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665986)]
public static void vbroadcasti32x2(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vbroadcasti32x2 instruction.<br/>
		/// <br/>
		/// <c>VBROADCASTI32X2 zmm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 59 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665987)]
public static void vbroadcasti32x2(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vbroadcasti32x4 instruction.<br/>
		/// <br/>
		/// <c>VBROADCASTI32X4 ymm1 {k1}{z}, m128</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 5A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665988)]
public static void vbroadcasti32x4(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vbroadcasti32x4 instruction.<br/>
		/// <br/>
		/// <c>VBROADCASTI32X4 zmm1 {k1}{z}, m128</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 5A /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665989)]
public static void vbroadcasti32x4(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vbroadcasti32x8 instruction.<br/>
		/// <br/>
		/// <c>VBROADCASTI32X8 zmm1 {k1}{z}, m256</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 5B /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665990)]
public static void vbroadcasti32x8(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vbroadcasti64x2 instruction.<br/>
		/// <br/>
		/// <c>VBROADCASTI64X2 ymm1 {k1}{z}, m128</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 5A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665991)]
public static void vbroadcasti64x2(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vbroadcasti64x2 instruction.<br/>
		/// <br/>
		/// <c>VBROADCASTI64X2 zmm1 {k1}{z}, m128</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 5A /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665992)]
public static void vbroadcasti64x2(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vbroadcasti64x4 instruction.<br/>
		/// <br/>
		/// <c>VBROADCASTI64X4 zmm1 {k1}{z}, m256</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 5B /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665993)]
public static void vbroadcasti64x4(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vbroadcastsd instruction.<br/>
		/// <br/>
		/// <c>VBROADCASTSD ymm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 19 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VBROADCASTSD ymm1, xmm2</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 19 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665994)]
public static void vbroadcastsd(AssemblerRegisterYMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vbroadcastsd instruction.<br/>
		/// <br/>
		/// <c>VBROADCASTSD zmm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 19 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665995)]
public static void vbroadcastsd(AssemblerRegisterZMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vbroadcastsd instruction.<br/>
		/// <br/>
		/// <c>VBROADCASTSD ymm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 19 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VBROADCASTSD ymm1, m64</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 19 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665996)]
public static void vbroadcastsd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vbroadcastsd instruction.<br/>
		/// <br/>
		/// <c>VBROADCASTSD zmm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 19 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665997)]
public static void vbroadcastsd(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vbroadcastss instruction.<br/>
		/// <br/>
		/// <c>VBROADCASTSS xmm1 {k1}{z}, xmm2/m32</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 18 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VBROADCASTSS xmm1, xmm2</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 18 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665998)]
public static void vbroadcastss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vbroadcastss instruction.<br/>
		/// <br/>
		/// <c>VBROADCASTSS ymm1 {k1}{z}, xmm2/m32</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 18 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VBROADCASTSS ymm1, xmm2</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 18 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100665999)]
public static void vbroadcastss(AssemblerRegisterYMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vbroadcastss instruction.<br/>
		/// <br/>
		/// <c>VBROADCASTSS zmm1 {k1}{z}, xmm2/m32</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 18 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666000)]
public static void vbroadcastss(AssemblerRegisterZMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vbroadcastss instruction.<br/>
		/// <br/>
		/// <c>VBROADCASTSS xmm1 {k1}{z}, xmm2/m32</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 18 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VBROADCASTSS xmm1, m32</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 18 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666001)]
public static void vbroadcastss(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vbroadcastss instruction.<br/>
		/// <br/>
		/// <c>VBROADCASTSS ymm1 {k1}{z}, xmm2/m32</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 18 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VBROADCASTSS ymm1, m32</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 18 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666002)]
public static void vbroadcastss(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vbroadcastss instruction.<br/>
		/// <br/>
		/// <c>VBROADCASTSS zmm1 {k1}{z}, xmm2/m32</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 18 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666003)]
public static void vbroadcastss(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcmpeq_ospd instruction.</summary>
[MethodToken(100666004)]
public static void vcmpeq_ospd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpeq_ospd instruction.</summary>
[MethodToken(100666005)]
public static void vcmpeq_ospd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpeq_ospd instruction.</summary>
[MethodToken(100666006)]
public static void vcmpeq_ospd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpeq_ospd instruction.</summary>
[MethodToken(100666007)]
public static void vcmpeq_ospd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpeq_ospd instruction.</summary>
[MethodToken(100666008)]
public static void vcmpeq_ospd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpeq_ospd instruction.</summary>
[MethodToken(100666009)]
public static void vcmpeq_ospd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeq_ospd instruction.</summary>
[MethodToken(100666010)]
public static void vcmpeq_ospd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeq_ospd instruction.</summary>
[MethodToken(100666011)]
public static void vcmpeq_ospd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeq_ospd instruction.</summary>
[MethodToken(100666012)]
public static void vcmpeq_ospd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeq_ospd instruction.</summary>
[MethodToken(100666013)]
public static void vcmpeq_ospd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeq_osps instruction.</summary>
[MethodToken(100666014)]
public static void vcmpeq_osps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpeq_osps instruction.</summary>
[MethodToken(100666015)]
public static void vcmpeq_osps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpeq_osps instruction.</summary>
[MethodToken(100666016)]
public static void vcmpeq_osps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpeq_osps instruction.</summary>
[MethodToken(100666017)]
public static void vcmpeq_osps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpeq_osps instruction.</summary>
[MethodToken(100666018)]
public static void vcmpeq_osps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpeq_osps instruction.</summary>
[MethodToken(100666019)]
public static void vcmpeq_osps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeq_osps instruction.</summary>
[MethodToken(100666020)]
public static void vcmpeq_osps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeq_osps instruction.</summary>
[MethodToken(100666021)]
public static void vcmpeq_osps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeq_osps instruction.</summary>
[MethodToken(100666022)]
public static void vcmpeq_osps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeq_osps instruction.</summary>
[MethodToken(100666023)]
public static void vcmpeq_osps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeq_ossd instruction.</summary>
[MethodToken(100666024)]
public static void vcmpeq_ossd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpeq_ossd instruction.</summary>
[MethodToken(100666025)]
public static void vcmpeq_ossd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpeq_ossd instruction.</summary>
[MethodToken(100666026)]
public static void vcmpeq_ossd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeq_ossd instruction.</summary>
[MethodToken(100666027)]
public static void vcmpeq_ossd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeq_osss instruction.</summary>
[MethodToken(100666028)]
public static void vcmpeq_osss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpeq_osss instruction.</summary>
[MethodToken(100666029)]
public static void vcmpeq_osss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpeq_osss instruction.</summary>
[MethodToken(100666030)]
public static void vcmpeq_osss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeq_osss instruction.</summary>
[MethodToken(100666031)]
public static void vcmpeq_osss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeq_uqpd instruction.</summary>
[MethodToken(100666032)]
public static void vcmpeq_uqpd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpeq_uqpd instruction.</summary>
[MethodToken(100666033)]
public static void vcmpeq_uqpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpeq_uqpd instruction.</summary>
[MethodToken(100666034)]
public static void vcmpeq_uqpd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpeq_uqpd instruction.</summary>
[MethodToken(100666035)]
public static void vcmpeq_uqpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpeq_uqpd instruction.</summary>
[MethodToken(100666036)]
public static void vcmpeq_uqpd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpeq_uqpd instruction.</summary>
[MethodToken(100666037)]
public static void vcmpeq_uqpd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeq_uqpd instruction.</summary>
[MethodToken(100666038)]
public static void vcmpeq_uqpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeq_uqpd instruction.</summary>
[MethodToken(100666039)]
public static void vcmpeq_uqpd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeq_uqpd instruction.</summary>
[MethodToken(100666040)]
public static void vcmpeq_uqpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeq_uqpd instruction.</summary>
[MethodToken(100666041)]
public static void vcmpeq_uqpd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeq_uqps instruction.</summary>
[MethodToken(100666042)]
public static void vcmpeq_uqps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpeq_uqps instruction.</summary>
[MethodToken(100666043)]
public static void vcmpeq_uqps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpeq_uqps instruction.</summary>
[MethodToken(100666044)]
public static void vcmpeq_uqps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpeq_uqps instruction.</summary>
[MethodToken(100666045)]
public static void vcmpeq_uqps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpeq_uqps instruction.</summary>
[MethodToken(100666046)]
public static void vcmpeq_uqps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpeq_uqps instruction.</summary>
[MethodToken(100666047)]
public static void vcmpeq_uqps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeq_uqps instruction.</summary>
[MethodToken(100666048)]
public static void vcmpeq_uqps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeq_uqps instruction.</summary>
[MethodToken(100666049)]
public static void vcmpeq_uqps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeq_uqps instruction.</summary>
[MethodToken(100666050)]
public static void vcmpeq_uqps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeq_uqps instruction.</summary>
[MethodToken(100666051)]
public static void vcmpeq_uqps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeq_uqsd instruction.</summary>
[MethodToken(100666052)]
public static void vcmpeq_uqsd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpeq_uqsd instruction.</summary>
[MethodToken(100666053)]
public static void vcmpeq_uqsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpeq_uqsd instruction.</summary>
[MethodToken(100666054)]
public static void vcmpeq_uqsd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeq_uqsd instruction.</summary>
[MethodToken(100666055)]
public static void vcmpeq_uqsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeq_uqss instruction.</summary>
[MethodToken(100666056)]
public static void vcmpeq_uqss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpeq_uqss instruction.</summary>
[MethodToken(100666057)]
public static void vcmpeq_uqss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpeq_uqss instruction.</summary>
[MethodToken(100666058)]
public static void vcmpeq_uqss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeq_uqss instruction.</summary>
[MethodToken(100666059)]
public static void vcmpeq_uqss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeq_uspd instruction.</summary>
[MethodToken(100666060)]
public static void vcmpeq_uspd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpeq_uspd instruction.</summary>
[MethodToken(100666061)]
public static void vcmpeq_uspd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpeq_uspd instruction.</summary>
[MethodToken(100666062)]
public static void vcmpeq_uspd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpeq_uspd instruction.</summary>
[MethodToken(100666063)]
public static void vcmpeq_uspd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpeq_uspd instruction.</summary>
[MethodToken(100666064)]
public static void vcmpeq_uspd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpeq_uspd instruction.</summary>
[MethodToken(100666065)]
public static void vcmpeq_uspd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeq_uspd instruction.</summary>
[MethodToken(100666066)]
public static void vcmpeq_uspd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeq_uspd instruction.</summary>
[MethodToken(100666067)]
public static void vcmpeq_uspd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeq_uspd instruction.</summary>
[MethodToken(100666068)]
public static void vcmpeq_uspd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeq_uspd instruction.</summary>
[MethodToken(100666069)]
public static void vcmpeq_uspd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeq_usps instruction.</summary>
[MethodToken(100666070)]
public static void vcmpeq_usps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpeq_usps instruction.</summary>
[MethodToken(100666071)]
public static void vcmpeq_usps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpeq_usps instruction.</summary>
[MethodToken(100666072)]
public static void vcmpeq_usps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpeq_usps instruction.</summary>
[MethodToken(100666073)]
public static void vcmpeq_usps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpeq_usps instruction.</summary>
[MethodToken(100666074)]
public static void vcmpeq_usps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpeq_usps instruction.</summary>
[MethodToken(100666075)]
public static void vcmpeq_usps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeq_usps instruction.</summary>
[MethodToken(100666076)]
public static void vcmpeq_usps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeq_usps instruction.</summary>
[MethodToken(100666077)]
public static void vcmpeq_usps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeq_usps instruction.</summary>
[MethodToken(100666078)]
public static void vcmpeq_usps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeq_usps instruction.</summary>
[MethodToken(100666079)]
public static void vcmpeq_usps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeq_ussd instruction.</summary>
[MethodToken(100666080)]
public static void vcmpeq_ussd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpeq_ussd instruction.</summary>
[MethodToken(100666081)]
public static void vcmpeq_ussd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpeq_ussd instruction.</summary>
[MethodToken(100666082)]
public static void vcmpeq_ussd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeq_ussd instruction.</summary>
[MethodToken(100666083)]
public static void vcmpeq_ussd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeq_usss instruction.</summary>
[MethodToken(100666084)]
public static void vcmpeq_usss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpeq_usss instruction.</summary>
[MethodToken(100666085)]
public static void vcmpeq_usss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpeq_usss instruction.</summary>
[MethodToken(100666086)]
public static void vcmpeq_usss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeq_usss instruction.</summary>
[MethodToken(100666087)]
public static void vcmpeq_usss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeqpd instruction.</summary>
[MethodToken(100666088)]
public static void vcmpeqpd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpeqpd instruction.</summary>
[MethodToken(100666089)]
public static void vcmpeqpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpeqpd instruction.</summary>
[MethodToken(100666090)]
public static void vcmpeqpd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpeqpd instruction.</summary>
[MethodToken(100666091)]
public static void vcmpeqpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpeqpd instruction.</summary>
[MethodToken(100666092)]
public static void vcmpeqpd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpeqpd instruction.</summary>
[MethodToken(100666093)]
public static void vcmpeqpd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeqpd instruction.</summary>
[MethodToken(100666094)]
public static void vcmpeqpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeqpd instruction.</summary>
[MethodToken(100666095)]
public static void vcmpeqpd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeqpd instruction.</summary>
[MethodToken(100666096)]
public static void vcmpeqpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeqpd instruction.</summary>
[MethodToken(100666097)]
public static void vcmpeqpd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeqps instruction.</summary>
[MethodToken(100666098)]
public static void vcmpeqps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpeqps instruction.</summary>
[MethodToken(100666099)]
public static void vcmpeqps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpeqps instruction.</summary>
[MethodToken(100666100)]
public static void vcmpeqps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpeqps instruction.</summary>
[MethodToken(100666101)]
public static void vcmpeqps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpeqps instruction.</summary>
[MethodToken(100666102)]
public static void vcmpeqps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpeqps instruction.</summary>
[MethodToken(100666103)]
public static void vcmpeqps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeqps instruction.</summary>
[MethodToken(100666104)]
public static void vcmpeqps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeqps instruction.</summary>
[MethodToken(100666105)]
public static void vcmpeqps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeqps instruction.</summary>
[MethodToken(100666106)]
public static void vcmpeqps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeqps instruction.</summary>
[MethodToken(100666107)]
public static void vcmpeqps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeqsd instruction.</summary>
[MethodToken(100666108)]
public static void vcmpeqsd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpeqsd instruction.</summary>
[MethodToken(100666109)]
public static void vcmpeqsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpeqsd instruction.</summary>
[MethodToken(100666110)]
public static void vcmpeqsd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeqsd instruction.</summary>
[MethodToken(100666111)]
public static void vcmpeqsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeqss instruction.</summary>
[MethodToken(100666112)]
public static void vcmpeqss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpeqss instruction.</summary>
[MethodToken(100666113)]
public static void vcmpeqss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpeqss instruction.</summary>
[MethodToken(100666114)]
public static void vcmpeqss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpeqss instruction.</summary>
[MethodToken(100666115)]
public static void vcmpeqss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpfalse_ospd instruction.</summary>
[MethodToken(100666116)]
public static void vcmpfalse_ospd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpfalse_ospd instruction.</summary>
[MethodToken(100666117)]
public static void vcmpfalse_ospd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpfalse_ospd instruction.</summary>
[MethodToken(100666118)]
public static void vcmpfalse_ospd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpfalse_ospd instruction.</summary>
[MethodToken(100666119)]
public static void vcmpfalse_ospd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpfalse_ospd instruction.</summary>
[MethodToken(100666120)]
public static void vcmpfalse_ospd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpfalse_ospd instruction.</summary>
[MethodToken(100666121)]
public static void vcmpfalse_ospd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpfalse_ospd instruction.</summary>
[MethodToken(100666122)]
public static void vcmpfalse_ospd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpfalse_ospd instruction.</summary>
[MethodToken(100666123)]
public static void vcmpfalse_ospd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpfalse_ospd instruction.</summary>
[MethodToken(100666124)]
public static void vcmpfalse_ospd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpfalse_ospd instruction.</summary>
[MethodToken(100666125)]
public static void vcmpfalse_ospd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpfalse_osps instruction.</summary>
[MethodToken(100666126)]
public static void vcmpfalse_osps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpfalse_osps instruction.</summary>
[MethodToken(100666127)]
public static void vcmpfalse_osps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpfalse_osps instruction.</summary>
[MethodToken(100666128)]
public static void vcmpfalse_osps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpfalse_osps instruction.</summary>
[MethodToken(100666129)]
public static void vcmpfalse_osps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpfalse_osps instruction.</summary>
[MethodToken(100666130)]
public static void vcmpfalse_osps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpfalse_osps instruction.</summary>
[MethodToken(100666131)]
public static void vcmpfalse_osps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpfalse_osps instruction.</summary>
[MethodToken(100666132)]
public static void vcmpfalse_osps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpfalse_osps instruction.</summary>
[MethodToken(100666133)]
public static void vcmpfalse_osps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpfalse_osps instruction.</summary>
[MethodToken(100666134)]
public static void vcmpfalse_osps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpfalse_osps instruction.</summary>
[MethodToken(100666135)]
public static void vcmpfalse_osps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpfalse_ossd instruction.</summary>
[MethodToken(100666136)]
public static void vcmpfalse_ossd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpfalse_ossd instruction.</summary>
[MethodToken(100666137)]
public static void vcmpfalse_ossd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpfalse_ossd instruction.</summary>
[MethodToken(100666138)]
public static void vcmpfalse_ossd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpfalse_ossd instruction.</summary>
[MethodToken(100666139)]
public static void vcmpfalse_ossd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpfalse_osss instruction.</summary>
[MethodToken(100666140)]
public static void vcmpfalse_osss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpfalse_osss instruction.</summary>
[MethodToken(100666141)]
public static void vcmpfalse_osss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpfalse_osss instruction.</summary>
[MethodToken(100666142)]
public static void vcmpfalse_osss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpfalse_osss instruction.</summary>
[MethodToken(100666143)]
public static void vcmpfalse_osss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpfalsepd instruction.</summary>
[MethodToken(100666144)]
public static void vcmpfalsepd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpfalsepd instruction.</summary>
[MethodToken(100666145)]
public static void vcmpfalsepd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpfalsepd instruction.</summary>
[MethodToken(100666146)]
public static void vcmpfalsepd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpfalsepd instruction.</summary>
[MethodToken(100666147)]
public static void vcmpfalsepd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpfalsepd instruction.</summary>
[MethodToken(100666148)]
public static void vcmpfalsepd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpfalsepd instruction.</summary>
[MethodToken(100666149)]
public static void vcmpfalsepd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpfalsepd instruction.</summary>
[MethodToken(100666150)]
public static void vcmpfalsepd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpfalsepd instruction.</summary>
[MethodToken(100666151)]
public static void vcmpfalsepd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpfalsepd instruction.</summary>
[MethodToken(100666152)]
public static void vcmpfalsepd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpfalsepd instruction.</summary>
[MethodToken(100666153)]
public static void vcmpfalsepd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpfalseps instruction.</summary>
[MethodToken(100666154)]
public static void vcmpfalseps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpfalseps instruction.</summary>
[MethodToken(100666155)]
public static void vcmpfalseps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpfalseps instruction.</summary>
[MethodToken(100666156)]
public static void vcmpfalseps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpfalseps instruction.</summary>
[MethodToken(100666157)]
public static void vcmpfalseps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpfalseps instruction.</summary>
[MethodToken(100666158)]
public static void vcmpfalseps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpfalseps instruction.</summary>
[MethodToken(100666159)]
public static void vcmpfalseps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpfalseps instruction.</summary>
[MethodToken(100666160)]
public static void vcmpfalseps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpfalseps instruction.</summary>
[MethodToken(100666161)]
public static void vcmpfalseps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpfalseps instruction.</summary>
[MethodToken(100666162)]
public static void vcmpfalseps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpfalseps instruction.</summary>
[MethodToken(100666163)]
public static void vcmpfalseps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpfalsesd instruction.</summary>
[MethodToken(100666164)]
public static void vcmpfalsesd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpfalsesd instruction.</summary>
[MethodToken(100666165)]
public static void vcmpfalsesd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpfalsesd instruction.</summary>
[MethodToken(100666166)]
public static void vcmpfalsesd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpfalsesd instruction.</summary>
[MethodToken(100666167)]
public static void vcmpfalsesd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpfalsess instruction.</summary>
[MethodToken(100666168)]
public static void vcmpfalsess(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpfalsess instruction.</summary>
[MethodToken(100666169)]
public static void vcmpfalsess(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpfalsess instruction.</summary>
[MethodToken(100666170)]
public static void vcmpfalsess(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpfalsess instruction.</summary>
[MethodToken(100666171)]
public static void vcmpfalsess(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpge_oqpd instruction.</summary>
[MethodToken(100666172)]
public static void vcmpge_oqpd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpge_oqpd instruction.</summary>
[MethodToken(100666173)]
public static void vcmpge_oqpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpge_oqpd instruction.</summary>
[MethodToken(100666174)]
public static void vcmpge_oqpd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpge_oqpd instruction.</summary>
[MethodToken(100666175)]
public static void vcmpge_oqpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpge_oqpd instruction.</summary>
[MethodToken(100666176)]
public static void vcmpge_oqpd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpge_oqpd instruction.</summary>
[MethodToken(100666177)]
public static void vcmpge_oqpd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpge_oqpd instruction.</summary>
[MethodToken(100666178)]
public static void vcmpge_oqpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpge_oqpd instruction.</summary>
[MethodToken(100666179)]
public static void vcmpge_oqpd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpge_oqpd instruction.</summary>
[MethodToken(100666180)]
public static void vcmpge_oqpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpge_oqpd instruction.</summary>
[MethodToken(100666181)]
public static void vcmpge_oqpd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpge_oqps instruction.</summary>
[MethodToken(100666182)]
public static void vcmpge_oqps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpge_oqps instruction.</summary>
[MethodToken(100666183)]
public static void vcmpge_oqps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpge_oqps instruction.</summary>
[MethodToken(100666184)]
public static void vcmpge_oqps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpge_oqps instruction.</summary>
[MethodToken(100666185)]
public static void vcmpge_oqps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpge_oqps instruction.</summary>
[MethodToken(100666186)]
public static void vcmpge_oqps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpge_oqps instruction.</summary>
[MethodToken(100666187)]
public static void vcmpge_oqps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpge_oqps instruction.</summary>
[MethodToken(100666188)]
public static void vcmpge_oqps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpge_oqps instruction.</summary>
[MethodToken(100666189)]
public static void vcmpge_oqps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpge_oqps instruction.</summary>
[MethodToken(100666190)]
public static void vcmpge_oqps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpge_oqps instruction.</summary>
[MethodToken(100666191)]
public static void vcmpge_oqps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpge_oqsd instruction.</summary>
[MethodToken(100666192)]
public static void vcmpge_oqsd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpge_oqsd instruction.</summary>
[MethodToken(100666193)]
public static void vcmpge_oqsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpge_oqsd instruction.</summary>
[MethodToken(100666194)]
public static void vcmpge_oqsd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpge_oqsd instruction.</summary>
[MethodToken(100666195)]
public static void vcmpge_oqsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpge_oqss instruction.</summary>
[MethodToken(100666196)]
public static void vcmpge_oqss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpge_oqss instruction.</summary>
[MethodToken(100666197)]
public static void vcmpge_oqss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpge_oqss instruction.</summary>
[MethodToken(100666198)]
public static void vcmpge_oqss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpge_oqss instruction.</summary>
[MethodToken(100666199)]
public static void vcmpge_oqss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgepd instruction.</summary>
[MethodToken(100666200)]
public static void vcmpgepd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpgepd instruction.</summary>
[MethodToken(100666201)]
public static void vcmpgepd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpgepd instruction.</summary>
[MethodToken(100666202)]
public static void vcmpgepd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpgepd instruction.</summary>
[MethodToken(100666203)]
public static void vcmpgepd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpgepd instruction.</summary>
[MethodToken(100666204)]
public static void vcmpgepd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpgepd instruction.</summary>
[MethodToken(100666205)]
public static void vcmpgepd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgepd instruction.</summary>
[MethodToken(100666206)]
public static void vcmpgepd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgepd instruction.</summary>
[MethodToken(100666207)]
public static void vcmpgepd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgepd instruction.</summary>
[MethodToken(100666208)]
public static void vcmpgepd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgepd instruction.</summary>
[MethodToken(100666209)]
public static void vcmpgepd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgeps instruction.</summary>
[MethodToken(100666210)]
public static void vcmpgeps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpgeps instruction.</summary>
[MethodToken(100666211)]
public static void vcmpgeps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpgeps instruction.</summary>
[MethodToken(100666212)]
public static void vcmpgeps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpgeps instruction.</summary>
[MethodToken(100666213)]
public static void vcmpgeps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpgeps instruction.</summary>
[MethodToken(100666214)]
public static void vcmpgeps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpgeps instruction.</summary>
[MethodToken(100666215)]
public static void vcmpgeps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgeps instruction.</summary>
[MethodToken(100666216)]
public static void vcmpgeps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgeps instruction.</summary>
[MethodToken(100666217)]
public static void vcmpgeps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgeps instruction.</summary>
[MethodToken(100666218)]
public static void vcmpgeps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgeps instruction.</summary>
[MethodToken(100666219)]
public static void vcmpgeps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgesd instruction.</summary>
[MethodToken(100666220)]
public static void vcmpgesd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpgesd instruction.</summary>
[MethodToken(100666221)]
public static void vcmpgesd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpgesd instruction.</summary>
[MethodToken(100666222)]
public static void vcmpgesd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgesd instruction.</summary>
[MethodToken(100666223)]
public static void vcmpgesd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgess instruction.</summary>
[MethodToken(100666224)]
public static void vcmpgess(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpgess instruction.</summary>
[MethodToken(100666225)]
public static void vcmpgess(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpgess instruction.</summary>
[MethodToken(100666226)]
public static void vcmpgess(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgess instruction.</summary>
[MethodToken(100666227)]
public static void vcmpgess(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgt_oqpd instruction.</summary>
[MethodToken(100666228)]
public static void vcmpgt_oqpd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpgt_oqpd instruction.</summary>
[MethodToken(100666229)]
public static void vcmpgt_oqpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpgt_oqpd instruction.</summary>
[MethodToken(100666230)]
public static void vcmpgt_oqpd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpgt_oqpd instruction.</summary>
[MethodToken(100666231)]
public static void vcmpgt_oqpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpgt_oqpd instruction.</summary>
[MethodToken(100666232)]
public static void vcmpgt_oqpd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpgt_oqpd instruction.</summary>
[MethodToken(100666233)]
public static void vcmpgt_oqpd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgt_oqpd instruction.</summary>
[MethodToken(100666234)]
public static void vcmpgt_oqpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgt_oqpd instruction.</summary>
[MethodToken(100666235)]
public static void vcmpgt_oqpd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgt_oqpd instruction.</summary>
[MethodToken(100666236)]
public static void vcmpgt_oqpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgt_oqpd instruction.</summary>
[MethodToken(100666237)]
public static void vcmpgt_oqpd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgt_oqps instruction.</summary>
[MethodToken(100666238)]
public static void vcmpgt_oqps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpgt_oqps instruction.</summary>
[MethodToken(100666239)]
public static void vcmpgt_oqps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpgt_oqps instruction.</summary>
[MethodToken(100666240)]
public static void vcmpgt_oqps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpgt_oqps instruction.</summary>
[MethodToken(100666241)]
public static void vcmpgt_oqps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpgt_oqps instruction.</summary>
[MethodToken(100666242)]
public static void vcmpgt_oqps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpgt_oqps instruction.</summary>
[MethodToken(100666243)]
public static void vcmpgt_oqps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgt_oqps instruction.</summary>
[MethodToken(100666244)]
public static void vcmpgt_oqps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgt_oqps instruction.</summary>
[MethodToken(100666245)]
public static void vcmpgt_oqps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgt_oqps instruction.</summary>
[MethodToken(100666246)]
public static void vcmpgt_oqps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgt_oqps instruction.</summary>
[MethodToken(100666247)]
public static void vcmpgt_oqps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgt_oqsd instruction.</summary>
[MethodToken(100666248)]
public static void vcmpgt_oqsd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpgt_oqsd instruction.</summary>
[MethodToken(100666249)]
public static void vcmpgt_oqsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpgt_oqsd instruction.</summary>
[MethodToken(100666250)]
public static void vcmpgt_oqsd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgt_oqsd instruction.</summary>
[MethodToken(100666251)]
public static void vcmpgt_oqsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgt_oqss instruction.</summary>
[MethodToken(100666252)]
public static void vcmpgt_oqss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpgt_oqss instruction.</summary>
[MethodToken(100666253)]
public static void vcmpgt_oqss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpgt_oqss instruction.</summary>
[MethodToken(100666254)]
public static void vcmpgt_oqss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgt_oqss instruction.</summary>
[MethodToken(100666255)]
public static void vcmpgt_oqss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgtpd instruction.</summary>
[MethodToken(100666256)]
public static void vcmpgtpd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpgtpd instruction.</summary>
[MethodToken(100666257)]
public static void vcmpgtpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpgtpd instruction.</summary>
[MethodToken(100666258)]
public static void vcmpgtpd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpgtpd instruction.</summary>
[MethodToken(100666259)]
public static void vcmpgtpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpgtpd instruction.</summary>
[MethodToken(100666260)]
public static void vcmpgtpd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpgtpd instruction.</summary>
[MethodToken(100666261)]
public static void vcmpgtpd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgtpd instruction.</summary>
[MethodToken(100666262)]
public static void vcmpgtpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgtpd instruction.</summary>
[MethodToken(100666263)]
public static void vcmpgtpd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgtpd instruction.</summary>
[MethodToken(100666264)]
public static void vcmpgtpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgtpd instruction.</summary>
[MethodToken(100666265)]
public static void vcmpgtpd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgtps instruction.</summary>
[MethodToken(100666266)]
public static void vcmpgtps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpgtps instruction.</summary>
[MethodToken(100666267)]
public static void vcmpgtps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpgtps instruction.</summary>
[MethodToken(100666268)]
public static void vcmpgtps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpgtps instruction.</summary>
[MethodToken(100666269)]
public static void vcmpgtps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpgtps instruction.</summary>
[MethodToken(100666270)]
public static void vcmpgtps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpgtps instruction.</summary>
[MethodToken(100666271)]
public static void vcmpgtps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgtps instruction.</summary>
[MethodToken(100666272)]
public static void vcmpgtps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgtps instruction.</summary>
[MethodToken(100666273)]
public static void vcmpgtps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgtps instruction.</summary>
[MethodToken(100666274)]
public static void vcmpgtps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgtps instruction.</summary>
[MethodToken(100666275)]
public static void vcmpgtps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgtsd instruction.</summary>
[MethodToken(100666276)]
public static void vcmpgtsd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpgtsd instruction.</summary>
[MethodToken(100666277)]
public static void vcmpgtsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpgtsd instruction.</summary>
[MethodToken(100666278)]
public static void vcmpgtsd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgtsd instruction.</summary>
[MethodToken(100666279)]
public static void vcmpgtsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgtss instruction.</summary>
[MethodToken(100666280)]
public static void vcmpgtss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpgtss instruction.</summary>
[MethodToken(100666281)]
public static void vcmpgtss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpgtss instruction.</summary>
[MethodToken(100666282)]
public static void vcmpgtss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpgtss instruction.</summary>
[MethodToken(100666283)]
public static void vcmpgtss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmple_oqpd instruction.</summary>
[MethodToken(100666284)]
public static void vcmple_oqpd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmple_oqpd instruction.</summary>
[MethodToken(100666285)]
public static void vcmple_oqpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmple_oqpd instruction.</summary>
[MethodToken(100666286)]
public static void vcmple_oqpd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmple_oqpd instruction.</summary>
[MethodToken(100666287)]
public static void vcmple_oqpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmple_oqpd instruction.</summary>
[MethodToken(100666288)]
public static void vcmple_oqpd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmple_oqpd instruction.</summary>
[MethodToken(100666289)]
public static void vcmple_oqpd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmple_oqpd instruction.</summary>
[MethodToken(100666290)]
public static void vcmple_oqpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmple_oqpd instruction.</summary>
[MethodToken(100666291)]
public static void vcmple_oqpd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmple_oqpd instruction.</summary>
[MethodToken(100666292)]
public static void vcmple_oqpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmple_oqpd instruction.</summary>
[MethodToken(100666293)]
public static void vcmple_oqpd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmple_oqps instruction.</summary>
[MethodToken(100666294)]
public static void vcmple_oqps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmple_oqps instruction.</summary>
[MethodToken(100666295)]
public static void vcmple_oqps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmple_oqps instruction.</summary>
[MethodToken(100666296)]
public static void vcmple_oqps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmple_oqps instruction.</summary>
[MethodToken(100666297)]
public static void vcmple_oqps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmple_oqps instruction.</summary>
[MethodToken(100666298)]
public static void vcmple_oqps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmple_oqps instruction.</summary>
[MethodToken(100666299)]
public static void vcmple_oqps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmple_oqps instruction.</summary>
[MethodToken(100666300)]
public static void vcmple_oqps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmple_oqps instruction.</summary>
[MethodToken(100666301)]
public static void vcmple_oqps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmple_oqps instruction.</summary>
[MethodToken(100666302)]
public static void vcmple_oqps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmple_oqps instruction.</summary>
[MethodToken(100666303)]
public static void vcmple_oqps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmple_oqsd instruction.</summary>
[MethodToken(100666304)]
public static void vcmple_oqsd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmple_oqsd instruction.</summary>
[MethodToken(100666305)]
public static void vcmple_oqsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmple_oqsd instruction.</summary>
[MethodToken(100666306)]
public static void vcmple_oqsd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmple_oqsd instruction.</summary>
[MethodToken(100666307)]
public static void vcmple_oqsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmple_oqss instruction.</summary>
[MethodToken(100666308)]
public static void vcmple_oqss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmple_oqss instruction.</summary>
[MethodToken(100666309)]
public static void vcmple_oqss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmple_oqss instruction.</summary>
[MethodToken(100666310)]
public static void vcmple_oqss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmple_oqss instruction.</summary>
[MethodToken(100666311)]
public static void vcmple_oqss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmplepd instruction.</summary>
[MethodToken(100666312)]
public static void vcmplepd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmplepd instruction.</summary>
[MethodToken(100666313)]
public static void vcmplepd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmplepd instruction.</summary>
[MethodToken(100666314)]
public static void vcmplepd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmplepd instruction.</summary>
[MethodToken(100666315)]
public static void vcmplepd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmplepd instruction.</summary>
[MethodToken(100666316)]
public static void vcmplepd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmplepd instruction.</summary>
[MethodToken(100666317)]
public static void vcmplepd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmplepd instruction.</summary>
[MethodToken(100666318)]
public static void vcmplepd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmplepd instruction.</summary>
[MethodToken(100666319)]
public static void vcmplepd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmplepd instruction.</summary>
[MethodToken(100666320)]
public static void vcmplepd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmplepd instruction.</summary>
[MethodToken(100666321)]
public static void vcmplepd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpleps instruction.</summary>
[MethodToken(100666322)]
public static void vcmpleps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpleps instruction.</summary>
[MethodToken(100666323)]
public static void vcmpleps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpleps instruction.</summary>
[MethodToken(100666324)]
public static void vcmpleps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpleps instruction.</summary>
[MethodToken(100666325)]
public static void vcmpleps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpleps instruction.</summary>
[MethodToken(100666326)]
public static void vcmpleps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpleps instruction.</summary>
[MethodToken(100666327)]
public static void vcmpleps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpleps instruction.</summary>
[MethodToken(100666328)]
public static void vcmpleps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpleps instruction.</summary>
[MethodToken(100666329)]
public static void vcmpleps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpleps instruction.</summary>
[MethodToken(100666330)]
public static void vcmpleps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpleps instruction.</summary>
[MethodToken(100666331)]
public static void vcmpleps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmplesd instruction.</summary>
[MethodToken(100666332)]
public static void vcmplesd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmplesd instruction.</summary>
[MethodToken(100666333)]
public static void vcmplesd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmplesd instruction.</summary>
[MethodToken(100666334)]
public static void vcmplesd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmplesd instruction.</summary>
[MethodToken(100666335)]
public static void vcmplesd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpless instruction.</summary>
[MethodToken(100666336)]
public static void vcmpless(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpless instruction.</summary>
[MethodToken(100666337)]
public static void vcmpless(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpless instruction.</summary>
[MethodToken(100666338)]
public static void vcmpless(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpless instruction.</summary>
[MethodToken(100666339)]
public static void vcmpless(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmplt_oqpd instruction.</summary>
[MethodToken(100666340)]
public static void vcmplt_oqpd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmplt_oqpd instruction.</summary>
[MethodToken(100666341)]
public static void vcmplt_oqpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmplt_oqpd instruction.</summary>
[MethodToken(100666342)]
public static void vcmplt_oqpd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmplt_oqpd instruction.</summary>
[MethodToken(100666343)]
public static void vcmplt_oqpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmplt_oqpd instruction.</summary>
[MethodToken(100666344)]
public static void vcmplt_oqpd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmplt_oqpd instruction.</summary>
[MethodToken(100666345)]
public static void vcmplt_oqpd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmplt_oqpd instruction.</summary>
[MethodToken(100666346)]
public static void vcmplt_oqpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmplt_oqpd instruction.</summary>
[MethodToken(100666347)]
public static void vcmplt_oqpd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmplt_oqpd instruction.</summary>
[MethodToken(100666348)]
public static void vcmplt_oqpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmplt_oqpd instruction.</summary>
[MethodToken(100666349)]
public static void vcmplt_oqpd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmplt_oqps instruction.</summary>
[MethodToken(100666350)]
public static void vcmplt_oqps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmplt_oqps instruction.</summary>
[MethodToken(100666351)]
public static void vcmplt_oqps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmplt_oqps instruction.</summary>
[MethodToken(100666352)]
public static void vcmplt_oqps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmplt_oqps instruction.</summary>
[MethodToken(100666353)]
public static void vcmplt_oqps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmplt_oqps instruction.</summary>
[MethodToken(100666354)]
public static void vcmplt_oqps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmplt_oqps instruction.</summary>
[MethodToken(100666355)]
public static void vcmplt_oqps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmplt_oqps instruction.</summary>
[MethodToken(100666356)]
public static void vcmplt_oqps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmplt_oqps instruction.</summary>
[MethodToken(100666357)]
public static void vcmplt_oqps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmplt_oqps instruction.</summary>
[MethodToken(100666358)]
public static void vcmplt_oqps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmplt_oqps instruction.</summary>
[MethodToken(100666359)]
public static void vcmplt_oqps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmplt_oqsd instruction.</summary>
[MethodToken(100666360)]
public static void vcmplt_oqsd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmplt_oqsd instruction.</summary>
[MethodToken(100666361)]
public static void vcmplt_oqsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmplt_oqsd instruction.</summary>
[MethodToken(100666362)]
public static void vcmplt_oqsd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmplt_oqsd instruction.</summary>
[MethodToken(100666363)]
public static void vcmplt_oqsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmplt_oqss instruction.</summary>
[MethodToken(100666364)]
public static void vcmplt_oqss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmplt_oqss instruction.</summary>
[MethodToken(100666365)]
public static void vcmplt_oqss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmplt_oqss instruction.</summary>
[MethodToken(100666366)]
public static void vcmplt_oqss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmplt_oqss instruction.</summary>
[MethodToken(100666367)]
public static void vcmplt_oqss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpltpd instruction.</summary>
[MethodToken(100666368)]
public static void vcmpltpd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpltpd instruction.</summary>
[MethodToken(100666369)]
public static void vcmpltpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpltpd instruction.</summary>
[MethodToken(100666370)]
public static void vcmpltpd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpltpd instruction.</summary>
[MethodToken(100666371)]
public static void vcmpltpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpltpd instruction.</summary>
[MethodToken(100666372)]
public static void vcmpltpd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpltpd instruction.</summary>
[MethodToken(100666373)]
public static void vcmpltpd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpltpd instruction.</summary>
[MethodToken(100666374)]
public static void vcmpltpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpltpd instruction.</summary>
[MethodToken(100666375)]
public static void vcmpltpd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpltpd instruction.</summary>
[MethodToken(100666376)]
public static void vcmpltpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpltpd instruction.</summary>
[MethodToken(100666377)]
public static void vcmpltpd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpltps instruction.</summary>
[MethodToken(100666378)]
public static void vcmpltps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpltps instruction.</summary>
[MethodToken(100666379)]
public static void vcmpltps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpltps instruction.</summary>
[MethodToken(100666380)]
public static void vcmpltps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpltps instruction.</summary>
[MethodToken(100666381)]
public static void vcmpltps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpltps instruction.</summary>
[MethodToken(100666382)]
public static void vcmpltps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpltps instruction.</summary>
[MethodToken(100666383)]
public static void vcmpltps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpltps instruction.</summary>
[MethodToken(100666384)]
public static void vcmpltps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpltps instruction.</summary>
[MethodToken(100666385)]
public static void vcmpltps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpltps instruction.</summary>
[MethodToken(100666386)]
public static void vcmpltps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpltps instruction.</summary>
[MethodToken(100666387)]
public static void vcmpltps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpltsd instruction.</summary>
[MethodToken(100666388)]
public static void vcmpltsd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpltsd instruction.</summary>
[MethodToken(100666389)]
public static void vcmpltsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpltsd instruction.</summary>
[MethodToken(100666390)]
public static void vcmpltsd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpltsd instruction.</summary>
[MethodToken(100666391)]
public static void vcmpltsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpltss instruction.</summary>
[MethodToken(100666392)]
public static void vcmpltss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpltss instruction.</summary>
[MethodToken(100666393)]
public static void vcmpltss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpltss instruction.</summary>
[MethodToken(100666394)]
public static void vcmpltss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpltss instruction.</summary>
[MethodToken(100666395)]
public static void vcmpltss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_oqpd instruction.</summary>
[MethodToken(100666396)]
public static void vcmpneq_oqpd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpneq_oqpd instruction.</summary>
[MethodToken(100666397)]
public static void vcmpneq_oqpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpneq_oqpd instruction.</summary>
[MethodToken(100666398)]
public static void vcmpneq_oqpd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpneq_oqpd instruction.</summary>
[MethodToken(100666399)]
public static void vcmpneq_oqpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpneq_oqpd instruction.</summary>
[MethodToken(100666400)]
public static void vcmpneq_oqpd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpneq_oqpd instruction.</summary>
[MethodToken(100666401)]
public static void vcmpneq_oqpd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_oqpd instruction.</summary>
[MethodToken(100666402)]
public static void vcmpneq_oqpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_oqpd instruction.</summary>
[MethodToken(100666403)]
public static void vcmpneq_oqpd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_oqpd instruction.</summary>
[MethodToken(100666404)]
public static void vcmpneq_oqpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_oqpd instruction.</summary>
[MethodToken(100666405)]
public static void vcmpneq_oqpd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_oqps instruction.</summary>
[MethodToken(100666406)]
public static void vcmpneq_oqps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpneq_oqps instruction.</summary>
[MethodToken(100666407)]
public static void vcmpneq_oqps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpneq_oqps instruction.</summary>
[MethodToken(100666408)]
public static void vcmpneq_oqps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpneq_oqps instruction.</summary>
[MethodToken(100666409)]
public static void vcmpneq_oqps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpneq_oqps instruction.</summary>
[MethodToken(100666410)]
public static void vcmpneq_oqps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpneq_oqps instruction.</summary>
[MethodToken(100666411)]
public static void vcmpneq_oqps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_oqps instruction.</summary>
[MethodToken(100666412)]
public static void vcmpneq_oqps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_oqps instruction.</summary>
[MethodToken(100666413)]
public static void vcmpneq_oqps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_oqps instruction.</summary>
[MethodToken(100666414)]
public static void vcmpneq_oqps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_oqps instruction.</summary>
[MethodToken(100666415)]
public static void vcmpneq_oqps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_oqsd instruction.</summary>
[MethodToken(100666416)]
public static void vcmpneq_oqsd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpneq_oqsd instruction.</summary>
[MethodToken(100666417)]
public static void vcmpneq_oqsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpneq_oqsd instruction.</summary>
[MethodToken(100666418)]
public static void vcmpneq_oqsd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_oqsd instruction.</summary>
[MethodToken(100666419)]
public static void vcmpneq_oqsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_oqss instruction.</summary>
[MethodToken(100666420)]
public static void vcmpneq_oqss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpneq_oqss instruction.</summary>
[MethodToken(100666421)]
public static void vcmpneq_oqss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpneq_oqss instruction.</summary>
[MethodToken(100666422)]
public static void vcmpneq_oqss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_oqss instruction.</summary>
[MethodToken(100666423)]
public static void vcmpneq_oqss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_ospd instruction.</summary>
[MethodToken(100666424)]
public static void vcmpneq_ospd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpneq_ospd instruction.</summary>
[MethodToken(100666425)]
public static void vcmpneq_ospd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpneq_ospd instruction.</summary>
[MethodToken(100666426)]
public static void vcmpneq_ospd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpneq_ospd instruction.</summary>
[MethodToken(100666427)]
public static void vcmpneq_ospd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpneq_ospd instruction.</summary>
[MethodToken(100666428)]
public static void vcmpneq_ospd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpneq_ospd instruction.</summary>
[MethodToken(100666429)]
public static void vcmpneq_ospd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_ospd instruction.</summary>
[MethodToken(100666430)]
public static void vcmpneq_ospd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_ospd instruction.</summary>
[MethodToken(100666431)]
public static void vcmpneq_ospd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_ospd instruction.</summary>
[MethodToken(100666432)]
public static void vcmpneq_ospd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_ospd instruction.</summary>
[MethodToken(100666433)]
public static void vcmpneq_ospd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_osps instruction.</summary>
[MethodToken(100666434)]
public static void vcmpneq_osps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpneq_osps instruction.</summary>
[MethodToken(100666435)]
public static void vcmpneq_osps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpneq_osps instruction.</summary>
[MethodToken(100666436)]
public static void vcmpneq_osps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpneq_osps instruction.</summary>
[MethodToken(100666437)]
public static void vcmpneq_osps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpneq_osps instruction.</summary>
[MethodToken(100666438)]
public static void vcmpneq_osps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpneq_osps instruction.</summary>
[MethodToken(100666439)]
public static void vcmpneq_osps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_osps instruction.</summary>
[MethodToken(100666440)]
public static void vcmpneq_osps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_osps instruction.</summary>
[MethodToken(100666441)]
public static void vcmpneq_osps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_osps instruction.</summary>
[MethodToken(100666442)]
public static void vcmpneq_osps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_osps instruction.</summary>
[MethodToken(100666443)]
public static void vcmpneq_osps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_ossd instruction.</summary>
[MethodToken(100666444)]
public static void vcmpneq_ossd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpneq_ossd instruction.</summary>
[MethodToken(100666445)]
public static void vcmpneq_ossd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpneq_ossd instruction.</summary>
[MethodToken(100666446)]
public static void vcmpneq_ossd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_ossd instruction.</summary>
[MethodToken(100666447)]
public static void vcmpneq_ossd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_osss instruction.</summary>
[MethodToken(100666448)]
public static void vcmpneq_osss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpneq_osss instruction.</summary>
[MethodToken(100666449)]
public static void vcmpneq_osss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpneq_osss instruction.</summary>
[MethodToken(100666450)]
public static void vcmpneq_osss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_osss instruction.</summary>
[MethodToken(100666451)]
public static void vcmpneq_osss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_uspd instruction.</summary>
[MethodToken(100666452)]
public static void vcmpneq_uspd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpneq_uspd instruction.</summary>
[MethodToken(100666453)]
public static void vcmpneq_uspd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpneq_uspd instruction.</summary>
[MethodToken(100666454)]
public static void vcmpneq_uspd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpneq_uspd instruction.</summary>
[MethodToken(100666455)]
public static void vcmpneq_uspd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpneq_uspd instruction.</summary>
[MethodToken(100666456)]
public static void vcmpneq_uspd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpneq_uspd instruction.</summary>
[MethodToken(100666457)]
public static void vcmpneq_uspd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_uspd instruction.</summary>
[MethodToken(100666458)]
public static void vcmpneq_uspd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_uspd instruction.</summary>
[MethodToken(100666459)]
public static void vcmpneq_uspd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_uspd instruction.</summary>
[MethodToken(100666460)]
public static void vcmpneq_uspd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_uspd instruction.</summary>
[MethodToken(100666461)]
public static void vcmpneq_uspd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_usps instruction.</summary>
[MethodToken(100666462)]
public static void vcmpneq_usps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpneq_usps instruction.</summary>
[MethodToken(100666463)]
public static void vcmpneq_usps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpneq_usps instruction.</summary>
[MethodToken(100666464)]
public static void vcmpneq_usps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpneq_usps instruction.</summary>
[MethodToken(100666465)]
public static void vcmpneq_usps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpneq_usps instruction.</summary>
[MethodToken(100666466)]
public static void vcmpneq_usps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpneq_usps instruction.</summary>
[MethodToken(100666467)]
public static void vcmpneq_usps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_usps instruction.</summary>
[MethodToken(100666468)]
public static void vcmpneq_usps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_usps instruction.</summary>
[MethodToken(100666469)]
public static void vcmpneq_usps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_usps instruction.</summary>
[MethodToken(100666470)]
public static void vcmpneq_usps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_usps instruction.</summary>
[MethodToken(100666471)]
public static void vcmpneq_usps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_ussd instruction.</summary>
[MethodToken(100666472)]
public static void vcmpneq_ussd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpneq_ussd instruction.</summary>
[MethodToken(100666473)]
public static void vcmpneq_ussd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpneq_ussd instruction.</summary>
[MethodToken(100666474)]
public static void vcmpneq_ussd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_ussd instruction.</summary>
[MethodToken(100666475)]
public static void vcmpneq_ussd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_usss instruction.</summary>
[MethodToken(100666476)]
public static void vcmpneq_usss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpneq_usss instruction.</summary>
[MethodToken(100666477)]
public static void vcmpneq_usss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpneq_usss instruction.</summary>
[MethodToken(100666478)]
public static void vcmpneq_usss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneq_usss instruction.</summary>
[MethodToken(100666479)]
public static void vcmpneq_usss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneqpd instruction.</summary>
[MethodToken(100666480)]
public static void vcmpneqpd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpneqpd instruction.</summary>
[MethodToken(100666481)]
public static void vcmpneqpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpneqpd instruction.</summary>
[MethodToken(100666482)]
public static void vcmpneqpd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpneqpd instruction.</summary>
[MethodToken(100666483)]
public static void vcmpneqpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpneqpd instruction.</summary>
[MethodToken(100666484)]
public static void vcmpneqpd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpneqpd instruction.</summary>
[MethodToken(100666485)]
public static void vcmpneqpd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneqpd instruction.</summary>
[MethodToken(100666486)]
public static void vcmpneqpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneqpd instruction.</summary>
[MethodToken(100666487)]
public static void vcmpneqpd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneqpd instruction.</summary>
[MethodToken(100666488)]
public static void vcmpneqpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneqpd instruction.</summary>
[MethodToken(100666489)]
public static void vcmpneqpd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneqps instruction.</summary>
[MethodToken(100666490)]
public static void vcmpneqps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpneqps instruction.</summary>
[MethodToken(100666491)]
public static void vcmpneqps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpneqps instruction.</summary>
[MethodToken(100666492)]
public static void vcmpneqps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpneqps instruction.</summary>
[MethodToken(100666493)]
public static void vcmpneqps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpneqps instruction.</summary>
[MethodToken(100666494)]
public static void vcmpneqps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpneqps instruction.</summary>
[MethodToken(100666495)]
public static void vcmpneqps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneqps instruction.</summary>
[MethodToken(100666496)]
public static void vcmpneqps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneqps instruction.</summary>
[MethodToken(100666497)]
public static void vcmpneqps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneqps instruction.</summary>
[MethodToken(100666498)]
public static void vcmpneqps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneqps instruction.</summary>
[MethodToken(100666499)]
public static void vcmpneqps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneqsd instruction.</summary>
[MethodToken(100666500)]
public static void vcmpneqsd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpneqsd instruction.</summary>
[MethodToken(100666501)]
public static void vcmpneqsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpneqsd instruction.</summary>
[MethodToken(100666502)]
public static void vcmpneqsd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneqsd instruction.</summary>
[MethodToken(100666503)]
public static void vcmpneqsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneqss instruction.</summary>
[MethodToken(100666504)]
public static void vcmpneqss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpneqss instruction.</summary>
[MethodToken(100666505)]
public static void vcmpneqss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpneqss instruction.</summary>
[MethodToken(100666506)]
public static void vcmpneqss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpneqss instruction.</summary>
[MethodToken(100666507)]
public static void vcmpneqss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnge_uqpd instruction.</summary>
[MethodToken(100666508)]
public static void vcmpnge_uqpd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpnge_uqpd instruction.</summary>
[MethodToken(100666509)]
public static void vcmpnge_uqpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpnge_uqpd instruction.</summary>
[MethodToken(100666510)]
public static void vcmpnge_uqpd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpnge_uqpd instruction.</summary>
[MethodToken(100666511)]
public static void vcmpnge_uqpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpnge_uqpd instruction.</summary>
[MethodToken(100666512)]
public static void vcmpnge_uqpd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpnge_uqpd instruction.</summary>
[MethodToken(100666513)]
public static void vcmpnge_uqpd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnge_uqpd instruction.</summary>
[MethodToken(100666514)]
public static void vcmpnge_uqpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnge_uqpd instruction.</summary>
[MethodToken(100666515)]
public static void vcmpnge_uqpd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnge_uqpd instruction.</summary>
[MethodToken(100666516)]
public static void vcmpnge_uqpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnge_uqpd instruction.</summary>
[MethodToken(100666517)]
public static void vcmpnge_uqpd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnge_uqps instruction.</summary>
[MethodToken(100666518)]
public static void vcmpnge_uqps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpnge_uqps instruction.</summary>
[MethodToken(100666519)]
public static void vcmpnge_uqps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpnge_uqps instruction.</summary>
[MethodToken(100666520)]
public static void vcmpnge_uqps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpnge_uqps instruction.</summary>
[MethodToken(100666521)]
public static void vcmpnge_uqps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpnge_uqps instruction.</summary>
[MethodToken(100666522)]
public static void vcmpnge_uqps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpnge_uqps instruction.</summary>
[MethodToken(100666523)]
public static void vcmpnge_uqps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnge_uqps instruction.</summary>
[MethodToken(100666524)]
public static void vcmpnge_uqps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnge_uqps instruction.</summary>
[MethodToken(100666525)]
public static void vcmpnge_uqps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnge_uqps instruction.</summary>
[MethodToken(100666526)]
public static void vcmpnge_uqps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnge_uqps instruction.</summary>
[MethodToken(100666527)]
public static void vcmpnge_uqps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnge_uqsd instruction.</summary>
[MethodToken(100666528)]
public static void vcmpnge_uqsd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpnge_uqsd instruction.</summary>
[MethodToken(100666529)]
public static void vcmpnge_uqsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpnge_uqsd instruction.</summary>
[MethodToken(100666530)]
public static void vcmpnge_uqsd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnge_uqsd instruction.</summary>
[MethodToken(100666531)]
public static void vcmpnge_uqsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnge_uqss instruction.</summary>
[MethodToken(100666532)]
public static void vcmpnge_uqss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpnge_uqss instruction.</summary>
[MethodToken(100666533)]
public static void vcmpnge_uqss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpnge_uqss instruction.</summary>
[MethodToken(100666534)]
public static void vcmpnge_uqss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnge_uqss instruction.</summary>
[MethodToken(100666535)]
public static void vcmpnge_uqss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngepd instruction.</summary>
[MethodToken(100666536)]
public static void vcmpngepd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpngepd instruction.</summary>
[MethodToken(100666537)]
public static void vcmpngepd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpngepd instruction.</summary>
[MethodToken(100666538)]
public static void vcmpngepd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpngepd instruction.</summary>
[MethodToken(100666539)]
public static void vcmpngepd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpngepd instruction.</summary>
[MethodToken(100666540)]
public static void vcmpngepd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpngepd instruction.</summary>
[MethodToken(100666541)]
public static void vcmpngepd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngepd instruction.</summary>
[MethodToken(100666542)]
public static void vcmpngepd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngepd instruction.</summary>
[MethodToken(100666543)]
public static void vcmpngepd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngepd instruction.</summary>
[MethodToken(100666544)]
public static void vcmpngepd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngepd instruction.</summary>
[MethodToken(100666545)]
public static void vcmpngepd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngeps instruction.</summary>
[MethodToken(100666546)]
public static void vcmpngeps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpngeps instruction.</summary>
[MethodToken(100666547)]
public static void vcmpngeps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpngeps instruction.</summary>
[MethodToken(100666548)]
public static void vcmpngeps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpngeps instruction.</summary>
[MethodToken(100666549)]
public static void vcmpngeps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpngeps instruction.</summary>
[MethodToken(100666550)]
public static void vcmpngeps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpngeps instruction.</summary>
[MethodToken(100666551)]
public static void vcmpngeps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngeps instruction.</summary>
[MethodToken(100666552)]
public static void vcmpngeps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngeps instruction.</summary>
[MethodToken(100666553)]
public static void vcmpngeps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngeps instruction.</summary>
[MethodToken(100666554)]
public static void vcmpngeps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngeps instruction.</summary>
[MethodToken(100666555)]
public static void vcmpngeps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngesd instruction.</summary>
[MethodToken(100666556)]
public static void vcmpngesd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpngesd instruction.</summary>
[MethodToken(100666557)]
public static void vcmpngesd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpngesd instruction.</summary>
[MethodToken(100666558)]
public static void vcmpngesd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngesd instruction.</summary>
[MethodToken(100666559)]
public static void vcmpngesd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngess instruction.</summary>
[MethodToken(100666560)]
public static void vcmpngess(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpngess instruction.</summary>
[MethodToken(100666561)]
public static void vcmpngess(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpngess instruction.</summary>
[MethodToken(100666562)]
public static void vcmpngess(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngess instruction.</summary>
[MethodToken(100666563)]
public static void vcmpngess(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngt_uqpd instruction.</summary>
[MethodToken(100666564)]
public static void vcmpngt_uqpd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpngt_uqpd instruction.</summary>
[MethodToken(100666565)]
public static void vcmpngt_uqpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpngt_uqpd instruction.</summary>
[MethodToken(100666566)]
public static void vcmpngt_uqpd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpngt_uqpd instruction.</summary>
[MethodToken(100666567)]
public static void vcmpngt_uqpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpngt_uqpd instruction.</summary>
[MethodToken(100666568)]
public static void vcmpngt_uqpd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpngt_uqpd instruction.</summary>
[MethodToken(100666569)]
public static void vcmpngt_uqpd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngt_uqpd instruction.</summary>
[MethodToken(100666570)]
public static void vcmpngt_uqpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngt_uqpd instruction.</summary>
[MethodToken(100666571)]
public static void vcmpngt_uqpd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngt_uqpd instruction.</summary>
[MethodToken(100666572)]
public static void vcmpngt_uqpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngt_uqpd instruction.</summary>
[MethodToken(100666573)]
public static void vcmpngt_uqpd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngt_uqps instruction.</summary>
[MethodToken(100666574)]
public static void vcmpngt_uqps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpngt_uqps instruction.</summary>
[MethodToken(100666575)]
public static void vcmpngt_uqps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpngt_uqps instruction.</summary>
[MethodToken(100666576)]
public static void vcmpngt_uqps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpngt_uqps instruction.</summary>
[MethodToken(100666577)]
public static void vcmpngt_uqps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpngt_uqps instruction.</summary>
[MethodToken(100666578)]
public static void vcmpngt_uqps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpngt_uqps instruction.</summary>
[MethodToken(100666579)]
public static void vcmpngt_uqps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngt_uqps instruction.</summary>
[MethodToken(100666580)]
public static void vcmpngt_uqps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngt_uqps instruction.</summary>
[MethodToken(100666581)]
public static void vcmpngt_uqps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngt_uqps instruction.</summary>
[MethodToken(100666582)]
public static void vcmpngt_uqps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngt_uqps instruction.</summary>
[MethodToken(100666583)]
public static void vcmpngt_uqps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngt_uqsd instruction.</summary>
[MethodToken(100666584)]
public static void vcmpngt_uqsd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpngt_uqsd instruction.</summary>
[MethodToken(100666585)]
public static void vcmpngt_uqsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpngt_uqsd instruction.</summary>
[MethodToken(100666586)]
public static void vcmpngt_uqsd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngt_uqsd instruction.</summary>
[MethodToken(100666587)]
public static void vcmpngt_uqsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngt_uqss instruction.</summary>
[MethodToken(100666588)]
public static void vcmpngt_uqss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpngt_uqss instruction.</summary>
[MethodToken(100666589)]
public static void vcmpngt_uqss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpngt_uqss instruction.</summary>
[MethodToken(100666590)]
public static void vcmpngt_uqss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngt_uqss instruction.</summary>
[MethodToken(100666591)]
public static void vcmpngt_uqss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngtpd instruction.</summary>
[MethodToken(100666592)]
public static void vcmpngtpd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpngtpd instruction.</summary>
[MethodToken(100666593)]
public static void vcmpngtpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpngtpd instruction.</summary>
[MethodToken(100666594)]
public static void vcmpngtpd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpngtpd instruction.</summary>
[MethodToken(100666595)]
public static void vcmpngtpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpngtpd instruction.</summary>
[MethodToken(100666596)]
public static void vcmpngtpd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpngtpd instruction.</summary>
[MethodToken(100666597)]
public static void vcmpngtpd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngtpd instruction.</summary>
[MethodToken(100666598)]
public static void vcmpngtpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngtpd instruction.</summary>
[MethodToken(100666599)]
public static void vcmpngtpd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngtpd instruction.</summary>
[MethodToken(100666600)]
public static void vcmpngtpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngtpd instruction.</summary>
[MethodToken(100666601)]
public static void vcmpngtpd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngtps instruction.</summary>
[MethodToken(100666602)]
public static void vcmpngtps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpngtps instruction.</summary>
[MethodToken(100666603)]
public static void vcmpngtps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpngtps instruction.</summary>
[MethodToken(100666604)]
public static void vcmpngtps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpngtps instruction.</summary>
[MethodToken(100666605)]
public static void vcmpngtps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpngtps instruction.</summary>
[MethodToken(100666606)]
public static void vcmpngtps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpngtps instruction.</summary>
[MethodToken(100666607)]
public static void vcmpngtps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngtps instruction.</summary>
[MethodToken(100666608)]
public static void vcmpngtps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngtps instruction.</summary>
[MethodToken(100666609)]
public static void vcmpngtps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngtps instruction.</summary>
[MethodToken(100666610)]
public static void vcmpngtps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngtps instruction.</summary>
[MethodToken(100666611)]
public static void vcmpngtps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngtsd instruction.</summary>
[MethodToken(100666612)]
public static void vcmpngtsd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpngtsd instruction.</summary>
[MethodToken(100666613)]
public static void vcmpngtsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpngtsd instruction.</summary>
[MethodToken(100666614)]
public static void vcmpngtsd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngtsd instruction.</summary>
[MethodToken(100666615)]
public static void vcmpngtsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngtss instruction.</summary>
[MethodToken(100666616)]
public static void vcmpngtss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpngtss instruction.</summary>
[MethodToken(100666617)]
public static void vcmpngtss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpngtss instruction.</summary>
[MethodToken(100666618)]
public static void vcmpngtss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpngtss instruction.</summary>
[MethodToken(100666619)]
public static void vcmpngtss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnle_uqpd instruction.</summary>
[MethodToken(100666620)]
public static void vcmpnle_uqpd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpnle_uqpd instruction.</summary>
[MethodToken(100666621)]
public static void vcmpnle_uqpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpnle_uqpd instruction.</summary>
[MethodToken(100666622)]
public static void vcmpnle_uqpd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpnle_uqpd instruction.</summary>
[MethodToken(100666623)]
public static void vcmpnle_uqpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpnle_uqpd instruction.</summary>
[MethodToken(100666624)]
public static void vcmpnle_uqpd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpnle_uqpd instruction.</summary>
[MethodToken(100666625)]
public static void vcmpnle_uqpd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnle_uqpd instruction.</summary>
[MethodToken(100666626)]
public static void vcmpnle_uqpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnle_uqpd instruction.</summary>
[MethodToken(100666627)]
public static void vcmpnle_uqpd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnle_uqpd instruction.</summary>
[MethodToken(100666628)]
public static void vcmpnle_uqpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnle_uqpd instruction.</summary>
[MethodToken(100666629)]
public static void vcmpnle_uqpd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnle_uqps instruction.</summary>
[MethodToken(100666630)]
public static void vcmpnle_uqps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpnle_uqps instruction.</summary>
[MethodToken(100666631)]
public static void vcmpnle_uqps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpnle_uqps instruction.</summary>
[MethodToken(100666632)]
public static void vcmpnle_uqps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpnle_uqps instruction.</summary>
[MethodToken(100666633)]
public static void vcmpnle_uqps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpnle_uqps instruction.</summary>
[MethodToken(100666634)]
public static void vcmpnle_uqps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpnle_uqps instruction.</summary>
[MethodToken(100666635)]
public static void vcmpnle_uqps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnle_uqps instruction.</summary>
[MethodToken(100666636)]
public static void vcmpnle_uqps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnle_uqps instruction.</summary>
[MethodToken(100666637)]
public static void vcmpnle_uqps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnle_uqps instruction.</summary>
[MethodToken(100666638)]
public static void vcmpnle_uqps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnle_uqps instruction.</summary>
[MethodToken(100666639)]
public static void vcmpnle_uqps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnle_uqsd instruction.</summary>
[MethodToken(100666640)]
public static void vcmpnle_uqsd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpnle_uqsd instruction.</summary>
[MethodToken(100666641)]
public static void vcmpnle_uqsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpnle_uqsd instruction.</summary>
[MethodToken(100666642)]
public static void vcmpnle_uqsd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnle_uqsd instruction.</summary>
[MethodToken(100666643)]
public static void vcmpnle_uqsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnle_uqss instruction.</summary>
[MethodToken(100666644)]
public static void vcmpnle_uqss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpnle_uqss instruction.</summary>
[MethodToken(100666645)]
public static void vcmpnle_uqss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpnle_uqss instruction.</summary>
[MethodToken(100666646)]
public static void vcmpnle_uqss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnle_uqss instruction.</summary>
[MethodToken(100666647)]
public static void vcmpnle_uqss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnlepd instruction.</summary>
[MethodToken(100666648)]
public static void vcmpnlepd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpnlepd instruction.</summary>
[MethodToken(100666649)]
public static void vcmpnlepd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpnlepd instruction.</summary>
[MethodToken(100666650)]
public static void vcmpnlepd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpnlepd instruction.</summary>
[MethodToken(100666651)]
public static void vcmpnlepd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpnlepd instruction.</summary>
[MethodToken(100666652)]
public static void vcmpnlepd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpnlepd instruction.</summary>
[MethodToken(100666653)]
public static void vcmpnlepd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnlepd instruction.</summary>
[MethodToken(100666654)]
public static void vcmpnlepd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnlepd instruction.</summary>
[MethodToken(100666655)]
public static void vcmpnlepd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnlepd instruction.</summary>
[MethodToken(100666656)]
public static void vcmpnlepd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnlepd instruction.</summary>
[MethodToken(100666657)]
public static void vcmpnlepd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnleps instruction.</summary>
[MethodToken(100666658)]
public static void vcmpnleps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpnleps instruction.</summary>
[MethodToken(100666659)]
public static void vcmpnleps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpnleps instruction.</summary>
[MethodToken(100666660)]
public static void vcmpnleps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpnleps instruction.</summary>
[MethodToken(100666661)]
public static void vcmpnleps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpnleps instruction.</summary>
[MethodToken(100666662)]
public static void vcmpnleps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpnleps instruction.</summary>
[MethodToken(100666663)]
public static void vcmpnleps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnleps instruction.</summary>
[MethodToken(100666664)]
public static void vcmpnleps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnleps instruction.</summary>
[MethodToken(100666665)]
public static void vcmpnleps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnleps instruction.</summary>
[MethodToken(100666666)]
public static void vcmpnleps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnleps instruction.</summary>
[MethodToken(100666667)]
public static void vcmpnleps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnlesd instruction.</summary>
[MethodToken(100666668)]
public static void vcmpnlesd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpnlesd instruction.</summary>
[MethodToken(100666669)]
public static void vcmpnlesd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpnlesd instruction.</summary>
[MethodToken(100666670)]
public static void vcmpnlesd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnlesd instruction.</summary>
[MethodToken(100666671)]
public static void vcmpnlesd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnless instruction.</summary>
[MethodToken(100666672)]
public static void vcmpnless(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpnless instruction.</summary>
[MethodToken(100666673)]
public static void vcmpnless(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpnless instruction.</summary>
[MethodToken(100666674)]
public static void vcmpnless(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnless instruction.</summary>
[MethodToken(100666675)]
public static void vcmpnless(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnlt_uqpd instruction.</summary>
[MethodToken(100666676)]
public static void vcmpnlt_uqpd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpnlt_uqpd instruction.</summary>
[MethodToken(100666677)]
public static void vcmpnlt_uqpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpnlt_uqpd instruction.</summary>
[MethodToken(100666678)]
public static void vcmpnlt_uqpd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpnlt_uqpd instruction.</summary>
[MethodToken(100666679)]
public static void vcmpnlt_uqpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpnlt_uqpd instruction.</summary>
[MethodToken(100666680)]
public static void vcmpnlt_uqpd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpnlt_uqpd instruction.</summary>
[MethodToken(100666681)]
public static void vcmpnlt_uqpd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnlt_uqpd instruction.</summary>
[MethodToken(100666682)]
public static void vcmpnlt_uqpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnlt_uqpd instruction.</summary>
[MethodToken(100666683)]
public static void vcmpnlt_uqpd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnlt_uqpd instruction.</summary>
[MethodToken(100666684)]
public static void vcmpnlt_uqpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnlt_uqpd instruction.</summary>
[MethodToken(100666685)]
public static void vcmpnlt_uqpd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnlt_uqps instruction.</summary>
[MethodToken(100666686)]
public static void vcmpnlt_uqps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpnlt_uqps instruction.</summary>
[MethodToken(100666687)]
public static void vcmpnlt_uqps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpnlt_uqps instruction.</summary>
[MethodToken(100666688)]
public static void vcmpnlt_uqps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpnlt_uqps instruction.</summary>
[MethodToken(100666689)]
public static void vcmpnlt_uqps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpnlt_uqps instruction.</summary>
[MethodToken(100666690)]
public static void vcmpnlt_uqps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpnlt_uqps instruction.</summary>
[MethodToken(100666691)]
public static void vcmpnlt_uqps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnlt_uqps instruction.</summary>
[MethodToken(100666692)]
public static void vcmpnlt_uqps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnlt_uqps instruction.</summary>
[MethodToken(100666693)]
public static void vcmpnlt_uqps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnlt_uqps instruction.</summary>
[MethodToken(100666694)]
public static void vcmpnlt_uqps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnlt_uqps instruction.</summary>
[MethodToken(100666695)]
public static void vcmpnlt_uqps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnlt_uqsd instruction.</summary>
[MethodToken(100666696)]
public static void vcmpnlt_uqsd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpnlt_uqsd instruction.</summary>
[MethodToken(100666697)]
public static void vcmpnlt_uqsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpnlt_uqsd instruction.</summary>
[MethodToken(100666698)]
public static void vcmpnlt_uqsd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnlt_uqsd instruction.</summary>
[MethodToken(100666699)]
public static void vcmpnlt_uqsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnlt_uqss instruction.</summary>
[MethodToken(100666700)]
public static void vcmpnlt_uqss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpnlt_uqss instruction.</summary>
[MethodToken(100666701)]
public static void vcmpnlt_uqss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpnlt_uqss instruction.</summary>
[MethodToken(100666702)]
public static void vcmpnlt_uqss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnlt_uqss instruction.</summary>
[MethodToken(100666703)]
public static void vcmpnlt_uqss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnltpd instruction.</summary>
[MethodToken(100666704)]
public static void vcmpnltpd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpnltpd instruction.</summary>
[MethodToken(100666705)]
public static void vcmpnltpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpnltpd instruction.</summary>
[MethodToken(100666706)]
public static void vcmpnltpd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpnltpd instruction.</summary>
[MethodToken(100666707)]
public static void vcmpnltpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpnltpd instruction.</summary>
[MethodToken(100666708)]
public static void vcmpnltpd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpnltpd instruction.</summary>
[MethodToken(100666709)]
public static void vcmpnltpd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnltpd instruction.</summary>
[MethodToken(100666710)]
public static void vcmpnltpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnltpd instruction.</summary>
[MethodToken(100666711)]
public static void vcmpnltpd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnltpd instruction.</summary>
[MethodToken(100666712)]
public static void vcmpnltpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnltpd instruction.</summary>
[MethodToken(100666713)]
public static void vcmpnltpd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnltps instruction.</summary>
[MethodToken(100666714)]
public static void vcmpnltps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpnltps instruction.</summary>
[MethodToken(100666715)]
public static void vcmpnltps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpnltps instruction.</summary>
[MethodToken(100666716)]
public static void vcmpnltps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpnltps instruction.</summary>
[MethodToken(100666717)]
public static void vcmpnltps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpnltps instruction.</summary>
[MethodToken(100666718)]
public static void vcmpnltps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpnltps instruction.</summary>
[MethodToken(100666719)]
public static void vcmpnltps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnltps instruction.</summary>
[MethodToken(100666720)]
public static void vcmpnltps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnltps instruction.</summary>
[MethodToken(100666721)]
public static void vcmpnltps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnltps instruction.</summary>
[MethodToken(100666722)]
public static void vcmpnltps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnltps instruction.</summary>
[MethodToken(100666723)]
public static void vcmpnltps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnltsd instruction.</summary>
[MethodToken(100666724)]
public static void vcmpnltsd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpnltsd instruction.</summary>
[MethodToken(100666725)]
public static void vcmpnltsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpnltsd instruction.</summary>
[MethodToken(100666726)]
public static void vcmpnltsd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnltsd instruction.</summary>
[MethodToken(100666727)]
public static void vcmpnltsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnltss instruction.</summary>
[MethodToken(100666728)]
public static void vcmpnltss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpnltss instruction.</summary>
[MethodToken(100666729)]
public static void vcmpnltss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpnltss instruction.</summary>
[MethodToken(100666730)]
public static void vcmpnltss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpnltss instruction.</summary>
[MethodToken(100666731)]
public static void vcmpnltss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpord_spd instruction.</summary>
[MethodToken(100666732)]
public static void vcmpord_spd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpord_spd instruction.</summary>
[MethodToken(100666733)]
public static void vcmpord_spd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpord_spd instruction.</summary>
[MethodToken(100666734)]
public static void vcmpord_spd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpord_spd instruction.</summary>
[MethodToken(100666735)]
public static void vcmpord_spd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpord_spd instruction.</summary>
[MethodToken(100666736)]
public static void vcmpord_spd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpord_spd instruction.</summary>
[MethodToken(100666737)]
public static void vcmpord_spd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpord_spd instruction.</summary>
[MethodToken(100666738)]
public static void vcmpord_spd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpord_spd instruction.</summary>
[MethodToken(100666739)]
public static void vcmpord_spd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpord_spd instruction.</summary>
[MethodToken(100666740)]
public static void vcmpord_spd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpord_spd instruction.</summary>
[MethodToken(100666741)]
public static void vcmpord_spd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpord_sps instruction.</summary>
[MethodToken(100666742)]
public static void vcmpord_sps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpord_sps instruction.</summary>
[MethodToken(100666743)]
public static void vcmpord_sps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpord_sps instruction.</summary>
[MethodToken(100666744)]
public static void vcmpord_sps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpord_sps instruction.</summary>
[MethodToken(100666745)]
public static void vcmpord_sps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpord_sps instruction.</summary>
[MethodToken(100666746)]
public static void vcmpord_sps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpord_sps instruction.</summary>
[MethodToken(100666747)]
public static void vcmpord_sps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpord_sps instruction.</summary>
[MethodToken(100666748)]
public static void vcmpord_sps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpord_sps instruction.</summary>
[MethodToken(100666749)]
public static void vcmpord_sps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpord_sps instruction.</summary>
[MethodToken(100666750)]
public static void vcmpord_sps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpord_sps instruction.</summary>
[MethodToken(100666751)]
public static void vcmpord_sps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpord_ssd instruction.</summary>
[MethodToken(100666752)]
public static void vcmpord_ssd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpord_ssd instruction.</summary>
[MethodToken(100666753)]
public static void vcmpord_ssd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpord_ssd instruction.</summary>
[MethodToken(100666754)]
public static void vcmpord_ssd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpord_ssd instruction.</summary>
[MethodToken(100666755)]
public static void vcmpord_ssd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpord_sss instruction.</summary>
[MethodToken(100666756)]
public static void vcmpord_sss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpord_sss instruction.</summary>
[MethodToken(100666757)]
public static void vcmpord_sss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpord_sss instruction.</summary>
[MethodToken(100666758)]
public static void vcmpord_sss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpord_sss instruction.</summary>
[MethodToken(100666759)]
public static void vcmpord_sss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpordpd instruction.</summary>
[MethodToken(100666760)]
public static void vcmpordpd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpordpd instruction.</summary>
[MethodToken(100666761)]
public static void vcmpordpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpordpd instruction.</summary>
[MethodToken(100666762)]
public static void vcmpordpd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpordpd instruction.</summary>
[MethodToken(100666763)]
public static void vcmpordpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpordpd instruction.</summary>
[MethodToken(100666764)]
public static void vcmpordpd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpordpd instruction.</summary>
[MethodToken(100666765)]
public static void vcmpordpd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpordpd instruction.</summary>
[MethodToken(100666766)]
public static void vcmpordpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpordpd instruction.</summary>
[MethodToken(100666767)]
public static void vcmpordpd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpordpd instruction.</summary>
[MethodToken(100666768)]
public static void vcmpordpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpordpd instruction.</summary>
[MethodToken(100666769)]
public static void vcmpordpd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpordps instruction.</summary>
[MethodToken(100666770)]
public static void vcmpordps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpordps instruction.</summary>
[MethodToken(100666771)]
public static void vcmpordps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpordps instruction.</summary>
[MethodToken(100666772)]
public static void vcmpordps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpordps instruction.</summary>
[MethodToken(100666773)]
public static void vcmpordps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpordps instruction.</summary>
[MethodToken(100666774)]
public static void vcmpordps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpordps instruction.</summary>
[MethodToken(100666775)]
public static void vcmpordps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpordps instruction.</summary>
[MethodToken(100666776)]
public static void vcmpordps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpordps instruction.</summary>
[MethodToken(100666777)]
public static void vcmpordps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpordps instruction.</summary>
[MethodToken(100666778)]
public static void vcmpordps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpordps instruction.</summary>
[MethodToken(100666779)]
public static void vcmpordps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpordsd instruction.</summary>
[MethodToken(100666780)]
public static void vcmpordsd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpordsd instruction.</summary>
[MethodToken(100666781)]
public static void vcmpordsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpordsd instruction.</summary>
[MethodToken(100666782)]
public static void vcmpordsd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpordsd instruction.</summary>
[MethodToken(100666783)]
public static void vcmpordsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpordss instruction.</summary>
[MethodToken(100666784)]
public static void vcmpordss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpordss instruction.</summary>
[MethodToken(100666785)]
public static void vcmpordss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpordss instruction.</summary>
[MethodToken(100666786)]
public static void vcmpordss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpordss instruction.</summary>
[MethodToken(100666787)]
public static void vcmpordss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmppd instruction.<br/>
		/// <br/>
		/// <c>VCMPPD k1 {k2}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666788)]
public static void vcmppd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vcmppd instruction.<br/>
		/// <br/>
		/// <c>VCMPPD xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666789)]
public static void vcmppd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vcmppd instruction.<br/>
		/// <br/>
		/// <c>VCMPPD k1 {k2}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666790)]
public static void vcmppd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vcmppd instruction.<br/>
		/// <br/>
		/// <c>VCMPPD ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666791)]
public static void vcmppd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vcmppd instruction.<br/>
		/// <br/>
		/// <c>VCMPPD k1 {k2}, zmm2, zmm3/m512/m64bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666792)]
public static void vcmppd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, sbyte imm) {}
		/// <summary>vcmppd instruction.<br/>
		/// <br/>
		/// <c>VCMPPD k1 {k2}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666793)]
public static void vcmppd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vcmppd instruction.<br/>
		/// <br/>
		/// <c>VCMPPD xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666794)]
public static void vcmppd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vcmppd instruction.<br/>
		/// <br/>
		/// <c>VCMPPD k1 {k2}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666795)]
public static void vcmppd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vcmppd instruction.<br/>
		/// <br/>
		/// <c>VCMPPD ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666796)]
public static void vcmppd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vcmppd instruction.<br/>
		/// <br/>
		/// <c>VCMPPD k1 {k2}, zmm2, zmm3/m512/m64bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666797)]
public static void vcmppd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vcmppd instruction.<br/>
		/// <br/>
		/// <c>VCMPPD k1 {k2}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666798)]
public static void vcmppd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vcmppd instruction.<br/>
		/// <br/>
		/// <c>VCMPPD xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666799)]
public static void vcmppd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vcmppd instruction.<br/>
		/// <br/>
		/// <c>VCMPPD k1 {k2}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666800)]
public static void vcmppd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vcmppd instruction.<br/>
		/// <br/>
		/// <c>VCMPPD ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666801)]
public static void vcmppd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vcmppd instruction.<br/>
		/// <br/>
		/// <c>VCMPPD k1 {k2}, zmm2, zmm3/m512/m64bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666802)]
public static void vcmppd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, byte imm) {}
		/// <summary>vcmppd instruction.<br/>
		/// <br/>
		/// <c>VCMPPD k1 {k2}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666803)]
public static void vcmppd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vcmppd instruction.<br/>
		/// <br/>
		/// <c>VCMPPD xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666804)]
public static void vcmppd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vcmppd instruction.<br/>
		/// <br/>
		/// <c>VCMPPD k1 {k2}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666805)]
public static void vcmppd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vcmppd instruction.<br/>
		/// <br/>
		/// <c>VCMPPD ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666806)]
public static void vcmppd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vcmppd instruction.<br/>
		/// <br/>
		/// <c>VCMPPD k1 {k2}, zmm2, zmm3/m512/m64bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666807)]
public static void vcmppd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vcmpps instruction.<br/>
		/// <br/>
		/// <c>VCMPPS k1 {k2}, xmm2, xmm3/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666808)]
public static void vcmpps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vcmpps instruction.<br/>
		/// <br/>
		/// <c>VCMPPS xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666809)]
public static void vcmpps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vcmpps instruction.<br/>
		/// <br/>
		/// <c>VCMPPS k1 {k2}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666810)]
public static void vcmpps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vcmpps instruction.<br/>
		/// <br/>
		/// <c>VCMPPS ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666811)]
public static void vcmpps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vcmpps instruction.<br/>
		/// <br/>
		/// <c>VCMPPS k1 {k2}, zmm2, zmm3/m512/m32bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666812)]
public static void vcmpps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, sbyte imm) {}
		/// <summary>vcmpps instruction.<br/>
		/// <br/>
		/// <c>VCMPPS k1 {k2}, xmm2, xmm3/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666813)]
public static void vcmpps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vcmpps instruction.<br/>
		/// <br/>
		/// <c>VCMPPS xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666814)]
public static void vcmpps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vcmpps instruction.<br/>
		/// <br/>
		/// <c>VCMPPS k1 {k2}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666815)]
public static void vcmpps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vcmpps instruction.<br/>
		/// <br/>
		/// <c>VCMPPS ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666816)]
public static void vcmpps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vcmpps instruction.<br/>
		/// <br/>
		/// <c>VCMPPS k1 {k2}, zmm2, zmm3/m512/m32bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666817)]
public static void vcmpps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vcmpps instruction.<br/>
		/// <br/>
		/// <c>VCMPPS k1 {k2}, xmm2, xmm3/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666818)]
public static void vcmpps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vcmpps instruction.<br/>
		/// <br/>
		/// <c>VCMPPS xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666819)]
public static void vcmpps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vcmpps instruction.<br/>
		/// <br/>
		/// <c>VCMPPS k1 {k2}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666820)]
public static void vcmpps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vcmpps instruction.<br/>
		/// <br/>
		/// <c>VCMPPS ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666821)]
public static void vcmpps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vcmpps instruction.<br/>
		/// <br/>
		/// <c>VCMPPS k1 {k2}, zmm2, zmm3/m512/m32bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666822)]
public static void vcmpps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, byte imm) {}
		/// <summary>vcmpps instruction.<br/>
		/// <br/>
		/// <c>VCMPPS k1 {k2}, xmm2, xmm3/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666823)]
public static void vcmpps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vcmpps instruction.<br/>
		/// <br/>
		/// <c>VCMPPS xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666824)]
public static void vcmpps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vcmpps instruction.<br/>
		/// <br/>
		/// <c>VCMPPS k1 {k2}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666825)]
public static void vcmpps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vcmpps instruction.<br/>
		/// <br/>
		/// <c>VCMPPS ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666826)]
public static void vcmpps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vcmpps instruction.<br/>
		/// <br/>
		/// <c>VCMPPS k1 {k2}, zmm2, zmm3/m512/m32bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666827)]
public static void vcmpps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vcmpsd instruction.<br/>
		/// <br/>
		/// <c>VCMPSD k1 {k2}, xmm2, xmm3/m64{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W1 C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666828)]
public static void vcmpsd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vcmpsd instruction.<br/>
		/// <br/>
		/// <c>VCMPSD xmm1, xmm2, xmm3/m64, imm8</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F2.0F.WIG C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666829)]
public static void vcmpsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vcmpsd instruction.<br/>
		/// <br/>
		/// <c>VCMPSD k1 {k2}, xmm2, xmm3/m64{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W1 C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666830)]
public static void vcmpsd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vcmpsd instruction.<br/>
		/// <br/>
		/// <c>VCMPSD xmm1, xmm2, xmm3/m64, imm8</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F2.0F.WIG C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666831)]
public static void vcmpsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vcmpsd instruction.<br/>
		/// <br/>
		/// <c>VCMPSD k1 {k2}, xmm2, xmm3/m64{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W1 C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666832)]
public static void vcmpsd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vcmpsd instruction.<br/>
		/// <br/>
		/// <c>VCMPSD xmm1, xmm2, xmm3/m64, imm8</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F2.0F.WIG C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666833)]
public static void vcmpsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vcmpsd instruction.<br/>
		/// <br/>
		/// <c>VCMPSD k1 {k2}, xmm2, xmm3/m64{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W1 C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666834)]
public static void vcmpsd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vcmpsd instruction.<br/>
		/// <br/>
		/// <c>VCMPSD xmm1, xmm2, xmm3/m64, imm8</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F2.0F.WIG C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666835)]
public static void vcmpsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vcmpss instruction.<br/>
		/// <br/>
		/// <c>VCMPSS k1 {k2}, xmm2, xmm3/m32{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W0 C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666836)]
public static void vcmpss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vcmpss instruction.<br/>
		/// <br/>
		/// <c>VCMPSS xmm1, xmm2, xmm3/m32, imm8</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F3.0F.WIG C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666837)]
public static void vcmpss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vcmpss instruction.<br/>
		/// <br/>
		/// <c>VCMPSS k1 {k2}, xmm2, xmm3/m32{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W0 C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666838)]
public static void vcmpss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vcmpss instruction.<br/>
		/// <br/>
		/// <c>VCMPSS xmm1, xmm2, xmm3/m32, imm8</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F3.0F.WIG C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666839)]
public static void vcmpss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vcmpss instruction.<br/>
		/// <br/>
		/// <c>VCMPSS k1 {k2}, xmm2, xmm3/m32{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W0 C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666840)]
public static void vcmpss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vcmpss instruction.<br/>
		/// <br/>
		/// <c>VCMPSS xmm1, xmm2, xmm3/m32, imm8</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F3.0F.WIG C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666841)]
public static void vcmpss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vcmpss instruction.<br/>
		/// <br/>
		/// <c>VCMPSS k1 {k2}, xmm2, xmm3/m32{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W0 C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666842)]
public static void vcmpss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vcmpss instruction.<br/>
		/// <br/>
		/// <c>VCMPSS xmm1, xmm2, xmm3/m32, imm8</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F3.0F.WIG C2 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666843)]
public static void vcmpss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vcmptrue_uspd instruction.</summary>
[MethodToken(100666844)]
public static void vcmptrue_uspd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmptrue_uspd instruction.</summary>
[MethodToken(100666845)]
public static void vcmptrue_uspd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmptrue_uspd instruction.</summary>
[MethodToken(100666846)]
public static void vcmptrue_uspd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmptrue_uspd instruction.</summary>
[MethodToken(100666847)]
public static void vcmptrue_uspd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmptrue_uspd instruction.</summary>
[MethodToken(100666848)]
public static void vcmptrue_uspd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmptrue_uspd instruction.</summary>
[MethodToken(100666849)]
public static void vcmptrue_uspd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmptrue_uspd instruction.</summary>
[MethodToken(100666850)]
public static void vcmptrue_uspd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmptrue_uspd instruction.</summary>
[MethodToken(100666851)]
public static void vcmptrue_uspd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmptrue_uspd instruction.</summary>
[MethodToken(100666852)]
public static void vcmptrue_uspd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmptrue_uspd instruction.</summary>
[MethodToken(100666853)]
public static void vcmptrue_uspd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmptrue_usps instruction.</summary>
[MethodToken(100666854)]
public static void vcmptrue_usps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmptrue_usps instruction.</summary>
[MethodToken(100666855)]
public static void vcmptrue_usps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmptrue_usps instruction.</summary>
[MethodToken(100666856)]
public static void vcmptrue_usps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmptrue_usps instruction.</summary>
[MethodToken(100666857)]
public static void vcmptrue_usps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmptrue_usps instruction.</summary>
[MethodToken(100666858)]
public static void vcmptrue_usps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmptrue_usps instruction.</summary>
[MethodToken(100666859)]
public static void vcmptrue_usps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmptrue_usps instruction.</summary>
[MethodToken(100666860)]
public static void vcmptrue_usps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmptrue_usps instruction.</summary>
[MethodToken(100666861)]
public static void vcmptrue_usps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmptrue_usps instruction.</summary>
[MethodToken(100666862)]
public static void vcmptrue_usps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmptrue_usps instruction.</summary>
[MethodToken(100666863)]
public static void vcmptrue_usps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmptrue_ussd instruction.</summary>
[MethodToken(100666864)]
public static void vcmptrue_ussd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmptrue_ussd instruction.</summary>
[MethodToken(100666865)]
public static void vcmptrue_ussd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmptrue_ussd instruction.</summary>
[MethodToken(100666866)]
public static void vcmptrue_ussd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmptrue_ussd instruction.</summary>
[MethodToken(100666867)]
public static void vcmptrue_ussd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmptrue_usss instruction.</summary>
[MethodToken(100666868)]
public static void vcmptrue_usss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmptrue_usss instruction.</summary>
[MethodToken(100666869)]
public static void vcmptrue_usss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmptrue_usss instruction.</summary>
[MethodToken(100666870)]
public static void vcmptrue_usss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmptrue_usss instruction.</summary>
[MethodToken(100666871)]
public static void vcmptrue_usss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmptruepd instruction.</summary>
[MethodToken(100666872)]
public static void vcmptruepd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmptruepd instruction.</summary>
[MethodToken(100666873)]
public static void vcmptruepd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmptruepd instruction.</summary>
[MethodToken(100666874)]
public static void vcmptruepd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmptruepd instruction.</summary>
[MethodToken(100666875)]
public static void vcmptruepd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmptruepd instruction.</summary>
[MethodToken(100666876)]
public static void vcmptruepd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmptruepd instruction.</summary>
[MethodToken(100666877)]
public static void vcmptruepd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmptruepd instruction.</summary>
[MethodToken(100666878)]
public static void vcmptruepd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmptruepd instruction.</summary>
[MethodToken(100666879)]
public static void vcmptruepd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmptruepd instruction.</summary>
[MethodToken(100666880)]
public static void vcmptruepd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmptruepd instruction.</summary>
[MethodToken(100666881)]
public static void vcmptruepd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmptrueps instruction.</summary>
[MethodToken(100666882)]
public static void vcmptrueps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmptrueps instruction.</summary>
[MethodToken(100666883)]
public static void vcmptrueps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmptrueps instruction.</summary>
[MethodToken(100666884)]
public static void vcmptrueps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmptrueps instruction.</summary>
[MethodToken(100666885)]
public static void vcmptrueps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmptrueps instruction.</summary>
[MethodToken(100666886)]
public static void vcmptrueps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmptrueps instruction.</summary>
[MethodToken(100666887)]
public static void vcmptrueps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmptrueps instruction.</summary>
[MethodToken(100666888)]
public static void vcmptrueps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmptrueps instruction.</summary>
[MethodToken(100666889)]
public static void vcmptrueps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmptrueps instruction.</summary>
[MethodToken(100666890)]
public static void vcmptrueps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmptrueps instruction.</summary>
[MethodToken(100666891)]
public static void vcmptrueps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmptruesd instruction.</summary>
[MethodToken(100666892)]
public static void vcmptruesd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmptruesd instruction.</summary>
[MethodToken(100666893)]
public static void vcmptruesd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmptruesd instruction.</summary>
[MethodToken(100666894)]
public static void vcmptruesd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmptruesd instruction.</summary>
[MethodToken(100666895)]
public static void vcmptruesd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmptruess instruction.</summary>
[MethodToken(100666896)]
public static void vcmptruess(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmptruess instruction.</summary>
[MethodToken(100666897)]
public static void vcmptruess(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmptruess instruction.</summary>
[MethodToken(100666898)]
public static void vcmptruess(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmptruess instruction.</summary>
[MethodToken(100666899)]
public static void vcmptruess(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpunord_spd instruction.</summary>
[MethodToken(100666900)]
public static void vcmpunord_spd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpunord_spd instruction.</summary>
[MethodToken(100666901)]
public static void vcmpunord_spd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpunord_spd instruction.</summary>
[MethodToken(100666902)]
public static void vcmpunord_spd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpunord_spd instruction.</summary>
[MethodToken(100666903)]
public static void vcmpunord_spd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpunord_spd instruction.</summary>
[MethodToken(100666904)]
public static void vcmpunord_spd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpunord_spd instruction.</summary>
[MethodToken(100666905)]
public static void vcmpunord_spd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpunord_spd instruction.</summary>
[MethodToken(100666906)]
public static void vcmpunord_spd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpunord_spd instruction.</summary>
[MethodToken(100666907)]
public static void vcmpunord_spd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpunord_spd instruction.</summary>
[MethodToken(100666908)]
public static void vcmpunord_spd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpunord_spd instruction.</summary>
[MethodToken(100666909)]
public static void vcmpunord_spd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpunord_sps instruction.</summary>
[MethodToken(100666910)]
public static void vcmpunord_sps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpunord_sps instruction.</summary>
[MethodToken(100666911)]
public static void vcmpunord_sps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpunord_sps instruction.</summary>
[MethodToken(100666912)]
public static void vcmpunord_sps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpunord_sps instruction.</summary>
[MethodToken(100666913)]
public static void vcmpunord_sps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpunord_sps instruction.</summary>
[MethodToken(100666914)]
public static void vcmpunord_sps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpunord_sps instruction.</summary>
[MethodToken(100666915)]
public static void vcmpunord_sps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpunord_sps instruction.</summary>
[MethodToken(100666916)]
public static void vcmpunord_sps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpunord_sps instruction.</summary>
[MethodToken(100666917)]
public static void vcmpunord_sps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpunord_sps instruction.</summary>
[MethodToken(100666918)]
public static void vcmpunord_sps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpunord_sps instruction.</summary>
[MethodToken(100666919)]
public static void vcmpunord_sps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpunord_ssd instruction.</summary>
[MethodToken(100666920)]
public static void vcmpunord_ssd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpunord_ssd instruction.</summary>
[MethodToken(100666921)]
public static void vcmpunord_ssd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpunord_ssd instruction.</summary>
[MethodToken(100666922)]
public static void vcmpunord_ssd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpunord_ssd instruction.</summary>
[MethodToken(100666923)]
public static void vcmpunord_ssd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpunord_sss instruction.</summary>
[MethodToken(100666924)]
public static void vcmpunord_sss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpunord_sss instruction.</summary>
[MethodToken(100666925)]
public static void vcmpunord_sss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpunord_sss instruction.</summary>
[MethodToken(100666926)]
public static void vcmpunord_sss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpunord_sss instruction.</summary>
[MethodToken(100666927)]
public static void vcmpunord_sss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpunordpd instruction.</summary>
[MethodToken(100666928)]
public static void vcmpunordpd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpunordpd instruction.</summary>
[MethodToken(100666929)]
public static void vcmpunordpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpunordpd instruction.</summary>
[MethodToken(100666930)]
public static void vcmpunordpd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpunordpd instruction.</summary>
[MethodToken(100666931)]
public static void vcmpunordpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpunordpd instruction.</summary>
[MethodToken(100666932)]
public static void vcmpunordpd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpunordpd instruction.</summary>
[MethodToken(100666933)]
public static void vcmpunordpd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpunordpd instruction.</summary>
[MethodToken(100666934)]
public static void vcmpunordpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpunordpd instruction.</summary>
[MethodToken(100666935)]
public static void vcmpunordpd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpunordpd instruction.</summary>
[MethodToken(100666936)]
public static void vcmpunordpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpunordpd instruction.</summary>
[MethodToken(100666937)]
public static void vcmpunordpd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpunordps instruction.</summary>
[MethodToken(100666938)]
public static void vcmpunordps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpunordps instruction.</summary>
[MethodToken(100666939)]
public static void vcmpunordps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpunordps instruction.</summary>
[MethodToken(100666940)]
public static void vcmpunordps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpunordps instruction.</summary>
[MethodToken(100666941)]
public static void vcmpunordps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcmpunordps instruction.</summary>
[MethodToken(100666942)]
public static void vcmpunordps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcmpunordps instruction.</summary>
[MethodToken(100666943)]
public static void vcmpunordps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpunordps instruction.</summary>
[MethodToken(100666944)]
public static void vcmpunordps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpunordps instruction.</summary>
[MethodToken(100666945)]
public static void vcmpunordps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpunordps instruction.</summary>
[MethodToken(100666946)]
public static void vcmpunordps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpunordps instruction.</summary>
[MethodToken(100666947)]
public static void vcmpunordps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpunordsd instruction.</summary>
[MethodToken(100666948)]
public static void vcmpunordsd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpunordsd instruction.</summary>
[MethodToken(100666949)]
public static void vcmpunordsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpunordsd instruction.</summary>
[MethodToken(100666950)]
public static void vcmpunordsd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpunordsd instruction.</summary>
[MethodToken(100666951)]
public static void vcmpunordsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpunordss instruction.</summary>
[MethodToken(100666952)]
public static void vcmpunordss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpunordss instruction.</summary>
[MethodToken(100666953)]
public static void vcmpunordss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcmpunordss instruction.</summary>
[MethodToken(100666954)]
public static void vcmpunordss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcmpunordss instruction.</summary>
[MethodToken(100666955)]
public static void vcmpunordss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcomisd instruction.<br/>
		/// <br/>
		/// <c>VCOMISD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F.WIG 2F /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCOMISD xmm1, xmm2/m64{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F.W1 2F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666956)]
public static void vcomisd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vcomisd instruction.<br/>
		/// <br/>
		/// <c>VCOMISD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F.WIG 2F /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCOMISD xmm1, xmm2/m64{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F.W1 2F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666957)]
public static void vcomisd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcomiss instruction.<br/>
		/// <br/>
		/// <c>VCOMISS xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.0F.WIG 2F /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCOMISS xmm1, xmm2/m32{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.0F.W0 2F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666958)]
public static void vcomiss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vcomiss instruction.<br/>
		/// <br/>
		/// <c>VCOMISS xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.0F.WIG 2F /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCOMISS xmm1, xmm2/m32{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.0F.W0 2F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666959)]
public static void vcomiss(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcompresspd instruction.<br/>
		/// <br/>
		/// <c>VCOMPRESSPD xmm1/m128 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 8A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666960)]
public static void vcompresspd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vcompresspd instruction.<br/>
		/// <br/>
		/// <c>VCOMPRESSPD xmm1/m128 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 8A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666961)]
public static void vcompresspd(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vcompresspd instruction.<br/>
		/// <br/>
		/// <c>VCOMPRESSPD ymm1/m256 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 8A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666962)]
public static void vcompresspd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vcompresspd instruction.<br/>
		/// <br/>
		/// <c>VCOMPRESSPD ymm1/m256 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 8A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666963)]
public static void vcompresspd(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vcompresspd instruction.<br/>
		/// <br/>
		/// <c>VCOMPRESSPD zmm1/m512 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 8A /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666964)]
public static void vcompresspd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vcompresspd instruction.<br/>
		/// <br/>
		/// <c>VCOMPRESSPD zmm1/m512 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 8A /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666965)]
public static void vcompresspd(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vcompressps instruction.<br/>
		/// <br/>
		/// <c>VCOMPRESSPS xmm1/m128 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 8A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666966)]
public static void vcompressps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vcompressps instruction.<br/>
		/// <br/>
		/// <c>VCOMPRESSPS xmm1/m128 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 8A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666967)]
public static void vcompressps(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vcompressps instruction.<br/>
		/// <br/>
		/// <c>VCOMPRESSPS ymm1/m256 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 8A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666968)]
public static void vcompressps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vcompressps instruction.<br/>
		/// <br/>
		/// <c>VCOMPRESSPS ymm1/m256 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 8A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666969)]
public static void vcompressps(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vcompressps instruction.<br/>
		/// <br/>
		/// <c>VCOMPRESSPS zmm1/m512 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 8A /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666970)]
public static void vcompressps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vcompressps instruction.<br/>
		/// <br/>
		/// <c>VCOMPRESSPS zmm1/m512 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 8A /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666971)]
public static void vcompressps(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vcvtdq2pd instruction.<br/>
		/// <br/>
		/// <c>VCVTDQ2PD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>VEX.128.F3.0F.WIG E6 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTDQ2PD xmm1 {k1}{z}, xmm2/m64/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F.W0 E6 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666972)]
public static void vcvtdq2pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvtdq2pd instruction.<br/>
		/// <br/>
		/// <c>VCVTDQ2PD ymm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.256.F3.0F.WIG E6 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTDQ2PD ymm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F.W0 E6 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666973)]
public static void vcvtdq2pd(AssemblerRegisterYMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvtdq2pd instruction.<br/>
		/// <br/>
		/// <c>VCVTDQ2PD zmm1 {k1}{z}, ymm2/m256/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F.W0 E6 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666974)]
public static void vcvtdq2pd(AssemblerRegisterZMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vcvtdq2pd instruction.<br/>
		/// <br/>
		/// <c>VCVTDQ2PD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>VEX.128.F3.0F.WIG E6 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTDQ2PD xmm1 {k1}{z}, xmm2/m64/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F.W0 E6 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666975)]
public static void vcvtdq2pd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtdq2pd instruction.<br/>
		/// <br/>
		/// <c>VCVTDQ2PD ymm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.256.F3.0F.WIG E6 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTDQ2PD ymm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F.W0 E6 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666976)]
public static void vcvtdq2pd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtdq2pd instruction.<br/>
		/// <br/>
		/// <c>VCVTDQ2PD zmm1 {k1}{z}, ymm2/m256/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F.W0 E6 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666977)]
public static void vcvtdq2pd(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtdq2ps instruction.<br/>
		/// <br/>
		/// <c>VCVTDQ2PS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 5B /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTDQ2PS xmm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 5B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666978)]
public static void vcvtdq2ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvtdq2ps instruction.<br/>
		/// <br/>
		/// <c>VCVTDQ2PS ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 5B /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTDQ2PS ymm1 {k1}{z}, ymm2/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 5B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666979)]
public static void vcvtdq2ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vcvtdq2ps instruction.<br/>
		/// <br/>
		/// <c>VCVTDQ2PS zmm1 {k1}{z}, zmm2/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 5B /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666980)]
public static void vcvtdq2ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vcvtdq2ps instruction.<br/>
		/// <br/>
		/// <c>VCVTDQ2PS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 5B /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTDQ2PS xmm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 5B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666981)]
public static void vcvtdq2ps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtdq2ps instruction.<br/>
		/// <br/>
		/// <c>VCVTDQ2PS ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 5B /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTDQ2PS ymm1 {k1}{z}, ymm2/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 5B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666982)]
public static void vcvtdq2ps(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtdq2ps instruction.<br/>
		/// <br/>
		/// <c>VCVTDQ2PS zmm1 {k1}{z}, zmm2/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 5B /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666983)]
public static void vcvtdq2ps(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtne2ps2bf16 instruction.<br/>
		/// <br/>
		/// <c>VCVTNE2PS2BF16 xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.F2.0F38.W0 72 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_BF16</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666984)]
public static void vcvtne2ps2bf16(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcvtne2ps2bf16 instruction.<br/>
		/// <br/>
		/// <c>VCVTNE2PS2BF16 ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.F2.0F38.W0 72 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_BF16</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666985)]
public static void vcvtne2ps2bf16(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vcvtne2ps2bf16 instruction.<br/>
		/// <br/>
		/// <c>VCVTNE2PS2BF16 zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.F2.0F38.W0 72 /r</c><br/>
		/// <br/>
		/// <c>AVX512F and AVX512_BF16</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666986)]
public static void vcvtne2ps2bf16(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vcvtne2ps2bf16 instruction.<br/>
		/// <br/>
		/// <c>VCVTNE2PS2BF16 xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.F2.0F38.W0 72 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_BF16</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666987)]
public static void vcvtne2ps2bf16(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcvtne2ps2bf16 instruction.<br/>
		/// <br/>
		/// <c>VCVTNE2PS2BF16 ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.F2.0F38.W0 72 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_BF16</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666988)]
public static void vcvtne2ps2bf16(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcvtne2ps2bf16 instruction.<br/>
		/// <br/>
		/// <c>VCVTNE2PS2BF16 zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.F2.0F38.W0 72 /r</c><br/>
		/// <br/>
		/// <c>AVX512F and AVX512_BF16</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666989)]
public static void vcvtne2ps2bf16(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcvtneps2bf16 instruction.<br/>
		/// <br/>
		/// <c>VCVTNEPS2BF16 xmm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 72 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_BF16</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666990)]
public static void vcvtneps2bf16(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvtneps2bf16 instruction.<br/>
		/// <br/>
		/// <c>VCVTNEPS2BF16 xmm1 {k1}{z}, ymm2/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 72 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_BF16</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666991)]
public static void vcvtneps2bf16(AssemblerRegisterXMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vcvtneps2bf16 instruction.<br/>
		/// <br/>
		/// <c>VCVTNEPS2BF16 ymm1 {k1}{z}, zmm2/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 72 /r</c><br/>
		/// <br/>
		/// <c>AVX512F and AVX512_BF16</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666992)]
public static void vcvtneps2bf16(AssemblerRegisterYMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vcvtneps2bf16 instruction.<br/>
		/// <br/>
		/// <c>VCVTNEPS2BF16 xmm1 {k1}{z}, ymm2/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 72 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_BF16</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTNEPS2BF16 xmm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 72 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_BF16</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666993)]
public static void vcvtneps2bf16(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtneps2bf16 instruction.<br/>
		/// <br/>
		/// <c>VCVTNEPS2BF16 ymm1 {k1}{z}, zmm2/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 72 /r</c><br/>
		/// <br/>
		/// <c>AVX512F and AVX512_BF16</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666994)]
public static void vcvtneps2bf16(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtneps2bf16x instruction.<br/>
		/// <br/>
		/// <c>VCVTNEPS2BF16 xmm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 72 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_BF16</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666995)]
public static void vcvtneps2bf16x(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtneps2bf16y instruction.<br/>
		/// <br/>
		/// <c>VCVTNEPS2BF16 xmm1 {k1}{z}, ymm2/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 72 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_BF16</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666996)]
public static void vcvtneps2bf16y(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtpd2dq instruction.<br/>
		/// <br/>
		/// <c>VCVTPD2DQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.F2.0F.WIG E6 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTPD2DQ xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.F2.0F.W1 E6 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666997)]
public static void vcvtpd2dq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvtpd2dq instruction.<br/>
		/// <br/>
		/// <c>VCVTPD2DQ xmm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.F2.0F.WIG E6 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTPD2DQ xmm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.F2.0F.W1 E6 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666998)]
public static void vcvtpd2dq(AssemblerRegisterXMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vcvtpd2dq instruction.<br/>
		/// <br/>
		/// <c>VCVTPD2DQ ymm1 {k1}{z}, zmm2/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.F2.0F.W1 E6 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100666999)]
public static void vcvtpd2dq(AssemblerRegisterYMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vcvtpd2dq instruction.<br/>
		/// <br/>
		/// <c>VCVTPD2DQ xmm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.F2.0F.WIG E6 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTPD2DQ xmm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.F2.0F.W1 E6 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTPD2DQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.F2.0F.WIG E6 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTPD2DQ xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.F2.0F.W1 E6 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667000)]
public static void vcvtpd2dq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtpd2dq instruction.<br/>
		/// <br/>
		/// <c>VCVTPD2DQ ymm1 {k1}{z}, zmm2/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.F2.0F.W1 E6 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667001)]
public static void vcvtpd2dq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtpd2dqx instruction.<br/>
		/// <br/>
		/// <c>VCVTPD2DQ xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.F2.0F.W1 E6 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667002)]
public static void vcvtpd2dqx(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtpd2dqy instruction.<br/>
		/// <br/>
		/// <c>VCVTPD2DQ xmm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.F2.0F.W1 E6 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667003)]
public static void vcvtpd2dqy(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtpd2ps instruction.<br/>
		/// <br/>
		/// <c>VCVTPD2PS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 5A /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTPD2PS xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 5A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667004)]
public static void vcvtpd2ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvtpd2ps instruction.<br/>
		/// <br/>
		/// <c>VCVTPD2PS xmm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 5A /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTPD2PS xmm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 5A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667005)]
public static void vcvtpd2ps(AssemblerRegisterXMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vcvtpd2ps instruction.<br/>
		/// <br/>
		/// <c>VCVTPD2PS ymm1 {k1}{z}, zmm2/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 5A /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667006)]
public static void vcvtpd2ps(AssemblerRegisterYMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vcvtpd2ps instruction.<br/>
		/// <br/>
		/// <c>VCVTPD2PS xmm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 5A /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTPD2PS xmm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 5A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTPD2PS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 5A /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTPD2PS xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 5A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667007)]
public static void vcvtpd2ps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtpd2ps instruction.<br/>
		/// <br/>
		/// <c>VCVTPD2PS ymm1 {k1}{z}, zmm2/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 5A /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667008)]
public static void vcvtpd2ps(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtpd2psx instruction.<br/>
		/// <br/>
		/// <c>VCVTPD2PS xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 5A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667009)]
public static void vcvtpd2psx(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtpd2psy instruction.<br/>
		/// <br/>
		/// <c>VCVTPD2PS xmm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 5A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667010)]
public static void vcvtpd2psy(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtpd2qq instruction.<br/>
		/// <br/>
		/// <c>VCVTPD2QQ xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 7B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667011)]
public static void vcvtpd2qq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvtpd2qq instruction.<br/>
		/// <br/>
		/// <c>VCVTPD2QQ ymm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 7B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667012)]
public static void vcvtpd2qq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vcvtpd2qq instruction.<br/>
		/// <br/>
		/// <c>VCVTPD2QQ zmm1 {k1}{z}, zmm2/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 7B /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667013)]
public static void vcvtpd2qq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vcvtpd2qq instruction.<br/>
		/// <br/>
		/// <c>VCVTPD2QQ xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 7B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667014)]
public static void vcvtpd2qq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtpd2qq instruction.<br/>
		/// <br/>
		/// <c>VCVTPD2QQ ymm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 7B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667015)]
public static void vcvtpd2qq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtpd2qq instruction.<br/>
		/// <br/>
		/// <c>VCVTPD2QQ zmm1 {k1}{z}, zmm2/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 7B /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667016)]
public static void vcvtpd2qq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtpd2udq instruction.<br/>
		/// <br/>
		/// <c>VCVTPD2UDQ xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W1 79 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667017)]
public static void vcvtpd2udq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvtpd2udq instruction.<br/>
		/// <br/>
		/// <c>VCVTPD2UDQ xmm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W1 79 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667018)]
public static void vcvtpd2udq(AssemblerRegisterXMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vcvtpd2udq instruction.<br/>
		/// <br/>
		/// <c>VCVTPD2UDQ ymm1 {k1}{z}, zmm2/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W1 79 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667019)]
public static void vcvtpd2udq(AssemblerRegisterYMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vcvtpd2udq instruction.<br/>
		/// <br/>
		/// <c>VCVTPD2UDQ xmm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W1 79 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTPD2UDQ xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W1 79 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667020)]
public static void vcvtpd2udq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtpd2udq instruction.<br/>
		/// <br/>
		/// <c>VCVTPD2UDQ ymm1 {k1}{z}, zmm2/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W1 79 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667021)]
public static void vcvtpd2udq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtpd2udqx instruction.<br/>
		/// <br/>
		/// <c>VCVTPD2UDQ xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W1 79 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667022)]
public static void vcvtpd2udqx(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtpd2udqy instruction.<br/>
		/// <br/>
		/// <c>VCVTPD2UDQ xmm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W1 79 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667023)]
public static void vcvtpd2udqy(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtpd2uqq instruction.<br/>
		/// <br/>
		/// <c>VCVTPD2UQQ xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 79 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667024)]
public static void vcvtpd2uqq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvtpd2uqq instruction.<br/>
		/// <br/>
		/// <c>VCVTPD2UQQ ymm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 79 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667025)]
public static void vcvtpd2uqq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vcvtpd2uqq instruction.<br/>
		/// <br/>
		/// <c>VCVTPD2UQQ zmm1 {k1}{z}, zmm2/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 79 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667026)]
public static void vcvtpd2uqq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vcvtpd2uqq instruction.<br/>
		/// <br/>
		/// <c>VCVTPD2UQQ xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 79 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667027)]
public static void vcvtpd2uqq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtpd2uqq instruction.<br/>
		/// <br/>
		/// <c>VCVTPD2UQQ ymm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 79 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667028)]
public static void vcvtpd2uqq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtpd2uqq instruction.<br/>
		/// <br/>
		/// <c>VCVTPD2UQQ zmm1 {k1}{z}, zmm2/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 79 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667029)]
public static void vcvtpd2uqq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtph2ps instruction.<br/>
		/// <br/>
		/// <c>VCVTPH2PS xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 13 /r</c><br/>
		/// <br/>
		/// <c>F16C</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTPH2PS xmm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 13 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667030)]
public static void vcvtph2ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvtph2ps instruction.<br/>
		/// <br/>
		/// <c>VCVTPH2PS ymm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 13 /r</c><br/>
		/// <br/>
		/// <c>F16C</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTPH2PS ymm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 13 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667031)]
public static void vcvtph2ps(AssemblerRegisterYMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvtph2ps instruction.<br/>
		/// <br/>
		/// <c>VCVTPH2PS zmm1 {k1}{z}, ymm2/m256{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 13 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667032)]
public static void vcvtph2ps(AssemblerRegisterZMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vcvtph2ps instruction.<br/>
		/// <br/>
		/// <c>VCVTPH2PS xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 13 /r</c><br/>
		/// <br/>
		/// <c>F16C</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTPH2PS xmm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 13 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667033)]
public static void vcvtph2ps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtph2ps instruction.<br/>
		/// <br/>
		/// <c>VCVTPH2PS ymm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 13 /r</c><br/>
		/// <br/>
		/// <c>F16C</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTPH2PS ymm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 13 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667034)]
public static void vcvtph2ps(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtph2ps instruction.<br/>
		/// <br/>
		/// <c>VCVTPH2PS zmm1 {k1}{z}, ymm2/m256{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 13 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667035)]
public static void vcvtph2ps(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtps2dq instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2DQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 5B /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTPS2DQ xmm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 5B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667036)]
public static void vcvtps2dq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvtps2dq instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2DQ ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 5B /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTPS2DQ ymm1 {k1}{z}, ymm2/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 5B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667037)]
public static void vcvtps2dq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vcvtps2dq instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2DQ zmm1 {k1}{z}, zmm2/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 5B /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667038)]
public static void vcvtps2dq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vcvtps2dq instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2DQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 5B /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTPS2DQ xmm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 5B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667039)]
public static void vcvtps2dq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtps2dq instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2DQ ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 5B /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTPS2DQ ymm1 {k1}{z}, ymm2/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 5B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667040)]
public static void vcvtps2dq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtps2dq instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2DQ zmm1 {k1}{z}, zmm2/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 5B /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667041)]
public static void vcvtps2dq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtps2pd instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2PD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 5A /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTPS2PD xmm1 {k1}{z}, xmm2/m64/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 5A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667042)]
public static void vcvtps2pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvtps2pd instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2PD ymm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 5A /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTPS2PD ymm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 5A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667043)]
public static void vcvtps2pd(AssemblerRegisterYMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvtps2pd instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2PD zmm1 {k1}{z}, ymm2/m256/m32bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 5A /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667044)]
public static void vcvtps2pd(AssemblerRegisterZMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vcvtps2pd instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2PD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 5A /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTPS2PD xmm1 {k1}{z}, xmm2/m64/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 5A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667045)]
public static void vcvtps2pd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtps2pd instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2PD ymm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 5A /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTPS2PD ymm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 5A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667046)]
public static void vcvtps2pd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtps2pd instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2PD zmm1 {k1}{z}, ymm2/m256/m32bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 5A /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667047)]
public static void vcvtps2pd(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtps2ph instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2PH xmm1/m64, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 1D /r ib</c><br/>
		/// <br/>
		/// <c>F16C</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTPS2PH xmm1/m64 {k1}{z}, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 1D /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667048)]
public static void vcvtps2ph(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vcvtps2ph instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2PH xmm1/m64, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 1D /r ib</c><br/>
		/// <br/>
		/// <c>F16C</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTPS2PH xmm1/m64 {k1}{z}, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 1D /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667049)]
public static void vcvtps2ph(AssemblerMemoryOperand dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vcvtps2ph instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2PH xmm1/m128, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 1D /r ib</c><br/>
		/// <br/>
		/// <c>F16C</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTPS2PH xmm1/m128 {k1}{z}, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 1D /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667050)]
public static void vcvtps2ph(AssemblerRegisterXMM dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vcvtps2ph instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2PH xmm1/m128, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 1D /r ib</c><br/>
		/// <br/>
		/// <c>F16C</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTPS2PH xmm1/m128 {k1}{z}, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 1D /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667051)]
public static void vcvtps2ph(AssemblerMemoryOperand dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vcvtps2ph instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2PH ymm1/m256 {k1}{z}, zmm2{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 1D /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667052)]
public static void vcvtps2ph(AssemblerRegisterYMM dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vcvtps2ph instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2PH ymm1/m256 {k1}{z}, zmm2{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 1D /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667053)]
public static void vcvtps2ph(AssemblerMemoryOperand dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vcvtps2ph instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2PH xmm1/m64, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 1D /r ib</c><br/>
		/// <br/>
		/// <c>F16C</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTPS2PH xmm1/m64 {k1}{z}, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 1D /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667054)]
public static void vcvtps2ph(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vcvtps2ph instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2PH xmm1/m64, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 1D /r ib</c><br/>
		/// <br/>
		/// <c>F16C</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTPS2PH xmm1/m64 {k1}{z}, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 1D /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667055)]
public static void vcvtps2ph(AssemblerMemoryOperand dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vcvtps2ph instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2PH xmm1/m128, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 1D /r ib</c><br/>
		/// <br/>
		/// <c>F16C</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTPS2PH xmm1/m128 {k1}{z}, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 1D /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667056)]
public static void vcvtps2ph(AssemblerRegisterXMM dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vcvtps2ph instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2PH xmm1/m128, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 1D /r ib</c><br/>
		/// <br/>
		/// <c>F16C</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTPS2PH xmm1/m128 {k1}{z}, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 1D /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667057)]
public static void vcvtps2ph(AssemblerMemoryOperand dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vcvtps2ph instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2PH ymm1/m256 {k1}{z}, zmm2{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 1D /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667058)]
public static void vcvtps2ph(AssemblerRegisterYMM dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vcvtps2ph instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2PH ymm1/m256 {k1}{z}, zmm2{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 1D /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667059)]
public static void vcvtps2ph(AssemblerMemoryOperand dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vcvtps2qq instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2QQ xmm1 {k1}{z}, xmm2/m64/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 7B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667060)]
public static void vcvtps2qq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvtps2qq instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2QQ ymm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 7B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667061)]
public static void vcvtps2qq(AssemblerRegisterYMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvtps2qq instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2QQ zmm1 {k1}{z}, ymm2/m256/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 7B /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667062)]
public static void vcvtps2qq(AssemblerRegisterZMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vcvtps2qq instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2QQ xmm1 {k1}{z}, xmm2/m64/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 7B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667063)]
public static void vcvtps2qq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtps2qq instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2QQ ymm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 7B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667064)]
public static void vcvtps2qq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtps2qq instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2QQ zmm1 {k1}{z}, ymm2/m256/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 7B /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667065)]
public static void vcvtps2qq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtps2udq instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2UDQ xmm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 79 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667066)]
public static void vcvtps2udq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvtps2udq instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2UDQ ymm1 {k1}{z}, ymm2/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 79 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667067)]
public static void vcvtps2udq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vcvtps2udq instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2UDQ zmm1 {k1}{z}, zmm2/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 79 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667068)]
public static void vcvtps2udq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vcvtps2udq instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2UDQ xmm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 79 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667069)]
public static void vcvtps2udq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtps2udq instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2UDQ ymm1 {k1}{z}, ymm2/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 79 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667070)]
public static void vcvtps2udq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtps2udq instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2UDQ zmm1 {k1}{z}, zmm2/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 79 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667071)]
public static void vcvtps2udq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtps2uqq instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2UQQ xmm1 {k1}{z}, xmm2/m64/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 79 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667072)]
public static void vcvtps2uqq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvtps2uqq instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2UQQ ymm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 79 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667073)]
public static void vcvtps2uqq(AssemblerRegisterYMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvtps2uqq instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2UQQ zmm1 {k1}{z}, ymm2/m256/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 79 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667074)]
public static void vcvtps2uqq(AssemblerRegisterZMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vcvtps2uqq instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2UQQ xmm1 {k1}{z}, xmm2/m64/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 79 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667075)]
public static void vcvtps2uqq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtps2uqq instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2UQQ ymm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 79 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667076)]
public static void vcvtps2uqq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtps2uqq instruction.<br/>
		/// <br/>
		/// <c>VCVTPS2UQQ zmm1 {k1}{z}, ymm2/m256/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 79 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667077)]
public static void vcvtps2uqq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtqq2pd instruction.<br/>
		/// <br/>
		/// <c>VCVTQQ2PD xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F.W1 E6 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667078)]
public static void vcvtqq2pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvtqq2pd instruction.<br/>
		/// <br/>
		/// <c>VCVTQQ2PD ymm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F.W1 E6 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667079)]
public static void vcvtqq2pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vcvtqq2pd instruction.<br/>
		/// <br/>
		/// <c>VCVTQQ2PD zmm1 {k1}{z}, zmm2/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F.W1 E6 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667080)]
public static void vcvtqq2pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vcvtqq2pd instruction.<br/>
		/// <br/>
		/// <c>VCVTQQ2PD xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F.W1 E6 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667081)]
public static void vcvtqq2pd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtqq2pd instruction.<br/>
		/// <br/>
		/// <c>VCVTQQ2PD ymm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F.W1 E6 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667082)]
public static void vcvtqq2pd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtqq2pd instruction.<br/>
		/// <br/>
		/// <c>VCVTQQ2PD zmm1 {k1}{z}, zmm2/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F.W1 E6 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667083)]
public static void vcvtqq2pd(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtqq2ps instruction.<br/>
		/// <br/>
		/// <c>VCVTQQ2PS xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W1 5B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667084)]
public static void vcvtqq2ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvtqq2ps instruction.<br/>
		/// <br/>
		/// <c>VCVTQQ2PS xmm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W1 5B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667085)]
public static void vcvtqq2ps(AssemblerRegisterXMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vcvtqq2ps instruction.<br/>
		/// <br/>
		/// <c>VCVTQQ2PS ymm1 {k1}{z}, zmm2/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W1 5B /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667086)]
public static void vcvtqq2ps(AssemblerRegisterYMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vcvtqq2ps instruction.<br/>
		/// <br/>
		/// <c>VCVTQQ2PS xmm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W1 5B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTQQ2PS xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W1 5B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667087)]
public static void vcvtqq2ps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtqq2ps instruction.<br/>
		/// <br/>
		/// <c>VCVTQQ2PS ymm1 {k1}{z}, zmm2/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W1 5B /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667088)]
public static void vcvtqq2ps(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtqq2psx instruction.<br/>
		/// <br/>
		/// <c>VCVTQQ2PS xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W1 5B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667089)]
public static void vcvtqq2psx(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtqq2psy instruction.<br/>
		/// <br/>
		/// <c>VCVTQQ2PS xmm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W1 5B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667090)]
public static void vcvtqq2psy(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtsd2si instruction.<br/>
		/// <br/>
		/// <c>VCVTSD2SI r32, xmm1/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F2.0F.W0 2D /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTSD2SI r32, xmm1/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W0 2D /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667091)]
public static void vcvtsd2si(AssemblerRegister32 dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvtsd2si instruction.<br/>
		/// <br/>
		/// <c>VCVTSD2SI r64, xmm1/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F2.0F.W1 2D /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>VCVTSD2SI r64, xmm1/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W1 2D /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100667092)]
public static void vcvtsd2si(AssemblerRegister64 dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvtsd2si instruction.<br/>
		/// <br/>
		/// <c>VCVTSD2SI r32, xmm1/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F2.0F.W0 2D /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTSD2SI r32, xmm1/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W0 2D /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667093)]
public static void vcvtsd2si(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtsd2si instruction.<br/>
		/// <br/>
		/// <c>VCVTSD2SI r64, xmm1/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F2.0F.W1 2D /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>VCVTSD2SI r64, xmm1/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W1 2D /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100667094)]
public static void vcvtsd2si(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtsd2ss instruction.<br/>
		/// <br/>
		/// <c>VCVTSD2SS xmm1, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F2.0F.WIG 5A /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTSD2SS xmm1 {k1}{z}, xmm2, xmm3/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W1 5A /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667095)]
public static void vcvtsd2ss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcvtsd2ss instruction.<br/>
		/// <br/>
		/// <c>VCVTSD2SS xmm1, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F2.0F.WIG 5A /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTSD2SS xmm1 {k1}{z}, xmm2, xmm3/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W1 5A /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667096)]
public static void vcvtsd2ss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcvtsd2usi instruction.<br/>
		/// <br/>
		/// <c>VCVTSD2USI r32, xmm1/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W0 79 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667097)]
public static void vcvtsd2usi(AssemblerRegister32 dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvtsd2usi instruction.<br/>
		/// <br/>
		/// <c>VCVTSD2USI r64, xmm1/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W1 79 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100667098)]
public static void vcvtsd2usi(AssemblerRegister64 dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvtsd2usi instruction.<br/>
		/// <br/>
		/// <c>VCVTSD2USI r32, xmm1/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W0 79 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667099)]
public static void vcvtsd2usi(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtsd2usi instruction.<br/>
		/// <br/>
		/// <c>VCVTSD2USI r64, xmm1/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W1 79 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100667100)]
public static void vcvtsd2usi(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtsi2sd instruction.<br/>
		/// <br/>
		/// <c>VCVTSI2SD xmm1, xmm2, r/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F2.0F.W0 2A /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTSI2SD xmm1, xmm2, r/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W0 2A /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667101)]
public static void vcvtsi2sd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegister32 src2) {}
		/// <summary>vcvtsi2sd instruction.<br/>
		/// <br/>
		/// <c>VCVTSI2SD xmm1, xmm2, r/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F2.0F.W1 2A /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>VCVTSI2SD xmm1, xmm2, r/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W1 2A /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100667102)]
public static void vcvtsi2sd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegister64 src2) {}
		/// <summary>vcvtsi2sd instruction.<br/>
		/// <br/>
		/// <c>VCVTSI2SD xmm1, xmm2, r/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F2.0F.W1 2A /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>VCVTSI2SD xmm1, xmm2, r/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W1 2A /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>VCVTSI2SD xmm1, xmm2, r/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F2.0F.W0 2A /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTSI2SD xmm1, xmm2, r/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W0 2A /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667103)]
public static void vcvtsi2sd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcvtsi2ss instruction.<br/>
		/// <br/>
		/// <c>VCVTSI2SS xmm1, xmm2, r/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F3.0F.W0 2A /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTSI2SS xmm1, xmm2, r/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W0 2A /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667104)]
public static void vcvtsi2ss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegister32 src2) {}
		/// <summary>vcvtsi2ss instruction.<br/>
		/// <br/>
		/// <c>VCVTSI2SS xmm1, xmm2, r/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F3.0F.W1 2A /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>VCVTSI2SS xmm1, xmm2, r/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W1 2A /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100667105)]
public static void vcvtsi2ss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegister64 src2) {}
		/// <summary>vcvtsi2ss instruction.<br/>
		/// <br/>
		/// <c>VCVTSI2SS xmm1, xmm2, r/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F3.0F.W1 2A /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>VCVTSI2SS xmm1, xmm2, r/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W1 2A /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>VCVTSI2SS xmm1, xmm2, r/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F3.0F.W0 2A /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTSI2SS xmm1, xmm2, r/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W0 2A /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667106)]
public static void vcvtsi2ss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcvtss2sd instruction.<br/>
		/// <br/>
		/// <c>VCVTSS2SD xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F3.0F.WIG 5A /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTSS2SD xmm1 {k1}{z}, xmm2, xmm3/m32{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W0 5A /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667107)]
public static void vcvtss2sd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vcvtss2sd instruction.<br/>
		/// <br/>
		/// <c>VCVTSS2SD xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F3.0F.WIG 5A /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTSS2SD xmm1 {k1}{z}, xmm2, xmm3/m32{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W0 5A /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667108)]
public static void vcvtss2sd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcvtss2si instruction.<br/>
		/// <br/>
		/// <c>VCVTSS2SI r32, xmm1/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F3.0F.W0 2D /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTSS2SI r32, xmm1/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W0 2D /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667109)]
public static void vcvtss2si(AssemblerRegister32 dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvtss2si instruction.<br/>
		/// <br/>
		/// <c>VCVTSS2SI r64, xmm1/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F3.0F.W1 2D /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>VCVTSS2SI r64, xmm1/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W1 2D /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100667110)]
public static void vcvtss2si(AssemblerRegister64 dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvtss2si instruction.<br/>
		/// <br/>
		/// <c>VCVTSS2SI r32, xmm1/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F3.0F.W0 2D /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTSS2SI r32, xmm1/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W0 2D /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667111)]
public static void vcvtss2si(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtss2si instruction.<br/>
		/// <br/>
		/// <c>VCVTSS2SI r64, xmm1/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F3.0F.W1 2D /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>VCVTSS2SI r64, xmm1/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W1 2D /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100667112)]
public static void vcvtss2si(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtss2usi instruction.<br/>
		/// <br/>
		/// <c>VCVTSS2USI r32, xmm1/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W0 79 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667113)]
public static void vcvtss2usi(AssemblerRegister32 dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvtss2usi instruction.<br/>
		/// <br/>
		/// <c>VCVTSS2USI r64, xmm1/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W1 79 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100667114)]
public static void vcvtss2usi(AssemblerRegister64 dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvtss2usi instruction.<br/>
		/// <br/>
		/// <c>VCVTSS2USI r32, xmm1/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W0 79 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667115)]
public static void vcvtss2usi(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtss2usi instruction.<br/>
		/// <br/>
		/// <c>VCVTSS2USI r64, xmm1/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W1 79 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100667116)]
public static void vcvtss2usi(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvttpd2dq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPD2DQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG E6 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTTPD2DQ xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 E6 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667117)]
public static void vcvttpd2dq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvttpd2dq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPD2DQ xmm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG E6 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTTPD2DQ xmm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 E6 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667118)]
public static void vcvttpd2dq(AssemblerRegisterXMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vcvttpd2dq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPD2DQ ymm1 {k1}{z}, zmm2/m512/m64bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 E6 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667119)]
public static void vcvttpd2dq(AssemblerRegisterYMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vcvttpd2dq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPD2DQ xmm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG E6 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTTPD2DQ xmm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 E6 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTTPD2DQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG E6 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTTPD2DQ xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 E6 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667120)]
public static void vcvttpd2dq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvttpd2dq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPD2DQ ymm1 {k1}{z}, zmm2/m512/m64bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 E6 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667121)]
public static void vcvttpd2dq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvttpd2dqx instruction.<br/>
		/// <br/>
		/// <c>VCVTTPD2DQ xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 E6 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667122)]
public static void vcvttpd2dqx(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvttpd2dqy instruction.<br/>
		/// <br/>
		/// <c>VCVTTPD2DQ xmm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 E6 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667123)]
public static void vcvttpd2dqy(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvttpd2qq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPD2QQ xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 7A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667124)]
public static void vcvttpd2qq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvttpd2qq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPD2QQ ymm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 7A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667125)]
public static void vcvttpd2qq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vcvttpd2qq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPD2QQ zmm1 {k1}{z}, zmm2/m512/m64bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 7A /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667126)]
public static void vcvttpd2qq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vcvttpd2qq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPD2QQ xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 7A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667127)]
public static void vcvttpd2qq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvttpd2qq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPD2QQ ymm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 7A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667128)]
public static void vcvttpd2qq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvttpd2qq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPD2QQ zmm1 {k1}{z}, zmm2/m512/m64bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 7A /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667129)]
public static void vcvttpd2qq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvttpd2udq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPD2UDQ xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W1 78 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667130)]
public static void vcvttpd2udq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvttpd2udq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPD2UDQ xmm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W1 78 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667131)]
public static void vcvttpd2udq(AssemblerRegisterXMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vcvttpd2udq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPD2UDQ ymm1 {k1}{z}, zmm2/m512/m64bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W1 78 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667132)]
public static void vcvttpd2udq(AssemblerRegisterYMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vcvttpd2udq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPD2UDQ xmm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W1 78 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTTPD2UDQ xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W1 78 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667133)]
public static void vcvttpd2udq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvttpd2udq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPD2UDQ ymm1 {k1}{z}, zmm2/m512/m64bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W1 78 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667134)]
public static void vcvttpd2udq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvttpd2udqx instruction.<br/>
		/// <br/>
		/// <c>VCVTTPD2UDQ xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W1 78 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667135)]
public static void vcvttpd2udqx(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvttpd2udqy instruction.<br/>
		/// <br/>
		/// <c>VCVTTPD2UDQ xmm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W1 78 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667136)]
public static void vcvttpd2udqy(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvttpd2uqq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPD2UQQ xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 78 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667137)]
public static void vcvttpd2uqq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvttpd2uqq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPD2UQQ ymm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 78 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667138)]
public static void vcvttpd2uqq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vcvttpd2uqq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPD2UQQ zmm1 {k1}{z}, zmm2/m512/m64bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 78 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667139)]
public static void vcvttpd2uqq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vcvttpd2uqq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPD2UQQ xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 78 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667140)]
public static void vcvttpd2uqq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvttpd2uqq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPD2UQQ ymm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 78 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667141)]
public static void vcvttpd2uqq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvttpd2uqq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPD2UQQ zmm1 {k1}{z}, zmm2/m512/m64bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 78 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667142)]
public static void vcvttpd2uqq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvttps2dq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPS2DQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.F3.0F.WIG 5B /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTTPS2DQ xmm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F.W0 5B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667143)]
public static void vcvttps2dq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvttps2dq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPS2DQ ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.F3.0F.WIG 5B /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTTPS2DQ ymm1 {k1}{z}, ymm2/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F.W0 5B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667144)]
public static void vcvttps2dq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vcvttps2dq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPS2DQ zmm1 {k1}{z}, zmm2/m512/m32bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F.W0 5B /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667145)]
public static void vcvttps2dq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vcvttps2dq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPS2DQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.F3.0F.WIG 5B /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTTPS2DQ xmm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F.W0 5B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667146)]
public static void vcvttps2dq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvttps2dq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPS2DQ ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.F3.0F.WIG 5B /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTTPS2DQ ymm1 {k1}{z}, ymm2/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F.W0 5B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667147)]
public static void vcvttps2dq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvttps2dq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPS2DQ zmm1 {k1}{z}, zmm2/m512/m32bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F.W0 5B /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667148)]
public static void vcvttps2dq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvttps2qq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPS2QQ xmm1 {k1}{z}, xmm2/m64/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 7A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667149)]
public static void vcvttps2qq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvttps2qq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPS2QQ ymm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 7A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667150)]
public static void vcvttps2qq(AssemblerRegisterYMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvttps2qq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPS2QQ zmm1 {k1}{z}, ymm2/m256/m32bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 7A /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667151)]
public static void vcvttps2qq(AssemblerRegisterZMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vcvttps2qq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPS2QQ xmm1 {k1}{z}, xmm2/m64/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 7A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667152)]
public static void vcvttps2qq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvttps2qq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPS2QQ ymm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 7A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667153)]
public static void vcvttps2qq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvttps2qq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPS2QQ zmm1 {k1}{z}, ymm2/m256/m32bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 7A /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667154)]
public static void vcvttps2qq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvttps2udq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPS2UDQ xmm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 78 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667155)]
public static void vcvttps2udq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvttps2udq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPS2UDQ ymm1 {k1}{z}, ymm2/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 78 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667156)]
public static void vcvttps2udq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vcvttps2udq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPS2UDQ zmm1 {k1}{z}, zmm2/m512/m32bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 78 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667157)]
public static void vcvttps2udq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vcvttps2udq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPS2UDQ xmm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 78 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667158)]
public static void vcvttps2udq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvttps2udq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPS2UDQ ymm1 {k1}{z}, ymm2/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 78 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667159)]
public static void vcvttps2udq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvttps2udq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPS2UDQ zmm1 {k1}{z}, zmm2/m512/m32bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 78 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667160)]
public static void vcvttps2udq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvttps2uqq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPS2UQQ xmm1 {k1}{z}, xmm2/m64/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 78 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667161)]
public static void vcvttps2uqq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvttps2uqq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPS2UQQ ymm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 78 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667162)]
public static void vcvttps2uqq(AssemblerRegisterYMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvttps2uqq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPS2UQQ zmm1 {k1}{z}, ymm2/m256/m32bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 78 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667163)]
public static void vcvttps2uqq(AssemblerRegisterZMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vcvttps2uqq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPS2UQQ xmm1 {k1}{z}, xmm2/m64/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 78 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667164)]
public static void vcvttps2uqq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvttps2uqq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPS2UQQ ymm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 78 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667165)]
public static void vcvttps2uqq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvttps2uqq instruction.<br/>
		/// <br/>
		/// <c>VCVTTPS2UQQ zmm1 {k1}{z}, ymm2/m256/m32bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 78 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667166)]
public static void vcvttps2uqq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvttsd2si instruction.<br/>
		/// <br/>
		/// <c>VCVTTSD2SI r32, xmm1/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F2.0F.W0 2C /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTTSD2SI r32, xmm1/m64{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W0 2C /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667167)]
public static void vcvttsd2si(AssemblerRegister32 dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvttsd2si instruction.<br/>
		/// <br/>
		/// <c>VCVTTSD2SI r64, xmm1/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F2.0F.W1 2C /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>VCVTTSD2SI r64, xmm1/m64{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W1 2C /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100667168)]
public static void vcvttsd2si(AssemblerRegister64 dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvttsd2si instruction.<br/>
		/// <br/>
		/// <c>VCVTTSD2SI r32, xmm1/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F2.0F.W0 2C /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTTSD2SI r32, xmm1/m64{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W0 2C /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667169)]
public static void vcvttsd2si(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvttsd2si instruction.<br/>
		/// <br/>
		/// <c>VCVTTSD2SI r64, xmm1/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F2.0F.W1 2C /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>VCVTTSD2SI r64, xmm1/m64{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W1 2C /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100667170)]
public static void vcvttsd2si(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvttsd2usi instruction.<br/>
		/// <br/>
		/// <c>VCVTTSD2USI r32, xmm1/m64{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W0 78 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667171)]
public static void vcvttsd2usi(AssemblerRegister32 dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvttsd2usi instruction.<br/>
		/// <br/>
		/// <c>VCVTTSD2USI r64, xmm1/m64{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W1 78 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100667172)]
public static void vcvttsd2usi(AssemblerRegister64 dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvttsd2usi instruction.<br/>
		/// <br/>
		/// <c>VCVTTSD2USI r32, xmm1/m64{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W0 78 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667173)]
public static void vcvttsd2usi(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvttsd2usi instruction.<br/>
		/// <br/>
		/// <c>VCVTTSD2USI r64, xmm1/m64{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W1 78 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100667174)]
public static void vcvttsd2usi(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvttss2si instruction.<br/>
		/// <br/>
		/// <c>VCVTTSS2SI r32, xmm1/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F3.0F.W0 2C /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTTSS2SI r32, xmm1/m32{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W0 2C /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667175)]
public static void vcvttss2si(AssemblerRegister32 dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvttss2si instruction.<br/>
		/// <br/>
		/// <c>VCVTTSS2SI r64, xmm1/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F3.0F.W1 2C /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>VCVTTSS2SI r64, xmm1/m32{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W1 2C /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100667176)]
public static void vcvttss2si(AssemblerRegister64 dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvttss2si instruction.<br/>
		/// <br/>
		/// <c>VCVTTSS2SI r32, xmm1/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F3.0F.W0 2C /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTTSS2SI r32, xmm1/m32{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W0 2C /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667177)]
public static void vcvttss2si(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvttss2si instruction.<br/>
		/// <br/>
		/// <c>VCVTTSS2SI r64, xmm1/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F3.0F.W1 2C /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>VCVTTSS2SI r64, xmm1/m32{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W1 2C /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100667178)]
public static void vcvttss2si(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvttss2usi instruction.<br/>
		/// <br/>
		/// <c>VCVTTSS2USI r32, xmm1/m32{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W0 78 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667179)]
public static void vcvttss2usi(AssemblerRegister32 dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvttss2usi instruction.<br/>
		/// <br/>
		/// <c>VCVTTSS2USI r64, xmm1/m32{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W1 78 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100667180)]
public static void vcvttss2usi(AssemblerRegister64 dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvttss2usi instruction.<br/>
		/// <br/>
		/// <c>VCVTTSS2USI r32, xmm1/m32{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W0 78 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667181)]
public static void vcvttss2usi(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvttss2usi instruction.<br/>
		/// <br/>
		/// <c>VCVTTSS2USI r64, xmm1/m32{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W1 78 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100667182)]
public static void vcvttss2usi(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtudq2pd instruction.<br/>
		/// <br/>
		/// <c>VCVTUDQ2PD xmm1 {k1}{z}, xmm2/m64/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F.W0 7A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667183)]
public static void vcvtudq2pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvtudq2pd instruction.<br/>
		/// <br/>
		/// <c>VCVTUDQ2PD ymm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F.W0 7A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667184)]
public static void vcvtudq2pd(AssemblerRegisterYMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvtudq2pd instruction.<br/>
		/// <br/>
		/// <c>VCVTUDQ2PD zmm1 {k1}{z}, ymm2/m256/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F.W0 7A /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667185)]
public static void vcvtudq2pd(AssemblerRegisterZMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vcvtudq2pd instruction.<br/>
		/// <br/>
		/// <c>VCVTUDQ2PD xmm1 {k1}{z}, xmm2/m64/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F.W0 7A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667186)]
public static void vcvtudq2pd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtudq2pd instruction.<br/>
		/// <br/>
		/// <c>VCVTUDQ2PD ymm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F.W0 7A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667187)]
public static void vcvtudq2pd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtudq2pd instruction.<br/>
		/// <br/>
		/// <c>VCVTUDQ2PD zmm1 {k1}{z}, ymm2/m256/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F.W0 7A /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667188)]
public static void vcvtudq2pd(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtudq2ps instruction.<br/>
		/// <br/>
		/// <c>VCVTUDQ2PS xmm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.F2.0F.W0 7A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667189)]
public static void vcvtudq2ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvtudq2ps instruction.<br/>
		/// <br/>
		/// <c>VCVTUDQ2PS ymm1 {k1}{z}, ymm2/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.F2.0F.W0 7A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667190)]
public static void vcvtudq2ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vcvtudq2ps instruction.<br/>
		/// <br/>
		/// <c>VCVTUDQ2PS zmm1 {k1}{z}, zmm2/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.F2.0F.W0 7A /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667191)]
public static void vcvtudq2ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vcvtudq2ps instruction.<br/>
		/// <br/>
		/// <c>VCVTUDQ2PS xmm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.F2.0F.W0 7A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667192)]
public static void vcvtudq2ps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtudq2ps instruction.<br/>
		/// <br/>
		/// <c>VCVTUDQ2PS ymm1 {k1}{z}, ymm2/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.F2.0F.W0 7A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667193)]
public static void vcvtudq2ps(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtudq2ps instruction.<br/>
		/// <br/>
		/// <c>VCVTUDQ2PS zmm1 {k1}{z}, zmm2/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.F2.0F.W0 7A /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667194)]
public static void vcvtudq2ps(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtuqq2pd instruction.<br/>
		/// <br/>
		/// <c>VCVTUQQ2PD xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F.W1 7A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667195)]
public static void vcvtuqq2pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvtuqq2pd instruction.<br/>
		/// <br/>
		/// <c>VCVTUQQ2PD ymm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F.W1 7A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667196)]
public static void vcvtuqq2pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vcvtuqq2pd instruction.<br/>
		/// <br/>
		/// <c>VCVTUQQ2PD zmm1 {k1}{z}, zmm2/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F.W1 7A /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667197)]
public static void vcvtuqq2pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vcvtuqq2pd instruction.<br/>
		/// <br/>
		/// <c>VCVTUQQ2PD xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F.W1 7A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667198)]
public static void vcvtuqq2pd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtuqq2pd instruction.<br/>
		/// <br/>
		/// <c>VCVTUQQ2PD ymm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F.W1 7A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667199)]
public static void vcvtuqq2pd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtuqq2pd instruction.<br/>
		/// <br/>
		/// <c>VCVTUQQ2PD zmm1 {k1}{z}, zmm2/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F.W1 7A /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667200)]
public static void vcvtuqq2pd(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtuqq2ps instruction.<br/>
		/// <br/>
		/// <c>VCVTUQQ2PS xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.F2.0F.W1 7A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667201)]
public static void vcvtuqq2ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vcvtuqq2ps instruction.<br/>
		/// <br/>
		/// <c>VCVTUQQ2PS xmm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.F2.0F.W1 7A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667202)]
public static void vcvtuqq2ps(AssemblerRegisterXMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vcvtuqq2ps instruction.<br/>
		/// <br/>
		/// <c>VCVTUQQ2PS ymm1 {k1}{z}, zmm2/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.F2.0F.W1 7A /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667203)]
public static void vcvtuqq2ps(AssemblerRegisterYMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vcvtuqq2ps instruction.<br/>
		/// <br/>
		/// <c>VCVTUQQ2PS xmm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.F2.0F.W1 7A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VCVTUQQ2PS xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.F2.0F.W1 7A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667204)]
public static void vcvtuqq2ps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtuqq2ps instruction.<br/>
		/// <br/>
		/// <c>VCVTUQQ2PS ymm1 {k1}{z}, zmm2/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.F2.0F.W1 7A /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667205)]
public static void vcvtuqq2ps(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtuqq2psx instruction.<br/>
		/// <br/>
		/// <c>VCVTUQQ2PS xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.F2.0F.W1 7A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667206)]
public static void vcvtuqq2psx(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtuqq2psy instruction.<br/>
		/// <br/>
		/// <c>VCVTUQQ2PS xmm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.F2.0F.W1 7A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667207)]
public static void vcvtuqq2psy(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vcvtusi2sd instruction.<br/>
		/// <br/>
		/// <c>VCVTUSI2SD xmm1, xmm2, r/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W0 7B /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667208)]
public static void vcvtusi2sd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegister32 src2) {}
		/// <summary>vcvtusi2sd instruction.<br/>
		/// <br/>
		/// <c>VCVTUSI2SD xmm1, xmm2, r/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W1 7B /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100667209)]
public static void vcvtusi2sd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegister64 src2) {}
		/// <summary>vcvtusi2sd instruction.<br/>
		/// <br/>
		/// <c>VCVTUSI2SD xmm1, xmm2, r/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W1 7B /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>VCVTUSI2SD xmm1, xmm2, r/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W0 7B /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667210)]
public static void vcvtusi2sd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vcvtusi2ss instruction.<br/>
		/// <br/>
		/// <c>VCVTUSI2SS xmm1, xmm2, r/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W0 7B /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667211)]
public static void vcvtusi2ss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegister32 src2) {}
		/// <summary>vcvtusi2ss instruction.<br/>
		/// <br/>
		/// <c>VCVTUSI2SS xmm1, xmm2, r/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W1 7B /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100667212)]
public static void vcvtusi2ss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegister64 src2) {}
		/// <summary>vcvtusi2ss instruction.<br/>
		/// <br/>
		/// <c>VCVTUSI2SS xmm1, xmm2, r/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W1 7B /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>VCVTUSI2SS xmm1, xmm2, r/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W0 7B /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667213)]
public static void vcvtusi2ss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vdbpsadbw instruction.<br/>
		/// <br/>
		/// <c>VDBPSADBW xmm1 {k1}{z}, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 42 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667214)]
public static void vdbpsadbw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vdbpsadbw instruction.<br/>
		/// <br/>
		/// <c>VDBPSADBW ymm1 {k1}{z}, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 42 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667215)]
public static void vdbpsadbw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vdbpsadbw instruction.<br/>
		/// <br/>
		/// <c>VDBPSADBW zmm1 {k1}{z}, zmm2, zmm3/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 42 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667216)]
public static void vdbpsadbw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, sbyte imm) {}
		/// <summary>vdbpsadbw instruction.<br/>
		/// <br/>
		/// <c>VDBPSADBW xmm1 {k1}{z}, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 42 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667217)]
public static void vdbpsadbw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vdbpsadbw instruction.<br/>
		/// <br/>
		/// <c>VDBPSADBW ymm1 {k1}{z}, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 42 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667218)]
public static void vdbpsadbw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vdbpsadbw instruction.<br/>
		/// <br/>
		/// <c>VDBPSADBW zmm1 {k1}{z}, zmm2, zmm3/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 42 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667219)]
public static void vdbpsadbw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vdbpsadbw instruction.<br/>
		/// <br/>
		/// <c>VDBPSADBW xmm1 {k1}{z}, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 42 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667220)]
public static void vdbpsadbw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vdbpsadbw instruction.<br/>
		/// <br/>
		/// <c>VDBPSADBW ymm1 {k1}{z}, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 42 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667221)]
public static void vdbpsadbw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vdbpsadbw instruction.<br/>
		/// <br/>
		/// <c>VDBPSADBW zmm1 {k1}{z}, zmm2, zmm3/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 42 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667222)]
public static void vdbpsadbw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, byte imm) {}
		/// <summary>vdbpsadbw instruction.<br/>
		/// <br/>
		/// <c>VDBPSADBW xmm1 {k1}{z}, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 42 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667223)]
public static void vdbpsadbw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vdbpsadbw instruction.<br/>
		/// <br/>
		/// <c>VDBPSADBW ymm1 {k1}{z}, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 42 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667224)]
public static void vdbpsadbw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vdbpsadbw instruction.<br/>
		/// <br/>
		/// <c>VDBPSADBW zmm1 {k1}{z}, zmm2, zmm3/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 42 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667225)]
public static void vdbpsadbw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vdivpd instruction.<br/>
		/// <br/>
		/// <c>VDIVPD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 5E /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VDIVPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 5E /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667226)]
public static void vdivpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vdivpd instruction.<br/>
		/// <br/>
		/// <c>VDIVPD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 5E /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VDIVPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 5E /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667227)]
public static void vdivpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vdivpd instruction.<br/>
		/// <br/>
		/// <c>VDIVPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 5E /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667228)]
public static void vdivpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vdivpd instruction.<br/>
		/// <br/>
		/// <c>VDIVPD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 5E /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VDIVPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 5E /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667229)]
public static void vdivpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vdivpd instruction.<br/>
		/// <br/>
		/// <c>VDIVPD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 5E /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VDIVPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 5E /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667230)]
public static void vdivpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vdivpd instruction.<br/>
		/// <br/>
		/// <c>VDIVPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 5E /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667231)]
public static void vdivpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vdivps instruction.<br/>
		/// <br/>
		/// <c>VDIVPS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 5E /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VDIVPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 5E /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667232)]
public static void vdivps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vdivps instruction.<br/>
		/// <br/>
		/// <c>VDIVPS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 5E /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VDIVPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 5E /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667233)]
public static void vdivps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vdivps instruction.<br/>
		/// <br/>
		/// <c>VDIVPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 5E /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667234)]
public static void vdivps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vdivps instruction.<br/>
		/// <br/>
		/// <c>VDIVPS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 5E /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VDIVPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 5E /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667235)]
public static void vdivps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vdivps instruction.<br/>
		/// <br/>
		/// <c>VDIVPS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 5E /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VDIVPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 5E /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667236)]
public static void vdivps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vdivps instruction.<br/>
		/// <br/>
		/// <c>VDIVPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 5E /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667237)]
public static void vdivps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vdivsd instruction.<br/>
		/// <br/>
		/// <c>VDIVSD xmm1, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F2.0F.WIG 5E /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VDIVSD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W1 5E /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667238)]
public static void vdivsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vdivsd instruction.<br/>
		/// <br/>
		/// <c>VDIVSD xmm1, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F2.0F.WIG 5E /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VDIVSD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W1 5E /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667239)]
public static void vdivsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vdivss instruction.<br/>
		/// <br/>
		/// <c>VDIVSS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F3.0F.WIG 5E /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VDIVSS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W0 5E /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667240)]
public static void vdivss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vdivss instruction.<br/>
		/// <br/>
		/// <c>VDIVSS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F3.0F.WIG 5E /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VDIVSS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W0 5E /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667241)]
public static void vdivss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vdpbf16ps instruction.<br/>
		/// <br/>
		/// <c>VDPBF16PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 52 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_BF16</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667242)]
public static void vdpbf16ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vdpbf16ps instruction.<br/>
		/// <br/>
		/// <c>VDPBF16PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 52 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_BF16</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667243)]
public static void vdpbf16ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vdpbf16ps instruction.<br/>
		/// <br/>
		/// <c>VDPBF16PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 52 /r</c><br/>
		/// <br/>
		/// <c>AVX512F and AVX512_BF16</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667244)]
public static void vdpbf16ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vdpbf16ps instruction.<br/>
		/// <br/>
		/// <c>VDPBF16PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 52 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_BF16</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667245)]
public static void vdpbf16ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vdpbf16ps instruction.<br/>
		/// <br/>
		/// <c>VDPBF16PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 52 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_BF16</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667246)]
public static void vdpbf16ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vdpbf16ps instruction.<br/>
		/// <br/>
		/// <c>VDPBF16PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 52 /r</c><br/>
		/// <br/>
		/// <c>AVX512F and AVX512_BF16</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667247)]
public static void vdpbf16ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vdppd instruction.<br/>
		/// <br/>
		/// <c>VDPPD xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 41 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667248)]
public static void vdppd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vdppd instruction.<br/>
		/// <br/>
		/// <c>VDPPD xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 41 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667249)]
public static void vdppd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vdppd instruction.<br/>
		/// <br/>
		/// <c>VDPPD xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 41 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667250)]
public static void vdppd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vdppd instruction.<br/>
		/// <br/>
		/// <c>VDPPD xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 41 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667251)]
public static void vdppd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vdpps instruction.<br/>
		/// <br/>
		/// <c>VDPPS xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 40 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667252)]
public static void vdpps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vdpps instruction.<br/>
		/// <br/>
		/// <c>VDPPS ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.WIG 40 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667253)]
public static void vdpps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vdpps instruction.<br/>
		/// <br/>
		/// <c>VDPPS xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 40 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667254)]
public static void vdpps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vdpps instruction.<br/>
		/// <br/>
		/// <c>VDPPS ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.WIG 40 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667255)]
public static void vdpps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vdpps instruction.<br/>
		/// <br/>
		/// <c>VDPPS xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 40 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667256)]
public static void vdpps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vdpps instruction.<br/>
		/// <br/>
		/// <c>VDPPS ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.WIG 40 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667257)]
public static void vdpps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vdpps instruction.<br/>
		/// <br/>
		/// <c>VDPPS xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 40 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667258)]
public static void vdpps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vdpps instruction.<br/>
		/// <br/>
		/// <c>VDPPS ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.WIG 40 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667259)]
public static void vdpps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>verr instruction.<br/>
		/// <br/>
		/// <c>VERR r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 00 /4</c><br/>
		/// <br/>
		/// <c>286+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667260)]
public static void verr(AssemblerRegister16 dst) {}
		/// <summary>verr instruction.<br/>
		/// <br/>
		/// <c>VERR r32/m16</c><br/>
		/// <br/>
		/// <c>o32 0F 00 /4</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667261)]
public static void verr(AssemblerRegister32 dst) {}
		/// <summary>verr instruction.<br/>
		/// <br/>
		/// <c>VERR r64/m16</c><br/>
		/// <br/>
		/// <c>o64 0F 00 /4</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100667262)]
public static void verr(AssemblerRegister64 dst) {}
		/// <summary>verr instruction.<br/>
		/// <br/>
		/// <c>VERR r32/m16</c><br/>
		/// <br/>
		/// <c>o32 0F 00 /4</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VERR r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 00 /4</c><br/>
		/// <br/>
		/// <c>286+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667263)]
public static void verr(AssemblerMemoryOperand dst) {}
		/// <summary>verw instruction.<br/>
		/// <br/>
		/// <c>VERW r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 00 /5</c><br/>
		/// <br/>
		/// <c>286+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667264)]
public static void verw(AssemblerRegister16 dst) {}
		/// <summary>verw instruction.<br/>
		/// <br/>
		/// <c>VERW r32/m16</c><br/>
		/// <br/>
		/// <c>o32 0F 00 /5</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667265)]
public static void verw(AssemblerRegister32 dst) {}
		/// <summary>verw instruction.<br/>
		/// <br/>
		/// <c>VERW r64/m16</c><br/>
		/// <br/>
		/// <c>o64 0F 00 /5</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100667266)]
public static void verw(AssemblerRegister64 dst) {}
		/// <summary>verw instruction.<br/>
		/// <br/>
		/// <c>VERW r32/m16</c><br/>
		/// <br/>
		/// <c>o32 0F 00 /5</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VERW r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F 00 /5</c><br/>
		/// <br/>
		/// <c>286+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667267)]
public static void verw(AssemblerMemoryOperand dst) {}
		/// <summary>vexp2pd instruction.<br/>
		/// <br/>
		/// <c>VEXP2PD zmm1 {k1}{z}, zmm2/m512/m64bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 C8 /r</c><br/>
		/// <br/>
		/// <c>AVX512ER</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667268)]
public static void vexp2pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vexp2pd instruction.<br/>
		/// <br/>
		/// <c>VEXP2PD zmm1 {k1}{z}, zmm2/m512/m64bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 C8 /r</c><br/>
		/// <br/>
		/// <c>AVX512ER</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667269)]
public static void vexp2pd(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vexp2ps instruction.<br/>
		/// <br/>
		/// <c>VEXP2PS zmm1 {k1}{z}, zmm2/m512/m32bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 C8 /r</c><br/>
		/// <br/>
		/// <c>AVX512ER</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667270)]
public static void vexp2ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vexp2ps instruction.<br/>
		/// <br/>
		/// <c>VEXP2PS zmm1 {k1}{z}, zmm2/m512/m32bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 C8 /r</c><br/>
		/// <br/>
		/// <c>AVX512ER</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667271)]
public static void vexp2ps(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vexpandpd instruction.<br/>
		/// <br/>
		/// <c>VEXPANDPD xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 88 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667272)]
public static void vexpandpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vexpandpd instruction.<br/>
		/// <br/>
		/// <c>VEXPANDPD ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 88 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667273)]
public static void vexpandpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vexpandpd instruction.<br/>
		/// <br/>
		/// <c>VEXPANDPD zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 88 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667274)]
public static void vexpandpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vexpandpd instruction.<br/>
		/// <br/>
		/// <c>VEXPANDPD xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 88 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667275)]
public static void vexpandpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vexpandpd instruction.<br/>
		/// <br/>
		/// <c>VEXPANDPD ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 88 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667276)]
public static void vexpandpd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vexpandpd instruction.<br/>
		/// <br/>
		/// <c>VEXPANDPD zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 88 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667277)]
public static void vexpandpd(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vexpandps instruction.<br/>
		/// <br/>
		/// <c>VEXPANDPS xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 88 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667278)]
public static void vexpandps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vexpandps instruction.<br/>
		/// <br/>
		/// <c>VEXPANDPS ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 88 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667279)]
public static void vexpandps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vexpandps instruction.<br/>
		/// <br/>
		/// <c>VEXPANDPS zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 88 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667280)]
public static void vexpandps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vexpandps instruction.<br/>
		/// <br/>
		/// <c>VEXPANDPS xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 88 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667281)]
public static void vexpandps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vexpandps instruction.<br/>
		/// <br/>
		/// <c>VEXPANDPS ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 88 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667282)]
public static void vexpandps(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vexpandps instruction.<br/>
		/// <br/>
		/// <c>VEXPANDPS zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 88 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667283)]
public static void vexpandps(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vextractf128 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTF128 xmm1/m128, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 19 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667284)]
public static void vextractf128(AssemblerRegisterXMM dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vextractf128 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTF128 xmm1/m128, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 19 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667285)]
public static void vextractf128(AssemblerMemoryOperand dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vextractf128 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTF128 xmm1/m128, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 19 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667286)]
public static void vextractf128(AssemblerRegisterXMM dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vextractf128 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTF128 xmm1/m128, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 19 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667287)]
public static void vextractf128(AssemblerMemoryOperand dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vextractf32x4 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTF32X4 xmm1/m128 {k1}{z}, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 19 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667288)]
public static void vextractf32x4(AssemblerRegisterXMM dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vextractf32x4 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTF32X4 xmm1/m128 {k1}{z}, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 19 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667289)]
public static void vextractf32x4(AssemblerMemoryOperand dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vextractf32x4 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTF32X4 xmm1/m128 {k1}{z}, zmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 19 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667290)]
public static void vextractf32x4(AssemblerRegisterXMM dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vextractf32x4 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTF32X4 xmm1/m128 {k1}{z}, zmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 19 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667291)]
public static void vextractf32x4(AssemblerMemoryOperand dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vextractf32x4 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTF32X4 xmm1/m128 {k1}{z}, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 19 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667292)]
public static void vextractf32x4(AssemblerRegisterXMM dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vextractf32x4 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTF32X4 xmm1/m128 {k1}{z}, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 19 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667293)]
public static void vextractf32x4(AssemblerMemoryOperand dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vextractf32x4 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTF32X4 xmm1/m128 {k1}{z}, zmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 19 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667294)]
public static void vextractf32x4(AssemblerRegisterXMM dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vextractf32x4 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTF32X4 xmm1/m128 {k1}{z}, zmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 19 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667295)]
public static void vextractf32x4(AssemblerMemoryOperand dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vextractf32x8 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTF32X8 ymm1/m256 {k1}{z}, zmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 1B /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667296)]
public static void vextractf32x8(AssemblerRegisterYMM dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vextractf32x8 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTF32X8 ymm1/m256 {k1}{z}, zmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 1B /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667297)]
public static void vextractf32x8(AssemblerMemoryOperand dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vextractf32x8 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTF32X8 ymm1/m256 {k1}{z}, zmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 1B /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667298)]
public static void vextractf32x8(AssemblerRegisterYMM dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vextractf32x8 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTF32X8 ymm1/m256 {k1}{z}, zmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 1B /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667299)]
public static void vextractf32x8(AssemblerMemoryOperand dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vextractf64x2 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTF64X2 xmm1/m128 {k1}{z}, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 19 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667300)]
public static void vextractf64x2(AssemblerRegisterXMM dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vextractf64x2 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTF64X2 xmm1/m128 {k1}{z}, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 19 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667301)]
public static void vextractf64x2(AssemblerMemoryOperand dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vextractf64x2 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTF64X2 xmm1/m128 {k1}{z}, zmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 19 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667302)]
public static void vextractf64x2(AssemblerRegisterXMM dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vextractf64x2 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTF64X2 xmm1/m128 {k1}{z}, zmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 19 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667303)]
public static void vextractf64x2(AssemblerMemoryOperand dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vextractf64x2 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTF64X2 xmm1/m128 {k1}{z}, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 19 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667304)]
public static void vextractf64x2(AssemblerRegisterXMM dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vextractf64x2 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTF64X2 xmm1/m128 {k1}{z}, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 19 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667305)]
public static void vextractf64x2(AssemblerMemoryOperand dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vextractf64x2 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTF64X2 xmm1/m128 {k1}{z}, zmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 19 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667306)]
public static void vextractf64x2(AssemblerRegisterXMM dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vextractf64x2 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTF64X2 xmm1/m128 {k1}{z}, zmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 19 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667307)]
public static void vextractf64x2(AssemblerMemoryOperand dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vextractf64x4 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTF64X4 ymm1/m256 {k1}{z}, zmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 1B /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667308)]
public static void vextractf64x4(AssemblerRegisterYMM dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vextractf64x4 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTF64X4 ymm1/m256 {k1}{z}, zmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 1B /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667309)]
public static void vextractf64x4(AssemblerMemoryOperand dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vextractf64x4 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTF64X4 ymm1/m256 {k1}{z}, zmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 1B /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667310)]
public static void vextractf64x4(AssemblerRegisterYMM dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vextractf64x4 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTF64X4 ymm1/m256 {k1}{z}, zmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 1B /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667311)]
public static void vextractf64x4(AssemblerMemoryOperand dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vextracti128 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTI128 xmm1/m128, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 39 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667312)]
public static void vextracti128(AssemblerRegisterXMM dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vextracti128 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTI128 xmm1/m128, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 39 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667313)]
public static void vextracti128(AssemblerMemoryOperand dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vextracti128 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTI128 xmm1/m128, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 39 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667314)]
public static void vextracti128(AssemblerRegisterXMM dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vextracti128 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTI128 xmm1/m128, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 39 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667315)]
public static void vextracti128(AssemblerMemoryOperand dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vextracti32x4 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTI32X4 xmm1/m128 {k1}{z}, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 39 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667316)]
public static void vextracti32x4(AssemblerRegisterXMM dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vextracti32x4 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTI32X4 xmm1/m128 {k1}{z}, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 39 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667317)]
public static void vextracti32x4(AssemblerMemoryOperand dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vextracti32x4 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTI32X4 xmm1/m128 {k1}{z}, zmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 39 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667318)]
public static void vextracti32x4(AssemblerRegisterXMM dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vextracti32x4 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTI32X4 xmm1/m128 {k1}{z}, zmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 39 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667319)]
public static void vextracti32x4(AssemblerMemoryOperand dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vextracti32x4 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTI32X4 xmm1/m128 {k1}{z}, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 39 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667320)]
public static void vextracti32x4(AssemblerRegisterXMM dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vextracti32x4 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTI32X4 xmm1/m128 {k1}{z}, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 39 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667321)]
public static void vextracti32x4(AssemblerMemoryOperand dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vextracti32x4 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTI32X4 xmm1/m128 {k1}{z}, zmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 39 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667322)]
public static void vextracti32x4(AssemblerRegisterXMM dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vextracti32x4 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTI32X4 xmm1/m128 {k1}{z}, zmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 39 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667323)]
public static void vextracti32x4(AssemblerMemoryOperand dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vextracti32x8 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTI32X8 ymm1/m256 {k1}{z}, zmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 3B /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667324)]
public static void vextracti32x8(AssemblerRegisterYMM dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vextracti32x8 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTI32X8 ymm1/m256 {k1}{z}, zmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 3B /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667325)]
public static void vextracti32x8(AssemblerMemoryOperand dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vextracti32x8 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTI32X8 ymm1/m256 {k1}{z}, zmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 3B /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667326)]
public static void vextracti32x8(AssemblerRegisterYMM dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vextracti32x8 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTI32X8 ymm1/m256 {k1}{z}, zmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 3B /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667327)]
public static void vextracti32x8(AssemblerMemoryOperand dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vextracti64x2 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTI64X2 xmm1/m128 {k1}{z}, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 39 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667328)]
public static void vextracti64x2(AssemblerRegisterXMM dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vextracti64x2 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTI64X2 xmm1/m128 {k1}{z}, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 39 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667329)]
public static void vextracti64x2(AssemblerMemoryOperand dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vextracti64x2 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTI64X2 xmm1/m128 {k1}{z}, zmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 39 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667330)]
public static void vextracti64x2(AssemblerRegisterXMM dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vextracti64x2 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTI64X2 xmm1/m128 {k1}{z}, zmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 39 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667331)]
public static void vextracti64x2(AssemblerMemoryOperand dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vextracti64x2 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTI64X2 xmm1/m128 {k1}{z}, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 39 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667332)]
public static void vextracti64x2(AssemblerRegisterXMM dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vextracti64x2 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTI64X2 xmm1/m128 {k1}{z}, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 39 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667333)]
public static void vextracti64x2(AssemblerMemoryOperand dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vextracti64x2 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTI64X2 xmm1/m128 {k1}{z}, zmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 39 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667334)]
public static void vextracti64x2(AssemblerRegisterXMM dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vextracti64x2 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTI64X2 xmm1/m128 {k1}{z}, zmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 39 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667335)]
public static void vextracti64x2(AssemblerMemoryOperand dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vextracti64x4 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTI64X4 ymm1/m256 {k1}{z}, zmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 3B /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667336)]
public static void vextracti64x4(AssemblerRegisterYMM dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vextracti64x4 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTI64X4 ymm1/m256 {k1}{z}, zmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 3B /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667337)]
public static void vextracti64x4(AssemblerMemoryOperand dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vextracti64x4 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTI64X4 ymm1/m256 {k1}{z}, zmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 3B /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667338)]
public static void vextracti64x4(AssemblerRegisterYMM dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vextracti64x4 instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTI64X4 ymm1/m256 {k1}{z}, zmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 3B /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667339)]
public static void vextracti64x4(AssemblerMemoryOperand dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vextractps instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTPS r/m32, xmm1, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 17 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VEXTRACTPS r/m32, xmm1, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 17 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667340)]
public static void vextractps(AssemblerRegister32 dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vextractps instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTPS r64/m32, xmm1, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 17 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>VEXTRACTPS r64/m32, xmm1, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 17 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100667341)]
public static void vextractps(AssemblerRegister64 dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vextractps instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTPS r/m32, xmm1, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 17 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VEXTRACTPS r/m32, xmm1, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 17 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667342)]
public static void vextractps(AssemblerMemoryOperand dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vextractps instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTPS r/m32, xmm1, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 17 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VEXTRACTPS r/m32, xmm1, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 17 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667343)]
public static void vextractps(AssemblerRegister32 dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vextractps instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTPS r64/m32, xmm1, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 17 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>VEXTRACTPS r64/m32, xmm1, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 17 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100667344)]
public static void vextractps(AssemblerRegister64 dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vextractps instruction.<br/>
		/// <br/>
		/// <c>VEXTRACTPS r/m32, xmm1, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 17 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VEXTRACTPS r/m32, xmm1, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 17 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667345)]
public static void vextractps(AssemblerMemoryOperand dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vfixupimmpd instruction.<br/>
		/// <br/>
		/// <c>VFIXUPIMMPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 54 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667346)]
public static void vfixupimmpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vfixupimmpd instruction.<br/>
		/// <br/>
		/// <c>VFIXUPIMMPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 54 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667347)]
public static void vfixupimmpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vfixupimmpd instruction.<br/>
		/// <br/>
		/// <c>VFIXUPIMMPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 54 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667348)]
public static void vfixupimmpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, sbyte imm) {}
		/// <summary>vfixupimmpd instruction.<br/>
		/// <br/>
		/// <c>VFIXUPIMMPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 54 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667349)]
public static void vfixupimmpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vfixupimmpd instruction.<br/>
		/// <br/>
		/// <c>VFIXUPIMMPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 54 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667350)]
public static void vfixupimmpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vfixupimmpd instruction.<br/>
		/// <br/>
		/// <c>VFIXUPIMMPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 54 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667351)]
public static void vfixupimmpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vfixupimmpd instruction.<br/>
		/// <br/>
		/// <c>VFIXUPIMMPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 54 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667352)]
public static void vfixupimmpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vfixupimmpd instruction.<br/>
		/// <br/>
		/// <c>VFIXUPIMMPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 54 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667353)]
public static void vfixupimmpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vfixupimmpd instruction.<br/>
		/// <br/>
		/// <c>VFIXUPIMMPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 54 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667354)]
public static void vfixupimmpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, byte imm) {}
		/// <summary>vfixupimmpd instruction.<br/>
		/// <br/>
		/// <c>VFIXUPIMMPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 54 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667355)]
public static void vfixupimmpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vfixupimmpd instruction.<br/>
		/// <br/>
		/// <c>VFIXUPIMMPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 54 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667356)]
public static void vfixupimmpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vfixupimmpd instruction.<br/>
		/// <br/>
		/// <c>VFIXUPIMMPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 54 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667357)]
public static void vfixupimmpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vfixupimmps instruction.<br/>
		/// <br/>
		/// <c>VFIXUPIMMPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 54 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667358)]
public static void vfixupimmps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vfixupimmps instruction.<br/>
		/// <br/>
		/// <c>VFIXUPIMMPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 54 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667359)]
public static void vfixupimmps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vfixupimmps instruction.<br/>
		/// <br/>
		/// <c>VFIXUPIMMPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 54 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667360)]
public static void vfixupimmps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, sbyte imm) {}
		/// <summary>vfixupimmps instruction.<br/>
		/// <br/>
		/// <c>VFIXUPIMMPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 54 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667361)]
public static void vfixupimmps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vfixupimmps instruction.<br/>
		/// <br/>
		/// <c>VFIXUPIMMPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 54 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667362)]
public static void vfixupimmps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vfixupimmps instruction.<br/>
		/// <br/>
		/// <c>VFIXUPIMMPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 54 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667363)]
public static void vfixupimmps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vfixupimmps instruction.<br/>
		/// <br/>
		/// <c>VFIXUPIMMPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 54 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667364)]
public static void vfixupimmps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vfixupimmps instruction.<br/>
		/// <br/>
		/// <c>VFIXUPIMMPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 54 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667365)]
public static void vfixupimmps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vfixupimmps instruction.<br/>
		/// <br/>
		/// <c>VFIXUPIMMPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 54 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667366)]
public static void vfixupimmps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, byte imm) {}
		/// <summary>vfixupimmps instruction.<br/>
		/// <br/>
		/// <c>VFIXUPIMMPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 54 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667367)]
public static void vfixupimmps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vfixupimmps instruction.<br/>
		/// <br/>
		/// <c>VFIXUPIMMPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 54 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667368)]
public static void vfixupimmps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vfixupimmps instruction.<br/>
		/// <br/>
		/// <c>VFIXUPIMMPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 54 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667369)]
public static void vfixupimmps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vfixupimmsd instruction.<br/>
		/// <br/>
		/// <c>VFIXUPIMMSD xmm1 {k1}{z}, xmm2, xmm3/m64{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W1 55 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667370)]
public static void vfixupimmsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vfixupimmsd instruction.<br/>
		/// <br/>
		/// <c>VFIXUPIMMSD xmm1 {k1}{z}, xmm2, xmm3/m64{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W1 55 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667371)]
public static void vfixupimmsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vfixupimmsd instruction.<br/>
		/// <br/>
		/// <c>VFIXUPIMMSD xmm1 {k1}{z}, xmm2, xmm3/m64{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W1 55 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667372)]
public static void vfixupimmsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vfixupimmsd instruction.<br/>
		/// <br/>
		/// <c>VFIXUPIMMSD xmm1 {k1}{z}, xmm2, xmm3/m64{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W1 55 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667373)]
public static void vfixupimmsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vfixupimmss instruction.<br/>
		/// <br/>
		/// <c>VFIXUPIMMSS xmm1 {k1}{z}, xmm2, xmm3/m32{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W0 55 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667374)]
public static void vfixupimmss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vfixupimmss instruction.<br/>
		/// <br/>
		/// <c>VFIXUPIMMSS xmm1 {k1}{z}, xmm2, xmm3/m32{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W0 55 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667375)]
public static void vfixupimmss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vfixupimmss instruction.<br/>
		/// <br/>
		/// <c>VFIXUPIMMSS xmm1 {k1}{z}, xmm2, xmm3/m32{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W0 55 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667376)]
public static void vfixupimmss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vfixupimmss instruction.<br/>
		/// <br/>
		/// <c>VFIXUPIMMSS xmm1 {k1}{z}, xmm2, xmm3/m32{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W0 55 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667377)]
public static void vfixupimmss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vfmadd132pd instruction.<br/>
		/// <br/>
		/// <c>VFMADD132PD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 98 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADD132PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 98 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667378)]
public static void vfmadd132pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfmadd132pd instruction.<br/>
		/// <br/>
		/// <c>VFMADD132PD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 98 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADD132PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 98 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667379)]
public static void vfmadd132pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vfmadd132pd instruction.<br/>
		/// <br/>
		/// <c>VFMADD132PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 98 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667380)]
public static void vfmadd132pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vfmadd132pd instruction.<br/>
		/// <br/>
		/// <c>VFMADD132PD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 98 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADD132PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 98 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667381)]
public static void vfmadd132pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmadd132pd instruction.<br/>
		/// <br/>
		/// <c>VFMADD132PD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 98 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADD132PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 98 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667382)]
public static void vfmadd132pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmadd132pd instruction.<br/>
		/// <br/>
		/// <c>VFMADD132PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 98 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667383)]
public static void vfmadd132pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmadd132ps instruction.<br/>
		/// <br/>
		/// <c>VFMADD132PS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 98 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADD132PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 98 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667384)]
public static void vfmadd132ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfmadd132ps instruction.<br/>
		/// <br/>
		/// <c>VFMADD132PS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 98 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADD132PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 98 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667385)]
public static void vfmadd132ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vfmadd132ps instruction.<br/>
		/// <br/>
		/// <c>VFMADD132PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 98 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667386)]
public static void vfmadd132ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vfmadd132ps instruction.<br/>
		/// <br/>
		/// <c>VFMADD132PS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 98 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADD132PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 98 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667387)]
public static void vfmadd132ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmadd132ps instruction.<br/>
		/// <br/>
		/// <c>VFMADD132PS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 98 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADD132PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 98 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667388)]
public static void vfmadd132ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmadd132ps instruction.<br/>
		/// <br/>
		/// <c>VFMADD132PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 98 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667389)]
public static void vfmadd132ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmadd132sd instruction.<br/>
		/// <br/>
		/// <c>VFMADD132SD xmm1, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W1 99 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADD132SD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W1 99 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667390)]
public static void vfmadd132sd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfmadd132sd instruction.<br/>
		/// <br/>
		/// <c>VFMADD132SD xmm1, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W1 99 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADD132SD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W1 99 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667391)]
public static void vfmadd132sd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmadd132ss instruction.<br/>
		/// <br/>
		/// <c>VFMADD132SS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W0 99 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADD132SS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W0 99 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667392)]
public static void vfmadd132ss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfmadd132ss instruction.<br/>
		/// <br/>
		/// <c>VFMADD132SS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W0 99 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADD132SS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W0 99 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667393)]
public static void vfmadd132ss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmadd213pd instruction.<br/>
		/// <br/>
		/// <c>VFMADD213PD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 A8 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADD213PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 A8 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667394)]
public static void vfmadd213pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfmadd213pd instruction.<br/>
		/// <br/>
		/// <c>VFMADD213PD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 A8 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADD213PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 A8 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667395)]
public static void vfmadd213pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vfmadd213pd instruction.<br/>
		/// <br/>
		/// <c>VFMADD213PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 A8 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667396)]
public static void vfmadd213pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vfmadd213pd instruction.<br/>
		/// <br/>
		/// <c>VFMADD213PD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 A8 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADD213PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 A8 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667397)]
public static void vfmadd213pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmadd213pd instruction.<br/>
		/// <br/>
		/// <c>VFMADD213PD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 A8 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADD213PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 A8 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667398)]
public static void vfmadd213pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmadd213pd instruction.<br/>
		/// <br/>
		/// <c>VFMADD213PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 A8 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667399)]
public static void vfmadd213pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmadd213ps instruction.<br/>
		/// <br/>
		/// <c>VFMADD213PS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 A8 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADD213PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 A8 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667400)]
public static void vfmadd213ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfmadd213ps instruction.<br/>
		/// <br/>
		/// <c>VFMADD213PS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 A8 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADD213PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 A8 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667401)]
public static void vfmadd213ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vfmadd213ps instruction.<br/>
		/// <br/>
		/// <c>VFMADD213PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 A8 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667402)]
public static void vfmadd213ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vfmadd213ps instruction.<br/>
		/// <br/>
		/// <c>VFMADD213PS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 A8 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADD213PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 A8 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667403)]
public static void vfmadd213ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmadd213ps instruction.<br/>
		/// <br/>
		/// <c>VFMADD213PS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 A8 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADD213PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 A8 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667404)]
public static void vfmadd213ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmadd213ps instruction.<br/>
		/// <br/>
		/// <c>VFMADD213PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 A8 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667405)]
public static void vfmadd213ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmadd213sd instruction.<br/>
		/// <br/>
		/// <c>VFMADD213SD xmm1, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W1 A9 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADD213SD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W1 A9 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667406)]
public static void vfmadd213sd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfmadd213sd instruction.<br/>
		/// <br/>
		/// <c>VFMADD213SD xmm1, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W1 A9 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADD213SD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W1 A9 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667407)]
public static void vfmadd213sd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmadd213ss instruction.<br/>
		/// <br/>
		/// <c>VFMADD213SS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W0 A9 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADD213SS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W0 A9 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667408)]
public static void vfmadd213ss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfmadd213ss instruction.<br/>
		/// <br/>
		/// <c>VFMADD213SS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W0 A9 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADD213SS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W0 A9 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667409)]
public static void vfmadd213ss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmadd231pd instruction.<br/>
		/// <br/>
		/// <c>VFMADD231PD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 B8 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADD231PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 B8 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667410)]
public static void vfmadd231pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfmadd231pd instruction.<br/>
		/// <br/>
		/// <c>VFMADD231PD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 B8 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADD231PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 B8 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667411)]
public static void vfmadd231pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vfmadd231pd instruction.<br/>
		/// <br/>
		/// <c>VFMADD231PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 B8 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667412)]
public static void vfmadd231pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vfmadd231pd instruction.<br/>
		/// <br/>
		/// <c>VFMADD231PD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 B8 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADD231PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 B8 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667413)]
public static void vfmadd231pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmadd231pd instruction.<br/>
		/// <br/>
		/// <c>VFMADD231PD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 B8 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADD231PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 B8 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667414)]
public static void vfmadd231pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmadd231pd instruction.<br/>
		/// <br/>
		/// <c>VFMADD231PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 B8 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667415)]
public static void vfmadd231pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmadd231ps instruction.<br/>
		/// <br/>
		/// <c>VFMADD231PS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 B8 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADD231PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 B8 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667416)]
public static void vfmadd231ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfmadd231ps instruction.<br/>
		/// <br/>
		/// <c>VFMADD231PS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 B8 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADD231PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 B8 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667417)]
public static void vfmadd231ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vfmadd231ps instruction.<br/>
		/// <br/>
		/// <c>VFMADD231PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 B8 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667418)]
public static void vfmadd231ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vfmadd231ps instruction.<br/>
		/// <br/>
		/// <c>VFMADD231PS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 B8 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADD231PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 B8 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667419)]
public static void vfmadd231ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmadd231ps instruction.<br/>
		/// <br/>
		/// <c>VFMADD231PS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 B8 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADD231PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 B8 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667420)]
public static void vfmadd231ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmadd231ps instruction.<br/>
		/// <br/>
		/// <c>VFMADD231PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 B8 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667421)]
public static void vfmadd231ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmadd231sd instruction.<br/>
		/// <br/>
		/// <c>VFMADD231SD xmm1, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W1 B9 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADD231SD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W1 B9 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667422)]
public static void vfmadd231sd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfmadd231sd instruction.<br/>
		/// <br/>
		/// <c>VFMADD231SD xmm1, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W1 B9 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADD231SD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W1 B9 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667423)]
public static void vfmadd231sd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmadd231ss instruction.<br/>
		/// <br/>
		/// <c>VFMADD231SS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W0 B9 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADD231SS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W0 B9 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667424)]
public static void vfmadd231ss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfmadd231ss instruction.<br/>
		/// <br/>
		/// <c>VFMADD231SS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W0 B9 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADD231SS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W0 B9 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667425)]
public static void vfmadd231ss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmaddpd instruction.<br/>
		/// <br/>
		/// <c>VFMADDPD xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 69 /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667426)]
public static void vfmaddpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerRegisterXMM src3) {}
		/// <summary>vfmaddpd instruction.<br/>
		/// <br/>
		/// <c>VFMADDPD xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 69 /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667427)]
public static void vfmaddpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, AssemblerRegisterXMM src3) {}
		/// <summary>vfmaddpd instruction.<br/>
		/// <br/>
		/// <c>VFMADDPD ymm1, ymm2, ymm3/m256, ymm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 69 /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667428)]
public static void vfmaddpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, AssemblerRegisterYMM src3) {}
		/// <summary>vfmaddpd instruction.<br/>
		/// <br/>
		/// <c>VFMADDPD ymm1, ymm2, ymm3/m256, ymm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 69 /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667429)]
public static void vfmaddpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, AssemblerRegisterYMM src3) {}
		/// <summary>vfmaddpd instruction.<br/>
		/// <br/>
		/// <c>VFMADDPD xmm1, xmm2, xmm3, xmm4/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 69 /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667430)]
public static void vfmaddpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerMemoryOperand src3) {}
		/// <summary>vfmaddpd instruction.<br/>
		/// <br/>
		/// <c>VFMADDPD ymm1, ymm2, ymm3, ymm4/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W1 69 /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667431)]
public static void vfmaddpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, AssemblerMemoryOperand src3) {}
		/// <summary>vfmaddps instruction.<br/>
		/// <br/>
		/// <c>VFMADDPS xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 68 /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667432)]
public static void vfmaddps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerRegisterXMM src3) {}
		/// <summary>vfmaddps instruction.<br/>
		/// <br/>
		/// <c>VFMADDPS xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 68 /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667433)]
public static void vfmaddps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, AssemblerRegisterXMM src3) {}
		/// <summary>vfmaddps instruction.<br/>
		/// <br/>
		/// <c>VFMADDPS ymm1, ymm2, ymm3/m256, ymm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 68 /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667434)]
public static void vfmaddps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, AssemblerRegisterYMM src3) {}
		/// <summary>vfmaddps instruction.<br/>
		/// <br/>
		/// <c>VFMADDPS ymm1, ymm2, ymm3/m256, ymm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 68 /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667435)]
public static void vfmaddps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, AssemblerRegisterYMM src3) {}
		/// <summary>vfmaddps instruction.<br/>
		/// <br/>
		/// <c>VFMADDPS xmm1, xmm2, xmm3, xmm4/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 68 /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667436)]
public static void vfmaddps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerMemoryOperand src3) {}
		/// <summary>vfmaddps instruction.<br/>
		/// <br/>
		/// <c>VFMADDPS ymm1, ymm2, ymm3, ymm4/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W1 68 /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667437)]
public static void vfmaddps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, AssemblerMemoryOperand src3) {}
		/// <summary>vfmaddsd instruction.<br/>
		/// <br/>
		/// <c>VFMADDSD xmm1, xmm2, xmm3/m64, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F3A.W0 6B /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667438)]
public static void vfmaddsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerRegisterXMM src3) {}
		/// <summary>vfmaddsd instruction.<br/>
		/// <br/>
		/// <c>VFMADDSD xmm1, xmm2, xmm3/m64, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F3A.W0 6B /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667439)]
public static void vfmaddsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, AssemblerRegisterXMM src3) {}
		/// <summary>vfmaddsd instruction.<br/>
		/// <br/>
		/// <c>VFMADDSD xmm1, xmm2, xmm3, xmm4/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F3A.W1 6B /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667440)]
public static void vfmaddsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerMemoryOperand src3) {}
		/// <summary>vfmaddss instruction.<br/>
		/// <br/>
		/// <c>VFMADDSS xmm1, xmm2, xmm3/m32, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F3A.W0 6A /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667441)]
public static void vfmaddss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerRegisterXMM src3) {}
		/// <summary>vfmaddss instruction.<br/>
		/// <br/>
		/// <c>VFMADDSS xmm1, xmm2, xmm3/m32, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F3A.W0 6A /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667442)]
public static void vfmaddss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, AssemblerRegisterXMM src3) {}
		/// <summary>vfmaddss instruction.<br/>
		/// <br/>
		/// <c>VFMADDSS xmm1, xmm2, xmm3, xmm4/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F3A.W1 6A /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667443)]
public static void vfmaddss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerMemoryOperand src3) {}
		/// <summary>vfmaddsub132pd instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUB132PD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 96 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADDSUB132PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 96 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667444)]
public static void vfmaddsub132pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfmaddsub132pd instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUB132PD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 96 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADDSUB132PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 96 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667445)]
public static void vfmaddsub132pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vfmaddsub132pd instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUB132PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 96 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667446)]
public static void vfmaddsub132pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vfmaddsub132pd instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUB132PD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 96 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADDSUB132PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 96 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667447)]
public static void vfmaddsub132pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmaddsub132pd instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUB132PD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 96 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADDSUB132PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 96 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667448)]
public static void vfmaddsub132pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmaddsub132pd instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUB132PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 96 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667449)]
public static void vfmaddsub132pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmaddsub132ps instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUB132PS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 96 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADDSUB132PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 96 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667450)]
public static void vfmaddsub132ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfmaddsub132ps instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUB132PS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 96 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADDSUB132PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 96 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667451)]
public static void vfmaddsub132ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vfmaddsub132ps instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUB132PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 96 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667452)]
public static void vfmaddsub132ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vfmaddsub132ps instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUB132PS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 96 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADDSUB132PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 96 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667453)]
public static void vfmaddsub132ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmaddsub132ps instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUB132PS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 96 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADDSUB132PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 96 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667454)]
public static void vfmaddsub132ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmaddsub132ps instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUB132PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 96 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667455)]
public static void vfmaddsub132ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmaddsub213pd instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUB213PD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 A6 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADDSUB213PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 A6 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667456)]
public static void vfmaddsub213pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfmaddsub213pd instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUB213PD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 A6 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADDSUB213PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 A6 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667457)]
public static void vfmaddsub213pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vfmaddsub213pd instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUB213PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 A6 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667458)]
public static void vfmaddsub213pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vfmaddsub213pd instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUB213PD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 A6 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADDSUB213PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 A6 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667459)]
public static void vfmaddsub213pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmaddsub213pd instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUB213PD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 A6 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADDSUB213PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 A6 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667460)]
public static void vfmaddsub213pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmaddsub213pd instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUB213PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 A6 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667461)]
public static void vfmaddsub213pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmaddsub213ps instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUB213PS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 A6 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADDSUB213PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 A6 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667462)]
public static void vfmaddsub213ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfmaddsub213ps instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUB213PS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 A6 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADDSUB213PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 A6 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667463)]
public static void vfmaddsub213ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vfmaddsub213ps instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUB213PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 A6 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667464)]
public static void vfmaddsub213ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vfmaddsub213ps instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUB213PS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 A6 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADDSUB213PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 A6 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667465)]
public static void vfmaddsub213ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmaddsub213ps instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUB213PS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 A6 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADDSUB213PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 A6 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667466)]
public static void vfmaddsub213ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmaddsub213ps instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUB213PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 A6 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667467)]
public static void vfmaddsub213ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmaddsub231pd instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUB231PD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 B6 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADDSUB231PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 B6 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667468)]
public static void vfmaddsub231pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfmaddsub231pd instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUB231PD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 B6 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADDSUB231PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 B6 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667469)]
public static void vfmaddsub231pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vfmaddsub231pd instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUB231PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 B6 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667470)]
public static void vfmaddsub231pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vfmaddsub231pd instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUB231PD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 B6 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADDSUB231PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 B6 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667471)]
public static void vfmaddsub231pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmaddsub231pd instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUB231PD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 B6 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADDSUB231PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 B6 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667472)]
public static void vfmaddsub231pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmaddsub231pd instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUB231PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 B6 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667473)]
public static void vfmaddsub231pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmaddsub231ps instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUB231PS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 B6 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADDSUB231PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 B6 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667474)]
public static void vfmaddsub231ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfmaddsub231ps instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUB231PS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 B6 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADDSUB231PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 B6 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667475)]
public static void vfmaddsub231ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vfmaddsub231ps instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUB231PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 B6 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667476)]
public static void vfmaddsub231ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vfmaddsub231ps instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUB231PS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 B6 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADDSUB231PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 B6 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667477)]
public static void vfmaddsub231ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmaddsub231ps instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUB231PS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 B6 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMADDSUB231PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 B6 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667478)]
public static void vfmaddsub231ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmaddsub231ps instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUB231PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 B6 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667479)]
public static void vfmaddsub231ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmaddsubpd instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUBPD xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 5D /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667480)]
public static void vfmaddsubpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerRegisterXMM src3) {}
		/// <summary>vfmaddsubpd instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUBPD xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 5D /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667481)]
public static void vfmaddsubpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, AssemblerRegisterXMM src3) {}
		/// <summary>vfmaddsubpd instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUBPD ymm1, ymm2, ymm3/m256, ymm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 5D /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667482)]
public static void vfmaddsubpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, AssemblerRegisterYMM src3) {}
		/// <summary>vfmaddsubpd instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUBPD ymm1, ymm2, ymm3/m256, ymm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 5D /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667483)]
public static void vfmaddsubpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, AssemblerRegisterYMM src3) {}
		/// <summary>vfmaddsubpd instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUBPD xmm1, xmm2, xmm3, xmm4/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 5D /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667484)]
public static void vfmaddsubpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerMemoryOperand src3) {}
		/// <summary>vfmaddsubpd instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUBPD ymm1, ymm2, ymm3, ymm4/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W1 5D /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667485)]
public static void vfmaddsubpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, AssemblerMemoryOperand src3) {}
		/// <summary>vfmaddsubps instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUBPS xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 5C /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667486)]
public static void vfmaddsubps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerRegisterXMM src3) {}
		/// <summary>vfmaddsubps instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUBPS xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 5C /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667487)]
public static void vfmaddsubps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, AssemblerRegisterXMM src3) {}
		/// <summary>vfmaddsubps instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUBPS ymm1, ymm2, ymm3/m256, ymm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 5C /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667488)]
public static void vfmaddsubps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, AssemblerRegisterYMM src3) {}
		/// <summary>vfmaddsubps instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUBPS ymm1, ymm2, ymm3/m256, ymm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 5C /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667489)]
public static void vfmaddsubps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, AssemblerRegisterYMM src3) {}
		/// <summary>vfmaddsubps instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUBPS xmm1, xmm2, xmm3, xmm4/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 5C /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667490)]
public static void vfmaddsubps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerMemoryOperand src3) {}
		/// <summary>vfmaddsubps instruction.<br/>
		/// <br/>
		/// <c>VFMADDSUBPS ymm1, ymm2, ymm3, ymm4/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W1 5C /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667491)]
public static void vfmaddsubps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, AssemblerMemoryOperand src3) {}
		/// <summary>vfmsub132pd instruction.<br/>
		/// <br/>
		/// <c>VFMSUB132PD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 9A /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUB132PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 9A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667492)]
public static void vfmsub132pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfmsub132pd instruction.<br/>
		/// <br/>
		/// <c>VFMSUB132PD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 9A /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUB132PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 9A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667493)]
public static void vfmsub132pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vfmsub132pd instruction.<br/>
		/// <br/>
		/// <c>VFMSUB132PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 9A /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667494)]
public static void vfmsub132pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vfmsub132pd instruction.<br/>
		/// <br/>
		/// <c>VFMSUB132PD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 9A /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUB132PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 9A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667495)]
public static void vfmsub132pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsub132pd instruction.<br/>
		/// <br/>
		/// <c>VFMSUB132PD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 9A /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUB132PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 9A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667496)]
public static void vfmsub132pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsub132pd instruction.<br/>
		/// <br/>
		/// <c>VFMSUB132PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 9A /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667497)]
public static void vfmsub132pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsub132ps instruction.<br/>
		/// <br/>
		/// <c>VFMSUB132PS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 9A /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUB132PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 9A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667498)]
public static void vfmsub132ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfmsub132ps instruction.<br/>
		/// <br/>
		/// <c>VFMSUB132PS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 9A /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUB132PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 9A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667499)]
public static void vfmsub132ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vfmsub132ps instruction.<br/>
		/// <br/>
		/// <c>VFMSUB132PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 9A /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667500)]
public static void vfmsub132ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vfmsub132ps instruction.<br/>
		/// <br/>
		/// <c>VFMSUB132PS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 9A /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUB132PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 9A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667501)]
public static void vfmsub132ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsub132ps instruction.<br/>
		/// <br/>
		/// <c>VFMSUB132PS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 9A /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUB132PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 9A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667502)]
public static void vfmsub132ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsub132ps instruction.<br/>
		/// <br/>
		/// <c>VFMSUB132PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 9A /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667503)]
public static void vfmsub132ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsub132sd instruction.<br/>
		/// <br/>
		/// <c>VFMSUB132SD xmm1, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W1 9B /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUB132SD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W1 9B /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667504)]
public static void vfmsub132sd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfmsub132sd instruction.<br/>
		/// <br/>
		/// <c>VFMSUB132SD xmm1, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W1 9B /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUB132SD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W1 9B /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667505)]
public static void vfmsub132sd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsub132ss instruction.<br/>
		/// <br/>
		/// <c>VFMSUB132SS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W0 9B /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUB132SS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W0 9B /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667506)]
public static void vfmsub132ss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfmsub132ss instruction.<br/>
		/// <br/>
		/// <c>VFMSUB132SS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W0 9B /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUB132SS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W0 9B /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667507)]
public static void vfmsub132ss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsub213pd instruction.<br/>
		/// <br/>
		/// <c>VFMSUB213PD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 AA /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUB213PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 AA /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667508)]
public static void vfmsub213pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfmsub213pd instruction.<br/>
		/// <br/>
		/// <c>VFMSUB213PD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 AA /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUB213PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 AA /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667509)]
public static void vfmsub213pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vfmsub213pd instruction.<br/>
		/// <br/>
		/// <c>VFMSUB213PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 AA /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667510)]
public static void vfmsub213pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vfmsub213pd instruction.<br/>
		/// <br/>
		/// <c>VFMSUB213PD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 AA /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUB213PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 AA /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667511)]
public static void vfmsub213pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsub213pd instruction.<br/>
		/// <br/>
		/// <c>VFMSUB213PD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 AA /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUB213PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 AA /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667512)]
public static void vfmsub213pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsub213pd instruction.<br/>
		/// <br/>
		/// <c>VFMSUB213PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 AA /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667513)]
public static void vfmsub213pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsub213ps instruction.<br/>
		/// <br/>
		/// <c>VFMSUB213PS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 AA /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUB213PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 AA /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667514)]
public static void vfmsub213ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfmsub213ps instruction.<br/>
		/// <br/>
		/// <c>VFMSUB213PS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 AA /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUB213PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 AA /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667515)]
public static void vfmsub213ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vfmsub213ps instruction.<br/>
		/// <br/>
		/// <c>VFMSUB213PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 AA /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667516)]
public static void vfmsub213ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vfmsub213ps instruction.<br/>
		/// <br/>
		/// <c>VFMSUB213PS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 AA /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUB213PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 AA /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667517)]
public static void vfmsub213ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsub213ps instruction.<br/>
		/// <br/>
		/// <c>VFMSUB213PS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 AA /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUB213PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 AA /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667518)]
public static void vfmsub213ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsub213ps instruction.<br/>
		/// <br/>
		/// <c>VFMSUB213PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 AA /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667519)]
public static void vfmsub213ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsub213sd instruction.<br/>
		/// <br/>
		/// <c>VFMSUB213SD xmm1, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W1 AB /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUB213SD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W1 AB /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667520)]
public static void vfmsub213sd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfmsub213sd instruction.<br/>
		/// <br/>
		/// <c>VFMSUB213SD xmm1, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W1 AB /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUB213SD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W1 AB /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667521)]
public static void vfmsub213sd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsub213ss instruction.<br/>
		/// <br/>
		/// <c>VFMSUB213SS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W0 AB /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUB213SS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W0 AB /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667522)]
public static void vfmsub213ss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfmsub213ss instruction.<br/>
		/// <br/>
		/// <c>VFMSUB213SS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W0 AB /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUB213SS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W0 AB /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667523)]
public static void vfmsub213ss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsub231pd instruction.<br/>
		/// <br/>
		/// <c>VFMSUB231PD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 BA /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUB231PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 BA /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667524)]
public static void vfmsub231pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfmsub231pd instruction.<br/>
		/// <br/>
		/// <c>VFMSUB231PD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 BA /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUB231PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 BA /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667525)]
public static void vfmsub231pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vfmsub231pd instruction.<br/>
		/// <br/>
		/// <c>VFMSUB231PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 BA /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667526)]
public static void vfmsub231pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vfmsub231pd instruction.<br/>
		/// <br/>
		/// <c>VFMSUB231PD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 BA /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUB231PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 BA /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667527)]
public static void vfmsub231pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsub231pd instruction.<br/>
		/// <br/>
		/// <c>VFMSUB231PD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 BA /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUB231PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 BA /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667528)]
public static void vfmsub231pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsub231pd instruction.<br/>
		/// <br/>
		/// <c>VFMSUB231PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 BA /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667529)]
public static void vfmsub231pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsub231ps instruction.<br/>
		/// <br/>
		/// <c>VFMSUB231PS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 BA /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUB231PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 BA /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667530)]
public static void vfmsub231ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfmsub231ps instruction.<br/>
		/// <br/>
		/// <c>VFMSUB231PS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 BA /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUB231PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 BA /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667531)]
public static void vfmsub231ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vfmsub231ps instruction.<br/>
		/// <br/>
		/// <c>VFMSUB231PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 BA /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667532)]
public static void vfmsub231ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vfmsub231ps instruction.<br/>
		/// <br/>
		/// <c>VFMSUB231PS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 BA /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUB231PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 BA /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667533)]
public static void vfmsub231ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsub231ps instruction.<br/>
		/// <br/>
		/// <c>VFMSUB231PS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 BA /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUB231PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 BA /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667534)]
public static void vfmsub231ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsub231ps instruction.<br/>
		/// <br/>
		/// <c>VFMSUB231PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 BA /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667535)]
public static void vfmsub231ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsub231sd instruction.<br/>
		/// <br/>
		/// <c>VFMSUB231SD xmm1, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W1 BB /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUB231SD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W1 BB /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667536)]
public static void vfmsub231sd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfmsub231sd instruction.<br/>
		/// <br/>
		/// <c>VFMSUB231SD xmm1, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W1 BB /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUB231SD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W1 BB /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667537)]
public static void vfmsub231sd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsub231ss instruction.<br/>
		/// <br/>
		/// <c>VFMSUB231SS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W0 BB /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUB231SS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W0 BB /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667538)]
public static void vfmsub231ss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfmsub231ss instruction.<br/>
		/// <br/>
		/// <c>VFMSUB231SS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W0 BB /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUB231SS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W0 BB /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667539)]
public static void vfmsub231ss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsubadd132pd instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADD132PD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 97 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUBADD132PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 97 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667540)]
public static void vfmsubadd132pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfmsubadd132pd instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADD132PD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 97 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUBADD132PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 97 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667541)]
public static void vfmsubadd132pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vfmsubadd132pd instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADD132PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 97 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667542)]
public static void vfmsubadd132pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vfmsubadd132pd instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADD132PD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 97 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUBADD132PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 97 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667543)]
public static void vfmsubadd132pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsubadd132pd instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADD132PD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 97 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUBADD132PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 97 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667544)]
public static void vfmsubadd132pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsubadd132pd instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADD132PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 97 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667545)]
public static void vfmsubadd132pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsubadd132ps instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADD132PS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 97 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUBADD132PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 97 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667546)]
public static void vfmsubadd132ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfmsubadd132ps instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADD132PS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 97 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUBADD132PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 97 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667547)]
public static void vfmsubadd132ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vfmsubadd132ps instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADD132PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 97 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667548)]
public static void vfmsubadd132ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vfmsubadd132ps instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADD132PS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 97 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUBADD132PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 97 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667549)]
public static void vfmsubadd132ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsubadd132ps instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADD132PS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 97 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUBADD132PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 97 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667550)]
public static void vfmsubadd132ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsubadd132ps instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADD132PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 97 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667551)]
public static void vfmsubadd132ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsubadd213pd instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADD213PD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 A7 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUBADD213PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 A7 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667552)]
public static void vfmsubadd213pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfmsubadd213pd instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADD213PD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 A7 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUBADD213PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 A7 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667553)]
public static void vfmsubadd213pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vfmsubadd213pd instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADD213PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 A7 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667554)]
public static void vfmsubadd213pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vfmsubadd213pd instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADD213PD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 A7 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUBADD213PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 A7 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667555)]
public static void vfmsubadd213pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsubadd213pd instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADD213PD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 A7 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUBADD213PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 A7 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667556)]
public static void vfmsubadd213pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsubadd213pd instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADD213PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 A7 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667557)]
public static void vfmsubadd213pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsubadd213ps instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADD213PS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 A7 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUBADD213PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 A7 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667558)]
public static void vfmsubadd213ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfmsubadd213ps instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADD213PS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 A7 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUBADD213PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 A7 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667559)]
public static void vfmsubadd213ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vfmsubadd213ps instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADD213PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 A7 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667560)]
public static void vfmsubadd213ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vfmsubadd213ps instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADD213PS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 A7 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUBADD213PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 A7 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667561)]
public static void vfmsubadd213ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsubadd213ps instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADD213PS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 A7 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUBADD213PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 A7 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667562)]
public static void vfmsubadd213ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsubadd213ps instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADD213PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 A7 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667563)]
public static void vfmsubadd213ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsubadd231pd instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADD231PD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 B7 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUBADD231PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 B7 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667564)]
public static void vfmsubadd231pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfmsubadd231pd instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADD231PD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 B7 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUBADD231PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 B7 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667565)]
public static void vfmsubadd231pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vfmsubadd231pd instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADD231PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 B7 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667566)]
public static void vfmsubadd231pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vfmsubadd231pd instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADD231PD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 B7 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUBADD231PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 B7 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667567)]
public static void vfmsubadd231pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsubadd231pd instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADD231PD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 B7 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUBADD231PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 B7 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667568)]
public static void vfmsubadd231pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsubadd231pd instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADD231PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 B7 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667569)]
public static void vfmsubadd231pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsubadd231ps instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADD231PS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 B7 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUBADD231PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 B7 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667570)]
public static void vfmsubadd231ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfmsubadd231ps instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADD231PS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 B7 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUBADD231PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 B7 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667571)]
public static void vfmsubadd231ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vfmsubadd231ps instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADD231PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 B7 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667572)]
public static void vfmsubadd231ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vfmsubadd231ps instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADD231PS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 B7 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUBADD231PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 B7 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667573)]
public static void vfmsubadd231ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsubadd231ps instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADD231PS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 B7 /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFMSUBADD231PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 B7 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667574)]
public static void vfmsubadd231ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsubadd231ps instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADD231PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 B7 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667575)]
public static void vfmsubadd231ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfmsubaddpd instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADDPD xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 5F /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667576)]
public static void vfmsubaddpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerRegisterXMM src3) {}
		/// <summary>vfmsubaddpd instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADDPD xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 5F /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667577)]
public static void vfmsubaddpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, AssemblerRegisterXMM src3) {}
		/// <summary>vfmsubaddpd instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADDPD ymm1, ymm2, ymm3/m256, ymm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 5F /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667578)]
public static void vfmsubaddpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, AssemblerRegisterYMM src3) {}
		/// <summary>vfmsubaddpd instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADDPD ymm1, ymm2, ymm3/m256, ymm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 5F /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667579)]
public static void vfmsubaddpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, AssemblerRegisterYMM src3) {}
		/// <summary>vfmsubaddpd instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADDPD xmm1, xmm2, xmm3, xmm4/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 5F /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667580)]
public static void vfmsubaddpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerMemoryOperand src3) {}
		/// <summary>vfmsubaddpd instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADDPD ymm1, ymm2, ymm3, ymm4/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W1 5F /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667581)]
public static void vfmsubaddpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, AssemblerMemoryOperand src3) {}
		/// <summary>vfmsubaddps instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADDPS xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 5E /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667582)]
public static void vfmsubaddps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerRegisterXMM src3) {}
		/// <summary>vfmsubaddps instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADDPS xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 5E /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667583)]
public static void vfmsubaddps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, AssemblerRegisterXMM src3) {}
		/// <summary>vfmsubaddps instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADDPS ymm1, ymm2, ymm3/m256, ymm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 5E /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667584)]
public static void vfmsubaddps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, AssemblerRegisterYMM src3) {}
		/// <summary>vfmsubaddps instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADDPS ymm1, ymm2, ymm3/m256, ymm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 5E /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667585)]
public static void vfmsubaddps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, AssemblerRegisterYMM src3) {}
		/// <summary>vfmsubaddps instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADDPS xmm1, xmm2, xmm3, xmm4/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 5E /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667586)]
public static void vfmsubaddps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerMemoryOperand src3) {}
		/// <summary>vfmsubaddps instruction.<br/>
		/// <br/>
		/// <c>VFMSUBADDPS ymm1, ymm2, ymm3, ymm4/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W1 5E /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667587)]
public static void vfmsubaddps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, AssemblerMemoryOperand src3) {}
		/// <summary>vfmsubpd instruction.<br/>
		/// <br/>
		/// <c>VFMSUBPD xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 6D /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667588)]
public static void vfmsubpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerRegisterXMM src3) {}
		/// <summary>vfmsubpd instruction.<br/>
		/// <br/>
		/// <c>VFMSUBPD xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 6D /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667589)]
public static void vfmsubpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, AssemblerRegisterXMM src3) {}
		/// <summary>vfmsubpd instruction.<br/>
		/// <br/>
		/// <c>VFMSUBPD ymm1, ymm2, ymm3/m256, ymm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 6D /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667590)]
public static void vfmsubpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, AssemblerRegisterYMM src3) {}
		/// <summary>vfmsubpd instruction.<br/>
		/// <br/>
		/// <c>VFMSUBPD ymm1, ymm2, ymm3/m256, ymm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 6D /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667591)]
public static void vfmsubpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, AssemblerRegisterYMM src3) {}
		/// <summary>vfmsubpd instruction.<br/>
		/// <br/>
		/// <c>VFMSUBPD xmm1, xmm2, xmm3, xmm4/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 6D /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667592)]
public static void vfmsubpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerMemoryOperand src3) {}
		/// <summary>vfmsubpd instruction.<br/>
		/// <br/>
		/// <c>VFMSUBPD ymm1, ymm2, ymm3, ymm4/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W1 6D /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667593)]
public static void vfmsubpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, AssemblerMemoryOperand src3) {}
		/// <summary>vfmsubps instruction.<br/>
		/// <br/>
		/// <c>VFMSUBPS xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 6C /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667594)]
public static void vfmsubps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerRegisterXMM src3) {}
		/// <summary>vfmsubps instruction.<br/>
		/// <br/>
		/// <c>VFMSUBPS xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 6C /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667595)]
public static void vfmsubps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, AssemblerRegisterXMM src3) {}
		/// <summary>vfmsubps instruction.<br/>
		/// <br/>
		/// <c>VFMSUBPS ymm1, ymm2, ymm3/m256, ymm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 6C /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667596)]
public static void vfmsubps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, AssemblerRegisterYMM src3) {}
		/// <summary>vfmsubps instruction.<br/>
		/// <br/>
		/// <c>VFMSUBPS ymm1, ymm2, ymm3/m256, ymm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 6C /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667597)]
public static void vfmsubps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, AssemblerRegisterYMM src3) {}
		/// <summary>vfmsubps instruction.<br/>
		/// <br/>
		/// <c>VFMSUBPS xmm1, xmm2, xmm3, xmm4/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 6C /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667598)]
public static void vfmsubps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerMemoryOperand src3) {}
		/// <summary>vfmsubps instruction.<br/>
		/// <br/>
		/// <c>VFMSUBPS ymm1, ymm2, ymm3, ymm4/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W1 6C /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667599)]
public static void vfmsubps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, AssemblerMemoryOperand src3) {}
		/// <summary>vfmsubsd instruction.<br/>
		/// <br/>
		/// <c>VFMSUBSD xmm1, xmm2, xmm3/m64, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F3A.W0 6F /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667600)]
public static void vfmsubsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerRegisterXMM src3) {}
		/// <summary>vfmsubsd instruction.<br/>
		/// <br/>
		/// <c>VFMSUBSD xmm1, xmm2, xmm3/m64, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F3A.W0 6F /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667601)]
public static void vfmsubsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, AssemblerRegisterXMM src3) {}
		/// <summary>vfmsubsd instruction.<br/>
		/// <br/>
		/// <c>VFMSUBSD xmm1, xmm2, xmm3, xmm4/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F3A.W1 6F /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667602)]
public static void vfmsubsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerMemoryOperand src3) {}
		/// <summary>vfmsubss instruction.<br/>
		/// <br/>
		/// <c>VFMSUBSS xmm1, xmm2, xmm3/m32, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F3A.W0 6E /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667603)]
public static void vfmsubss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerRegisterXMM src3) {}
		/// <summary>vfmsubss instruction.<br/>
		/// <br/>
		/// <c>VFMSUBSS xmm1, xmm2, xmm3/m32, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F3A.W0 6E /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667604)]
public static void vfmsubss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, AssemblerRegisterXMM src3) {}
		/// <summary>vfmsubss instruction.<br/>
		/// <br/>
		/// <c>VFMSUBSS xmm1, xmm2, xmm3, xmm4/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F3A.W1 6E /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667605)]
public static void vfmsubss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerMemoryOperand src3) {}
		/// <summary>vfnmadd132pd instruction.<br/>
		/// <br/>
		/// <c>VFNMADD132PD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 9C /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMADD132PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 9C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667606)]
public static void vfnmadd132pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfnmadd132pd instruction.<br/>
		/// <br/>
		/// <c>VFNMADD132PD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 9C /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMADD132PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 9C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667607)]
public static void vfnmadd132pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vfnmadd132pd instruction.<br/>
		/// <br/>
		/// <c>VFNMADD132PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 9C /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667608)]
public static void vfnmadd132pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vfnmadd132pd instruction.<br/>
		/// <br/>
		/// <c>VFNMADD132PD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 9C /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMADD132PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 9C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667609)]
public static void vfnmadd132pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmadd132pd instruction.<br/>
		/// <br/>
		/// <c>VFNMADD132PD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 9C /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMADD132PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 9C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667610)]
public static void vfnmadd132pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmadd132pd instruction.<br/>
		/// <br/>
		/// <c>VFNMADD132PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 9C /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667611)]
public static void vfnmadd132pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmadd132ps instruction.<br/>
		/// <br/>
		/// <c>VFNMADD132PS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 9C /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMADD132PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 9C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667612)]
public static void vfnmadd132ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfnmadd132ps instruction.<br/>
		/// <br/>
		/// <c>VFNMADD132PS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 9C /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMADD132PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 9C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667613)]
public static void vfnmadd132ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vfnmadd132ps instruction.<br/>
		/// <br/>
		/// <c>VFNMADD132PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 9C /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667614)]
public static void vfnmadd132ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vfnmadd132ps instruction.<br/>
		/// <br/>
		/// <c>VFNMADD132PS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 9C /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMADD132PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 9C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667615)]
public static void vfnmadd132ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmadd132ps instruction.<br/>
		/// <br/>
		/// <c>VFNMADD132PS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 9C /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMADD132PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 9C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667616)]
public static void vfnmadd132ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmadd132ps instruction.<br/>
		/// <br/>
		/// <c>VFNMADD132PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 9C /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667617)]
public static void vfnmadd132ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmadd132sd instruction.<br/>
		/// <br/>
		/// <c>VFNMADD132SD xmm1, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W1 9D /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMADD132SD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W1 9D /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667618)]
public static void vfnmadd132sd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfnmadd132sd instruction.<br/>
		/// <br/>
		/// <c>VFNMADD132SD xmm1, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W1 9D /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMADD132SD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W1 9D /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667619)]
public static void vfnmadd132sd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmadd132ss instruction.<br/>
		/// <br/>
		/// <c>VFNMADD132SS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W0 9D /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMADD132SS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W0 9D /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667620)]
public static void vfnmadd132ss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfnmadd132ss instruction.<br/>
		/// <br/>
		/// <c>VFNMADD132SS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W0 9D /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMADD132SS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W0 9D /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667621)]
public static void vfnmadd132ss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmadd213pd instruction.<br/>
		/// <br/>
		/// <c>VFNMADD213PD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 AC /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMADD213PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 AC /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667622)]
public static void vfnmadd213pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfnmadd213pd instruction.<br/>
		/// <br/>
		/// <c>VFNMADD213PD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 AC /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMADD213PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 AC /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667623)]
public static void vfnmadd213pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vfnmadd213pd instruction.<br/>
		/// <br/>
		/// <c>VFNMADD213PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 AC /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667624)]
public static void vfnmadd213pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vfnmadd213pd instruction.<br/>
		/// <br/>
		/// <c>VFNMADD213PD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 AC /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMADD213PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 AC /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667625)]
public static void vfnmadd213pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmadd213pd instruction.<br/>
		/// <br/>
		/// <c>VFNMADD213PD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 AC /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMADD213PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 AC /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667626)]
public static void vfnmadd213pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmadd213pd instruction.<br/>
		/// <br/>
		/// <c>VFNMADD213PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 AC /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667627)]
public static void vfnmadd213pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmadd213ps instruction.<br/>
		/// <br/>
		/// <c>VFNMADD213PS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 AC /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMADD213PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 AC /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667628)]
public static void vfnmadd213ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfnmadd213ps instruction.<br/>
		/// <br/>
		/// <c>VFNMADD213PS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 AC /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMADD213PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 AC /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667629)]
public static void vfnmadd213ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vfnmadd213ps instruction.<br/>
		/// <br/>
		/// <c>VFNMADD213PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 AC /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667630)]
public static void vfnmadd213ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vfnmadd213ps instruction.<br/>
		/// <br/>
		/// <c>VFNMADD213PS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 AC /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMADD213PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 AC /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667631)]
public static void vfnmadd213ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmadd213ps instruction.<br/>
		/// <br/>
		/// <c>VFNMADD213PS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 AC /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMADD213PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 AC /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667632)]
public static void vfnmadd213ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmadd213ps instruction.<br/>
		/// <br/>
		/// <c>VFNMADD213PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 AC /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667633)]
public static void vfnmadd213ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmadd213sd instruction.<br/>
		/// <br/>
		/// <c>VFNMADD213SD xmm1, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W1 AD /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMADD213SD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W1 AD /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667634)]
public static void vfnmadd213sd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfnmadd213sd instruction.<br/>
		/// <br/>
		/// <c>VFNMADD213SD xmm1, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W1 AD /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMADD213SD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W1 AD /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667635)]
public static void vfnmadd213sd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmadd213ss instruction.<br/>
		/// <br/>
		/// <c>VFNMADD213SS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W0 AD /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMADD213SS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W0 AD /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667636)]
public static void vfnmadd213ss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfnmadd213ss instruction.<br/>
		/// <br/>
		/// <c>VFNMADD213SS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W0 AD /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMADD213SS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W0 AD /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667637)]
public static void vfnmadd213ss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmadd231pd instruction.<br/>
		/// <br/>
		/// <c>VFNMADD231PD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 BC /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMADD231PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 BC /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667638)]
public static void vfnmadd231pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfnmadd231pd instruction.<br/>
		/// <br/>
		/// <c>VFNMADD231PD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 BC /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMADD231PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 BC /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667639)]
public static void vfnmadd231pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vfnmadd231pd instruction.<br/>
		/// <br/>
		/// <c>VFNMADD231PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 BC /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667640)]
public static void vfnmadd231pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vfnmadd231pd instruction.<br/>
		/// <br/>
		/// <c>VFNMADD231PD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 BC /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMADD231PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 BC /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667641)]
public static void vfnmadd231pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmadd231pd instruction.<br/>
		/// <br/>
		/// <c>VFNMADD231PD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 BC /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMADD231PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 BC /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667642)]
public static void vfnmadd231pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmadd231pd instruction.<br/>
		/// <br/>
		/// <c>VFNMADD231PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 BC /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667643)]
public static void vfnmadd231pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmadd231ps instruction.<br/>
		/// <br/>
		/// <c>VFNMADD231PS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 BC /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMADD231PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 BC /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667644)]
public static void vfnmadd231ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfnmadd231ps instruction.<br/>
		/// <br/>
		/// <c>VFNMADD231PS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 BC /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMADD231PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 BC /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667645)]
public static void vfnmadd231ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vfnmadd231ps instruction.<br/>
		/// <br/>
		/// <c>VFNMADD231PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 BC /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667646)]
public static void vfnmadd231ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vfnmadd231ps instruction.<br/>
		/// <br/>
		/// <c>VFNMADD231PS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 BC /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMADD231PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 BC /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667647)]
public static void vfnmadd231ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmadd231ps instruction.<br/>
		/// <br/>
		/// <c>VFNMADD231PS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 BC /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMADD231PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 BC /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667648)]
public static void vfnmadd231ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmadd231ps instruction.<br/>
		/// <br/>
		/// <c>VFNMADD231PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 BC /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667649)]
public static void vfnmadd231ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmadd231sd instruction.<br/>
		/// <br/>
		/// <c>VFNMADD231SD xmm1, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W1 BD /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMADD231SD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W1 BD /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667650)]
public static void vfnmadd231sd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfnmadd231sd instruction.<br/>
		/// <br/>
		/// <c>VFNMADD231SD xmm1, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W1 BD /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMADD231SD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W1 BD /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667651)]
public static void vfnmadd231sd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmadd231ss instruction.<br/>
		/// <br/>
		/// <c>VFNMADD231SS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W0 BD /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMADD231SS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W0 BD /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667652)]
public static void vfnmadd231ss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfnmadd231ss instruction.<br/>
		/// <br/>
		/// <c>VFNMADD231SS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W0 BD /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMADD231SS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W0 BD /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667653)]
public static void vfnmadd231ss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmaddpd instruction.<br/>
		/// <br/>
		/// <c>VFNMADDPD xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 79 /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667654)]
public static void vfnmaddpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerRegisterXMM src3) {}
		/// <summary>vfnmaddpd instruction.<br/>
		/// <br/>
		/// <c>VFNMADDPD xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 79 /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667655)]
public static void vfnmaddpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, AssemblerRegisterXMM src3) {}
		/// <summary>vfnmaddpd instruction.<br/>
		/// <br/>
		/// <c>VFNMADDPD ymm1, ymm2, ymm3/m256, ymm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 79 /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667656)]
public static void vfnmaddpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, AssemblerRegisterYMM src3) {}
		/// <summary>vfnmaddpd instruction.<br/>
		/// <br/>
		/// <c>VFNMADDPD ymm1, ymm2, ymm3/m256, ymm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 79 /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667657)]
public static void vfnmaddpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, AssemblerRegisterYMM src3) {}
		/// <summary>vfnmaddpd instruction.<br/>
		/// <br/>
		/// <c>VFNMADDPD xmm1, xmm2, xmm3, xmm4/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 79 /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667658)]
public static void vfnmaddpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerMemoryOperand src3) {}
		/// <summary>vfnmaddpd instruction.<br/>
		/// <br/>
		/// <c>VFNMADDPD ymm1, ymm2, ymm3, ymm4/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W1 79 /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667659)]
public static void vfnmaddpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, AssemblerMemoryOperand src3) {}
		/// <summary>vfnmaddps instruction.<br/>
		/// <br/>
		/// <c>VFNMADDPS xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 78 /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667660)]
public static void vfnmaddps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerRegisterXMM src3) {}
		/// <summary>vfnmaddps instruction.<br/>
		/// <br/>
		/// <c>VFNMADDPS xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 78 /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667661)]
public static void vfnmaddps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, AssemblerRegisterXMM src3) {}
		/// <summary>vfnmaddps instruction.<br/>
		/// <br/>
		/// <c>VFNMADDPS ymm1, ymm2, ymm3/m256, ymm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 78 /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667662)]
public static void vfnmaddps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, AssemblerRegisterYMM src3) {}
		/// <summary>vfnmaddps instruction.<br/>
		/// <br/>
		/// <c>VFNMADDPS ymm1, ymm2, ymm3/m256, ymm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 78 /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667663)]
public static void vfnmaddps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, AssemblerRegisterYMM src3) {}
		/// <summary>vfnmaddps instruction.<br/>
		/// <br/>
		/// <c>VFNMADDPS xmm1, xmm2, xmm3, xmm4/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 78 /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667664)]
public static void vfnmaddps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerMemoryOperand src3) {}
		/// <summary>vfnmaddps instruction.<br/>
		/// <br/>
		/// <c>VFNMADDPS ymm1, ymm2, ymm3, ymm4/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W1 78 /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667665)]
public static void vfnmaddps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, AssemblerMemoryOperand src3) {}
		/// <summary>vfnmaddsd instruction.<br/>
		/// <br/>
		/// <c>VFNMADDSD xmm1, xmm2, xmm3/m64, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F3A.W0 7B /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667666)]
public static void vfnmaddsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerRegisterXMM src3) {}
		/// <summary>vfnmaddsd instruction.<br/>
		/// <br/>
		/// <c>VFNMADDSD xmm1, xmm2, xmm3/m64, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F3A.W0 7B /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667667)]
public static void vfnmaddsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, AssemblerRegisterXMM src3) {}
		/// <summary>vfnmaddsd instruction.<br/>
		/// <br/>
		/// <c>VFNMADDSD xmm1, xmm2, xmm3, xmm4/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F3A.W1 7B /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667668)]
public static void vfnmaddsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerMemoryOperand src3) {}
		/// <summary>vfnmaddss instruction.<br/>
		/// <br/>
		/// <c>VFNMADDSS xmm1, xmm2, xmm3/m32, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F3A.W0 7A /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667669)]
public static void vfnmaddss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerRegisterXMM src3) {}
		/// <summary>vfnmaddss instruction.<br/>
		/// <br/>
		/// <c>VFNMADDSS xmm1, xmm2, xmm3/m32, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F3A.W0 7A /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667670)]
public static void vfnmaddss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, AssemblerRegisterXMM src3) {}
		/// <summary>vfnmaddss instruction.<br/>
		/// <br/>
		/// <c>VFNMADDSS xmm1, xmm2, xmm3, xmm4/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F3A.W1 7A /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667671)]
public static void vfnmaddss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerMemoryOperand src3) {}
		/// <summary>vfnmsub132pd instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB132PD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 9E /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMSUB132PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 9E /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667672)]
public static void vfnmsub132pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfnmsub132pd instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB132PD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 9E /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMSUB132PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 9E /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667673)]
public static void vfnmsub132pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vfnmsub132pd instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB132PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 9E /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667674)]
public static void vfnmsub132pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vfnmsub132pd instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB132PD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 9E /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMSUB132PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 9E /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667675)]
public static void vfnmsub132pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmsub132pd instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB132PD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 9E /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMSUB132PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 9E /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667676)]
public static void vfnmsub132pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmsub132pd instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB132PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 9E /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667677)]
public static void vfnmsub132pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmsub132ps instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB132PS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 9E /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMSUB132PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 9E /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667678)]
public static void vfnmsub132ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfnmsub132ps instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB132PS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 9E /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMSUB132PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 9E /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667679)]
public static void vfnmsub132ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vfnmsub132ps instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB132PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 9E /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667680)]
public static void vfnmsub132ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vfnmsub132ps instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB132PS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 9E /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMSUB132PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 9E /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667681)]
public static void vfnmsub132ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmsub132ps instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB132PS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 9E /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMSUB132PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 9E /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667682)]
public static void vfnmsub132ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmsub132ps instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB132PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 9E /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667683)]
public static void vfnmsub132ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmsub132sd instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB132SD xmm1, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W1 9F /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMSUB132SD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W1 9F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667684)]
public static void vfnmsub132sd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfnmsub132sd instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB132SD xmm1, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W1 9F /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMSUB132SD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W1 9F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667685)]
public static void vfnmsub132sd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmsub132ss instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB132SS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W0 9F /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMSUB132SS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W0 9F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667686)]
public static void vfnmsub132ss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfnmsub132ss instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB132SS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W0 9F /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMSUB132SS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W0 9F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667687)]
public static void vfnmsub132ss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmsub213pd instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB213PD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 AE /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMSUB213PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 AE /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667688)]
public static void vfnmsub213pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfnmsub213pd instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB213PD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 AE /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMSUB213PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 AE /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667689)]
public static void vfnmsub213pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vfnmsub213pd instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB213PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 AE /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667690)]
public static void vfnmsub213pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vfnmsub213pd instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB213PD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 AE /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMSUB213PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 AE /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667691)]
public static void vfnmsub213pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmsub213pd instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB213PD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 AE /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMSUB213PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 AE /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667692)]
public static void vfnmsub213pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmsub213pd instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB213PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 AE /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667693)]
public static void vfnmsub213pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmsub213ps instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB213PS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 AE /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMSUB213PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 AE /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667694)]
public static void vfnmsub213ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfnmsub213ps instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB213PS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 AE /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMSUB213PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 AE /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667695)]
public static void vfnmsub213ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vfnmsub213ps instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB213PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 AE /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667696)]
public static void vfnmsub213ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vfnmsub213ps instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB213PS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 AE /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMSUB213PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 AE /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667697)]
public static void vfnmsub213ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmsub213ps instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB213PS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 AE /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMSUB213PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 AE /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667698)]
public static void vfnmsub213ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmsub213ps instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB213PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 AE /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667699)]
public static void vfnmsub213ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmsub213sd instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB213SD xmm1, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W1 AF /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMSUB213SD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W1 AF /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667700)]
public static void vfnmsub213sd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfnmsub213sd instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB213SD xmm1, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W1 AF /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMSUB213SD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W1 AF /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667701)]
public static void vfnmsub213sd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmsub213ss instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB213SS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W0 AF /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMSUB213SS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W0 AF /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667702)]
public static void vfnmsub213ss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfnmsub213ss instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB213SS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W0 AF /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMSUB213SS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W0 AF /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667703)]
public static void vfnmsub213ss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmsub231pd instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB231PD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 BE /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMSUB231PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 BE /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667704)]
public static void vfnmsub231pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfnmsub231pd instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB231PD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 BE /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMSUB231PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 BE /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667705)]
public static void vfnmsub231pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vfnmsub231pd instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB231PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 BE /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667706)]
public static void vfnmsub231pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vfnmsub231pd instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB231PD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 BE /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMSUB231PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 BE /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667707)]
public static void vfnmsub231pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmsub231pd instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB231PD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 BE /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMSUB231PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 BE /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667708)]
public static void vfnmsub231pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmsub231pd instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB231PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 BE /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667709)]
public static void vfnmsub231pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmsub231ps instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB231PS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 BE /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMSUB231PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 BE /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667710)]
public static void vfnmsub231ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfnmsub231ps instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB231PS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 BE /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMSUB231PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 BE /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667711)]
public static void vfnmsub231ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vfnmsub231ps instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB231PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 BE /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667712)]
public static void vfnmsub231ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vfnmsub231ps instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB231PS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 BE /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMSUB231PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 BE /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667713)]
public static void vfnmsub231ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmsub231ps instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB231PS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 BE /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMSUB231PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 BE /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667714)]
public static void vfnmsub231ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmsub231ps instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB231PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 BE /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667715)]
public static void vfnmsub231ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmsub231sd instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB231SD xmm1, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W1 BF /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMSUB231SD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W1 BF /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667716)]
public static void vfnmsub231sd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfnmsub231sd instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB231SD xmm1, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W1 BF /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMSUB231SD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W1 BF /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667717)]
public static void vfnmsub231sd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmsub231ss instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB231SS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W0 BF /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMSUB231SS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W0 BF /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667718)]
public static void vfnmsub231ss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vfnmsub231ss instruction.<br/>
		/// <br/>
		/// <c>VFNMSUB231SS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F38.W0 BF /r</c><br/>
		/// <br/>
		/// <c>FMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFNMSUB231SS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W0 BF /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667719)]
public static void vfnmsub231ss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vfnmsubpd instruction.<br/>
		/// <br/>
		/// <c>VFNMSUBPD xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 7D /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667720)]
public static void vfnmsubpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerRegisterXMM src3) {}
		/// <summary>vfnmsubpd instruction.<br/>
		/// <br/>
		/// <c>VFNMSUBPD xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 7D /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667721)]
public static void vfnmsubpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, AssemblerRegisterXMM src3) {}
		/// <summary>vfnmsubpd instruction.<br/>
		/// <br/>
		/// <c>VFNMSUBPD ymm1, ymm2, ymm3/m256, ymm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 7D /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667722)]
public static void vfnmsubpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, AssemblerRegisterYMM src3) {}
		/// <summary>vfnmsubpd instruction.<br/>
		/// <br/>
		/// <c>VFNMSUBPD ymm1, ymm2, ymm3/m256, ymm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 7D /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667723)]
public static void vfnmsubpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, AssemblerRegisterYMM src3) {}
		/// <summary>vfnmsubpd instruction.<br/>
		/// <br/>
		/// <c>VFNMSUBPD xmm1, xmm2, xmm3, xmm4/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 7D /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667724)]
public static void vfnmsubpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerMemoryOperand src3) {}
		/// <summary>vfnmsubpd instruction.<br/>
		/// <br/>
		/// <c>VFNMSUBPD ymm1, ymm2, ymm3, ymm4/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W1 7D /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667725)]
public static void vfnmsubpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, AssemblerMemoryOperand src3) {}
		/// <summary>vfnmsubps instruction.<br/>
		/// <br/>
		/// <c>VFNMSUBPS xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 7C /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667726)]
public static void vfnmsubps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerRegisterXMM src3) {}
		/// <summary>vfnmsubps instruction.<br/>
		/// <br/>
		/// <c>VFNMSUBPS xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 7C /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667727)]
public static void vfnmsubps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, AssemblerRegisterXMM src3) {}
		/// <summary>vfnmsubps instruction.<br/>
		/// <br/>
		/// <c>VFNMSUBPS ymm1, ymm2, ymm3/m256, ymm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 7C /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667728)]
public static void vfnmsubps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, AssemblerRegisterYMM src3) {}
		/// <summary>vfnmsubps instruction.<br/>
		/// <br/>
		/// <c>VFNMSUBPS ymm1, ymm2, ymm3/m256, ymm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 7C /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667729)]
public static void vfnmsubps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, AssemblerRegisterYMM src3) {}
		/// <summary>vfnmsubps instruction.<br/>
		/// <br/>
		/// <c>VFNMSUBPS xmm1, xmm2, xmm3, xmm4/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 7C /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667730)]
public static void vfnmsubps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerMemoryOperand src3) {}
		/// <summary>vfnmsubps instruction.<br/>
		/// <br/>
		/// <c>VFNMSUBPS ymm1, ymm2, ymm3, ymm4/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W1 7C /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667731)]
public static void vfnmsubps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, AssemblerMemoryOperand src3) {}
		/// <summary>vfnmsubsd instruction.<br/>
		/// <br/>
		/// <c>VFNMSUBSD xmm1, xmm2, xmm3/m64, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F3A.W0 7F /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667732)]
public static void vfnmsubsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerRegisterXMM src3) {}
		/// <summary>vfnmsubsd instruction.<br/>
		/// <br/>
		/// <c>VFNMSUBSD xmm1, xmm2, xmm3/m64, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F3A.W0 7F /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667733)]
public static void vfnmsubsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, AssemblerRegisterXMM src3) {}
		/// <summary>vfnmsubsd instruction.<br/>
		/// <br/>
		/// <c>VFNMSUBSD xmm1, xmm2, xmm3, xmm4/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F3A.W1 7F /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667734)]
public static void vfnmsubsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerMemoryOperand src3) {}
		/// <summary>vfnmsubss instruction.<br/>
		/// <br/>
		/// <c>VFNMSUBSS xmm1, xmm2, xmm3/m32, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F3A.W0 7E /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667735)]
public static void vfnmsubss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerRegisterXMM src3) {}
		/// <summary>vfnmsubss instruction.<br/>
		/// <br/>
		/// <c>VFNMSUBSS xmm1, xmm2, xmm3/m32, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F3A.W0 7E /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667736)]
public static void vfnmsubss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, AssemblerRegisterXMM src3) {}
		/// <summary>vfnmsubss instruction.<br/>
		/// <br/>
		/// <c>VFNMSUBSS xmm1, xmm2, xmm3, xmm4/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F3A.W1 7E /r /is4</c><br/>
		/// <br/>
		/// <c>FMA4</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667737)]
public static void vfnmsubss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerMemoryOperand src3) {}
		/// <summary>vfpclasspd instruction.<br/>
		/// <br/>
		/// <c>VFPCLASSPD k2 {k1}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 66 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667738)]
public static void vfpclasspd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vfpclasspd instruction.<br/>
		/// <br/>
		/// <c>VFPCLASSPD k2 {k1}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 66 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667739)]
public static void vfpclasspd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vfpclasspd instruction.<br/>
		/// <br/>
		/// <c>VFPCLASSPD k2 {k1}, zmm2/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 66 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667740)]
public static void vfpclasspd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vfpclasspd instruction.<br/>
		/// <br/>
		/// <c>VFPCLASSPD k2 {k1}, zmm2/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 66 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFPCLASSPD k2 {k1}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 66 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFPCLASSPD k2 {k1}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 66 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667741)]
public static void vfpclasspd(AssemblerRegisterK dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vfpclasspd instruction.<br/>
		/// <br/>
		/// <c>VFPCLASSPD k2 {k1}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 66 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667742)]
public static void vfpclasspd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vfpclasspd instruction.<br/>
		/// <br/>
		/// <c>VFPCLASSPD k2 {k1}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 66 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667743)]
public static void vfpclasspd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vfpclasspd instruction.<br/>
		/// <br/>
		/// <c>VFPCLASSPD k2 {k1}, zmm2/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 66 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667744)]
public static void vfpclasspd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vfpclasspd instruction.<br/>
		/// <br/>
		/// <c>VFPCLASSPD k2 {k1}, zmm2/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 66 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFPCLASSPD k2 {k1}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 66 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFPCLASSPD k2 {k1}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 66 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667745)]
public static void vfpclasspd(AssemblerRegisterK dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vfpclasspdx instruction.<br/>
		/// <br/>
		/// <c>VFPCLASSPD k2 {k1}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 66 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667746)]
public static void vfpclasspdx(AssemblerRegisterK dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vfpclasspdx instruction.<br/>
		/// <br/>
		/// <c>VFPCLASSPD k2 {k1}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 66 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667747)]
public static void vfpclasspdx(AssemblerRegisterK dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vfpclasspdy instruction.<br/>
		/// <br/>
		/// <c>VFPCLASSPD k2 {k1}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 66 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667748)]
public static void vfpclasspdy(AssemblerRegisterK dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vfpclasspdy instruction.<br/>
		/// <br/>
		/// <c>VFPCLASSPD k2 {k1}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 66 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667749)]
public static void vfpclasspdy(AssemblerRegisterK dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vfpclasspdz instruction.<br/>
		/// <br/>
		/// <c>VFPCLASSPD k2 {k1}, zmm2/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 66 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667750)]
public static void vfpclasspdz(AssemblerRegisterK dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vfpclasspdz instruction.<br/>
		/// <br/>
		/// <c>VFPCLASSPD k2 {k1}, zmm2/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 66 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667751)]
public static void vfpclasspdz(AssemblerRegisterK dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vfpclassps instruction.<br/>
		/// <br/>
		/// <c>VFPCLASSPS k2 {k1}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 66 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667752)]
public static void vfpclassps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vfpclassps instruction.<br/>
		/// <br/>
		/// <c>VFPCLASSPS k2 {k1}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 66 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667753)]
public static void vfpclassps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vfpclassps instruction.<br/>
		/// <br/>
		/// <c>VFPCLASSPS k2 {k1}, zmm2/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 66 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667754)]
public static void vfpclassps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vfpclassps instruction.<br/>
		/// <br/>
		/// <c>VFPCLASSPS k2 {k1}, zmm2/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 66 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFPCLASSPS k2 {k1}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 66 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFPCLASSPS k2 {k1}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 66 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667755)]
public static void vfpclassps(AssemblerRegisterK dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vfpclassps instruction.<br/>
		/// <br/>
		/// <c>VFPCLASSPS k2 {k1}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 66 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667756)]
public static void vfpclassps(AssemblerRegisterK dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vfpclassps instruction.<br/>
		/// <br/>
		/// <c>VFPCLASSPS k2 {k1}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 66 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667757)]
public static void vfpclassps(AssemblerRegisterK dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vfpclassps instruction.<br/>
		/// <br/>
		/// <c>VFPCLASSPS k2 {k1}, zmm2/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 66 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667758)]
public static void vfpclassps(AssemblerRegisterK dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vfpclassps instruction.<br/>
		/// <br/>
		/// <c>VFPCLASSPS k2 {k1}, zmm2/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 66 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFPCLASSPS k2 {k1}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 66 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VFPCLASSPS k2 {k1}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 66 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667759)]
public static void vfpclassps(AssemblerRegisterK dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vfpclasspsx instruction.<br/>
		/// <br/>
		/// <c>VFPCLASSPS k2 {k1}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 66 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667760)]
public static void vfpclasspsx(AssemblerRegisterK dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vfpclasspsx instruction.<br/>
		/// <br/>
		/// <c>VFPCLASSPS k2 {k1}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 66 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667761)]
public static void vfpclasspsx(AssemblerRegisterK dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vfpclasspsy instruction.<br/>
		/// <br/>
		/// <c>VFPCLASSPS k2 {k1}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 66 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667762)]
public static void vfpclasspsy(AssemblerRegisterK dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vfpclasspsy instruction.<br/>
		/// <br/>
		/// <c>VFPCLASSPS k2 {k1}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 66 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667763)]
public static void vfpclasspsy(AssemblerRegisterK dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vfpclasspsz instruction.<br/>
		/// <br/>
		/// <c>VFPCLASSPS k2 {k1}, zmm2/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 66 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667764)]
public static void vfpclasspsz(AssemblerRegisterK dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vfpclasspsz instruction.<br/>
		/// <br/>
		/// <c>VFPCLASSPS k2 {k1}, zmm2/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 66 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667765)]
public static void vfpclasspsz(AssemblerRegisterK dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vfpclasssd instruction.<br/>
		/// <br/>
		/// <c>VFPCLASSSD k2 {k1}, xmm2/m64, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W1 67 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667766)]
public static void vfpclasssd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vfpclasssd instruction.<br/>
		/// <br/>
		/// <c>VFPCLASSSD k2 {k1}, xmm2/m64, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W1 67 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667767)]
public static void vfpclasssd(AssemblerRegisterK dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vfpclasssd instruction.<br/>
		/// <br/>
		/// <c>VFPCLASSSD k2 {k1}, xmm2/m64, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W1 67 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667768)]
public static void vfpclasssd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vfpclasssd instruction.<br/>
		/// <br/>
		/// <c>VFPCLASSSD k2 {k1}, xmm2/m64, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W1 67 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667769)]
public static void vfpclasssd(AssemblerRegisterK dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vfpclassss instruction.<br/>
		/// <br/>
		/// <c>VFPCLASSSS k2 {k1}, xmm2/m32, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W0 67 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667770)]
public static void vfpclassss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vfpclassss instruction.<br/>
		/// <br/>
		/// <c>VFPCLASSSS k2 {k1}, xmm2/m32, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W0 67 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667771)]
public static void vfpclassss(AssemblerRegisterK dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vfpclassss instruction.<br/>
		/// <br/>
		/// <c>VFPCLASSSS k2 {k1}, xmm2/m32, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W0 67 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667772)]
public static void vfpclassss(AssemblerRegisterK dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vfpclassss instruction.<br/>
		/// <br/>
		/// <c>VFPCLASSSS k2 {k1}, xmm2/m32, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W0 67 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667773)]
public static void vfpclassss(AssemblerRegisterK dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vfrczpd instruction.<br/>
		/// <br/>
		/// <c>VFRCZPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 81 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667774)]
public static void vfrczpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vfrczpd instruction.<br/>
		/// <br/>
		/// <c>VFRCZPD ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>XOP.256.X9.W0 81 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667775)]
public static void vfrczpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vfrczpd instruction.<br/>
		/// <br/>
		/// <c>VFRCZPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 81 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667776)]
public static void vfrczpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vfrczpd instruction.<br/>
		/// <br/>
		/// <c>VFRCZPD ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>XOP.256.X9.W0 81 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667777)]
public static void vfrczpd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vfrczps instruction.<br/>
		/// <br/>
		/// <c>VFRCZPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 80 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667778)]
public static void vfrczps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vfrczps instruction.<br/>
		/// <br/>
		/// <c>VFRCZPS ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>XOP.256.X9.W0 80 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667779)]
public static void vfrczps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vfrczps instruction.<br/>
		/// <br/>
		/// <c>VFRCZPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 80 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667780)]
public static void vfrczps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vfrczps instruction.<br/>
		/// <br/>
		/// <c>VFRCZPS ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>XOP.256.X9.W0 80 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667781)]
public static void vfrczps(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vfrczsd instruction.<br/>
		/// <br/>
		/// <c>VFRCZSD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 83 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667782)]
public static void vfrczsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vfrczsd instruction.<br/>
		/// <br/>
		/// <c>VFRCZSD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 83 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667783)]
public static void vfrczsd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vfrczss instruction.<br/>
		/// <br/>
		/// <c>VFRCZSS xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 82 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667784)]
public static void vfrczss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vfrczss instruction.<br/>
		/// <br/>
		/// <c>VFRCZSS xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 82 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667785)]
public static void vfrczss(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vgatherdpd instruction.<br/>
		/// <br/>
		/// <c>VGATHERDPD xmm1 {k1}, vm32x</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 92 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667786)]
public static void vgatherdpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vgatherdpd instruction.<br/>
		/// <br/>
		/// <c>VGATHERDPD ymm1 {k1}, vm32x</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 92 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667787)]
public static void vgatherdpd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vgatherdpd instruction.<br/>
		/// <br/>
		/// <c>VGATHERDPD zmm1 {k1}, vm32y</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 92 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667788)]
public static void vgatherdpd(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vgatherdpd instruction.<br/>
		/// <br/>
		/// <c>VGATHERDPD xmm1, vm32x, xmm2</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 92 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667789)]
public static void vgatherdpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, AssemblerRegisterXMM src2) {}
		/// <summary>vgatherdpd instruction.<br/>
		/// <br/>
		/// <c>VGATHERDPD ymm1, vm32x, ymm2</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 92 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667790)]
public static void vgatherdpd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, AssemblerRegisterYMM src2) {}
		/// <summary>vgatherdps instruction.<br/>
		/// <br/>
		/// <c>VGATHERDPS xmm1 {k1}, vm32x</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 92 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667791)]
public static void vgatherdps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vgatherdps instruction.<br/>
		/// <br/>
		/// <c>VGATHERDPS ymm1 {k1}, vm32y</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 92 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667792)]
public static void vgatherdps(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vgatherdps instruction.<br/>
		/// <br/>
		/// <c>VGATHERDPS zmm1 {k1}, vm32z</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 92 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667793)]
public static void vgatherdps(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vgatherdps instruction.<br/>
		/// <br/>
		/// <c>VGATHERDPS xmm1, vm32x, xmm2</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 92 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667794)]
public static void vgatherdps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, AssemblerRegisterXMM src2) {}
		/// <summary>vgatherdps instruction.<br/>
		/// <br/>
		/// <c>VGATHERDPS ymm1, vm32y, ymm2</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 92 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667795)]
public static void vgatherdps(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, AssemblerRegisterYMM src2) {}
		/// <summary>vgatherpf0dpd instruction.<br/>
		/// <br/>
		/// <c>VGATHERPF0DPD vm32y {k1}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 C6 /1 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512PF</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667796)]
public static void vgatherpf0dpd(AssemblerMemoryOperand dst) {}
		/// <summary>vgatherpf0dps instruction.<br/>
		/// <br/>
		/// <c>VGATHERPF0DPS vm32z {k1}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 C6 /1 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512PF</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667797)]
public static void vgatherpf0dps(AssemblerMemoryOperand dst) {}
		/// <summary>vgatherpf0qpd instruction.<br/>
		/// <br/>
		/// <c>VGATHERPF0QPD vm64z {k1}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 C7 /1 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512PF</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667798)]
public static void vgatherpf0qpd(AssemblerMemoryOperand dst) {}
		/// <summary>vgatherpf0qps instruction.<br/>
		/// <br/>
		/// <c>VGATHERPF0QPS vm64z {k1}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 C7 /1 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512PF</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667799)]
public static void vgatherpf0qps(AssemblerMemoryOperand dst) {}
		/// <summary>vgatherpf1dpd instruction.<br/>
		/// <br/>
		/// <c>VGATHERPF1DPD vm32y {k1}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 C6 /2 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512PF</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667800)]
public static void vgatherpf1dpd(AssemblerMemoryOperand dst) {}
		/// <summary>vgatherpf1dps instruction.<br/>
		/// <br/>
		/// <c>VGATHERPF1DPS vm32z {k1}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 C6 /2 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512PF</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667801)]
public static void vgatherpf1dps(AssemblerMemoryOperand dst) {}
		/// <summary>vgatherpf1qpd instruction.<br/>
		/// <br/>
		/// <c>VGATHERPF1QPD vm64z {k1}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 C7 /2 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512PF</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667802)]
public static void vgatherpf1qpd(AssemblerMemoryOperand dst) {}
		/// <summary>vgatherpf1qps instruction.<br/>
		/// <br/>
		/// <c>VGATHERPF1QPS vm64z {k1}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 C7 /2 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512PF</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667803)]
public static void vgatherpf1qps(AssemblerMemoryOperand dst) {}
		/// <summary>vgatherqpd instruction.<br/>
		/// <br/>
		/// <c>VGATHERQPD xmm1 {k1}, vm64x</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 93 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667804)]
public static void vgatherqpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vgatherqpd instruction.<br/>
		/// <br/>
		/// <c>VGATHERQPD ymm1 {k1}, vm64y</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 93 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667805)]
public static void vgatherqpd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vgatherqpd instruction.<br/>
		/// <br/>
		/// <c>VGATHERQPD zmm1 {k1}, vm64z</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 93 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667806)]
public static void vgatherqpd(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vgatherqpd instruction.<br/>
		/// <br/>
		/// <c>VGATHERQPD xmm1, vm64x, xmm2</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 93 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667807)]
public static void vgatherqpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, AssemblerRegisterXMM src2) {}
		/// <summary>vgatherqpd instruction.<br/>
		/// <br/>
		/// <c>VGATHERQPD ymm1, vm64y, ymm2</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 93 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667808)]
public static void vgatherqpd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, AssemblerRegisterYMM src2) {}
		/// <summary>vgatherqps instruction.<br/>
		/// <br/>
		/// <c>VGATHERQPS xmm1 {k1}, vm64x</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 93 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VGATHERQPS xmm1 {k1}, vm64y</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 93 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667809)]
public static void vgatherqps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vgatherqps instruction.<br/>
		/// <br/>
		/// <c>VGATHERQPS ymm1 {k1}, vm64z</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 93 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667810)]
public static void vgatherqps(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vgatherqps instruction.<br/>
		/// <br/>
		/// <c>VGATHERQPS xmm1, vm64x, xmm2</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 93 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VGATHERQPS xmm1, vm64y, xmm2</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 93 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667811)]
public static void vgatherqps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, AssemblerRegisterXMM src2) {}
		/// <summary>vgetexppd instruction.<br/>
		/// <br/>
		/// <c>VGETEXPPD xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 42 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667812)]
public static void vgetexppd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vgetexppd instruction.<br/>
		/// <br/>
		/// <c>VGETEXPPD ymm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 42 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667813)]
public static void vgetexppd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vgetexppd instruction.<br/>
		/// <br/>
		/// <c>VGETEXPPD zmm1 {k1}{z}, zmm2/m512/m64bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 42 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667814)]
public static void vgetexppd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vgetexppd instruction.<br/>
		/// <br/>
		/// <c>VGETEXPPD xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 42 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667815)]
public static void vgetexppd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vgetexppd instruction.<br/>
		/// <br/>
		/// <c>VGETEXPPD ymm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 42 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667816)]
public static void vgetexppd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vgetexppd instruction.<br/>
		/// <br/>
		/// <c>VGETEXPPD zmm1 {k1}{z}, zmm2/m512/m64bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 42 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667817)]
public static void vgetexppd(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vgetexpps instruction.<br/>
		/// <br/>
		/// <c>VGETEXPPS xmm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 42 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667818)]
public static void vgetexpps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vgetexpps instruction.<br/>
		/// <br/>
		/// <c>VGETEXPPS ymm1 {k1}{z}, ymm2/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 42 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667819)]
public static void vgetexpps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vgetexpps instruction.<br/>
		/// <br/>
		/// <c>VGETEXPPS zmm1 {k1}{z}, zmm2/m512/m32bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 42 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667820)]
public static void vgetexpps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vgetexpps instruction.<br/>
		/// <br/>
		/// <c>VGETEXPPS xmm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 42 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667821)]
public static void vgetexpps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vgetexpps instruction.<br/>
		/// <br/>
		/// <c>VGETEXPPS ymm1 {k1}{z}, ymm2/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 42 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667822)]
public static void vgetexpps(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vgetexpps instruction.<br/>
		/// <br/>
		/// <c>VGETEXPPS zmm1 {k1}{z}, zmm2/m512/m32bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 42 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667823)]
public static void vgetexpps(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vgetexpsd instruction.<br/>
		/// <br/>
		/// <c>VGETEXPSD xmm1 {k1}{z}, xmm2, xmm3/m64{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W1 43 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667824)]
public static void vgetexpsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vgetexpsd instruction.<br/>
		/// <br/>
		/// <c>VGETEXPSD xmm1 {k1}{z}, xmm2, xmm3/m64{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W1 43 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667825)]
public static void vgetexpsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vgetexpss instruction.<br/>
		/// <br/>
		/// <c>VGETEXPSS xmm1 {k1}{z}, xmm2, xmm3/m32{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W0 43 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667826)]
public static void vgetexpss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vgetexpss instruction.<br/>
		/// <br/>
		/// <c>VGETEXPSS xmm1 {k1}{z}, xmm2, xmm3/m32{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W0 43 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667827)]
public static void vgetexpss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vgetmantpd instruction.<br/>
		/// <br/>
		/// <c>VGETMANTPD xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 26 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667828)]
public static void vgetmantpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vgetmantpd instruction.<br/>
		/// <br/>
		/// <c>VGETMANTPD ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 26 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667829)]
public static void vgetmantpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vgetmantpd instruction.<br/>
		/// <br/>
		/// <c>VGETMANTPD zmm1 {k1}{z}, zmm2/m512/m64bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 26 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667830)]
public static void vgetmantpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vgetmantpd instruction.<br/>
		/// <br/>
		/// <c>VGETMANTPD xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 26 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667831)]
public static void vgetmantpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vgetmantpd instruction.<br/>
		/// <br/>
		/// <c>VGETMANTPD ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 26 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667832)]
public static void vgetmantpd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vgetmantpd instruction.<br/>
		/// <br/>
		/// <c>VGETMANTPD zmm1 {k1}{z}, zmm2/m512/m64bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 26 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667833)]
public static void vgetmantpd(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vgetmantpd instruction.<br/>
		/// <br/>
		/// <c>VGETMANTPD xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 26 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667834)]
public static void vgetmantpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vgetmantpd instruction.<br/>
		/// <br/>
		/// <c>VGETMANTPD ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 26 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667835)]
public static void vgetmantpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vgetmantpd instruction.<br/>
		/// <br/>
		/// <c>VGETMANTPD zmm1 {k1}{z}, zmm2/m512/m64bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 26 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667836)]
public static void vgetmantpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vgetmantpd instruction.<br/>
		/// <br/>
		/// <c>VGETMANTPD xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 26 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667837)]
public static void vgetmantpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vgetmantpd instruction.<br/>
		/// <br/>
		/// <c>VGETMANTPD ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 26 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667838)]
public static void vgetmantpd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vgetmantpd instruction.<br/>
		/// <br/>
		/// <c>VGETMANTPD zmm1 {k1}{z}, zmm2/m512/m64bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 26 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667839)]
public static void vgetmantpd(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vgetmantps instruction.<br/>
		/// <br/>
		/// <c>VGETMANTPS xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 26 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667840)]
public static void vgetmantps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vgetmantps instruction.<br/>
		/// <br/>
		/// <c>VGETMANTPS ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 26 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667841)]
public static void vgetmantps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vgetmantps instruction.<br/>
		/// <br/>
		/// <c>VGETMANTPS zmm1 {k1}{z}, zmm2/m512/m32bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 26 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667842)]
public static void vgetmantps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vgetmantps instruction.<br/>
		/// <br/>
		/// <c>VGETMANTPS xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 26 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667843)]
public static void vgetmantps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vgetmantps instruction.<br/>
		/// <br/>
		/// <c>VGETMANTPS ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 26 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667844)]
public static void vgetmantps(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vgetmantps instruction.<br/>
		/// <br/>
		/// <c>VGETMANTPS zmm1 {k1}{z}, zmm2/m512/m32bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 26 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667845)]
public static void vgetmantps(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vgetmantps instruction.<br/>
		/// <br/>
		/// <c>VGETMANTPS xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 26 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667846)]
public static void vgetmantps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vgetmantps instruction.<br/>
		/// <br/>
		/// <c>VGETMANTPS ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 26 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667847)]
public static void vgetmantps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vgetmantps instruction.<br/>
		/// <br/>
		/// <c>VGETMANTPS zmm1 {k1}{z}, zmm2/m512/m32bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 26 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667848)]
public static void vgetmantps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vgetmantps instruction.<br/>
		/// <br/>
		/// <c>VGETMANTPS xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 26 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667849)]
public static void vgetmantps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vgetmantps instruction.<br/>
		/// <br/>
		/// <c>VGETMANTPS ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 26 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667850)]
public static void vgetmantps(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vgetmantps instruction.<br/>
		/// <br/>
		/// <c>VGETMANTPS zmm1 {k1}{z}, zmm2/m512/m32bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 26 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667851)]
public static void vgetmantps(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vgetmantsd instruction.<br/>
		/// <br/>
		/// <c>VGETMANTSD xmm1 {k1}{z}, xmm2, xmm3/m64{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W1 27 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667852)]
public static void vgetmantsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vgetmantsd instruction.<br/>
		/// <br/>
		/// <c>VGETMANTSD xmm1 {k1}{z}, xmm2, xmm3/m64{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W1 27 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667853)]
public static void vgetmantsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vgetmantsd instruction.<br/>
		/// <br/>
		/// <c>VGETMANTSD xmm1 {k1}{z}, xmm2, xmm3/m64{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W1 27 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667854)]
public static void vgetmantsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vgetmantsd instruction.<br/>
		/// <br/>
		/// <c>VGETMANTSD xmm1 {k1}{z}, xmm2, xmm3/m64{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W1 27 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667855)]
public static void vgetmantsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vgetmantss instruction.<br/>
		/// <br/>
		/// <c>VGETMANTSS xmm1 {k1}{z}, xmm2, xmm3/m32{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W0 27 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667856)]
public static void vgetmantss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vgetmantss instruction.<br/>
		/// <br/>
		/// <c>VGETMANTSS xmm1 {k1}{z}, xmm2, xmm3/m32{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W0 27 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667857)]
public static void vgetmantss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vgetmantss instruction.<br/>
		/// <br/>
		/// <c>VGETMANTSS xmm1 {k1}{z}, xmm2, xmm3/m32{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W0 27 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667858)]
public static void vgetmantss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vgetmantss instruction.<br/>
		/// <br/>
		/// <c>VGETMANTSS xmm1 {k1}{z}, xmm2, xmm3/m32{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W0 27 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667859)]
public static void vgetmantss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vgf2p8affineinvqb instruction.<br/>
		/// <br/>
		/// <c>VGF2P8AFFINEINVQB xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 CF /r ib</c><br/>
		/// <br/>
		/// <c>AVX and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VGF2P8AFFINEINVQB xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 CF /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667860)]
public static void vgf2p8affineinvqb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vgf2p8affineinvqb instruction.<br/>
		/// <br/>
		/// <c>VGF2P8AFFINEINVQB ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W1 CF /r ib</c><br/>
		/// <br/>
		/// <c>AVX and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VGF2P8AFFINEINVQB ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 CF /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667861)]
public static void vgf2p8affineinvqb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vgf2p8affineinvqb instruction.<br/>
		/// <br/>
		/// <c>VGF2P8AFFINEINVQB zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 CF /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667862)]
public static void vgf2p8affineinvqb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, sbyte imm) {}
		/// <summary>vgf2p8affineinvqb instruction.<br/>
		/// <br/>
		/// <c>VGF2P8AFFINEINVQB xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 CF /r ib</c><br/>
		/// <br/>
		/// <c>AVX and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VGF2P8AFFINEINVQB xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 CF /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667863)]
public static void vgf2p8affineinvqb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vgf2p8affineinvqb instruction.<br/>
		/// <br/>
		/// <c>VGF2P8AFFINEINVQB ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W1 CF /r ib</c><br/>
		/// <br/>
		/// <c>AVX and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VGF2P8AFFINEINVQB ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 CF /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667864)]
public static void vgf2p8affineinvqb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vgf2p8affineinvqb instruction.<br/>
		/// <br/>
		/// <c>VGF2P8AFFINEINVQB zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 CF /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667865)]
public static void vgf2p8affineinvqb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vgf2p8affineinvqb instruction.<br/>
		/// <br/>
		/// <c>VGF2P8AFFINEINVQB xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 CF /r ib</c><br/>
		/// <br/>
		/// <c>AVX and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VGF2P8AFFINEINVQB xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 CF /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667866)]
public static void vgf2p8affineinvqb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vgf2p8affineinvqb instruction.<br/>
		/// <br/>
		/// <c>VGF2P8AFFINEINVQB ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W1 CF /r ib</c><br/>
		/// <br/>
		/// <c>AVX and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VGF2P8AFFINEINVQB ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 CF /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667867)]
public static void vgf2p8affineinvqb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vgf2p8affineinvqb instruction.<br/>
		/// <br/>
		/// <c>VGF2P8AFFINEINVQB zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 CF /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667868)]
public static void vgf2p8affineinvqb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, byte imm) {}
		/// <summary>vgf2p8affineinvqb instruction.<br/>
		/// <br/>
		/// <c>VGF2P8AFFINEINVQB xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 CF /r ib</c><br/>
		/// <br/>
		/// <c>AVX and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VGF2P8AFFINEINVQB xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 CF /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667869)]
public static void vgf2p8affineinvqb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vgf2p8affineinvqb instruction.<br/>
		/// <br/>
		/// <c>VGF2P8AFFINEINVQB ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W1 CF /r ib</c><br/>
		/// <br/>
		/// <c>AVX and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VGF2P8AFFINEINVQB ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 CF /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667870)]
public static void vgf2p8affineinvqb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vgf2p8affineinvqb instruction.<br/>
		/// <br/>
		/// <c>VGF2P8AFFINEINVQB zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 CF /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667871)]
public static void vgf2p8affineinvqb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vgf2p8affineqb instruction.<br/>
		/// <br/>
		/// <c>VGF2P8AFFINEQB xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 CE /r ib</c><br/>
		/// <br/>
		/// <c>AVX and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VGF2P8AFFINEQB xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 CE /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667872)]
public static void vgf2p8affineqb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vgf2p8affineqb instruction.<br/>
		/// <br/>
		/// <c>VGF2P8AFFINEQB ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W1 CE /r ib</c><br/>
		/// <br/>
		/// <c>AVX and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VGF2P8AFFINEQB ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 CE /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667873)]
public static void vgf2p8affineqb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vgf2p8affineqb instruction.<br/>
		/// <br/>
		/// <c>VGF2P8AFFINEQB zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 CE /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667874)]
public static void vgf2p8affineqb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, sbyte imm) {}
		/// <summary>vgf2p8affineqb instruction.<br/>
		/// <br/>
		/// <c>VGF2P8AFFINEQB xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 CE /r ib</c><br/>
		/// <br/>
		/// <c>AVX and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VGF2P8AFFINEQB xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 CE /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667875)]
public static void vgf2p8affineqb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vgf2p8affineqb instruction.<br/>
		/// <br/>
		/// <c>VGF2P8AFFINEQB ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W1 CE /r ib</c><br/>
		/// <br/>
		/// <c>AVX and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VGF2P8AFFINEQB ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 CE /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667876)]
public static void vgf2p8affineqb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vgf2p8affineqb instruction.<br/>
		/// <br/>
		/// <c>VGF2P8AFFINEQB zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 CE /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667877)]
public static void vgf2p8affineqb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vgf2p8affineqb instruction.<br/>
		/// <br/>
		/// <c>VGF2P8AFFINEQB xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 CE /r ib</c><br/>
		/// <br/>
		/// <c>AVX and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VGF2P8AFFINEQB xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 CE /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667878)]
public static void vgf2p8affineqb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vgf2p8affineqb instruction.<br/>
		/// <br/>
		/// <c>VGF2P8AFFINEQB ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W1 CE /r ib</c><br/>
		/// <br/>
		/// <c>AVX and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VGF2P8AFFINEQB ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 CE /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667879)]
public static void vgf2p8affineqb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vgf2p8affineqb instruction.<br/>
		/// <br/>
		/// <c>VGF2P8AFFINEQB zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 CE /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667880)]
public static void vgf2p8affineqb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, byte imm) {}
		/// <summary>vgf2p8affineqb instruction.<br/>
		/// <br/>
		/// <c>VGF2P8AFFINEQB xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 CE /r ib</c><br/>
		/// <br/>
		/// <c>AVX and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VGF2P8AFFINEQB xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 CE /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667881)]
public static void vgf2p8affineqb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vgf2p8affineqb instruction.<br/>
		/// <br/>
		/// <c>VGF2P8AFFINEQB ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W1 CE /r ib</c><br/>
		/// <br/>
		/// <c>AVX and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VGF2P8AFFINEQB ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 CE /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667882)]
public static void vgf2p8affineqb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vgf2p8affineqb instruction.<br/>
		/// <br/>
		/// <c>VGF2P8AFFINEQB zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 CE /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667883)]
public static void vgf2p8affineqb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vgf2p8mulb instruction.<br/>
		/// <br/>
		/// <c>VGF2P8MULB xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 CF /r</c><br/>
		/// <br/>
		/// <c>AVX and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VGF2P8MULB xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 CF /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667884)]
public static void vgf2p8mulb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vgf2p8mulb instruction.<br/>
		/// <br/>
		/// <c>VGF2P8MULB ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 CF /r</c><br/>
		/// <br/>
		/// <c>AVX and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VGF2P8MULB ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 CF /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667885)]
public static void vgf2p8mulb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vgf2p8mulb instruction.<br/>
		/// <br/>
		/// <c>VGF2P8MULB zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 CF /r</c><br/>
		/// <br/>
		/// <c>AVX512F and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667886)]
public static void vgf2p8mulb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vgf2p8mulb instruction.<br/>
		/// <br/>
		/// <c>VGF2P8MULB xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 CF /r</c><br/>
		/// <br/>
		/// <c>AVX and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VGF2P8MULB xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 CF /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667887)]
public static void vgf2p8mulb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vgf2p8mulb instruction.<br/>
		/// <br/>
		/// <c>VGF2P8MULB ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 CF /r</c><br/>
		/// <br/>
		/// <c>AVX and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VGF2P8MULB ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 CF /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667888)]
public static void vgf2p8mulb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vgf2p8mulb instruction.<br/>
		/// <br/>
		/// <c>VGF2P8MULB zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 CF /r</c><br/>
		/// <br/>
		/// <c>AVX512F and GFNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667889)]
public static void vgf2p8mulb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vhaddpd instruction.<br/>
		/// <br/>
		/// <c>VHADDPD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 7C /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667890)]
public static void vhaddpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vhaddpd instruction.<br/>
		/// <br/>
		/// <c>VHADDPD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 7C /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667891)]
public static void vhaddpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vhaddpd instruction.<br/>
		/// <br/>
		/// <c>VHADDPD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 7C /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667892)]
public static void vhaddpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vhaddpd instruction.<br/>
		/// <br/>
		/// <c>VHADDPD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 7C /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667893)]
public static void vhaddpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vhaddps instruction.<br/>
		/// <br/>
		/// <c>VHADDPS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.F2.0F.WIG 7C /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667894)]
public static void vhaddps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vhaddps instruction.<br/>
		/// <br/>
		/// <c>VHADDPS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.F2.0F.WIG 7C /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667895)]
public static void vhaddps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vhaddps instruction.<br/>
		/// <br/>
		/// <c>VHADDPS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.F2.0F.WIG 7C /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667896)]
public static void vhaddps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vhaddps instruction.<br/>
		/// <br/>
		/// <c>VHADDPS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.F2.0F.WIG 7C /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667897)]
public static void vhaddps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vhsubpd instruction.<br/>
		/// <br/>
		/// <c>VHSUBPD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 7D /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667898)]
public static void vhsubpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vhsubpd instruction.<br/>
		/// <br/>
		/// <c>VHSUBPD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 7D /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667899)]
public static void vhsubpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vhsubpd instruction.<br/>
		/// <br/>
		/// <c>VHSUBPD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 7D /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667900)]
public static void vhsubpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vhsubpd instruction.<br/>
		/// <br/>
		/// <c>VHSUBPD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 7D /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667901)]
public static void vhsubpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vhsubps instruction.<br/>
		/// <br/>
		/// <c>VHSUBPS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.F2.0F.WIG 7D /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667902)]
public static void vhsubps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vhsubps instruction.<br/>
		/// <br/>
		/// <c>VHSUBPS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.F2.0F.WIG 7D /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667903)]
public static void vhsubps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vhsubps instruction.<br/>
		/// <br/>
		/// <c>VHSUBPS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.F2.0F.WIG 7D /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667904)]
public static void vhsubps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vhsubps instruction.<br/>
		/// <br/>
		/// <c>VHSUBPS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.F2.0F.WIG 7D /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667905)]
public static void vhsubps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vinsertf128 instruction.<br/>
		/// <br/>
		/// <c>VINSERTF128 ymm1, ymm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 18 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667906)]
public static void vinsertf128(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vinsertf128 instruction.<br/>
		/// <br/>
		/// <c>VINSERTF128 ymm1, ymm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 18 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667907)]
public static void vinsertf128(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vinsertf128 instruction.<br/>
		/// <br/>
		/// <c>VINSERTF128 ymm1, ymm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 18 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667908)]
public static void vinsertf128(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vinsertf128 instruction.<br/>
		/// <br/>
		/// <c>VINSERTF128 ymm1, ymm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 18 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667909)]
public static void vinsertf128(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vinsertf32x4 instruction.<br/>
		/// <br/>
		/// <c>VINSERTF32X4 ymm1 {k1}{z}, ymm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 18 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667910)]
public static void vinsertf32x4(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vinsertf32x4 instruction.<br/>
		/// <br/>
		/// <c>VINSERTF32X4 zmm1 {k1}{z}, zmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 18 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667911)]
public static void vinsertf32x4(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vinsertf32x4 instruction.<br/>
		/// <br/>
		/// <c>VINSERTF32X4 ymm1 {k1}{z}, ymm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 18 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667912)]
public static void vinsertf32x4(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vinsertf32x4 instruction.<br/>
		/// <br/>
		/// <c>VINSERTF32X4 zmm1 {k1}{z}, zmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 18 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667913)]
public static void vinsertf32x4(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vinsertf32x4 instruction.<br/>
		/// <br/>
		/// <c>VINSERTF32X4 ymm1 {k1}{z}, ymm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 18 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667914)]
public static void vinsertf32x4(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vinsertf32x4 instruction.<br/>
		/// <br/>
		/// <c>VINSERTF32X4 zmm1 {k1}{z}, zmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 18 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667915)]
public static void vinsertf32x4(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vinsertf32x4 instruction.<br/>
		/// <br/>
		/// <c>VINSERTF32X4 ymm1 {k1}{z}, ymm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 18 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667916)]
public static void vinsertf32x4(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vinsertf32x4 instruction.<br/>
		/// <br/>
		/// <c>VINSERTF32X4 zmm1 {k1}{z}, zmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 18 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667917)]
public static void vinsertf32x4(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vinsertf32x8 instruction.<br/>
		/// <br/>
		/// <c>VINSERTF32X8 zmm1 {k1}{z}, zmm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 1A /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667918)]
public static void vinsertf32x8(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vinsertf32x8 instruction.<br/>
		/// <br/>
		/// <c>VINSERTF32X8 zmm1 {k1}{z}, zmm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 1A /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667919)]
public static void vinsertf32x8(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vinsertf32x8 instruction.<br/>
		/// <br/>
		/// <c>VINSERTF32X8 zmm1 {k1}{z}, zmm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 1A /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667920)]
public static void vinsertf32x8(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vinsertf32x8 instruction.<br/>
		/// <br/>
		/// <c>VINSERTF32X8 zmm1 {k1}{z}, zmm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 1A /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667921)]
public static void vinsertf32x8(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vinsertf64x2 instruction.<br/>
		/// <br/>
		/// <c>VINSERTF64X2 ymm1 {k1}{z}, ymm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 18 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667922)]
public static void vinsertf64x2(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vinsertf64x2 instruction.<br/>
		/// <br/>
		/// <c>VINSERTF64X2 zmm1 {k1}{z}, zmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 18 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667923)]
public static void vinsertf64x2(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vinsertf64x2 instruction.<br/>
		/// <br/>
		/// <c>VINSERTF64X2 ymm1 {k1}{z}, ymm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 18 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667924)]
public static void vinsertf64x2(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vinsertf64x2 instruction.<br/>
		/// <br/>
		/// <c>VINSERTF64X2 zmm1 {k1}{z}, zmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 18 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667925)]
public static void vinsertf64x2(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vinsertf64x2 instruction.<br/>
		/// <br/>
		/// <c>VINSERTF64X2 ymm1 {k1}{z}, ymm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 18 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667926)]
public static void vinsertf64x2(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vinsertf64x2 instruction.<br/>
		/// <br/>
		/// <c>VINSERTF64X2 zmm1 {k1}{z}, zmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 18 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667927)]
public static void vinsertf64x2(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vinsertf64x2 instruction.<br/>
		/// <br/>
		/// <c>VINSERTF64X2 ymm1 {k1}{z}, ymm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 18 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667928)]
public static void vinsertf64x2(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vinsertf64x2 instruction.<br/>
		/// <br/>
		/// <c>VINSERTF64X2 zmm1 {k1}{z}, zmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 18 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667929)]
public static void vinsertf64x2(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vinsertf64x4 instruction.<br/>
		/// <br/>
		/// <c>VINSERTF64X4 zmm1 {k1}{z}, zmm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 1A /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667930)]
public static void vinsertf64x4(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vinsertf64x4 instruction.<br/>
		/// <br/>
		/// <c>VINSERTF64X4 zmm1 {k1}{z}, zmm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 1A /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667931)]
public static void vinsertf64x4(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vinsertf64x4 instruction.<br/>
		/// <br/>
		/// <c>VINSERTF64X4 zmm1 {k1}{z}, zmm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 1A /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667932)]
public static void vinsertf64x4(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vinsertf64x4 instruction.<br/>
		/// <br/>
		/// <c>VINSERTF64X4 zmm1 {k1}{z}, zmm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 1A /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667933)]
public static void vinsertf64x4(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vinserti128 instruction.<br/>
		/// <br/>
		/// <c>VINSERTI128 ymm1, ymm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 38 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667934)]
public static void vinserti128(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vinserti128 instruction.<br/>
		/// <br/>
		/// <c>VINSERTI128 ymm1, ymm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 38 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667935)]
public static void vinserti128(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vinserti128 instruction.<br/>
		/// <br/>
		/// <c>VINSERTI128 ymm1, ymm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 38 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667936)]
public static void vinserti128(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vinserti128 instruction.<br/>
		/// <br/>
		/// <c>VINSERTI128 ymm1, ymm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 38 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667937)]
public static void vinserti128(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vinserti32x4 instruction.<br/>
		/// <br/>
		/// <c>VINSERTI32X4 ymm1 {k1}{z}, ymm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 38 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667938)]
public static void vinserti32x4(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vinserti32x4 instruction.<br/>
		/// <br/>
		/// <c>VINSERTI32X4 zmm1 {k1}{z}, zmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 38 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667939)]
public static void vinserti32x4(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vinserti32x4 instruction.<br/>
		/// <br/>
		/// <c>VINSERTI32X4 ymm1 {k1}{z}, ymm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 38 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667940)]
public static void vinserti32x4(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vinserti32x4 instruction.<br/>
		/// <br/>
		/// <c>VINSERTI32X4 zmm1 {k1}{z}, zmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 38 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667941)]
public static void vinserti32x4(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vinserti32x4 instruction.<br/>
		/// <br/>
		/// <c>VINSERTI32X4 ymm1 {k1}{z}, ymm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 38 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667942)]
public static void vinserti32x4(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vinserti32x4 instruction.<br/>
		/// <br/>
		/// <c>VINSERTI32X4 zmm1 {k1}{z}, zmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 38 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667943)]
public static void vinserti32x4(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vinserti32x4 instruction.<br/>
		/// <br/>
		/// <c>VINSERTI32X4 ymm1 {k1}{z}, ymm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 38 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667944)]
public static void vinserti32x4(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vinserti32x4 instruction.<br/>
		/// <br/>
		/// <c>VINSERTI32X4 zmm1 {k1}{z}, zmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 38 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667945)]
public static void vinserti32x4(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vinserti32x8 instruction.<br/>
		/// <br/>
		/// <c>VINSERTI32X8 zmm1 {k1}{z}, zmm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 3A /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667946)]
public static void vinserti32x8(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vinserti32x8 instruction.<br/>
		/// <br/>
		/// <c>VINSERTI32X8 zmm1 {k1}{z}, zmm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 3A /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667947)]
public static void vinserti32x8(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vinserti32x8 instruction.<br/>
		/// <br/>
		/// <c>VINSERTI32X8 zmm1 {k1}{z}, zmm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 3A /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667948)]
public static void vinserti32x8(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vinserti32x8 instruction.<br/>
		/// <br/>
		/// <c>VINSERTI32X8 zmm1 {k1}{z}, zmm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 3A /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667949)]
public static void vinserti32x8(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vinserti64x2 instruction.<br/>
		/// <br/>
		/// <c>VINSERTI64X2 ymm1 {k1}{z}, ymm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 38 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667950)]
public static void vinserti64x2(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vinserti64x2 instruction.<br/>
		/// <br/>
		/// <c>VINSERTI64X2 zmm1 {k1}{z}, zmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 38 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667951)]
public static void vinserti64x2(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vinserti64x2 instruction.<br/>
		/// <br/>
		/// <c>VINSERTI64X2 ymm1 {k1}{z}, ymm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 38 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667952)]
public static void vinserti64x2(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vinserti64x2 instruction.<br/>
		/// <br/>
		/// <c>VINSERTI64X2 zmm1 {k1}{z}, zmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 38 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667953)]
public static void vinserti64x2(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vinserti64x2 instruction.<br/>
		/// <br/>
		/// <c>VINSERTI64X2 ymm1 {k1}{z}, ymm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 38 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667954)]
public static void vinserti64x2(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vinserti64x2 instruction.<br/>
		/// <br/>
		/// <c>VINSERTI64X2 zmm1 {k1}{z}, zmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 38 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667955)]
public static void vinserti64x2(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vinserti64x2 instruction.<br/>
		/// <br/>
		/// <c>VINSERTI64X2 ymm1 {k1}{z}, ymm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 38 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667956)]
public static void vinserti64x2(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vinserti64x2 instruction.<br/>
		/// <br/>
		/// <c>VINSERTI64X2 zmm1 {k1}{z}, zmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 38 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667957)]
public static void vinserti64x2(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vinserti64x4 instruction.<br/>
		/// <br/>
		/// <c>VINSERTI64X4 zmm1 {k1}{z}, zmm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 3A /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667958)]
public static void vinserti64x4(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vinserti64x4 instruction.<br/>
		/// <br/>
		/// <c>VINSERTI64X4 zmm1 {k1}{z}, zmm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 3A /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667959)]
public static void vinserti64x4(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vinserti64x4 instruction.<br/>
		/// <br/>
		/// <c>VINSERTI64X4 zmm1 {k1}{z}, zmm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 3A /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667960)]
public static void vinserti64x4(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vinserti64x4 instruction.<br/>
		/// <br/>
		/// <c>VINSERTI64X4 zmm1 {k1}{z}, zmm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 3A /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667961)]
public static void vinserti64x4(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vinsertps instruction.<br/>
		/// <br/>
		/// <c>VINSERTPS xmm1, xmm2, xmm3/m32, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 21 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VINSERTPS xmm1, xmm2, xmm3/m32, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 21 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667962)]
public static void vinsertps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vinsertps instruction.<br/>
		/// <br/>
		/// <c>VINSERTPS xmm1, xmm2, xmm3/m32, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 21 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VINSERTPS xmm1, xmm2, xmm3/m32, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 21 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667963)]
public static void vinsertps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vinsertps instruction.<br/>
		/// <br/>
		/// <c>VINSERTPS xmm1, xmm2, xmm3/m32, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 21 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VINSERTPS xmm1, xmm2, xmm3/m32, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 21 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667964)]
public static void vinsertps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vinsertps instruction.<br/>
		/// <br/>
		/// <c>VINSERTPS xmm1, xmm2, xmm3/m32, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 21 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VINSERTPS xmm1, xmm2, xmm3/m32, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 21 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667965)]
public static void vinsertps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vlddqu instruction.<br/>
		/// <br/>
		/// <c>VLDDQU xmm1, m128</c><br/>
		/// <br/>
		/// <c>VEX.128.F2.0F.WIG F0 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667966)]
public static void vlddqu(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vlddqu instruction.<br/>
		/// <br/>
		/// <c>VLDDQU ymm1, m256</c><br/>
		/// <br/>
		/// <c>VEX.256.F2.0F.WIG F0 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667967)]
public static void vlddqu(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vldmxcsr instruction.<br/>
		/// <br/>
		/// <c>VLDMXCSR m32</c><br/>
		/// <br/>
		/// <c>VEX.LZ.0F.WIG AE /2</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667968)]
public static void vldmxcsr(AssemblerMemoryOperand dst) {}
		/// <summary>vmaskmovdqu instruction.<br/>
		/// <br/>
		/// <c>VMASKMOVDQU xmm1, xmm2</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG F7 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667969)]
public static void vmaskmovdqu(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vmaskmovpd instruction.<br/>
		/// <br/>
		/// <c>VMASKMOVPD m128, xmm1, xmm2</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 2F /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667970)]
public static void vmaskmovpd(AssemblerMemoryOperand dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vmaskmovpd instruction.<br/>
		/// <br/>
		/// <c>VMASKMOVPD m256, ymm1, ymm2</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 2F /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667971)]
public static void vmaskmovpd(AssemblerMemoryOperand dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vmaskmovpd instruction.<br/>
		/// <br/>
		/// <c>VMASKMOVPD xmm1, xmm2, m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 2D /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667972)]
public static void vmaskmovpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vmaskmovpd instruction.<br/>
		/// <br/>
		/// <c>VMASKMOVPD ymm1, ymm2, m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 2D /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667973)]
public static void vmaskmovpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vmaskmovps instruction.<br/>
		/// <br/>
		/// <c>VMASKMOVPS m128, xmm1, xmm2</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 2E /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667974)]
public static void vmaskmovps(AssemblerMemoryOperand dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vmaskmovps instruction.<br/>
		/// <br/>
		/// <c>VMASKMOVPS m256, ymm1, ymm2</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 2E /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667975)]
public static void vmaskmovps(AssemblerMemoryOperand dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vmaskmovps instruction.<br/>
		/// <br/>
		/// <c>VMASKMOVPS xmm1, xmm2, m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 2C /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667976)]
public static void vmaskmovps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vmaskmovps instruction.<br/>
		/// <br/>
		/// <c>VMASKMOVPS ymm1, ymm2, m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 2C /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667977)]
public static void vmaskmovps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vmaxpd instruction.<br/>
		/// <br/>
		/// <c>VMAXPD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 5F /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMAXPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 5F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667978)]
public static void vmaxpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vmaxpd instruction.<br/>
		/// <br/>
		/// <c>VMAXPD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 5F /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMAXPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 5F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667979)]
public static void vmaxpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vmaxpd instruction.<br/>
		/// <br/>
		/// <c>VMAXPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 5F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667980)]
public static void vmaxpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vmaxpd instruction.<br/>
		/// <br/>
		/// <c>VMAXPD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 5F /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMAXPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 5F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667981)]
public static void vmaxpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vmaxpd instruction.<br/>
		/// <br/>
		/// <c>VMAXPD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 5F /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMAXPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 5F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667982)]
public static void vmaxpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vmaxpd instruction.<br/>
		/// <br/>
		/// <c>VMAXPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 5F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667983)]
public static void vmaxpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vmaxps instruction.<br/>
		/// <br/>
		/// <c>VMAXPS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 5F /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMAXPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 5F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667984)]
public static void vmaxps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vmaxps instruction.<br/>
		/// <br/>
		/// <c>VMAXPS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 5F /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMAXPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 5F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667985)]
public static void vmaxps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vmaxps instruction.<br/>
		/// <br/>
		/// <c>VMAXPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 5F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667986)]
public static void vmaxps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vmaxps instruction.<br/>
		/// <br/>
		/// <c>VMAXPS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 5F /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMAXPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 5F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667987)]
public static void vmaxps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vmaxps instruction.<br/>
		/// <br/>
		/// <c>VMAXPS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 5F /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMAXPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 5F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667988)]
public static void vmaxps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vmaxps instruction.<br/>
		/// <br/>
		/// <c>VMAXPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 5F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667989)]
public static void vmaxps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vmaxsd instruction.<br/>
		/// <br/>
		/// <c>VMAXSD xmm1, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F2.0F.WIG 5F /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMAXSD xmm1 {k1}{z}, xmm2, xmm3/m64{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W1 5F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667990)]
public static void vmaxsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vmaxsd instruction.<br/>
		/// <br/>
		/// <c>VMAXSD xmm1, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F2.0F.WIG 5F /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMAXSD xmm1 {k1}{z}, xmm2, xmm3/m64{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W1 5F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667991)]
public static void vmaxsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vmaxss instruction.<br/>
		/// <br/>
		/// <c>VMAXSS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F3.0F.WIG 5F /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMAXSS xmm1 {k1}{z}, xmm2, xmm3/m32{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W0 5F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667992)]
public static void vmaxss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vmaxss instruction.<br/>
		/// <br/>
		/// <c>VMAXSS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F3.0F.WIG 5F /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMAXSS xmm1 {k1}{z}, xmm2, xmm3/m32{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W0 5F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667993)]
public static void vmaxss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vmcall instruction.<br/>
		/// <br/>
		/// <c>VMCALL</c><br/>
		/// <br/>
		/// <c>NP 0F 01 C1</c><br/>
		/// <br/>
		/// <c>VMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667994)]
public static void vmcall() {}
		/// <summary>vmclear instruction.<br/>
		/// <br/>
		/// <c>VMCLEAR m64</c><br/>
		/// <br/>
		/// <c>66 0F C7 /6</c><br/>
		/// <br/>
		/// <c>VMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667995)]
public static void vmclear(AssemblerMemoryOperand dst) {}
		/// <summary>vmfunc instruction.<br/>
		/// <br/>
		/// <c>VMFUNC</c><br/>
		/// <br/>
		/// <c>NP 0F 01 D4</c><br/>
		/// <br/>
		/// <c>VMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667996)]
public static void vmfunc() {}
		/// <summary>vmgexit instruction.<br/>
		/// <br/>
		/// <c>VMGEXIT</c><br/>
		/// <br/>
		/// <c>F3 0F 01 D9</c><br/>
		/// <br/>
		/// <c>SEV-ES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667997)]
public static void vmgexit() {}
		/// <summary>vminpd instruction.<br/>
		/// <br/>
		/// <c>VMINPD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 5D /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMINPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 5D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667998)]
public static void vminpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vminpd instruction.<br/>
		/// <br/>
		/// <c>VMINPD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 5D /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMINPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 5D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100667999)]
public static void vminpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vminpd instruction.<br/>
		/// <br/>
		/// <c>VMINPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 5D /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668000)]
public static void vminpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vminpd instruction.<br/>
		/// <br/>
		/// <c>VMINPD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 5D /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMINPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 5D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668001)]
public static void vminpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vminpd instruction.<br/>
		/// <br/>
		/// <c>VMINPD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 5D /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMINPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 5D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668002)]
public static void vminpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vminpd instruction.<br/>
		/// <br/>
		/// <c>VMINPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 5D /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668003)]
public static void vminpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vminps instruction.<br/>
		/// <br/>
		/// <c>VMINPS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 5D /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMINPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 5D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668004)]
public static void vminps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vminps instruction.<br/>
		/// <br/>
		/// <c>VMINPS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 5D /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMINPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 5D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668005)]
public static void vminps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vminps instruction.<br/>
		/// <br/>
		/// <c>VMINPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 5D /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668006)]
public static void vminps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vminps instruction.<br/>
		/// <br/>
		/// <c>VMINPS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 5D /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMINPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 5D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668007)]
public static void vminps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vminps instruction.<br/>
		/// <br/>
		/// <c>VMINPS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 5D /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMINPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 5D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668008)]
public static void vminps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vminps instruction.<br/>
		/// <br/>
		/// <c>VMINPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 5D /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668009)]
public static void vminps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vminsd instruction.<br/>
		/// <br/>
		/// <c>VMINSD xmm1, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F2.0F.WIG 5D /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMINSD xmm1 {k1}{z}, xmm2, xmm3/m64{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W1 5D /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668010)]
public static void vminsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vminsd instruction.<br/>
		/// <br/>
		/// <c>VMINSD xmm1, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F2.0F.WIG 5D /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMINSD xmm1 {k1}{z}, xmm2, xmm3/m64{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W1 5D /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668011)]
public static void vminsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vminss instruction.<br/>
		/// <br/>
		/// <c>VMINSS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F3.0F.WIG 5D /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMINSS xmm1 {k1}{z}, xmm2, xmm3/m32{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W0 5D /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668012)]
public static void vminss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vminss instruction.<br/>
		/// <br/>
		/// <c>VMINSS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F3.0F.WIG 5D /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMINSS xmm1 {k1}{z}, xmm2, xmm3/m32{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W0 5D /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668013)]
public static void vminss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vmlaunch instruction.<br/>
		/// <br/>
		/// <c>VMLAUNCH</c><br/>
		/// <br/>
		/// <c>NP 0F 01 C2</c><br/>
		/// <br/>
		/// <c>VMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668014)]
public static void vmlaunch() {}
		/// <summary>vmload instruction.<br/>
		/// <br/>
		/// <c>VMLOAD</c><br/>
		/// <br/>
		/// <c>a64 0F 01 DA</c><br/>
		/// <br/>
		/// <c>SVM</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>VMLOAD</c><br/>
		/// <br/>
		/// <c>a32 0F 01 DA</c><br/>
		/// <br/>
		/// <c>SVM</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMLOAD</c><br/>
		/// <br/>
		/// <c>a16 0F 01 DA</c><br/>
		/// <br/>
		/// <c>SVM</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100668015)]
public static void vmload() {}
		/// <summary>vmmcall instruction.<br/>
		/// <br/>
		/// <c>VMMCALL</c><br/>
		/// <br/>
		/// <c>0F 01 D9</c><br/>
		/// <br/>
		/// <c>SVM</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668016)]
public static void vmmcall() {}
		/// <summary>vmovapd instruction.<br/>
		/// <br/>
		/// <c>VMOVAPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 28 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVAPD xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 28 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668017)]
public static void vmovapd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovapd instruction.<br/>
		/// <br/>
		/// <c>VMOVAPD xmm2/m128, xmm1</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 29 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVAPD xmm2/m128 {k1}{z}, xmm1</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 29 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668018)]
public static void vmovapd(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovapd instruction.<br/>
		/// <br/>
		/// <c>VMOVAPD ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 28 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVAPD ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 28 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668019)]
public static void vmovapd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vmovapd instruction.<br/>
		/// <br/>
		/// <c>VMOVAPD ymm2/m256, ymm1</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 29 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVAPD ymm2/m256 {k1}{z}, ymm1</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 29 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668020)]
public static void vmovapd(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vmovapd instruction.<br/>
		/// <br/>
		/// <c>VMOVAPD zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 28 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668021)]
public static void vmovapd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vmovapd instruction.<br/>
		/// <br/>
		/// <c>VMOVAPD zmm2/m512 {k1}{z}, zmm1</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 29 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668022)]
public static void vmovapd(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vmovapd instruction.<br/>
		/// <br/>
		/// <c>VMOVAPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 28 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVAPD xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 28 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668023)]
public static void vmovapd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovapd instruction.<br/>
		/// <br/>
		/// <c>VMOVAPD ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 28 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVAPD ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 28 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668024)]
public static void vmovapd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovapd instruction.<br/>
		/// <br/>
		/// <c>VMOVAPD zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 28 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668025)]
public static void vmovapd(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovaps instruction.<br/>
		/// <br/>
		/// <c>VMOVAPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 28 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVAPS xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 28 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668026)]
public static void vmovaps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovaps instruction.<br/>
		/// <br/>
		/// <c>VMOVAPS xmm2/m128, xmm1</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 29 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVAPS xmm2/m128 {k1}{z}, xmm1</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 29 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668027)]
public static void vmovaps(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovaps instruction.<br/>
		/// <br/>
		/// <c>VMOVAPS ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 28 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVAPS ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 28 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668028)]
public static void vmovaps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vmovaps instruction.<br/>
		/// <br/>
		/// <c>VMOVAPS ymm2/m256, ymm1</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 29 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVAPS ymm2/m256 {k1}{z}, ymm1</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 29 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668029)]
public static void vmovaps(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vmovaps instruction.<br/>
		/// <br/>
		/// <c>VMOVAPS zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 28 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668030)]
public static void vmovaps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vmovaps instruction.<br/>
		/// <br/>
		/// <c>VMOVAPS zmm2/m512 {k1}{z}, zmm1</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 29 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668031)]
public static void vmovaps(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vmovaps instruction.<br/>
		/// <br/>
		/// <c>VMOVAPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 28 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVAPS xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 28 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668032)]
public static void vmovaps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovaps instruction.<br/>
		/// <br/>
		/// <c>VMOVAPS ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 28 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVAPS ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 28 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668033)]
public static void vmovaps(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovaps instruction.<br/>
		/// <br/>
		/// <c>VMOVAPS zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 28 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668034)]
public static void vmovaps(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovd instruction.<br/>
		/// <br/>
		/// <c>VMOVD xmm1, r/m32</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.W0 6E /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVD xmm1, r/m32</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 6E /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668035)]
public static void vmovd(AssemblerRegisterXMM dst, AssemblerRegister32 src) {}
		/// <summary>vmovd instruction.<br/>
		/// <br/>
		/// <c>VMOVD r/m32, xmm1</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.W0 7E /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVD r/m32, xmm1</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 7E /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668036)]
public static void vmovd(AssemblerRegister32 dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovd instruction.<br/>
		/// <br/>
		/// <c>VMOVD r/m32, xmm1</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.W0 7E /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVD r/m32, xmm1</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 7E /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668037)]
public static void vmovd(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovd instruction.<br/>
		/// <br/>
		/// <c>VMOVD xmm1, r/m32</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.W0 6E /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVD xmm1, r/m32</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 6E /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668038)]
public static void vmovd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovddup instruction.<br/>
		/// <br/>
		/// <c>VMOVDDUP xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>VEX.128.F2.0F.WIG 12 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVDDUP xmm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.128.F2.0F.W1 12 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668039)]
public static void vmovddup(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovddup instruction.<br/>
		/// <br/>
		/// <c>VMOVDDUP ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.F2.0F.WIG 12 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVDDUP ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.F2.0F.W1 12 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668040)]
public static void vmovddup(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vmovddup instruction.<br/>
		/// <br/>
		/// <c>VMOVDDUP zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.F2.0F.W1 12 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668041)]
public static void vmovddup(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vmovddup instruction.<br/>
		/// <br/>
		/// <c>VMOVDDUP xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>VEX.128.F2.0F.WIG 12 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVDDUP xmm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.128.F2.0F.W1 12 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668042)]
public static void vmovddup(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovddup instruction.<br/>
		/// <br/>
		/// <c>VMOVDDUP ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.F2.0F.WIG 12 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVDDUP ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.F2.0F.W1 12 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668043)]
public static void vmovddup(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovddup instruction.<br/>
		/// <br/>
		/// <c>VMOVDDUP zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.F2.0F.W1 12 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668044)]
public static void vmovddup(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovdqa instruction.<br/>
		/// <br/>
		/// <c>VMOVDQA xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 6F /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668045)]
public static void vmovdqa(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovdqa instruction.<br/>
		/// <br/>
		/// <c>VMOVDQA xmm2/m128, xmm1</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 7F /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668046)]
public static void vmovdqa(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovdqa instruction.<br/>
		/// <br/>
		/// <c>VMOVDQA ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 6F /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668047)]
public static void vmovdqa(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vmovdqa instruction.<br/>
		/// <br/>
		/// <c>VMOVDQA ymm2/m256, ymm1</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 7F /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668048)]
public static void vmovdqa(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vmovdqa instruction.<br/>
		/// <br/>
		/// <c>VMOVDQA xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 6F /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668049)]
public static void vmovdqa(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovdqa instruction.<br/>
		/// <br/>
		/// <c>VMOVDQA ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 6F /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668050)]
public static void vmovdqa(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovdqa32 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQA32 xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 6F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668051)]
public static void vmovdqa32(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovdqa32 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQA32 xmm2/m128 {k1}{z}, xmm1</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 7F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668052)]
public static void vmovdqa32(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovdqa32 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQA32 ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 6F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668053)]
public static void vmovdqa32(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vmovdqa32 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQA32 ymm2/m256 {k1}{z}, ymm1</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 7F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668054)]
public static void vmovdqa32(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vmovdqa32 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQA32 zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 6F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668055)]
public static void vmovdqa32(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vmovdqa32 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQA32 zmm2/m512 {k1}{z}, zmm1</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 7F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668056)]
public static void vmovdqa32(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vmovdqa32 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQA32 xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 6F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668057)]
public static void vmovdqa32(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovdqa32 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQA32 ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 6F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668058)]
public static void vmovdqa32(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovdqa32 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQA32 zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 6F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668059)]
public static void vmovdqa32(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovdqa64 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQA64 xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 6F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668060)]
public static void vmovdqa64(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovdqa64 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQA64 xmm2/m128 {k1}{z}, xmm1</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 7F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668061)]
public static void vmovdqa64(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovdqa64 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQA64 ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 6F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668062)]
public static void vmovdqa64(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vmovdqa64 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQA64 ymm2/m256 {k1}{z}, ymm1</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 7F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668063)]
public static void vmovdqa64(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vmovdqa64 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQA64 zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 6F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668064)]
public static void vmovdqa64(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vmovdqa64 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQA64 zmm2/m512 {k1}{z}, zmm1</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 7F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668065)]
public static void vmovdqa64(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vmovdqa64 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQA64 xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 6F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668066)]
public static void vmovdqa64(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovdqa64 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQA64 ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 6F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668067)]
public static void vmovdqa64(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovdqa64 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQA64 zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 6F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668068)]
public static void vmovdqa64(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovdqu instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.F3.0F.WIG 6F /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668069)]
public static void vmovdqu(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovdqu instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU xmm2/m128, xmm1</c><br/>
		/// <br/>
		/// <c>VEX.128.F3.0F.WIG 7F /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668070)]
public static void vmovdqu(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovdqu instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.F3.0F.WIG 6F /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668071)]
public static void vmovdqu(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vmovdqu instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU ymm2/m256, ymm1</c><br/>
		/// <br/>
		/// <c>VEX.256.F3.0F.WIG 7F /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668072)]
public static void vmovdqu(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vmovdqu instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.F3.0F.WIG 6F /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668073)]
public static void vmovdqu(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovdqu instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.F3.0F.WIG 6F /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668074)]
public static void vmovdqu(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovdqu16 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU16 xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.F2.0F.W1 6F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668075)]
public static void vmovdqu16(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovdqu16 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU16 xmm2/m128 {k1}{z}, xmm1</c><br/>
		/// <br/>
		/// <c>EVEX.128.F2.0F.W1 7F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668076)]
public static void vmovdqu16(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovdqu16 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU16 ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.F2.0F.W1 6F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668077)]
public static void vmovdqu16(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vmovdqu16 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU16 ymm2/m256 {k1}{z}, ymm1</c><br/>
		/// <br/>
		/// <c>EVEX.256.F2.0F.W1 7F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668078)]
public static void vmovdqu16(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vmovdqu16 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU16 zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.F2.0F.W1 6F /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668079)]
public static void vmovdqu16(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vmovdqu16 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU16 zmm2/m512 {k1}{z}, zmm1</c><br/>
		/// <br/>
		/// <c>EVEX.512.F2.0F.W1 7F /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668080)]
public static void vmovdqu16(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vmovdqu16 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU16 xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.F2.0F.W1 6F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668081)]
public static void vmovdqu16(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovdqu16 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU16 ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.F2.0F.W1 6F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668082)]
public static void vmovdqu16(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovdqu16 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU16 zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.F2.0F.W1 6F /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668083)]
public static void vmovdqu16(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovdqu32 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU32 xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F.W0 6F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668084)]
public static void vmovdqu32(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovdqu32 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU32 xmm2/m128 {k1}{z}, xmm1</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F.W0 7F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668085)]
public static void vmovdqu32(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovdqu32 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU32 ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F.W0 6F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668086)]
public static void vmovdqu32(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vmovdqu32 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU32 ymm2/m256 {k1}{z}, ymm1</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F.W0 7F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668087)]
public static void vmovdqu32(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vmovdqu32 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU32 zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F.W0 6F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668088)]
public static void vmovdqu32(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vmovdqu32 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU32 zmm2/m512 {k1}{z}, zmm1</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F.W0 7F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668089)]
public static void vmovdqu32(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vmovdqu32 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU32 xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F.W0 6F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668090)]
public static void vmovdqu32(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovdqu32 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU32 ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F.W0 6F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668091)]
public static void vmovdqu32(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovdqu32 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU32 zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F.W0 6F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668092)]
public static void vmovdqu32(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovdqu64 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU64 xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F.W1 6F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668093)]
public static void vmovdqu64(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovdqu64 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU64 xmm2/m128 {k1}{z}, xmm1</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F.W1 7F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668094)]
public static void vmovdqu64(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovdqu64 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU64 ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F.W1 6F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668095)]
public static void vmovdqu64(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vmovdqu64 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU64 ymm2/m256 {k1}{z}, ymm1</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F.W1 7F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668096)]
public static void vmovdqu64(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vmovdqu64 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU64 zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F.W1 6F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668097)]
public static void vmovdqu64(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vmovdqu64 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU64 zmm2/m512 {k1}{z}, zmm1</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F.W1 7F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668098)]
public static void vmovdqu64(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vmovdqu64 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU64 xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F.W1 6F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668099)]
public static void vmovdqu64(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovdqu64 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU64 ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F.W1 6F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668100)]
public static void vmovdqu64(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovdqu64 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU64 zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F.W1 6F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668101)]
public static void vmovdqu64(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovdqu8 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU8 xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.F2.0F.W0 6F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668102)]
public static void vmovdqu8(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovdqu8 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU8 xmm2/m128 {k1}{z}, xmm1</c><br/>
		/// <br/>
		/// <c>EVEX.128.F2.0F.W0 7F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668103)]
public static void vmovdqu8(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovdqu8 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU8 ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.F2.0F.W0 6F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668104)]
public static void vmovdqu8(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vmovdqu8 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU8 ymm2/m256 {k1}{z}, ymm1</c><br/>
		/// <br/>
		/// <c>EVEX.256.F2.0F.W0 7F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668105)]
public static void vmovdqu8(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vmovdqu8 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU8 zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.F2.0F.W0 6F /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668106)]
public static void vmovdqu8(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vmovdqu8 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU8 zmm2/m512 {k1}{z}, zmm1</c><br/>
		/// <br/>
		/// <c>EVEX.512.F2.0F.W0 7F /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668107)]
public static void vmovdqu8(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vmovdqu8 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU8 xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.F2.0F.W0 6F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668108)]
public static void vmovdqu8(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovdqu8 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU8 ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.F2.0F.W0 6F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668109)]
public static void vmovdqu8(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovdqu8 instruction.<br/>
		/// <br/>
		/// <c>VMOVDQU8 zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.F2.0F.W0 6F /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668110)]
public static void vmovdqu8(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovhlps instruction.<br/>
		/// <br/>
		/// <c>VMOVHLPS xmm1, xmm2, xmm3</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 12 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVHLPS xmm1, xmm2, xmm3</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 12 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668111)]
public static void vmovhlps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vmovhpd instruction.<br/>
		/// <br/>
		/// <c>VMOVHPD m64, xmm1</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 17 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVHPD m64, xmm1</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 17 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668112)]
public static void vmovhpd(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovhpd instruction.<br/>
		/// <br/>
		/// <c>VMOVHPD xmm2, xmm1, m64</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 16 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVHPD xmm2, xmm1, m64</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 16 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668113)]
public static void vmovhpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vmovhps instruction.<br/>
		/// <br/>
		/// <c>VMOVHPS m64, xmm1</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 17 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVHPS m64, xmm1</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 17 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668114)]
public static void vmovhps(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovhps instruction.<br/>
		/// <br/>
		/// <c>VMOVHPS xmm2, xmm1, m64</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 16 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVHPS xmm2, xmm1, m64</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 16 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668115)]
public static void vmovhps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vmovlhps instruction.<br/>
		/// <br/>
		/// <c>VMOVLHPS xmm1, xmm2, xmm3</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 16 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVLHPS xmm1, xmm2, xmm3</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 16 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668116)]
public static void vmovlhps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vmovlpd instruction.<br/>
		/// <br/>
		/// <c>VMOVLPD m64, xmm1</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 13 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVLPD m64, xmm1</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 13 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668117)]
public static void vmovlpd(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovlpd instruction.<br/>
		/// <br/>
		/// <c>VMOVLPD xmm2, xmm1, m64</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 12 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVLPD xmm2, xmm1, m64</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 12 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668118)]
public static void vmovlpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vmovlps instruction.<br/>
		/// <br/>
		/// <c>VMOVLPS m64, xmm1</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 13 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVLPS m64, xmm1</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 13 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668119)]
public static void vmovlps(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovlps instruction.<br/>
		/// <br/>
		/// <c>VMOVLPS xmm2, xmm1, m64</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 12 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVLPS xmm2, xmm1, m64</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 12 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668120)]
public static void vmovlps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vmovmskpd instruction.<br/>
		/// <br/>
		/// <c>VMOVMSKPD r32, xmm2</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.W0 50 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668121)]
public static void vmovmskpd(AssemblerRegister32 dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovmskpd instruction.<br/>
		/// <br/>
		/// <c>VMOVMSKPD r64, xmm2</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.W1 50 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100668122)]
public static void vmovmskpd(AssemblerRegister64 dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovmskpd instruction.<br/>
		/// <br/>
		/// <c>VMOVMSKPD r32, ymm2</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.W0 50 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668123)]
public static void vmovmskpd(AssemblerRegister32 dst, AssemblerRegisterYMM src) {}
		/// <summary>vmovmskpd instruction.<br/>
		/// <br/>
		/// <c>VMOVMSKPD r64, ymm2</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.W1 50 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100668124)]
public static void vmovmskpd(AssemblerRegister64 dst, AssemblerRegisterYMM src) {}
		/// <summary>vmovmskps instruction.<br/>
		/// <br/>
		/// <c>VMOVMSKPS r32, xmm2</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.W0 50 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668125)]
public static void vmovmskps(AssemblerRegister32 dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovmskps instruction.<br/>
		/// <br/>
		/// <c>VMOVMSKPS r64, xmm2</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.W1 50 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100668126)]
public static void vmovmskps(AssemblerRegister64 dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovmskps instruction.<br/>
		/// <br/>
		/// <c>VMOVMSKPS r32, ymm2</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.W0 50 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668127)]
public static void vmovmskps(AssemblerRegister32 dst, AssemblerRegisterYMM src) {}
		/// <summary>vmovmskps instruction.<br/>
		/// <br/>
		/// <c>VMOVMSKPS r64, ymm2</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.W1 50 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100668128)]
public static void vmovmskps(AssemblerRegister64 dst, AssemblerRegisterYMM src) {}
		/// <summary>vmovntdq instruction.<br/>
		/// <br/>
		/// <c>VMOVNTDQ m128, xmm1</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG E7 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVNTDQ m128, xmm1</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 E7 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668129)]
public static void vmovntdq(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovntdq instruction.<br/>
		/// <br/>
		/// <c>VMOVNTDQ m256, ymm1</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG E7 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVNTDQ m256, ymm1</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 E7 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668130)]
public static void vmovntdq(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vmovntdq instruction.<br/>
		/// <br/>
		/// <c>VMOVNTDQ m512, zmm1</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 E7 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668131)]
public static void vmovntdq(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vmovntdqa instruction.<br/>
		/// <br/>
		/// <c>VMOVNTDQA xmm1, m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 2A /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVNTDQA xmm1, m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 2A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668132)]
public static void vmovntdqa(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovntdqa instruction.<br/>
		/// <br/>
		/// <c>VMOVNTDQA ymm1, m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 2A /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVNTDQA ymm1, m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 2A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668133)]
public static void vmovntdqa(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovntdqa instruction.<br/>
		/// <br/>
		/// <c>VMOVNTDQA zmm1, m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 2A /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668134)]
public static void vmovntdqa(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovntpd instruction.<br/>
		/// <br/>
		/// <c>VMOVNTPD m128, xmm1</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 2B /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVNTPD m128, xmm1</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 2B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668135)]
public static void vmovntpd(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovntpd instruction.<br/>
		/// <br/>
		/// <c>VMOVNTPD m256, ymm1</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 2B /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVNTPD m256, ymm1</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 2B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668136)]
public static void vmovntpd(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vmovntpd instruction.<br/>
		/// <br/>
		/// <c>VMOVNTPD m512, zmm1</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 2B /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668137)]
public static void vmovntpd(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vmovntps instruction.<br/>
		/// <br/>
		/// <c>VMOVNTPS m128, xmm1</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 2B /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVNTPS m128, xmm1</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 2B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668138)]
public static void vmovntps(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovntps instruction.<br/>
		/// <br/>
		/// <c>VMOVNTPS m256, ymm1</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 2B /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVNTPS m256, ymm1</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 2B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668139)]
public static void vmovntps(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vmovntps instruction.<br/>
		/// <br/>
		/// <c>VMOVNTPS m512, zmm1</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 2B /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668140)]
public static void vmovntps(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vmovq instruction.<br/>
		/// <br/>
		/// <c>VMOVQ xmm1, r/m64</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.W1 6E /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>VMOVQ xmm1, r/m64</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 6E /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100668141)]
public static void vmovq(AssemblerRegisterXMM dst, AssemblerRegister64 src) {}
		/// <summary>vmovq instruction.<br/>
		/// <br/>
		/// <c>VMOVQ r/m64, xmm1</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.W1 7E /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>VMOVQ r/m64, xmm1</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 7E /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100668142)]
public static void vmovq(AssemblerRegister64 dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovq instruction.<br/>
		/// <br/>
		/// <c>VMOVQ xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>VEX.128.F3.0F.WIG 7E /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVQ xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F.W1 7E /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668143)]
public static void vmovq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovq instruction.<br/>
		/// <br/>
		/// <c>VMOVQ xmm1/m64, xmm2</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG D6 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVQ xmm1/m64, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 D6 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668144)]
public static void vmovq(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovq instruction.<br/>
		/// <br/>
		/// <c>VMOVQ xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>VEX.128.F3.0F.WIG 7E /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVQ xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F.W1 7E /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668145)]
public static void vmovq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovsd instruction.<br/>
		/// <br/>
		/// <c>VMOVSD m64, xmm1</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F2.0F.WIG 11 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVSD m64 {k1}, xmm1</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W1 11 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668146)]
public static void vmovsd(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovsd instruction.<br/>
		/// <br/>
		/// <c>VMOVSD xmm1, m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F2.0F.WIG 10 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVSD xmm1 {k1}{z}, m64</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W1 10 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668147)]
public static void vmovsd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovsd instruction.<br/>
		/// <br/>
		/// <c>VMOVSD xmm1, xmm2, xmm3</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F2.0F.WIG 10 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVSD xmm1 {k1}{z}, xmm2, xmm3</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W1 10 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668148)]
public static void vmovsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vmovshdup instruction.<br/>
		/// <br/>
		/// <c>VMOVSHDUP xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.F3.0F.WIG 16 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVSHDUP xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F.W0 16 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668149)]
public static void vmovshdup(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovshdup instruction.<br/>
		/// <br/>
		/// <c>VMOVSHDUP ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.F3.0F.WIG 16 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVSHDUP ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F.W0 16 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668150)]
public static void vmovshdup(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vmovshdup instruction.<br/>
		/// <br/>
		/// <c>VMOVSHDUP zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F.W0 16 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668151)]
public static void vmovshdup(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vmovshdup instruction.<br/>
		/// <br/>
		/// <c>VMOVSHDUP xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.F3.0F.WIG 16 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVSHDUP xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F.W0 16 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668152)]
public static void vmovshdup(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovshdup instruction.<br/>
		/// <br/>
		/// <c>VMOVSHDUP ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.F3.0F.WIG 16 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVSHDUP ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F.W0 16 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668153)]
public static void vmovshdup(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovshdup instruction.<br/>
		/// <br/>
		/// <c>VMOVSHDUP zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F.W0 16 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668154)]
public static void vmovshdup(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovsldup instruction.<br/>
		/// <br/>
		/// <c>VMOVSLDUP xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.F3.0F.WIG 12 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVSLDUP xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F.W0 12 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668155)]
public static void vmovsldup(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovsldup instruction.<br/>
		/// <br/>
		/// <c>VMOVSLDUP ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.F3.0F.WIG 12 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVSLDUP ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F.W0 12 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668156)]
public static void vmovsldup(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vmovsldup instruction.<br/>
		/// <br/>
		/// <c>VMOVSLDUP zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F.W0 12 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668157)]
public static void vmovsldup(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vmovsldup instruction.<br/>
		/// <br/>
		/// <c>VMOVSLDUP xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.F3.0F.WIG 12 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVSLDUP xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F.W0 12 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668158)]
public static void vmovsldup(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovsldup instruction.<br/>
		/// <br/>
		/// <c>VMOVSLDUP ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.F3.0F.WIG 12 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVSLDUP ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F.W0 12 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668159)]
public static void vmovsldup(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovsldup instruction.<br/>
		/// <br/>
		/// <c>VMOVSLDUP zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F.W0 12 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668160)]
public static void vmovsldup(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovss instruction.<br/>
		/// <br/>
		/// <c>VMOVSS m32, xmm1</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F3.0F.WIG 11 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVSS m32 {k1}, xmm1</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W0 11 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668161)]
public static void vmovss(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovss instruction.<br/>
		/// <br/>
		/// <c>VMOVSS xmm1, m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F3.0F.WIG 10 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVSS xmm1 {k1}{z}, m32</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W0 10 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668162)]
public static void vmovss(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovss instruction.<br/>
		/// <br/>
		/// <c>VMOVSS xmm1, xmm2, xmm3</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F3.0F.WIG 10 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVSS xmm1 {k1}{z}, xmm2, xmm3</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W0 10 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668163)]
public static void vmovss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vmovupd instruction.<br/>
		/// <br/>
		/// <c>VMOVUPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 10 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVUPD xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 10 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668164)]
public static void vmovupd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovupd instruction.<br/>
		/// <br/>
		/// <c>VMOVUPD xmm2/m128, xmm1</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 11 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVUPD xmm2/m128 {k1}{z}, xmm1</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 11 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668165)]
public static void vmovupd(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovupd instruction.<br/>
		/// <br/>
		/// <c>VMOVUPD ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 10 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVUPD ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 10 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668166)]
public static void vmovupd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vmovupd instruction.<br/>
		/// <br/>
		/// <c>VMOVUPD ymm2/m256, ymm1</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 11 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVUPD ymm2/m256 {k1}{z}, ymm1</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 11 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668167)]
public static void vmovupd(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vmovupd instruction.<br/>
		/// <br/>
		/// <c>VMOVUPD zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 10 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668168)]
public static void vmovupd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vmovupd instruction.<br/>
		/// <br/>
		/// <c>VMOVUPD zmm2/m512 {k1}{z}, zmm1</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 11 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668169)]
public static void vmovupd(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vmovupd instruction.<br/>
		/// <br/>
		/// <c>VMOVUPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 10 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVUPD xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 10 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668170)]
public static void vmovupd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovupd instruction.<br/>
		/// <br/>
		/// <c>VMOVUPD ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 10 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVUPD ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 10 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668171)]
public static void vmovupd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovupd instruction.<br/>
		/// <br/>
		/// <c>VMOVUPD zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 10 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668172)]
public static void vmovupd(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovups instruction.<br/>
		/// <br/>
		/// <c>VMOVUPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 10 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVUPS xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 10 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668173)]
public static void vmovups(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovups instruction.<br/>
		/// <br/>
		/// <c>VMOVUPS xmm2/m128, xmm1</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 11 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVUPS xmm2/m128 {k1}{z}, xmm1</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 11 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668174)]
public static void vmovups(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vmovups instruction.<br/>
		/// <br/>
		/// <c>VMOVUPS ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 10 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVUPS ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 10 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668175)]
public static void vmovups(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vmovups instruction.<br/>
		/// <br/>
		/// <c>VMOVUPS ymm2/m256, ymm1</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 11 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVUPS ymm2/m256 {k1}{z}, ymm1</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 11 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668176)]
public static void vmovups(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vmovups instruction.<br/>
		/// <br/>
		/// <c>VMOVUPS zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 10 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668177)]
public static void vmovups(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vmovups instruction.<br/>
		/// <br/>
		/// <c>VMOVUPS zmm2/m512 {k1}{z}, zmm1</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 11 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668178)]
public static void vmovups(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vmovups instruction.<br/>
		/// <br/>
		/// <c>VMOVUPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 10 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVUPS xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 10 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668179)]
public static void vmovups(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovups instruction.<br/>
		/// <br/>
		/// <c>VMOVUPS ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 10 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMOVUPS ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 10 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668180)]
public static void vmovups(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmovups instruction.<br/>
		/// <br/>
		/// <c>VMOVUPS zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 10 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668181)]
public static void vmovups(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vmpsadbw instruction.<br/>
		/// <br/>
		/// <c>VMPSADBW xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 42 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668182)]
public static void vmpsadbw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vmpsadbw instruction.<br/>
		/// <br/>
		/// <c>VMPSADBW ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.WIG 42 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668183)]
public static void vmpsadbw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vmpsadbw instruction.<br/>
		/// <br/>
		/// <c>VMPSADBW xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 42 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668184)]
public static void vmpsadbw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vmpsadbw instruction.<br/>
		/// <br/>
		/// <c>VMPSADBW ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.WIG 42 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668185)]
public static void vmpsadbw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vmpsadbw instruction.<br/>
		/// <br/>
		/// <c>VMPSADBW xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 42 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668186)]
public static void vmpsadbw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vmpsadbw instruction.<br/>
		/// <br/>
		/// <c>VMPSADBW ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.WIG 42 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668187)]
public static void vmpsadbw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vmpsadbw instruction.<br/>
		/// <br/>
		/// <c>VMPSADBW xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 42 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668188)]
public static void vmpsadbw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vmpsadbw instruction.<br/>
		/// <br/>
		/// <c>VMPSADBW ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.WIG 42 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668189)]
public static void vmpsadbw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vmptrld instruction.<br/>
		/// <br/>
		/// <c>VMPTRLD m64</c><br/>
		/// <br/>
		/// <c>NP 0F C7 /6</c><br/>
		/// <br/>
		/// <c>VMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668190)]
public static void vmptrld(AssemblerMemoryOperand dst) {}
		/// <summary>vmptrst instruction.<br/>
		/// <br/>
		/// <c>VMPTRST m64</c><br/>
		/// <br/>
		/// <c>NP 0F C7 /7</c><br/>
		/// <br/>
		/// <c>VMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668191)]
public static void vmptrst(AssemblerMemoryOperand dst) {}
		/// <summary>vmread instruction.<br/>
		/// <br/>
		/// <c>VMREAD r/m32, r32</c><br/>
		/// <br/>
		/// <c>NP 0F 78 /r</c><br/>
		/// <br/>
		/// <c>VMX</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100668192)]
public static void vmread(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>vmread instruction.<br/>
		/// <br/>
		/// <c>VMREAD r/m32, r32</c><br/>
		/// <br/>
		/// <c>NP 0F 78 /r</c><br/>
		/// <br/>
		/// <c>VMX</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100668193)]
public static void vmread(AssemblerMemoryOperand dst, AssemblerRegister32 src) {}
		/// <summary>vmread instruction.<br/>
		/// <br/>
		/// <c>VMREAD r/m64, r64</c><br/>
		/// <br/>
		/// <c>NP 0F 78 /r</c><br/>
		/// <br/>
		/// <c>VMX</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100668194)]
public static void vmread(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>vmread instruction.<br/>
		/// <br/>
		/// <c>VMREAD r/m64, r64</c><br/>
		/// <br/>
		/// <c>NP 0F 78 /r</c><br/>
		/// <br/>
		/// <c>VMX</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100668195)]
public static void vmread(AssemblerMemoryOperand dst, AssemblerRegister64 src) {}
		/// <summary>vmresume instruction.<br/>
		/// <br/>
		/// <c>VMRESUME</c><br/>
		/// <br/>
		/// <c>NP 0F 01 C3</c><br/>
		/// <br/>
		/// <c>VMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668196)]
public static void vmresume() {}
		/// <summary>vmrun instruction.<br/>
		/// <br/>
		/// <c>VMRUN</c><br/>
		/// <br/>
		/// <c>a64 0F 01 D8</c><br/>
		/// <br/>
		/// <c>SVM</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>VMRUN</c><br/>
		/// <br/>
		/// <c>a32 0F 01 D8</c><br/>
		/// <br/>
		/// <c>SVM</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMRUN</c><br/>
		/// <br/>
		/// <c>a16 0F 01 D8</c><br/>
		/// <br/>
		/// <c>SVM</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100668197)]
public static void vmrun() {}
		/// <summary>vmsave instruction.<br/>
		/// <br/>
		/// <c>VMSAVE</c><br/>
		/// <br/>
		/// <c>a64 0F 01 DB</c><br/>
		/// <br/>
		/// <c>SVM</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>VMSAVE</c><br/>
		/// <br/>
		/// <c>a32 0F 01 DB</c><br/>
		/// <br/>
		/// <c>SVM</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMSAVE</c><br/>
		/// <br/>
		/// <c>a16 0F 01 DB</c><br/>
		/// <br/>
		/// <c>SVM</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100668198)]
public static void vmsave() {}
		/// <summary>vmulpd instruction.<br/>
		/// <br/>
		/// <c>VMULPD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 59 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMULPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 59 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668199)]
public static void vmulpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vmulpd instruction.<br/>
		/// <br/>
		/// <c>VMULPD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 59 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMULPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 59 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668200)]
public static void vmulpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vmulpd instruction.<br/>
		/// <br/>
		/// <c>VMULPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 59 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668201)]
public static void vmulpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vmulpd instruction.<br/>
		/// <br/>
		/// <c>VMULPD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 59 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMULPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 59 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668202)]
public static void vmulpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vmulpd instruction.<br/>
		/// <br/>
		/// <c>VMULPD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 59 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMULPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 59 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668203)]
public static void vmulpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vmulpd instruction.<br/>
		/// <br/>
		/// <c>VMULPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 59 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668204)]
public static void vmulpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vmulps instruction.<br/>
		/// <br/>
		/// <c>VMULPS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 59 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMULPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 59 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668205)]
public static void vmulps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vmulps instruction.<br/>
		/// <br/>
		/// <c>VMULPS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 59 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMULPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 59 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668206)]
public static void vmulps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vmulps instruction.<br/>
		/// <br/>
		/// <c>VMULPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 59 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668207)]
public static void vmulps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vmulps instruction.<br/>
		/// <br/>
		/// <c>VMULPS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 59 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMULPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 59 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668208)]
public static void vmulps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vmulps instruction.<br/>
		/// <br/>
		/// <c>VMULPS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 59 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMULPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 59 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668209)]
public static void vmulps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vmulps instruction.<br/>
		/// <br/>
		/// <c>VMULPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 59 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668210)]
public static void vmulps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vmulsd instruction.<br/>
		/// <br/>
		/// <c>VMULSD xmm1, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F2.0F.WIG 59 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMULSD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W1 59 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668211)]
public static void vmulsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vmulsd instruction.<br/>
		/// <br/>
		/// <c>VMULSD xmm1, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F2.0F.WIG 59 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMULSD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W1 59 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668212)]
public static void vmulsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vmulss instruction.<br/>
		/// <br/>
		/// <c>VMULSS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F3.0F.WIG 59 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMULSS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W0 59 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668213)]
public static void vmulss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vmulss instruction.<br/>
		/// <br/>
		/// <c>VMULSS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F3.0F.WIG 59 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VMULSS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W0 59 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668214)]
public static void vmulss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vmwrite instruction.<br/>
		/// <br/>
		/// <c>VMWRITE r32, r/m32</c><br/>
		/// <br/>
		/// <c>NP 0F 79 /r</c><br/>
		/// <br/>
		/// <c>VMX</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100668215)]
public static void vmwrite(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>vmwrite instruction.<br/>
		/// <br/>
		/// <c>VMWRITE r64, r/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 79 /r</c><br/>
		/// <br/>
		/// <c>VMX</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100668216)]
public static void vmwrite(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>vmwrite instruction.<br/>
		/// <br/>
		/// <c>VMWRITE r32, r/m32</c><br/>
		/// <br/>
		/// <c>NP 0F 79 /r</c><br/>
		/// <br/>
		/// <c>VMX</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100668217)]
public static void vmwrite(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>vmwrite instruction.<br/>
		/// <br/>
		/// <c>VMWRITE r64, r/m64</c><br/>
		/// <br/>
		/// <c>NP 0F 79 /r</c><br/>
		/// <br/>
		/// <c>VMX</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100668218)]
public static void vmwrite(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>vmxoff instruction.<br/>
		/// <br/>
		/// <c>VMXOFF</c><br/>
		/// <br/>
		/// <c>NP 0F 01 C4</c><br/>
		/// <br/>
		/// <c>VMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668219)]
public static void vmxoff() {}
		/// <summary>vmxon instruction.<br/>
		/// <br/>
		/// <c>VMXON m64</c><br/>
		/// <br/>
		/// <c>F3 0F C7 /6</c><br/>
		/// <br/>
		/// <c>VMX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668220)]
public static void vmxon(AssemblerMemoryOperand dst) {}
		/// <summary>vorpd instruction.<br/>
		/// <br/>
		/// <c>VORPD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 56 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VORPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 56 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668221)]
public static void vorpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vorpd instruction.<br/>
		/// <br/>
		/// <c>VORPD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 56 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VORPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 56 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668222)]
public static void vorpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vorpd instruction.<br/>
		/// <br/>
		/// <c>VORPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 56 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668223)]
public static void vorpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vorpd instruction.<br/>
		/// <br/>
		/// <c>VORPD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 56 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VORPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 56 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668224)]
public static void vorpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vorpd instruction.<br/>
		/// <br/>
		/// <c>VORPD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 56 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VORPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 56 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668225)]
public static void vorpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vorpd instruction.<br/>
		/// <br/>
		/// <c>VORPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 56 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668226)]
public static void vorpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vorps instruction.<br/>
		/// <br/>
		/// <c>VORPS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 56 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VORPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 56 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668227)]
public static void vorps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vorps instruction.<br/>
		/// <br/>
		/// <c>VORPS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 56 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VORPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 56 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668228)]
public static void vorps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vorps instruction.<br/>
		/// <br/>
		/// <c>VORPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 56 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668229)]
public static void vorps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vorps instruction.<br/>
		/// <br/>
		/// <c>VORPS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 56 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VORPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 56 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668230)]
public static void vorps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vorps instruction.<br/>
		/// <br/>
		/// <c>VORPS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 56 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VORPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 56 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668231)]
public static void vorps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vorps instruction.<br/>
		/// <br/>
		/// <c>VORPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 56 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668232)]
public static void vorps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vp2intersectd instruction.<br/>
		/// <br/>
		/// <c>VP2INTERSECTD k1+1, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.F2.0F38.W0 68 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VP2INTERSECT</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668233)]
public static void vp2intersectd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vp2intersectd instruction.<br/>
		/// <br/>
		/// <c>VP2INTERSECTD k1+1, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.F2.0F38.W0 68 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VP2INTERSECT</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668234)]
public static void vp2intersectd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vp2intersectd instruction.<br/>
		/// <br/>
		/// <c>VP2INTERSECTD k1+1, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.F2.0F38.W0 68 /r</c><br/>
		/// <br/>
		/// <c>AVX512F and AVX512_VP2INTERSECT</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668235)]
public static void vp2intersectd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vp2intersectd instruction.<br/>
		/// <br/>
		/// <c>VP2INTERSECTD k1+1, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.F2.0F38.W0 68 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VP2INTERSECT</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668236)]
public static void vp2intersectd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vp2intersectd instruction.<br/>
		/// <br/>
		/// <c>VP2INTERSECTD k1+1, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.F2.0F38.W0 68 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VP2INTERSECT</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668237)]
public static void vp2intersectd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vp2intersectd instruction.<br/>
		/// <br/>
		/// <c>VP2INTERSECTD k1+1, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.F2.0F38.W0 68 /r</c><br/>
		/// <br/>
		/// <c>AVX512F and AVX512_VP2INTERSECT</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668238)]
public static void vp2intersectd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vp2intersectq instruction.<br/>
		/// <br/>
		/// <c>VP2INTERSECTQ k1+1, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.F2.0F38.W1 68 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VP2INTERSECT</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668239)]
public static void vp2intersectq(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vp2intersectq instruction.<br/>
		/// <br/>
		/// <c>VP2INTERSECTQ k1+1, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.F2.0F38.W1 68 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VP2INTERSECT</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668240)]
public static void vp2intersectq(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vp2intersectq instruction.<br/>
		/// <br/>
		/// <c>VP2INTERSECTQ k1+1, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.F2.0F38.W1 68 /r</c><br/>
		/// <br/>
		/// <c>AVX512F and AVX512_VP2INTERSECT</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668241)]
public static void vp2intersectq(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vp2intersectq instruction.<br/>
		/// <br/>
		/// <c>VP2INTERSECTQ k1+1, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.F2.0F38.W1 68 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VP2INTERSECT</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668242)]
public static void vp2intersectq(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vp2intersectq instruction.<br/>
		/// <br/>
		/// <c>VP2INTERSECTQ k1+1, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.F2.0F38.W1 68 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VP2INTERSECT</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668243)]
public static void vp2intersectq(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vp2intersectq instruction.<br/>
		/// <br/>
		/// <c>VP2INTERSECTQ k1+1, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.F2.0F38.W1 68 /r</c><br/>
		/// <br/>
		/// <c>AVX512F and AVX512_VP2INTERSECT</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668244)]
public static void vp2intersectq(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vp4dpwssd instruction.<br/>
		/// <br/>
		/// <c>VP4DPWSSD zmm1 {k1}{z}, zmm2+3, m128</c><br/>
		/// <br/>
		/// <c>EVEX.512.F2.0F38.W0 52 /r</c><br/>
		/// <br/>
		/// <c>AVX512_4VNNIW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668245)]
public static void vp4dpwssd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vp4dpwssds instruction.<br/>
		/// <br/>
		/// <c>VP4DPWSSDS zmm1 {k1}{z}, zmm2+3, m128</c><br/>
		/// <br/>
		/// <c>EVEX.512.F2.0F38.W0 53 /r</c><br/>
		/// <br/>
		/// <c>AVX512_4VNNIW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668246)]
public static void vp4dpwssds(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpabsb instruction.<br/>
		/// <br/>
		/// <c>VPABSB xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 1C /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPABSB xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG 1C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668247)]
public static void vpabsb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpabsb instruction.<br/>
		/// <br/>
		/// <c>VPABSB ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 1C /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPABSB ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG 1C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668248)]
public static void vpabsb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpabsb instruction.<br/>
		/// <br/>
		/// <c>VPABSB zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG 1C /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668249)]
public static void vpabsb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vpabsb instruction.<br/>
		/// <br/>
		/// <c>VPABSB xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 1C /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPABSB xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG 1C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668250)]
public static void vpabsb(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpabsb instruction.<br/>
		/// <br/>
		/// <c>VPABSB ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 1C /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPABSB ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG 1C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668251)]
public static void vpabsb(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpabsb instruction.<br/>
		/// <br/>
		/// <c>VPABSB zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG 1C /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668252)]
public static void vpabsb(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpabsd instruction.<br/>
		/// <br/>
		/// <c>VPABSD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 1E /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPABSD xmm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 1E /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668253)]
public static void vpabsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpabsd instruction.<br/>
		/// <br/>
		/// <c>VPABSD ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 1E /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPABSD ymm1 {k1}{z}, ymm2/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 1E /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668254)]
public static void vpabsd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpabsd instruction.<br/>
		/// <br/>
		/// <c>VPABSD zmm1 {k1}{z}, zmm2/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 1E /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668255)]
public static void vpabsd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vpabsd instruction.<br/>
		/// <br/>
		/// <c>VPABSD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 1E /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPABSD xmm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 1E /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668256)]
public static void vpabsd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpabsd instruction.<br/>
		/// <br/>
		/// <c>VPABSD ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 1E /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPABSD ymm1 {k1}{z}, ymm2/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 1E /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668257)]
public static void vpabsd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpabsd instruction.<br/>
		/// <br/>
		/// <c>VPABSD zmm1 {k1}{z}, zmm2/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 1E /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668258)]
public static void vpabsd(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpabsq instruction.<br/>
		/// <br/>
		/// <c>VPABSQ xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 1F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668259)]
public static void vpabsq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpabsq instruction.<br/>
		/// <br/>
		/// <c>VPABSQ ymm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 1F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668260)]
public static void vpabsq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpabsq instruction.<br/>
		/// <br/>
		/// <c>VPABSQ zmm1 {k1}{z}, zmm2/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 1F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668261)]
public static void vpabsq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vpabsq instruction.<br/>
		/// <br/>
		/// <c>VPABSQ xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 1F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668262)]
public static void vpabsq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpabsq instruction.<br/>
		/// <br/>
		/// <c>VPABSQ ymm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 1F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668263)]
public static void vpabsq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpabsq instruction.<br/>
		/// <br/>
		/// <c>VPABSQ zmm1 {k1}{z}, zmm2/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 1F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668264)]
public static void vpabsq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpabsw instruction.<br/>
		/// <br/>
		/// <c>VPABSW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 1D /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPABSW xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG 1D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668265)]
public static void vpabsw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpabsw instruction.<br/>
		/// <br/>
		/// <c>VPABSW ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 1D /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPABSW ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG 1D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668266)]
public static void vpabsw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpabsw instruction.<br/>
		/// <br/>
		/// <c>VPABSW zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG 1D /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668267)]
public static void vpabsw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vpabsw instruction.<br/>
		/// <br/>
		/// <c>VPABSW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 1D /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPABSW xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG 1D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668268)]
public static void vpabsw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpabsw instruction.<br/>
		/// <br/>
		/// <c>VPABSW ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 1D /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPABSW ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG 1D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668269)]
public static void vpabsw(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpabsw instruction.<br/>
		/// <br/>
		/// <c>VPABSW zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG 1D /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668270)]
public static void vpabsw(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpackssdw instruction.<br/>
		/// <br/>
		/// <c>VPACKSSDW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 6B /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPACKSSDW xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 6B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668271)]
public static void vpackssdw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpackssdw instruction.<br/>
		/// <br/>
		/// <c>VPACKSSDW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 6B /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPACKSSDW ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 6B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668272)]
public static void vpackssdw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpackssdw instruction.<br/>
		/// <br/>
		/// <c>VPACKSSDW zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 6B /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668273)]
public static void vpackssdw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpackssdw instruction.<br/>
		/// <br/>
		/// <c>VPACKSSDW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 6B /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPACKSSDW xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 6B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668274)]
public static void vpackssdw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpackssdw instruction.<br/>
		/// <br/>
		/// <c>VPACKSSDW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 6B /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPACKSSDW ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 6B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668275)]
public static void vpackssdw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpackssdw instruction.<br/>
		/// <br/>
		/// <c>VPACKSSDW zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 6B /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668276)]
public static void vpackssdw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpacksswb instruction.<br/>
		/// <br/>
		/// <c>VPACKSSWB xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 63 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPACKSSWB xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG 63 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668277)]
public static void vpacksswb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpacksswb instruction.<br/>
		/// <br/>
		/// <c>VPACKSSWB ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 63 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPACKSSWB ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG 63 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668278)]
public static void vpacksswb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpacksswb instruction.<br/>
		/// <br/>
		/// <c>VPACKSSWB zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG 63 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668279)]
public static void vpacksswb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpacksswb instruction.<br/>
		/// <br/>
		/// <c>VPACKSSWB xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 63 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPACKSSWB xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG 63 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668280)]
public static void vpacksswb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpacksswb instruction.<br/>
		/// <br/>
		/// <c>VPACKSSWB ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 63 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPACKSSWB ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG 63 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668281)]
public static void vpacksswb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpacksswb instruction.<br/>
		/// <br/>
		/// <c>VPACKSSWB zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG 63 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668282)]
public static void vpacksswb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpackusdw instruction.<br/>
		/// <br/>
		/// <c>VPACKUSDW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 2B /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPACKUSDW xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 2B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668283)]
public static void vpackusdw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpackusdw instruction.<br/>
		/// <br/>
		/// <c>VPACKUSDW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 2B /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPACKUSDW ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 2B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668284)]
public static void vpackusdw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpackusdw instruction.<br/>
		/// <br/>
		/// <c>VPACKUSDW zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 2B /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668285)]
public static void vpackusdw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpackusdw instruction.<br/>
		/// <br/>
		/// <c>VPACKUSDW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 2B /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPACKUSDW xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 2B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668286)]
public static void vpackusdw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpackusdw instruction.<br/>
		/// <br/>
		/// <c>VPACKUSDW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 2B /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPACKUSDW ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 2B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668287)]
public static void vpackusdw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpackusdw instruction.<br/>
		/// <br/>
		/// <c>VPACKUSDW zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 2B /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668288)]
public static void vpackusdw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpackuswb instruction.<br/>
		/// <br/>
		/// <c>VPACKUSWB xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 67 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPACKUSWB xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG 67 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668289)]
public static void vpackuswb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpackuswb instruction.<br/>
		/// <br/>
		/// <c>VPACKUSWB ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 67 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPACKUSWB ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG 67 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668290)]
public static void vpackuswb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpackuswb instruction.<br/>
		/// <br/>
		/// <c>VPACKUSWB zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG 67 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668291)]
public static void vpackuswb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpackuswb instruction.<br/>
		/// <br/>
		/// <c>VPACKUSWB xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 67 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPACKUSWB xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG 67 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668292)]
public static void vpackuswb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpackuswb instruction.<br/>
		/// <br/>
		/// <c>VPACKUSWB ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 67 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPACKUSWB ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG 67 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668293)]
public static void vpackuswb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpackuswb instruction.<br/>
		/// <br/>
		/// <c>VPACKUSWB zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG 67 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668294)]
public static void vpackuswb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpaddb instruction.<br/>
		/// <br/>
		/// <c>VPADDB xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG FC /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPADDB xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG FC /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668295)]
public static void vpaddb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpaddb instruction.<br/>
		/// <br/>
		/// <c>VPADDB ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG FC /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPADDB ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG FC /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668296)]
public static void vpaddb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpaddb instruction.<br/>
		/// <br/>
		/// <c>VPADDB zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG FC /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668297)]
public static void vpaddb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpaddb instruction.<br/>
		/// <br/>
		/// <c>VPADDB xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG FC /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPADDB xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG FC /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668298)]
public static void vpaddb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpaddb instruction.<br/>
		/// <br/>
		/// <c>VPADDB ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG FC /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPADDB ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG FC /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668299)]
public static void vpaddb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpaddb instruction.<br/>
		/// <br/>
		/// <c>VPADDB zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG FC /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668300)]
public static void vpaddb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpaddd instruction.<br/>
		/// <br/>
		/// <c>VPADDD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG FE /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPADDD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 FE /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668301)]
public static void vpaddd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpaddd instruction.<br/>
		/// <br/>
		/// <c>VPADDD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG FE /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPADDD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 FE /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668302)]
public static void vpaddd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpaddd instruction.<br/>
		/// <br/>
		/// <c>VPADDD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 FE /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668303)]
public static void vpaddd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpaddd instruction.<br/>
		/// <br/>
		/// <c>VPADDD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG FE /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPADDD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 FE /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668304)]
public static void vpaddd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpaddd instruction.<br/>
		/// <br/>
		/// <c>VPADDD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG FE /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPADDD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 FE /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668305)]
public static void vpaddd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpaddd instruction.<br/>
		/// <br/>
		/// <c>VPADDD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 FE /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668306)]
public static void vpaddd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpaddq instruction.<br/>
		/// <br/>
		/// <c>VPADDQ xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG D4 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPADDQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 D4 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668307)]
public static void vpaddq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpaddq instruction.<br/>
		/// <br/>
		/// <c>VPADDQ ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG D4 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPADDQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 D4 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668308)]
public static void vpaddq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpaddq instruction.<br/>
		/// <br/>
		/// <c>VPADDQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 D4 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668309)]
public static void vpaddq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpaddq instruction.<br/>
		/// <br/>
		/// <c>VPADDQ xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG D4 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPADDQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 D4 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668310)]
public static void vpaddq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpaddq instruction.<br/>
		/// <br/>
		/// <c>VPADDQ ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG D4 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPADDQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 D4 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668311)]
public static void vpaddq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpaddq instruction.<br/>
		/// <br/>
		/// <c>VPADDQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 D4 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668312)]
public static void vpaddq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpaddsb instruction.<br/>
		/// <br/>
		/// <c>VPADDSB xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG EC /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPADDSB xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG EC /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668313)]
public static void vpaddsb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpaddsb instruction.<br/>
		/// <br/>
		/// <c>VPADDSB ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG EC /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPADDSB ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG EC /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668314)]
public static void vpaddsb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpaddsb instruction.<br/>
		/// <br/>
		/// <c>VPADDSB zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG EC /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668315)]
public static void vpaddsb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpaddsb instruction.<br/>
		/// <br/>
		/// <c>VPADDSB xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG EC /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPADDSB xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG EC /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668316)]
public static void vpaddsb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpaddsb instruction.<br/>
		/// <br/>
		/// <c>VPADDSB ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG EC /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPADDSB ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG EC /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668317)]
public static void vpaddsb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpaddsb instruction.<br/>
		/// <br/>
		/// <c>VPADDSB zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG EC /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668318)]
public static void vpaddsb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpaddsw instruction.<br/>
		/// <br/>
		/// <c>VPADDSW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG ED /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPADDSW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG ED /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668319)]
public static void vpaddsw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpaddsw instruction.<br/>
		/// <br/>
		/// <c>VPADDSW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG ED /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPADDSW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG ED /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668320)]
public static void vpaddsw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpaddsw instruction.<br/>
		/// <br/>
		/// <c>VPADDSW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG ED /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668321)]
public static void vpaddsw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpaddsw instruction.<br/>
		/// <br/>
		/// <c>VPADDSW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG ED /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPADDSW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG ED /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668322)]
public static void vpaddsw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpaddsw instruction.<br/>
		/// <br/>
		/// <c>VPADDSW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG ED /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPADDSW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG ED /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668323)]
public static void vpaddsw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpaddsw instruction.<br/>
		/// <br/>
		/// <c>VPADDSW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG ED /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668324)]
public static void vpaddsw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpaddusb instruction.<br/>
		/// <br/>
		/// <c>VPADDUSB xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG DC /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPADDUSB xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG DC /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668325)]
public static void vpaddusb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpaddusb instruction.<br/>
		/// <br/>
		/// <c>VPADDUSB ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG DC /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPADDUSB ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG DC /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668326)]
public static void vpaddusb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpaddusb instruction.<br/>
		/// <br/>
		/// <c>VPADDUSB zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG DC /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668327)]
public static void vpaddusb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpaddusb instruction.<br/>
		/// <br/>
		/// <c>VPADDUSB xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG DC /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPADDUSB xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG DC /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668328)]
public static void vpaddusb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpaddusb instruction.<br/>
		/// <br/>
		/// <c>VPADDUSB ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG DC /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPADDUSB ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG DC /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668329)]
public static void vpaddusb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpaddusb instruction.<br/>
		/// <br/>
		/// <c>VPADDUSB zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG DC /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668330)]
public static void vpaddusb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpaddusw instruction.<br/>
		/// <br/>
		/// <c>VPADDUSW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG DD /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPADDUSW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG DD /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668331)]
public static void vpaddusw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpaddusw instruction.<br/>
		/// <br/>
		/// <c>VPADDUSW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG DD /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPADDUSW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG DD /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668332)]
public static void vpaddusw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpaddusw instruction.<br/>
		/// <br/>
		/// <c>VPADDUSW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG DD /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668333)]
public static void vpaddusw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpaddusw instruction.<br/>
		/// <br/>
		/// <c>VPADDUSW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG DD /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPADDUSW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG DD /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668334)]
public static void vpaddusw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpaddusw instruction.<br/>
		/// <br/>
		/// <c>VPADDUSW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG DD /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPADDUSW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG DD /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668335)]
public static void vpaddusw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpaddusw instruction.<br/>
		/// <br/>
		/// <c>VPADDUSW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG DD /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668336)]
public static void vpaddusw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpaddw instruction.<br/>
		/// <br/>
		/// <c>VPADDW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG FD /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPADDW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG FD /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668337)]
public static void vpaddw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpaddw instruction.<br/>
		/// <br/>
		/// <c>VPADDW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG FD /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPADDW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG FD /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668338)]
public static void vpaddw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpaddw instruction.<br/>
		/// <br/>
		/// <c>VPADDW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG FD /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668339)]
public static void vpaddw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpaddw instruction.<br/>
		/// <br/>
		/// <c>VPADDW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG FD /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPADDW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG FD /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668340)]
public static void vpaddw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpaddw instruction.<br/>
		/// <br/>
		/// <c>VPADDW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG FD /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPADDW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG FD /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668341)]
public static void vpaddw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpaddw instruction.<br/>
		/// <br/>
		/// <c>VPADDW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG FD /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668342)]
public static void vpaddw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpalignr instruction.<br/>
		/// <br/>
		/// <c>VPALIGNR xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 0F /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPALIGNR xmm1 {k1}{z}, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.WIG 0F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668343)]
public static void vpalignr(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vpalignr instruction.<br/>
		/// <br/>
		/// <c>VPALIGNR ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.WIG 0F /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPALIGNR ymm1 {k1}{z}, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.WIG 0F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668344)]
public static void vpalignr(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vpalignr instruction.<br/>
		/// <br/>
		/// <c>VPALIGNR zmm1 {k1}{z}, zmm2, zmm3/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.WIG 0F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668345)]
public static void vpalignr(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, sbyte imm) {}
		/// <summary>vpalignr instruction.<br/>
		/// <br/>
		/// <c>VPALIGNR xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 0F /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPALIGNR xmm1 {k1}{z}, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.WIG 0F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668346)]
public static void vpalignr(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpalignr instruction.<br/>
		/// <br/>
		/// <c>VPALIGNR ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.WIG 0F /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPALIGNR ymm1 {k1}{z}, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.WIG 0F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668347)]
public static void vpalignr(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpalignr instruction.<br/>
		/// <br/>
		/// <c>VPALIGNR zmm1 {k1}{z}, zmm2, zmm3/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.WIG 0F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668348)]
public static void vpalignr(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpalignr instruction.<br/>
		/// <br/>
		/// <c>VPALIGNR xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 0F /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPALIGNR xmm1 {k1}{z}, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.WIG 0F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668349)]
public static void vpalignr(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vpalignr instruction.<br/>
		/// <br/>
		/// <c>VPALIGNR ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.WIG 0F /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPALIGNR ymm1 {k1}{z}, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.WIG 0F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668350)]
public static void vpalignr(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vpalignr instruction.<br/>
		/// <br/>
		/// <c>VPALIGNR zmm1 {k1}{z}, zmm2, zmm3/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.WIG 0F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668351)]
public static void vpalignr(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, byte imm) {}
		/// <summary>vpalignr instruction.<br/>
		/// <br/>
		/// <c>VPALIGNR xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 0F /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPALIGNR xmm1 {k1}{z}, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.WIG 0F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668352)]
public static void vpalignr(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpalignr instruction.<br/>
		/// <br/>
		/// <c>VPALIGNR ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.WIG 0F /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPALIGNR ymm1 {k1}{z}, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.WIG 0F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668353)]
public static void vpalignr(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpalignr instruction.<br/>
		/// <br/>
		/// <c>VPALIGNR zmm1 {k1}{z}, zmm2, zmm3/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.WIG 0F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668354)]
public static void vpalignr(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpand instruction.<br/>
		/// <br/>
		/// <c>VPAND xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG DB /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668355)]
public static void vpand(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpand instruction.<br/>
		/// <br/>
		/// <c>VPAND ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG DB /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668356)]
public static void vpand(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpand instruction.<br/>
		/// <br/>
		/// <c>VPAND xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG DB /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668357)]
public static void vpand(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpand instruction.<br/>
		/// <br/>
		/// <c>VPAND ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG DB /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668358)]
public static void vpand(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpandd instruction.<br/>
		/// <br/>
		/// <c>VPANDD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 DB /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668359)]
public static void vpandd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpandd instruction.<br/>
		/// <br/>
		/// <c>VPANDD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 DB /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668360)]
public static void vpandd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpandd instruction.<br/>
		/// <br/>
		/// <c>VPANDD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 DB /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668361)]
public static void vpandd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpandd instruction.<br/>
		/// <br/>
		/// <c>VPANDD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 DB /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668362)]
public static void vpandd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpandd instruction.<br/>
		/// <br/>
		/// <c>VPANDD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 DB /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668363)]
public static void vpandd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpandd instruction.<br/>
		/// <br/>
		/// <c>VPANDD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 DB /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668364)]
public static void vpandd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpandn instruction.<br/>
		/// <br/>
		/// <c>VPANDN xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG DF /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668365)]
public static void vpandn(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpandn instruction.<br/>
		/// <br/>
		/// <c>VPANDN ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG DF /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668366)]
public static void vpandn(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpandn instruction.<br/>
		/// <br/>
		/// <c>VPANDN xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG DF /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668367)]
public static void vpandn(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpandn instruction.<br/>
		/// <br/>
		/// <c>VPANDN ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG DF /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668368)]
public static void vpandn(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpandnd instruction.<br/>
		/// <br/>
		/// <c>VPANDND xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 DF /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668369)]
public static void vpandnd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpandnd instruction.<br/>
		/// <br/>
		/// <c>VPANDND ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 DF /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668370)]
public static void vpandnd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpandnd instruction.<br/>
		/// <br/>
		/// <c>VPANDND zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 DF /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668371)]
public static void vpandnd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpandnd instruction.<br/>
		/// <br/>
		/// <c>VPANDND xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 DF /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668372)]
public static void vpandnd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpandnd instruction.<br/>
		/// <br/>
		/// <c>VPANDND ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 DF /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668373)]
public static void vpandnd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpandnd instruction.<br/>
		/// <br/>
		/// <c>VPANDND zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 DF /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668374)]
public static void vpandnd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpandnq instruction.<br/>
		/// <br/>
		/// <c>VPANDNQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 DF /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668375)]
public static void vpandnq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpandnq instruction.<br/>
		/// <br/>
		/// <c>VPANDNQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 DF /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668376)]
public static void vpandnq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpandnq instruction.<br/>
		/// <br/>
		/// <c>VPANDNQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 DF /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668377)]
public static void vpandnq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpandnq instruction.<br/>
		/// <br/>
		/// <c>VPANDNQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 DF /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668378)]
public static void vpandnq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpandnq instruction.<br/>
		/// <br/>
		/// <c>VPANDNQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 DF /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668379)]
public static void vpandnq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpandnq instruction.<br/>
		/// <br/>
		/// <c>VPANDNQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 DF /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668380)]
public static void vpandnq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpandq instruction.<br/>
		/// <br/>
		/// <c>VPANDQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 DB /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668381)]
public static void vpandq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpandq instruction.<br/>
		/// <br/>
		/// <c>VPANDQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 DB /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668382)]
public static void vpandq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpandq instruction.<br/>
		/// <br/>
		/// <c>VPANDQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 DB /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668383)]
public static void vpandq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpandq instruction.<br/>
		/// <br/>
		/// <c>VPANDQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 DB /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668384)]
public static void vpandq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpandq instruction.<br/>
		/// <br/>
		/// <c>VPANDQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 DB /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668385)]
public static void vpandq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpandq instruction.<br/>
		/// <br/>
		/// <c>VPANDQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 DB /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668386)]
public static void vpandq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpavgb instruction.<br/>
		/// <br/>
		/// <c>VPAVGB xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG E0 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPAVGB xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG E0 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668387)]
public static void vpavgb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpavgb instruction.<br/>
		/// <br/>
		/// <c>VPAVGB ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG E0 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPAVGB ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG E0 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668388)]
public static void vpavgb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpavgb instruction.<br/>
		/// <br/>
		/// <c>VPAVGB zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG E0 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668389)]
public static void vpavgb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpavgb instruction.<br/>
		/// <br/>
		/// <c>VPAVGB xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG E0 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPAVGB xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG E0 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668390)]
public static void vpavgb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpavgb instruction.<br/>
		/// <br/>
		/// <c>VPAVGB ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG E0 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPAVGB ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG E0 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668391)]
public static void vpavgb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpavgb instruction.<br/>
		/// <br/>
		/// <c>VPAVGB zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG E0 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668392)]
public static void vpavgb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpavgw instruction.<br/>
		/// <br/>
		/// <c>VPAVGW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG E3 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPAVGW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG E3 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668393)]
public static void vpavgw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpavgw instruction.<br/>
		/// <br/>
		/// <c>VPAVGW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG E3 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPAVGW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG E3 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668394)]
public static void vpavgw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpavgw instruction.<br/>
		/// <br/>
		/// <c>VPAVGW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG E3 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668395)]
public static void vpavgw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpavgw instruction.<br/>
		/// <br/>
		/// <c>VPAVGW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG E3 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPAVGW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG E3 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668396)]
public static void vpavgw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpavgw instruction.<br/>
		/// <br/>
		/// <c>VPAVGW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG E3 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPAVGW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG E3 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668397)]
public static void vpavgw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpavgw instruction.<br/>
		/// <br/>
		/// <c>VPAVGW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG E3 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668398)]
public static void vpavgw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpblendd instruction.<br/>
		/// <br/>
		/// <c>VPBLENDD xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 02 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668399)]
public static void vpblendd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vpblendd instruction.<br/>
		/// <br/>
		/// <c>VPBLENDD ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 02 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668400)]
public static void vpblendd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vpblendd instruction.<br/>
		/// <br/>
		/// <c>VPBLENDD xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 02 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668401)]
public static void vpblendd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpblendd instruction.<br/>
		/// <br/>
		/// <c>VPBLENDD ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 02 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668402)]
public static void vpblendd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpblendd instruction.<br/>
		/// <br/>
		/// <c>VPBLENDD xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 02 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668403)]
public static void vpblendd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vpblendd instruction.<br/>
		/// <br/>
		/// <c>VPBLENDD ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 02 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668404)]
public static void vpblendd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vpblendd instruction.<br/>
		/// <br/>
		/// <c>VPBLENDD xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 02 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668405)]
public static void vpblendd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpblendd instruction.<br/>
		/// <br/>
		/// <c>VPBLENDD ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 02 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668406)]
public static void vpblendd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpblendmb instruction.<br/>
		/// <br/>
		/// <c>VPBLENDMB xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 66 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668407)]
public static void vpblendmb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpblendmb instruction.<br/>
		/// <br/>
		/// <c>VPBLENDMB ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 66 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668408)]
public static void vpblendmb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpblendmb instruction.<br/>
		/// <br/>
		/// <c>VPBLENDMB zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 66 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668409)]
public static void vpblendmb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpblendmb instruction.<br/>
		/// <br/>
		/// <c>VPBLENDMB xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 66 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668410)]
public static void vpblendmb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpblendmb instruction.<br/>
		/// <br/>
		/// <c>VPBLENDMB ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 66 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668411)]
public static void vpblendmb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpblendmb instruction.<br/>
		/// <br/>
		/// <c>VPBLENDMB zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 66 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668412)]
public static void vpblendmb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpblendmd instruction.<br/>
		/// <br/>
		/// <c>VPBLENDMD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 64 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668413)]
public static void vpblendmd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpblendmd instruction.<br/>
		/// <br/>
		/// <c>VPBLENDMD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 64 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668414)]
public static void vpblendmd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpblendmd instruction.<br/>
		/// <br/>
		/// <c>VPBLENDMD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 64 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668415)]
public static void vpblendmd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpblendmd instruction.<br/>
		/// <br/>
		/// <c>VPBLENDMD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 64 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668416)]
public static void vpblendmd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpblendmd instruction.<br/>
		/// <br/>
		/// <c>VPBLENDMD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 64 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668417)]
public static void vpblendmd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpblendmd instruction.<br/>
		/// <br/>
		/// <c>VPBLENDMD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 64 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668418)]
public static void vpblendmd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpblendmq instruction.<br/>
		/// <br/>
		/// <c>VPBLENDMQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 64 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668419)]
public static void vpblendmq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpblendmq instruction.<br/>
		/// <br/>
		/// <c>VPBLENDMQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 64 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668420)]
public static void vpblendmq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpblendmq instruction.<br/>
		/// <br/>
		/// <c>VPBLENDMQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 64 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668421)]
public static void vpblendmq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpblendmq instruction.<br/>
		/// <br/>
		/// <c>VPBLENDMQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 64 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668422)]
public static void vpblendmq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpblendmq instruction.<br/>
		/// <br/>
		/// <c>VPBLENDMQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 64 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668423)]
public static void vpblendmq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpblendmq instruction.<br/>
		/// <br/>
		/// <c>VPBLENDMQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 64 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668424)]
public static void vpblendmq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpblendmw instruction.<br/>
		/// <br/>
		/// <c>VPBLENDMW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 66 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668425)]
public static void vpblendmw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpblendmw instruction.<br/>
		/// <br/>
		/// <c>VPBLENDMW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 66 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668426)]
public static void vpblendmw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpblendmw instruction.<br/>
		/// <br/>
		/// <c>VPBLENDMW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 66 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668427)]
public static void vpblendmw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpblendmw instruction.<br/>
		/// <br/>
		/// <c>VPBLENDMW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 66 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668428)]
public static void vpblendmw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpblendmw instruction.<br/>
		/// <br/>
		/// <c>VPBLENDMW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 66 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668429)]
public static void vpblendmw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpblendmw instruction.<br/>
		/// <br/>
		/// <c>VPBLENDMW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 66 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668430)]
public static void vpblendmw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpblendvb instruction.<br/>
		/// <br/>
		/// <c>VPBLENDVB xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 4C /r /is4</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668431)]
public static void vpblendvb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerRegisterXMM src3) {}
		/// <summary>vpblendvb instruction.<br/>
		/// <br/>
		/// <c>VPBLENDVB xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 4C /r /is4</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668432)]
public static void vpblendvb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, AssemblerRegisterXMM src3) {}
		/// <summary>vpblendvb instruction.<br/>
		/// <br/>
		/// <c>VPBLENDVB ymm1, ymm2, ymm3/m256, ymm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 4C /r /is4</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668433)]
public static void vpblendvb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, AssemblerRegisterYMM src3) {}
		/// <summary>vpblendvb instruction.<br/>
		/// <br/>
		/// <c>VPBLENDVB ymm1, ymm2, ymm3/m256, ymm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 4C /r /is4</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668434)]
public static void vpblendvb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, AssemblerRegisterYMM src3) {}
		/// <summary>vpblendw instruction.<br/>
		/// <br/>
		/// <c>VPBLENDW xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 0E /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668435)]
public static void vpblendw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vpblendw instruction.<br/>
		/// <br/>
		/// <c>VPBLENDW ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.WIG 0E /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668436)]
public static void vpblendw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vpblendw instruction.<br/>
		/// <br/>
		/// <c>VPBLENDW xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 0E /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668437)]
public static void vpblendw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpblendw instruction.<br/>
		/// <br/>
		/// <c>VPBLENDW ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.WIG 0E /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668438)]
public static void vpblendw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpblendw instruction.<br/>
		/// <br/>
		/// <c>VPBLENDW xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 0E /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668439)]
public static void vpblendw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vpblendw instruction.<br/>
		/// <br/>
		/// <c>VPBLENDW ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.WIG 0E /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668440)]
public static void vpblendw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vpblendw instruction.<br/>
		/// <br/>
		/// <c>VPBLENDW xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 0E /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668441)]
public static void vpblendw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpblendw instruction.<br/>
		/// <br/>
		/// <c>VPBLENDW ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.WIG 0E /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668442)]
public static void vpblendw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpbroadcastb instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTB xmm1 {k1}{z}, r32</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 7A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668443)]
public static void vpbroadcastb(AssemblerRegisterXMM dst, AssemblerRegister32 src) {}
		/// <summary>vpbroadcastb instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTB ymm1 {k1}{z}, r32</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 7A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668444)]
public static void vpbroadcastb(AssemblerRegisterYMM dst, AssemblerRegister32 src) {}
		/// <summary>vpbroadcastb instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTB zmm1 {k1}{z}, r32</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 7A /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668445)]
public static void vpbroadcastb(AssemblerRegisterZMM dst, AssemblerRegister32 src) {}
		/// <summary>vpbroadcastb instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTB xmm1, xmm2/m8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 78 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPBROADCASTB xmm1 {k1}{z}, xmm2/m8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 78 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668446)]
public static void vpbroadcastb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpbroadcastb instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTB ymm1, xmm2/m8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 78 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPBROADCASTB ymm1 {k1}{z}, xmm2/m8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 78 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668447)]
public static void vpbroadcastb(AssemblerRegisterYMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpbroadcastb instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTB zmm1 {k1}{z}, xmm2/m8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 78 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668448)]
public static void vpbroadcastb(AssemblerRegisterZMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpbroadcastb instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTB xmm1, xmm2/m8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 78 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPBROADCASTB xmm1 {k1}{z}, xmm2/m8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 78 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668449)]
public static void vpbroadcastb(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpbroadcastb instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTB ymm1, xmm2/m8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 78 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPBROADCASTB ymm1 {k1}{z}, xmm2/m8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 78 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668450)]
public static void vpbroadcastb(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpbroadcastb instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTB zmm1 {k1}{z}, xmm2/m8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 78 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668451)]
public static void vpbroadcastb(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpbroadcastd instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTD xmm1 {k1}{z}, r32</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 7C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668452)]
public static void vpbroadcastd(AssemblerRegisterXMM dst, AssemblerRegister32 src) {}
		/// <summary>vpbroadcastd instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTD ymm1 {k1}{z}, r32</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 7C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668453)]
public static void vpbroadcastd(AssemblerRegisterYMM dst, AssemblerRegister32 src) {}
		/// <summary>vpbroadcastd instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTD zmm1 {k1}{z}, r32</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 7C /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668454)]
public static void vpbroadcastd(AssemblerRegisterZMM dst, AssemblerRegister32 src) {}
		/// <summary>vpbroadcastd instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTD xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 58 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPBROADCASTD xmm1 {k1}{z}, xmm2/m32</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 58 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668455)]
public static void vpbroadcastd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpbroadcastd instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTD ymm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 58 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPBROADCASTD ymm1 {k1}{z}, xmm2/m32</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 58 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668456)]
public static void vpbroadcastd(AssemblerRegisterYMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpbroadcastd instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTD zmm1 {k1}{z}, xmm2/m32</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 58 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668457)]
public static void vpbroadcastd(AssemblerRegisterZMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpbroadcastd instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTD xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 58 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPBROADCASTD xmm1 {k1}{z}, xmm2/m32</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 58 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668458)]
public static void vpbroadcastd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpbroadcastd instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTD ymm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 58 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPBROADCASTD ymm1 {k1}{z}, xmm2/m32</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 58 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668459)]
public static void vpbroadcastd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpbroadcastd instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTD zmm1 {k1}{z}, xmm2/m32</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 58 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668460)]
public static void vpbroadcastd(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpbroadcastmb2q instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTMB2Q xmm1, k1</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W1 2A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512CD</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668461)]
public static void vpbroadcastmb2q(AssemblerRegisterXMM dst, AssemblerRegisterK src) {}
		/// <summary>vpbroadcastmb2q instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTMB2Q ymm1, k1</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W1 2A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512CD</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668462)]
public static void vpbroadcastmb2q(AssemblerRegisterYMM dst, AssemblerRegisterK src) {}
		/// <summary>vpbroadcastmb2q instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTMB2Q zmm1, k1</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W1 2A /r</c><br/>
		/// <br/>
		/// <c>AVX512CD</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668463)]
public static void vpbroadcastmb2q(AssemblerRegisterZMM dst, AssemblerRegisterK src) {}
		/// <summary>vpbroadcastmw2d instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTMW2D xmm1, k1</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 3A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512CD</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668464)]
public static void vpbroadcastmw2d(AssemblerRegisterXMM dst, AssemblerRegisterK src) {}
		/// <summary>vpbroadcastmw2d instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTMW2D ymm1, k1</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 3A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512CD</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668465)]
public static void vpbroadcastmw2d(AssemblerRegisterYMM dst, AssemblerRegisterK src) {}
		/// <summary>vpbroadcastmw2d instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTMW2D zmm1, k1</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 3A /r</c><br/>
		/// <br/>
		/// <c>AVX512CD</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668466)]
public static void vpbroadcastmw2d(AssemblerRegisterZMM dst, AssemblerRegisterK src) {}
		/// <summary>vpbroadcastq instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTQ xmm1 {k1}{z}, r64</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 7C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100668467)]
public static void vpbroadcastq(AssemblerRegisterXMM dst, AssemblerRegister64 src) {}
		/// <summary>vpbroadcastq instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTQ ymm1 {k1}{z}, r64</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 7C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100668468)]
public static void vpbroadcastq(AssemblerRegisterYMM dst, AssemblerRegister64 src) {}
		/// <summary>vpbroadcastq instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTQ zmm1 {k1}{z}, r64</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 7C /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100668469)]
public static void vpbroadcastq(AssemblerRegisterZMM dst, AssemblerRegister64 src) {}
		/// <summary>vpbroadcastq instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTQ xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 59 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPBROADCASTQ xmm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 59 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668470)]
public static void vpbroadcastq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpbroadcastq instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTQ ymm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 59 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPBROADCASTQ ymm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 59 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668471)]
public static void vpbroadcastq(AssemblerRegisterYMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpbroadcastq instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTQ zmm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 59 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668472)]
public static void vpbroadcastq(AssemblerRegisterZMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpbroadcastq instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTQ xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 59 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPBROADCASTQ xmm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 59 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668473)]
public static void vpbroadcastq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpbroadcastq instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTQ ymm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 59 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPBROADCASTQ ymm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 59 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668474)]
public static void vpbroadcastq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpbroadcastq instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTQ zmm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 59 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668475)]
public static void vpbroadcastq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpbroadcastw instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTW xmm1 {k1}{z}, r32</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 7B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668476)]
public static void vpbroadcastw(AssemblerRegisterXMM dst, AssemblerRegister32 src) {}
		/// <summary>vpbroadcastw instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTW ymm1 {k1}{z}, r32</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 7B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668477)]
public static void vpbroadcastw(AssemblerRegisterYMM dst, AssemblerRegister32 src) {}
		/// <summary>vpbroadcastw instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTW zmm1 {k1}{z}, r32</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 7B /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668478)]
public static void vpbroadcastw(AssemblerRegisterZMM dst, AssemblerRegister32 src) {}
		/// <summary>vpbroadcastw instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTW xmm1, xmm2/m16</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 79 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPBROADCASTW xmm1 {k1}{z}, xmm2/m16</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 79 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668479)]
public static void vpbroadcastw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpbroadcastw instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTW ymm1, xmm2/m16</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 79 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPBROADCASTW ymm1 {k1}{z}, xmm2/m16</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 79 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668480)]
public static void vpbroadcastw(AssemblerRegisterYMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpbroadcastw instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTW zmm1 {k1}{z}, xmm2/m16</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 79 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668481)]
public static void vpbroadcastw(AssemblerRegisterZMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpbroadcastw instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTW xmm1, xmm2/m16</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 79 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPBROADCASTW xmm1 {k1}{z}, xmm2/m16</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 79 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668482)]
public static void vpbroadcastw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpbroadcastw instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTW ymm1, xmm2/m16</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 79 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPBROADCASTW ymm1 {k1}{z}, xmm2/m16</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 79 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668483)]
public static void vpbroadcastw(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpbroadcastw instruction.<br/>
		/// <br/>
		/// <c>VPBROADCASTW zmm1 {k1}{z}, xmm2/m16</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 79 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668484)]
public static void vpbroadcastw(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpclmulhqhqdq instruction.</summary>
[MethodToken(100668485)]
public static void vpclmulhqhqdq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpclmulhqhqdq instruction.</summary>
[MethodToken(100668486)]
public static void vpclmulhqhqdq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpclmulhqhqdq instruction.</summary>
[MethodToken(100668487)]
public static void vpclmulhqhqdq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpclmulhqhqdq instruction.</summary>
[MethodToken(100668488)]
public static void vpclmulhqhqdq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpclmulhqhqdq instruction.</summary>
[MethodToken(100668489)]
public static void vpclmulhqhqdq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpclmulhqhqdq instruction.</summary>
[MethodToken(100668490)]
public static void vpclmulhqhqdq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpclmulhqlqdq instruction.</summary>
[MethodToken(100668491)]
public static void vpclmulhqlqdq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpclmulhqlqdq instruction.</summary>
[MethodToken(100668492)]
public static void vpclmulhqlqdq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpclmulhqlqdq instruction.</summary>
[MethodToken(100668493)]
public static void vpclmulhqlqdq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpclmulhqlqdq instruction.</summary>
[MethodToken(100668494)]
public static void vpclmulhqlqdq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpclmulhqlqdq instruction.</summary>
[MethodToken(100668495)]
public static void vpclmulhqlqdq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpclmulhqlqdq instruction.</summary>
[MethodToken(100668496)]
public static void vpclmulhqlqdq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpclmullqhqdq instruction.</summary>
[MethodToken(100668497)]
public static void vpclmullqhqdq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpclmullqhqdq instruction.</summary>
[MethodToken(100668498)]
public static void vpclmullqhqdq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpclmullqhqdq instruction.</summary>
[MethodToken(100668499)]
public static void vpclmullqhqdq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpclmullqhqdq instruction.</summary>
[MethodToken(100668500)]
public static void vpclmullqhqdq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpclmullqhqdq instruction.</summary>
[MethodToken(100668501)]
public static void vpclmullqhqdq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpclmullqhqdq instruction.</summary>
[MethodToken(100668502)]
public static void vpclmullqhqdq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpclmullqlqdq instruction.</summary>
[MethodToken(100668503)]
public static void vpclmullqlqdq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpclmullqlqdq instruction.</summary>
[MethodToken(100668504)]
public static void vpclmullqlqdq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpclmullqlqdq instruction.</summary>
[MethodToken(100668505)]
public static void vpclmullqlqdq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpclmullqlqdq instruction.</summary>
[MethodToken(100668506)]
public static void vpclmullqlqdq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpclmullqlqdq instruction.</summary>
[MethodToken(100668507)]
public static void vpclmullqlqdq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpclmullqlqdq instruction.</summary>
[MethodToken(100668508)]
public static void vpclmullqlqdq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpclmulqdq instruction.<br/>
		/// <br/>
		/// <c>VPCLMULQDQ xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 44 /r ib</c><br/>
		/// <br/>
		/// <c>PCLMULQDQ and AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPCLMULQDQ xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.WIG 44 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and VPCLMULQDQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668509)]
public static void vpclmulqdq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vpclmulqdq instruction.<br/>
		/// <br/>
		/// <c>VPCLMULQDQ ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.WIG 44 /r ib</c><br/>
		/// <br/>
		/// <c>VPCLMULQDQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPCLMULQDQ ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.WIG 44 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and VPCLMULQDQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668510)]
public static void vpclmulqdq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vpclmulqdq instruction.<br/>
		/// <br/>
		/// <c>VPCLMULQDQ zmm1, zmm2, zmm3/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.WIG 44 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F and VPCLMULQDQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668511)]
public static void vpclmulqdq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, sbyte imm) {}
		/// <summary>vpclmulqdq instruction.<br/>
		/// <br/>
		/// <c>VPCLMULQDQ xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 44 /r ib</c><br/>
		/// <br/>
		/// <c>PCLMULQDQ and AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPCLMULQDQ xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.WIG 44 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and VPCLMULQDQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668512)]
public static void vpclmulqdq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpclmulqdq instruction.<br/>
		/// <br/>
		/// <c>VPCLMULQDQ ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.WIG 44 /r ib</c><br/>
		/// <br/>
		/// <c>VPCLMULQDQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPCLMULQDQ ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.WIG 44 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and VPCLMULQDQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668513)]
public static void vpclmulqdq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpclmulqdq instruction.<br/>
		/// <br/>
		/// <c>VPCLMULQDQ zmm1, zmm2, zmm3/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.WIG 44 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F and VPCLMULQDQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668514)]
public static void vpclmulqdq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpclmulqdq instruction.<br/>
		/// <br/>
		/// <c>VPCLMULQDQ xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 44 /r ib</c><br/>
		/// <br/>
		/// <c>PCLMULQDQ and AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPCLMULQDQ xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.WIG 44 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and VPCLMULQDQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668515)]
public static void vpclmulqdq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vpclmulqdq instruction.<br/>
		/// <br/>
		/// <c>VPCLMULQDQ ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.WIG 44 /r ib</c><br/>
		/// <br/>
		/// <c>VPCLMULQDQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPCLMULQDQ ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.WIG 44 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and VPCLMULQDQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668516)]
public static void vpclmulqdq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vpclmulqdq instruction.<br/>
		/// <br/>
		/// <c>VPCLMULQDQ zmm1, zmm2, zmm3/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.WIG 44 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F and VPCLMULQDQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668517)]
public static void vpclmulqdq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, byte imm) {}
		/// <summary>vpclmulqdq instruction.<br/>
		/// <br/>
		/// <c>VPCLMULQDQ xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 44 /r ib</c><br/>
		/// <br/>
		/// <c>PCLMULQDQ and AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPCLMULQDQ xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.WIG 44 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and VPCLMULQDQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668518)]
public static void vpclmulqdq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpclmulqdq instruction.<br/>
		/// <br/>
		/// <c>VPCLMULQDQ ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.WIG 44 /r ib</c><br/>
		/// <br/>
		/// <c>VPCLMULQDQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPCLMULQDQ ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.WIG 44 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and VPCLMULQDQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668519)]
public static void vpclmulqdq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpclmulqdq instruction.<br/>
		/// <br/>
		/// <c>VPCLMULQDQ zmm1, zmm2, zmm3/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.WIG 44 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F and VPCLMULQDQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668520)]
public static void vpclmulqdq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpcmov instruction.<br/>
		/// <br/>
		/// <c>VPCMOV xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 A2 /r /is4</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668521)]
public static void vpcmov(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerRegisterXMM src3) {}
		/// <summary>vpcmov instruction.<br/>
		/// <br/>
		/// <c>VPCMOV xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 A2 /r /is4</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668522)]
public static void vpcmov(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, AssemblerRegisterXMM src3) {}
		/// <summary>vpcmov instruction.<br/>
		/// <br/>
		/// <c>VPCMOV ymm1, ymm2, ymm3/m256, ymm4</c><br/>
		/// <br/>
		/// <c>XOP.256.X8.W0 A2 /r /is4</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668523)]
public static void vpcmov(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, AssemblerRegisterYMM src3) {}
		/// <summary>vpcmov instruction.<br/>
		/// <br/>
		/// <c>VPCMOV ymm1, ymm2, ymm3/m256, ymm4</c><br/>
		/// <br/>
		/// <c>XOP.256.X8.W0 A2 /r /is4</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668524)]
public static void vpcmov(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, AssemblerRegisterYMM src3) {}
		/// <summary>vpcmov instruction.<br/>
		/// <br/>
		/// <c>VPCMOV xmm1, xmm2, xmm3, xmm4/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W1 A2 /r /is4</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668525)]
public static void vpcmov(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerMemoryOperand src3) {}
		/// <summary>vpcmov instruction.<br/>
		/// <br/>
		/// <c>VPCMOV ymm1, ymm2, ymm3, ymm4/m256</c><br/>
		/// <br/>
		/// <c>XOP.256.X8.W1 A2 /r /is4</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668526)]
public static void vpcmov(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, AssemblerMemoryOperand src3) {}
		/// <summary>vpcmpb instruction.<br/>
		/// <br/>
		/// <c>VPCMPB k1 {k2}, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 3F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668527)]
public static void vpcmpb(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vpcmpb instruction.<br/>
		/// <br/>
		/// <c>VPCMPB k1 {k2}, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 3F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668528)]
public static void vpcmpb(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vpcmpb instruction.<br/>
		/// <br/>
		/// <c>VPCMPB k1 {k2}, zmm2, zmm3/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 3F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668529)]
public static void vpcmpb(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, sbyte imm) {}
		/// <summary>vpcmpb instruction.<br/>
		/// <br/>
		/// <c>VPCMPB k1 {k2}, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 3F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668530)]
public static void vpcmpb(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpcmpb instruction.<br/>
		/// <br/>
		/// <c>VPCMPB k1 {k2}, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 3F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668531)]
public static void vpcmpb(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpcmpb instruction.<br/>
		/// <br/>
		/// <c>VPCMPB k1 {k2}, zmm2, zmm3/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 3F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668532)]
public static void vpcmpb(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpcmpb instruction.<br/>
		/// <br/>
		/// <c>VPCMPB k1 {k2}, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 3F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668533)]
public static void vpcmpb(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vpcmpb instruction.<br/>
		/// <br/>
		/// <c>VPCMPB k1 {k2}, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 3F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668534)]
public static void vpcmpb(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vpcmpb instruction.<br/>
		/// <br/>
		/// <c>VPCMPB k1 {k2}, zmm2, zmm3/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 3F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668535)]
public static void vpcmpb(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, byte imm) {}
		/// <summary>vpcmpb instruction.<br/>
		/// <br/>
		/// <c>VPCMPB k1 {k2}, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 3F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668536)]
public static void vpcmpb(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpcmpb instruction.<br/>
		/// <br/>
		/// <c>VPCMPB k1 {k2}, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 3F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668537)]
public static void vpcmpb(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpcmpb instruction.<br/>
		/// <br/>
		/// <c>VPCMPB k1 {k2}, zmm2, zmm3/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 3F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668538)]
public static void vpcmpb(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpcmpd instruction.<br/>
		/// <br/>
		/// <c>VPCMPD k1 {k2}, xmm2, xmm3/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 1F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668539)]
public static void vpcmpd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vpcmpd instruction.<br/>
		/// <br/>
		/// <c>VPCMPD k1 {k2}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 1F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668540)]
public static void vpcmpd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vpcmpd instruction.<br/>
		/// <br/>
		/// <c>VPCMPD k1 {k2}, zmm2, zmm3/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 1F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668541)]
public static void vpcmpd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, sbyte imm) {}
		/// <summary>vpcmpd instruction.<br/>
		/// <br/>
		/// <c>VPCMPD k1 {k2}, xmm2, xmm3/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 1F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668542)]
public static void vpcmpd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpcmpd instruction.<br/>
		/// <br/>
		/// <c>VPCMPD k1 {k2}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 1F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668543)]
public static void vpcmpd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpcmpd instruction.<br/>
		/// <br/>
		/// <c>VPCMPD k1 {k2}, zmm2, zmm3/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 1F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668544)]
public static void vpcmpd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpcmpd instruction.<br/>
		/// <br/>
		/// <c>VPCMPD k1 {k2}, xmm2, xmm3/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 1F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668545)]
public static void vpcmpd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vpcmpd instruction.<br/>
		/// <br/>
		/// <c>VPCMPD k1 {k2}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 1F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668546)]
public static void vpcmpd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vpcmpd instruction.<br/>
		/// <br/>
		/// <c>VPCMPD k1 {k2}, zmm2, zmm3/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 1F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668547)]
public static void vpcmpd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, byte imm) {}
		/// <summary>vpcmpd instruction.<br/>
		/// <br/>
		/// <c>VPCMPD k1 {k2}, xmm2, xmm3/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 1F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668548)]
public static void vpcmpd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpcmpd instruction.<br/>
		/// <br/>
		/// <c>VPCMPD k1 {k2}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 1F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668549)]
public static void vpcmpd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpcmpd instruction.<br/>
		/// <br/>
		/// <c>VPCMPD k1 {k2}, zmm2, zmm3/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 1F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668550)]
public static void vpcmpd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpcmpeqb instruction.<br/>
		/// <br/>
		/// <c>VPCMPEQB k1 {k2}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG 74 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668551)]
public static void vpcmpeqb(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcmpeqb instruction.<br/>
		/// <br/>
		/// <c>VPCMPEQB xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 74 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668552)]
public static void vpcmpeqb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcmpeqb instruction.<br/>
		/// <br/>
		/// <c>VPCMPEQB k1 {k2}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG 74 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668553)]
public static void vpcmpeqb(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpcmpeqb instruction.<br/>
		/// <br/>
		/// <c>VPCMPEQB ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 74 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668554)]
public static void vpcmpeqb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpcmpeqb instruction.<br/>
		/// <br/>
		/// <c>VPCMPEQB k1 {k2}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG 74 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668555)]
public static void vpcmpeqb(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpcmpeqb instruction.<br/>
		/// <br/>
		/// <c>VPCMPEQB k1 {k2}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG 74 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668556)]
public static void vpcmpeqb(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcmpeqb instruction.<br/>
		/// <br/>
		/// <c>VPCMPEQB xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 74 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668557)]
public static void vpcmpeqb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcmpeqb instruction.<br/>
		/// <br/>
		/// <c>VPCMPEQB k1 {k2}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG 74 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668558)]
public static void vpcmpeqb(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcmpeqb instruction.<br/>
		/// <br/>
		/// <c>VPCMPEQB ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 74 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668559)]
public static void vpcmpeqb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcmpeqb instruction.<br/>
		/// <br/>
		/// <c>VPCMPEQB k1 {k2}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG 74 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668560)]
public static void vpcmpeqb(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcmpeqd instruction.<br/>
		/// <br/>
		/// <c>VPCMPEQD k1 {k2}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 76 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668561)]
public static void vpcmpeqd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcmpeqd instruction.<br/>
		/// <br/>
		/// <c>VPCMPEQD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 76 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668562)]
public static void vpcmpeqd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcmpeqd instruction.<br/>
		/// <br/>
		/// <c>VPCMPEQD k1 {k2}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 76 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668563)]
public static void vpcmpeqd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpcmpeqd instruction.<br/>
		/// <br/>
		/// <c>VPCMPEQD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 76 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668564)]
public static void vpcmpeqd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpcmpeqd instruction.<br/>
		/// <br/>
		/// <c>VPCMPEQD k1 {k2}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 76 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668565)]
public static void vpcmpeqd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpcmpeqd instruction.<br/>
		/// <br/>
		/// <c>VPCMPEQD k1 {k2}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 76 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668566)]
public static void vpcmpeqd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcmpeqd instruction.<br/>
		/// <br/>
		/// <c>VPCMPEQD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 76 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668567)]
public static void vpcmpeqd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcmpeqd instruction.<br/>
		/// <br/>
		/// <c>VPCMPEQD k1 {k2}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 76 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668568)]
public static void vpcmpeqd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcmpeqd instruction.<br/>
		/// <br/>
		/// <c>VPCMPEQD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 76 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668569)]
public static void vpcmpeqd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcmpeqd instruction.<br/>
		/// <br/>
		/// <c>VPCMPEQD k1 {k2}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 76 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668570)]
public static void vpcmpeqd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcmpeqq instruction.<br/>
		/// <br/>
		/// <c>VPCMPEQQ k1 {k2}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 29 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668571)]
public static void vpcmpeqq(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcmpeqq instruction.<br/>
		/// <br/>
		/// <c>VPCMPEQQ xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 29 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668572)]
public static void vpcmpeqq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcmpeqq instruction.<br/>
		/// <br/>
		/// <c>VPCMPEQQ k1 {k2}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 29 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668573)]
public static void vpcmpeqq(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpcmpeqq instruction.<br/>
		/// <br/>
		/// <c>VPCMPEQQ ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 29 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668574)]
public static void vpcmpeqq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpcmpeqq instruction.<br/>
		/// <br/>
		/// <c>VPCMPEQQ k1 {k2}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 29 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668575)]
public static void vpcmpeqq(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpcmpeqq instruction.<br/>
		/// <br/>
		/// <c>VPCMPEQQ k1 {k2}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 29 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668576)]
public static void vpcmpeqq(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcmpeqq instruction.<br/>
		/// <br/>
		/// <c>VPCMPEQQ xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 29 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668577)]
public static void vpcmpeqq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcmpeqq instruction.<br/>
		/// <br/>
		/// <c>VPCMPEQQ k1 {k2}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 29 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668578)]
public static void vpcmpeqq(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcmpeqq instruction.<br/>
		/// <br/>
		/// <c>VPCMPEQQ ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 29 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668579)]
public static void vpcmpeqq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcmpeqq instruction.<br/>
		/// <br/>
		/// <c>VPCMPEQQ k1 {k2}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 29 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668580)]
public static void vpcmpeqq(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcmpequb instruction.</summary>
		/// <summary>vpcmpequb instruction.</summary>
		/// <summary>vpcmpequb instruction.</summary>
		/// <summary>vpcmpequb instruction.</summary>
		/// <summary>vpcmpequb instruction.</summary>
		/// <summary>vpcmpequb instruction.</summary>
		/// <summary>vpcmpequd instruction.</summary>
		/// <summary>vpcmpequd instruction.</summary>
		/// <summary>vpcmpequd instruction.</summary>
		/// <summary>vpcmpequd instruction.</summary>
		/// <summary>vpcmpequd instruction.</summary>
		/// <summary>vpcmpequd instruction.</summary>
		/// <summary>vpcmpequq instruction.</summary>
		/// <summary>vpcmpequq instruction.</summary>
		/// <summary>vpcmpequq instruction.</summary>
		/// <summary>vpcmpequq instruction.</summary>
		/// <summary>vpcmpequq instruction.</summary>
		/// <summary>vpcmpequq instruction.</summary>
		/// <summary>vpcmpequw instruction.</summary>
		/// <summary>vpcmpequw instruction.</summary>
		/// <summary>vpcmpequw instruction.</summary>
		/// <summary>vpcmpequw instruction.</summary>
		/// <summary>vpcmpequw instruction.</summary>
		/// <summary>vpcmpequw instruction.</summary>
		/// <summary>vpcmpeqw instruction.<br/>
		/// <br/>
		/// <c>VPCMPEQW k1 {k2}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG 75 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668581)]
public static void vpcmpeqw(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcmpeqw instruction.<br/>
		/// <br/>
		/// <c>VPCMPEQW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 75 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668582)]
public static void vpcmpeqw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcmpeqw instruction.<br/>
		/// <br/>
		/// <c>VPCMPEQW k1 {k2}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG 75 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668583)]
public static void vpcmpeqw(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpcmpeqw instruction.<br/>
		/// <br/>
		/// <c>VPCMPEQW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 75 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668584)]
public static void vpcmpeqw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpcmpeqw instruction.<br/>
		/// <br/>
		/// <c>VPCMPEQW k1 {k2}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG 75 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668585)]
public static void vpcmpeqw(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpcmpeqw instruction.<br/>
		/// <br/>
		/// <c>VPCMPEQW k1 {k2}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG 75 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668586)]
public static void vpcmpeqw(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcmpeqw instruction.<br/>
		/// <br/>
		/// <c>VPCMPEQW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 75 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668587)]
public static void vpcmpeqw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcmpeqw instruction.<br/>
		/// <br/>
		/// <c>VPCMPEQW k1 {k2}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG 75 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668588)]
public static void vpcmpeqw(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcmpeqw instruction.<br/>
		/// <br/>
		/// <c>VPCMPEQW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 75 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668589)]
public static void vpcmpeqw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcmpeqw instruction.<br/>
		/// <br/>
		/// <c>VPCMPEQW k1 {k2}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG 75 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668590)]
public static void vpcmpeqw(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcmpestri instruction.<br/>
		/// <br/>
		/// <c>VPCMPESTRI xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 61 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668591)]
public static void vpcmpestri(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vpcmpestri instruction.<br/>
		/// <br/>
		/// <c>VPCMPESTRI xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 61 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668592)]
public static void vpcmpestri(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpcmpestri instruction.<br/>
		/// <br/>
		/// <c>VPCMPESTRI xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 61 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668593)]
public static void vpcmpestri(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vpcmpestri instruction.<br/>
		/// <br/>
		/// <c>VPCMPESTRI xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 61 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668594)]
public static void vpcmpestri(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpcmpestri64 instruction.<br/>
		/// <br/>
		/// <c>VPCMPESTRI64 xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 61 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100668595)]
public static void vpcmpestri64(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vpcmpestri64 instruction.<br/>
		/// <br/>
		/// <c>VPCMPESTRI64 xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 61 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100668596)]
public static void vpcmpestri64(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpcmpestri64 instruction.<br/>
		/// <br/>
		/// <c>VPCMPESTRI64 xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 61 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100668597)]
public static void vpcmpestri64(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vpcmpestri64 instruction.<br/>
		/// <br/>
		/// <c>VPCMPESTRI64 xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 61 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100668598)]
public static void vpcmpestri64(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpcmpestrm instruction.<br/>
		/// <br/>
		/// <c>VPCMPESTRM xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 60 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668599)]
public static void vpcmpestrm(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vpcmpestrm instruction.<br/>
		/// <br/>
		/// <c>VPCMPESTRM xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 60 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668600)]
public static void vpcmpestrm(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpcmpestrm instruction.<br/>
		/// <br/>
		/// <c>VPCMPESTRM xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 60 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668601)]
public static void vpcmpestrm(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vpcmpestrm instruction.<br/>
		/// <br/>
		/// <c>VPCMPESTRM xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 60 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668602)]
public static void vpcmpestrm(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpcmpestrm64 instruction.<br/>
		/// <br/>
		/// <c>VPCMPESTRM64 xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 60 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100668603)]
public static void vpcmpestrm64(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vpcmpestrm64 instruction.<br/>
		/// <br/>
		/// <c>VPCMPESTRM64 xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 60 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100668604)]
public static void vpcmpestrm64(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpcmpestrm64 instruction.<br/>
		/// <br/>
		/// <c>VPCMPESTRM64 xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 60 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100668605)]
public static void vpcmpestrm64(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vpcmpestrm64 instruction.<br/>
		/// <br/>
		/// <c>VPCMPESTRM64 xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 60 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100668606)]
public static void vpcmpestrm64(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpcmpfalseb instruction.</summary>
		/// <summary>vpcmpfalseb instruction.</summary>
		/// <summary>vpcmpfalseb instruction.</summary>
		/// <summary>vpcmpfalseb instruction.</summary>
		/// <summary>vpcmpfalseb instruction.</summary>
		/// <summary>vpcmpfalseb instruction.</summary>
		/// <summary>vpcmpfalsed instruction.</summary>
		/// <summary>vpcmpfalsed instruction.</summary>
		/// <summary>vpcmpfalsed instruction.</summary>
		/// <summary>vpcmpfalsed instruction.</summary>
		/// <summary>vpcmpfalsed instruction.</summary>
		/// <summary>vpcmpfalsed instruction.</summary>
		/// <summary>vpcmpfalseq instruction.</summary>
		/// <summary>vpcmpfalseq instruction.</summary>
		/// <summary>vpcmpfalseq instruction.</summary>
		/// <summary>vpcmpfalseq instruction.</summary>
		/// <summary>vpcmpfalseq instruction.</summary>
		/// <summary>vpcmpfalseq instruction.</summary>
		/// <summary>vpcmpfalseub instruction.</summary>
		/// <summary>vpcmpfalseub instruction.</summary>
		/// <summary>vpcmpfalseub instruction.</summary>
		/// <summary>vpcmpfalseub instruction.</summary>
		/// <summary>vpcmpfalseub instruction.</summary>
		/// <summary>vpcmpfalseub instruction.</summary>
		/// <summary>vpcmpfalseud instruction.</summary>
		/// <summary>vpcmpfalseud instruction.</summary>
		/// <summary>vpcmpfalseud instruction.</summary>
		/// <summary>vpcmpfalseud instruction.</summary>
		/// <summary>vpcmpfalseud instruction.</summary>
		/// <summary>vpcmpfalseud instruction.</summary>
		/// <summary>vpcmpfalseuq instruction.</summary>
		/// <summary>vpcmpfalseuq instruction.</summary>
		/// <summary>vpcmpfalseuq instruction.</summary>
		/// <summary>vpcmpfalseuq instruction.</summary>
		/// <summary>vpcmpfalseuq instruction.</summary>
		/// <summary>vpcmpfalseuq instruction.</summary>
		/// <summary>vpcmpfalseuw instruction.</summary>
		/// <summary>vpcmpfalseuw instruction.</summary>
		/// <summary>vpcmpfalseuw instruction.</summary>
		/// <summary>vpcmpfalseuw instruction.</summary>
		/// <summary>vpcmpfalseuw instruction.</summary>
		/// <summary>vpcmpfalseuw instruction.</summary>
		/// <summary>vpcmpfalsew instruction.</summary>
		/// <summary>vpcmpfalsew instruction.</summary>
		/// <summary>vpcmpfalsew instruction.</summary>
		/// <summary>vpcmpfalsew instruction.</summary>
		/// <summary>vpcmpfalsew instruction.</summary>
		/// <summary>vpcmpfalsew instruction.</summary>
		/// <summary>vpcmpgtb instruction.<br/>
		/// <br/>
		/// <c>VPCMPGTB k1 {k2}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG 64 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668607)]
public static void vpcmpgtb(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcmpgtb instruction.<br/>
		/// <br/>
		/// <c>VPCMPGTB xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 64 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668608)]
public static void vpcmpgtb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcmpgtb instruction.<br/>
		/// <br/>
		/// <c>VPCMPGTB k1 {k2}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG 64 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668609)]
public static void vpcmpgtb(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpcmpgtb instruction.<br/>
		/// <br/>
		/// <c>VPCMPGTB ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 64 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668610)]
public static void vpcmpgtb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpcmpgtb instruction.<br/>
		/// <br/>
		/// <c>VPCMPGTB k1 {k2}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG 64 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668611)]
public static void vpcmpgtb(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpcmpgtb instruction.<br/>
		/// <br/>
		/// <c>VPCMPGTB k1 {k2}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG 64 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668612)]
public static void vpcmpgtb(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcmpgtb instruction.<br/>
		/// <br/>
		/// <c>VPCMPGTB xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 64 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668613)]
public static void vpcmpgtb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcmpgtb instruction.<br/>
		/// <br/>
		/// <c>VPCMPGTB k1 {k2}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG 64 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668614)]
public static void vpcmpgtb(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcmpgtb instruction.<br/>
		/// <br/>
		/// <c>VPCMPGTB ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 64 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668615)]
public static void vpcmpgtb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcmpgtb instruction.<br/>
		/// <br/>
		/// <c>VPCMPGTB k1 {k2}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG 64 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668616)]
public static void vpcmpgtb(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcmpgtd instruction.<br/>
		/// <br/>
		/// <c>VPCMPGTD k1 {k2}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 66 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668617)]
public static void vpcmpgtd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcmpgtd instruction.<br/>
		/// <br/>
		/// <c>VPCMPGTD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 66 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668618)]
public static void vpcmpgtd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcmpgtd instruction.<br/>
		/// <br/>
		/// <c>VPCMPGTD k1 {k2}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 66 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668619)]
public static void vpcmpgtd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpcmpgtd instruction.<br/>
		/// <br/>
		/// <c>VPCMPGTD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 66 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668620)]
public static void vpcmpgtd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpcmpgtd instruction.<br/>
		/// <br/>
		/// <c>VPCMPGTD k1 {k2}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 66 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668621)]
public static void vpcmpgtd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpcmpgtd instruction.<br/>
		/// <br/>
		/// <c>VPCMPGTD k1 {k2}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 66 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668622)]
public static void vpcmpgtd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcmpgtd instruction.<br/>
		/// <br/>
		/// <c>VPCMPGTD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 66 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668623)]
public static void vpcmpgtd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcmpgtd instruction.<br/>
		/// <br/>
		/// <c>VPCMPGTD k1 {k2}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 66 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668624)]
public static void vpcmpgtd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcmpgtd instruction.<br/>
		/// <br/>
		/// <c>VPCMPGTD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 66 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668625)]
public static void vpcmpgtd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcmpgtd instruction.<br/>
		/// <br/>
		/// <c>VPCMPGTD k1 {k2}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 66 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668626)]
public static void vpcmpgtd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcmpgtq instruction.<br/>
		/// <br/>
		/// <c>VPCMPGTQ k1 {k2}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 37 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668627)]
public static void vpcmpgtq(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcmpgtq instruction.<br/>
		/// <br/>
		/// <c>VPCMPGTQ xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 37 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668628)]
public static void vpcmpgtq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcmpgtq instruction.<br/>
		/// <br/>
		/// <c>VPCMPGTQ k1 {k2}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 37 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668629)]
public static void vpcmpgtq(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpcmpgtq instruction.<br/>
		/// <br/>
		/// <c>VPCMPGTQ ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 37 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668630)]
public static void vpcmpgtq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpcmpgtq instruction.<br/>
		/// <br/>
		/// <c>VPCMPGTQ k1 {k2}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 37 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668631)]
public static void vpcmpgtq(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpcmpgtq instruction.<br/>
		/// <br/>
		/// <c>VPCMPGTQ k1 {k2}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 37 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668632)]
public static void vpcmpgtq(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcmpgtq instruction.<br/>
		/// <br/>
		/// <c>VPCMPGTQ xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 37 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668633)]
public static void vpcmpgtq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcmpgtq instruction.<br/>
		/// <br/>
		/// <c>VPCMPGTQ k1 {k2}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 37 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668634)]
public static void vpcmpgtq(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcmpgtq instruction.<br/>
		/// <br/>
		/// <c>VPCMPGTQ ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 37 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668635)]
public static void vpcmpgtq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcmpgtq instruction.<br/>
		/// <br/>
		/// <c>VPCMPGTQ k1 {k2}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 37 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668636)]
public static void vpcmpgtq(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcmpgtw instruction.<br/>
		/// <br/>
		/// <c>VPCMPGTW k1 {k2}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG 65 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668637)]
public static void vpcmpgtw(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcmpgtw instruction.<br/>
		/// <br/>
		/// <c>VPCMPGTW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 65 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668638)]
public static void vpcmpgtw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcmpgtw instruction.<br/>
		/// <br/>
		/// <c>VPCMPGTW k1 {k2}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG 65 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668639)]
public static void vpcmpgtw(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpcmpgtw instruction.<br/>
		/// <br/>
		/// <c>VPCMPGTW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 65 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668640)]
public static void vpcmpgtw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpcmpgtw instruction.<br/>
		/// <br/>
		/// <c>VPCMPGTW k1 {k2}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG 65 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668641)]
public static void vpcmpgtw(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpcmpgtw instruction.<br/>
		/// <br/>
		/// <c>VPCMPGTW k1 {k2}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG 65 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668642)]
public static void vpcmpgtw(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcmpgtw instruction.<br/>
		/// <br/>
		/// <c>VPCMPGTW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 65 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668643)]
public static void vpcmpgtw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcmpgtw instruction.<br/>
		/// <br/>
		/// <c>VPCMPGTW k1 {k2}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG 65 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668644)]
public static void vpcmpgtw(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcmpgtw instruction.<br/>
		/// <br/>
		/// <c>VPCMPGTW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 65 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668645)]
public static void vpcmpgtw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcmpgtw instruction.<br/>
		/// <br/>
		/// <c>VPCMPGTW k1 {k2}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG 65 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668646)]
public static void vpcmpgtw(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcmpistri instruction.<br/>
		/// <br/>
		/// <c>VPCMPISTRI xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 63 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668647)]
public static void vpcmpistri(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vpcmpistri instruction.<br/>
		/// <br/>
		/// <c>VPCMPISTRI xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 63 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668648)]
public static void vpcmpistri(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpcmpistri instruction.<br/>
		/// <br/>
		/// <c>VPCMPISTRI xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 63 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668649)]
public static void vpcmpistri(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vpcmpistri instruction.<br/>
		/// <br/>
		/// <c>VPCMPISTRI xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 63 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668650)]
public static void vpcmpistri(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpcmpistrm instruction.<br/>
		/// <br/>
		/// <c>VPCMPISTRM xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 62 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668651)]
public static void vpcmpistrm(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vpcmpistrm instruction.<br/>
		/// <br/>
		/// <c>VPCMPISTRM xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 62 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668652)]
public static void vpcmpistrm(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpcmpistrm instruction.<br/>
		/// <br/>
		/// <c>VPCMPISTRM xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 62 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668653)]
public static void vpcmpistrm(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vpcmpistrm instruction.<br/>
		/// <br/>
		/// <c>VPCMPISTRM xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 62 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668654)]
public static void vpcmpistrm(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpcmpleb instruction.</summary>
		/// <summary>vpcmpleb instruction.</summary>
		/// <summary>vpcmpleb instruction.</summary>
		/// <summary>vpcmpleb instruction.</summary>
		/// <summary>vpcmpleb instruction.</summary>
		/// <summary>vpcmpleb instruction.</summary>
		/// <summary>vpcmpled instruction.</summary>
		/// <summary>vpcmpled instruction.</summary>
		/// <summary>vpcmpled instruction.</summary>
		/// <summary>vpcmpled instruction.</summary>
		/// <summary>vpcmpled instruction.</summary>
		/// <summary>vpcmpled instruction.</summary>
		/// <summary>vpcmpleq instruction.</summary>
		/// <summary>vpcmpleq instruction.</summary>
		/// <summary>vpcmpleq instruction.</summary>
		/// <summary>vpcmpleq instruction.</summary>
		/// <summary>vpcmpleq instruction.</summary>
		/// <summary>vpcmpleq instruction.</summary>
		/// <summary>vpcmpleub instruction.</summary>
		/// <summary>vpcmpleub instruction.</summary>
		/// <summary>vpcmpleub instruction.</summary>
		/// <summary>vpcmpleub instruction.</summary>
		/// <summary>vpcmpleub instruction.</summary>
		/// <summary>vpcmpleub instruction.</summary>
		/// <summary>vpcmpleud instruction.</summary>
		/// <summary>vpcmpleud instruction.</summary>
		/// <summary>vpcmpleud instruction.</summary>
		/// <summary>vpcmpleud instruction.</summary>
		/// <summary>vpcmpleud instruction.</summary>
		/// <summary>vpcmpleud instruction.</summary>
		/// <summary>vpcmpleuq instruction.</summary>
		/// <summary>vpcmpleuq instruction.</summary>
		/// <summary>vpcmpleuq instruction.</summary>
		/// <summary>vpcmpleuq instruction.</summary>
		/// <summary>vpcmpleuq instruction.</summary>
		/// <summary>vpcmpleuq instruction.</summary>
		/// <summary>vpcmpleuw instruction.</summary>
		/// <summary>vpcmpleuw instruction.</summary>
		/// <summary>vpcmpleuw instruction.</summary>
		/// <summary>vpcmpleuw instruction.</summary>
		/// <summary>vpcmpleuw instruction.</summary>
		/// <summary>vpcmpleuw instruction.</summary>
		/// <summary>vpcmplew instruction.</summary>
		/// <summary>vpcmplew instruction.</summary>
		/// <summary>vpcmplew instruction.</summary>
		/// <summary>vpcmplew instruction.</summary>
		/// <summary>vpcmplew instruction.</summary>
		/// <summary>vpcmplew instruction.</summary>
		/// <summary>vpcmpltb instruction.</summary>
		/// <summary>vpcmpltb instruction.</summary>
		/// <summary>vpcmpltb instruction.</summary>
		/// <summary>vpcmpltb instruction.</summary>
		/// <summary>vpcmpltb instruction.</summary>
		/// <summary>vpcmpltb instruction.</summary>
		/// <summary>vpcmpltd instruction.</summary>
		/// <summary>vpcmpltd instruction.</summary>
		/// <summary>vpcmpltd instruction.</summary>
		/// <summary>vpcmpltd instruction.</summary>
		/// <summary>vpcmpltd instruction.</summary>
		/// <summary>vpcmpltd instruction.</summary>
		/// <summary>vpcmpltq instruction.</summary>
		/// <summary>vpcmpltq instruction.</summary>
		/// <summary>vpcmpltq instruction.</summary>
		/// <summary>vpcmpltq instruction.</summary>
		/// <summary>vpcmpltq instruction.</summary>
		/// <summary>vpcmpltq instruction.</summary>
		/// <summary>vpcmpltub instruction.</summary>
		/// <summary>vpcmpltub instruction.</summary>
		/// <summary>vpcmpltub instruction.</summary>
		/// <summary>vpcmpltub instruction.</summary>
		/// <summary>vpcmpltub instruction.</summary>
		/// <summary>vpcmpltub instruction.</summary>
		/// <summary>vpcmpltud instruction.</summary>
		/// <summary>vpcmpltud instruction.</summary>
		/// <summary>vpcmpltud instruction.</summary>
		/// <summary>vpcmpltud instruction.</summary>
		/// <summary>vpcmpltud instruction.</summary>
		/// <summary>vpcmpltud instruction.</summary>
		/// <summary>vpcmpltuq instruction.</summary>
		/// <summary>vpcmpltuq instruction.</summary>
		/// <summary>vpcmpltuq instruction.</summary>
		/// <summary>vpcmpltuq instruction.</summary>
		/// <summary>vpcmpltuq instruction.</summary>
		/// <summary>vpcmpltuq instruction.</summary>
		/// <summary>vpcmpltuw instruction.</summary>
		/// <summary>vpcmpltuw instruction.</summary>
		/// <summary>vpcmpltuw instruction.</summary>
		/// <summary>vpcmpltuw instruction.</summary>
		/// <summary>vpcmpltuw instruction.</summary>
		/// <summary>vpcmpltuw instruction.</summary>
		/// <summary>vpcmpltw instruction.</summary>
		/// <summary>vpcmpltw instruction.</summary>
		/// <summary>vpcmpltw instruction.</summary>
		/// <summary>vpcmpltw instruction.</summary>
		/// <summary>vpcmpltw instruction.</summary>
		/// <summary>vpcmpltw instruction.</summary>
		/// <summary>vpcmpneqb instruction.</summary>
		/// <summary>vpcmpneqb instruction.</summary>
		/// <summary>vpcmpneqb instruction.</summary>
		/// <summary>vpcmpneqb instruction.</summary>
		/// <summary>vpcmpneqb instruction.</summary>
		/// <summary>vpcmpneqb instruction.</summary>
		/// <summary>vpcmpneqd instruction.</summary>
		/// <summary>vpcmpneqd instruction.</summary>
		/// <summary>vpcmpneqd instruction.</summary>
		/// <summary>vpcmpneqd instruction.</summary>
		/// <summary>vpcmpneqd instruction.</summary>
		/// <summary>vpcmpneqd instruction.</summary>
		/// <summary>vpcmpneqq instruction.</summary>
		/// <summary>vpcmpneqq instruction.</summary>
		/// <summary>vpcmpneqq instruction.</summary>
		/// <summary>vpcmpneqq instruction.</summary>
		/// <summary>vpcmpneqq instruction.</summary>
		/// <summary>vpcmpneqq instruction.</summary>
		/// <summary>vpcmpnequb instruction.</summary>
		/// <summary>vpcmpnequb instruction.</summary>
		/// <summary>vpcmpnequb instruction.</summary>
		/// <summary>vpcmpnequb instruction.</summary>
		/// <summary>vpcmpnequb instruction.</summary>
		/// <summary>vpcmpnequb instruction.</summary>
		/// <summary>vpcmpnequd instruction.</summary>
		/// <summary>vpcmpnequd instruction.</summary>
		/// <summary>vpcmpnequd instruction.</summary>
		/// <summary>vpcmpnequd instruction.</summary>
		/// <summary>vpcmpnequd instruction.</summary>
		/// <summary>vpcmpnequd instruction.</summary>
		/// <summary>vpcmpnequq instruction.</summary>
		/// <summary>vpcmpnequq instruction.</summary>
		/// <summary>vpcmpnequq instruction.</summary>
		/// <summary>vpcmpnequq instruction.</summary>
		/// <summary>vpcmpnequq instruction.</summary>
		/// <summary>vpcmpnequq instruction.</summary>
		/// <summary>vpcmpnequw instruction.</summary>
		/// <summary>vpcmpnequw instruction.</summary>
		/// <summary>vpcmpnequw instruction.</summary>
		/// <summary>vpcmpnequw instruction.</summary>
		/// <summary>vpcmpnequw instruction.</summary>
		/// <summary>vpcmpnequw instruction.</summary>
		/// <summary>vpcmpneqw instruction.</summary>
		/// <summary>vpcmpneqw instruction.</summary>
		/// <summary>vpcmpneqw instruction.</summary>
		/// <summary>vpcmpneqw instruction.</summary>
		/// <summary>vpcmpneqw instruction.</summary>
		/// <summary>vpcmpneqw instruction.</summary>
		/// <summary>vpcmpnleb instruction.</summary>
		/// <summary>vpcmpnleb instruction.</summary>
		/// <summary>vpcmpnleb instruction.</summary>
		/// <summary>vpcmpnleb instruction.</summary>
		/// <summary>vpcmpnleb instruction.</summary>
		/// <summary>vpcmpnleb instruction.</summary>
		/// <summary>vpcmpnled instruction.</summary>
		/// <summary>vpcmpnled instruction.</summary>
		/// <summary>vpcmpnled instruction.</summary>
		/// <summary>vpcmpnled instruction.</summary>
		/// <summary>vpcmpnled instruction.</summary>
		/// <summary>vpcmpnled instruction.</summary>
		/// <summary>vpcmpnleq instruction.</summary>
		/// <summary>vpcmpnleq instruction.</summary>
		/// <summary>vpcmpnleq instruction.</summary>
		/// <summary>vpcmpnleq instruction.</summary>
		/// <summary>vpcmpnleq instruction.</summary>
		/// <summary>vpcmpnleq instruction.</summary>
		/// <summary>vpcmpnleub instruction.</summary>
		/// <summary>vpcmpnleub instruction.</summary>
		/// <summary>vpcmpnleub instruction.</summary>
		/// <summary>vpcmpnleub instruction.</summary>
		/// <summary>vpcmpnleub instruction.</summary>
		/// <summary>vpcmpnleub instruction.</summary>
		/// <summary>vpcmpnleud instruction.</summary>
		/// <summary>vpcmpnleud instruction.</summary>
		/// <summary>vpcmpnleud instruction.</summary>
		/// <summary>vpcmpnleud instruction.</summary>
		/// <summary>vpcmpnleud instruction.</summary>
		/// <summary>vpcmpnleud instruction.</summary>
		/// <summary>vpcmpnleuq instruction.</summary>
		/// <summary>vpcmpnleuq instruction.</summary>
		/// <summary>vpcmpnleuq instruction.</summary>
		/// <summary>vpcmpnleuq instruction.</summary>
		/// <summary>vpcmpnleuq instruction.</summary>
		/// <summary>vpcmpnleuq instruction.</summary>
		/// <summary>vpcmpnleuw instruction.</summary>
		/// <summary>vpcmpnleuw instruction.</summary>
		/// <summary>vpcmpnleuw instruction.</summary>
		/// <summary>vpcmpnleuw instruction.</summary>
		/// <summary>vpcmpnleuw instruction.</summary>
		/// <summary>vpcmpnleuw instruction.</summary>
		/// <summary>vpcmpnlew instruction.</summary>
		/// <summary>vpcmpnlew instruction.</summary>
		/// <summary>vpcmpnlew instruction.</summary>
		/// <summary>vpcmpnlew instruction.</summary>
		/// <summary>vpcmpnlew instruction.</summary>
		/// <summary>vpcmpnlew instruction.</summary>
		/// <summary>vpcmpnltb instruction.</summary>
		/// <summary>vpcmpnltb instruction.</summary>
		/// <summary>vpcmpnltb instruction.</summary>
		/// <summary>vpcmpnltb instruction.</summary>
		/// <summary>vpcmpnltb instruction.</summary>
		/// <summary>vpcmpnltb instruction.</summary>
		/// <summary>vpcmpnltd instruction.</summary>
		/// <summary>vpcmpnltd instruction.</summary>
		/// <summary>vpcmpnltd instruction.</summary>
		/// <summary>vpcmpnltd instruction.</summary>
		/// <summary>vpcmpnltd instruction.</summary>
		/// <summary>vpcmpnltd instruction.</summary>
		/// <summary>vpcmpnltq instruction.</summary>
		/// <summary>vpcmpnltq instruction.</summary>
		/// <summary>vpcmpnltq instruction.</summary>
		/// <summary>vpcmpnltq instruction.</summary>
		/// <summary>vpcmpnltq instruction.</summary>
		/// <summary>vpcmpnltq instruction.</summary>
		/// <summary>vpcmpnltub instruction.</summary>
		/// <summary>vpcmpnltub instruction.</summary>
		/// <summary>vpcmpnltub instruction.</summary>
		/// <summary>vpcmpnltub instruction.</summary>
		/// <summary>vpcmpnltub instruction.</summary>
		/// <summary>vpcmpnltub instruction.</summary>
		/// <summary>vpcmpnltud instruction.</summary>
		/// <summary>vpcmpnltud instruction.</summary>
		/// <summary>vpcmpnltud instruction.</summary>
		/// <summary>vpcmpnltud instruction.</summary>
		/// <summary>vpcmpnltud instruction.</summary>
		/// <summary>vpcmpnltud instruction.</summary>
		/// <summary>vpcmpnltuq instruction.</summary>
		/// <summary>vpcmpnltuq instruction.</summary>
		/// <summary>vpcmpnltuq instruction.</summary>
		/// <summary>vpcmpnltuq instruction.</summary>
		/// <summary>vpcmpnltuq instruction.</summary>
		/// <summary>vpcmpnltuq instruction.</summary>
		/// <summary>vpcmpnltuw instruction.</summary>
		/// <summary>vpcmpnltuw instruction.</summary>
		/// <summary>vpcmpnltuw instruction.</summary>
		/// <summary>vpcmpnltuw instruction.</summary>
		/// <summary>vpcmpnltuw instruction.</summary>
		/// <summary>vpcmpnltuw instruction.</summary>
		/// <summary>vpcmpnltw instruction.</summary>
		/// <summary>vpcmpnltw instruction.</summary>
		/// <summary>vpcmpnltw instruction.</summary>
		/// <summary>vpcmpnltw instruction.</summary>
		/// <summary>vpcmpnltw instruction.</summary>
		/// <summary>vpcmpnltw instruction.</summary>
		/// <summary>vpcmpq instruction.<br/>
		/// <br/>
		/// <c>VPCMPQ k1 {k2}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 1F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668655)]
public static void vpcmpq(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vpcmpq instruction.<br/>
		/// <br/>
		/// <c>VPCMPQ k1 {k2}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 1F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668656)]
public static void vpcmpq(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vpcmpq instruction.<br/>
		/// <br/>
		/// <c>VPCMPQ k1 {k2}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 1F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668657)]
public static void vpcmpq(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, sbyte imm) {}
		/// <summary>vpcmpq instruction.<br/>
		/// <br/>
		/// <c>VPCMPQ k1 {k2}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 1F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668658)]
public static void vpcmpq(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpcmpq instruction.<br/>
		/// <br/>
		/// <c>VPCMPQ k1 {k2}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 1F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668659)]
public static void vpcmpq(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpcmpq instruction.<br/>
		/// <br/>
		/// <c>VPCMPQ k1 {k2}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 1F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668660)]
public static void vpcmpq(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpcmpq instruction.<br/>
		/// <br/>
		/// <c>VPCMPQ k1 {k2}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 1F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668661)]
public static void vpcmpq(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vpcmpq instruction.<br/>
		/// <br/>
		/// <c>VPCMPQ k1 {k2}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 1F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668662)]
public static void vpcmpq(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vpcmpq instruction.<br/>
		/// <br/>
		/// <c>VPCMPQ k1 {k2}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 1F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668663)]
public static void vpcmpq(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, byte imm) {}
		/// <summary>vpcmpq instruction.<br/>
		/// <br/>
		/// <c>VPCMPQ k1 {k2}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 1F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668664)]
public static void vpcmpq(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpcmpq instruction.<br/>
		/// <br/>
		/// <c>VPCMPQ k1 {k2}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 1F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668665)]
public static void vpcmpq(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpcmpq instruction.<br/>
		/// <br/>
		/// <c>VPCMPQ k1 {k2}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 1F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668666)]
public static void vpcmpq(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpcmptrueb instruction.</summary>
		/// <summary>vpcmptrueb instruction.</summary>
		/// <summary>vpcmptrueb instruction.</summary>
		/// <summary>vpcmptrueb instruction.</summary>
		/// <summary>vpcmptrueb instruction.</summary>
		/// <summary>vpcmptrueb instruction.</summary>
		/// <summary>vpcmptrued instruction.</summary>
		/// <summary>vpcmptrued instruction.</summary>
		/// <summary>vpcmptrued instruction.</summary>
		/// <summary>vpcmptrued instruction.</summary>
		/// <summary>vpcmptrued instruction.</summary>
		/// <summary>vpcmptrued instruction.</summary>
		/// <summary>vpcmptrueq instruction.</summary>
		/// <summary>vpcmptrueq instruction.</summary>
		/// <summary>vpcmptrueq instruction.</summary>
		/// <summary>vpcmptrueq instruction.</summary>
		/// <summary>vpcmptrueq instruction.</summary>
		/// <summary>vpcmptrueq instruction.</summary>
		/// <summary>vpcmptrueub instruction.</summary>
		/// <summary>vpcmptrueub instruction.</summary>
		/// <summary>vpcmptrueub instruction.</summary>
		/// <summary>vpcmptrueub instruction.</summary>
		/// <summary>vpcmptrueub instruction.</summary>
		/// <summary>vpcmptrueub instruction.</summary>
		/// <summary>vpcmptrueud instruction.</summary>
		/// <summary>vpcmptrueud instruction.</summary>
		/// <summary>vpcmptrueud instruction.</summary>
		/// <summary>vpcmptrueud instruction.</summary>
		/// <summary>vpcmptrueud instruction.</summary>
		/// <summary>vpcmptrueud instruction.</summary>
		/// <summary>vpcmptrueuq instruction.</summary>
		/// <summary>vpcmptrueuq instruction.</summary>
		/// <summary>vpcmptrueuq instruction.</summary>
		/// <summary>vpcmptrueuq instruction.</summary>
		/// <summary>vpcmptrueuq instruction.</summary>
		/// <summary>vpcmptrueuq instruction.</summary>
		/// <summary>vpcmptrueuw instruction.</summary>
		/// <summary>vpcmptrueuw instruction.</summary>
		/// <summary>vpcmptrueuw instruction.</summary>
		/// <summary>vpcmptrueuw instruction.</summary>
		/// <summary>vpcmptrueuw instruction.</summary>
		/// <summary>vpcmptrueuw instruction.</summary>
		/// <summary>vpcmptruew instruction.</summary>
		/// <summary>vpcmptruew instruction.</summary>
		/// <summary>vpcmptruew instruction.</summary>
		/// <summary>vpcmptruew instruction.</summary>
		/// <summary>vpcmptruew instruction.</summary>
		/// <summary>vpcmptruew instruction.</summary>
		/// <summary>vpcmpub instruction.<br/>
		/// <br/>
		/// <c>VPCMPUB k1 {k2}, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 3E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668667)]
public static void vpcmpub(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vpcmpub instruction.<br/>
		/// <br/>
		/// <c>VPCMPUB k1 {k2}, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 3E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668668)]
public static void vpcmpub(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vpcmpub instruction.<br/>
		/// <br/>
		/// <c>VPCMPUB k1 {k2}, zmm2, zmm3/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 3E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668669)]
public static void vpcmpub(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, sbyte imm) {}
		/// <summary>vpcmpub instruction.<br/>
		/// <br/>
		/// <c>VPCMPUB k1 {k2}, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 3E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668670)]
public static void vpcmpub(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpcmpub instruction.<br/>
		/// <br/>
		/// <c>VPCMPUB k1 {k2}, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 3E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668671)]
public static void vpcmpub(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpcmpub instruction.<br/>
		/// <br/>
		/// <c>VPCMPUB k1 {k2}, zmm2, zmm3/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 3E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668672)]
public static void vpcmpub(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpcmpub instruction.<br/>
		/// <br/>
		/// <c>VPCMPUB k1 {k2}, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 3E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668673)]
public static void vpcmpub(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vpcmpub instruction.<br/>
		/// <br/>
		/// <c>VPCMPUB k1 {k2}, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 3E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668674)]
public static void vpcmpub(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vpcmpub instruction.<br/>
		/// <br/>
		/// <c>VPCMPUB k1 {k2}, zmm2, zmm3/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 3E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668675)]
public static void vpcmpub(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, byte imm) {}
		/// <summary>vpcmpub instruction.<br/>
		/// <br/>
		/// <c>VPCMPUB k1 {k2}, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 3E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668676)]
public static void vpcmpub(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpcmpub instruction.<br/>
		/// <br/>
		/// <c>VPCMPUB k1 {k2}, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 3E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668677)]
public static void vpcmpub(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpcmpub instruction.<br/>
		/// <br/>
		/// <c>VPCMPUB k1 {k2}, zmm2, zmm3/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 3E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668678)]
public static void vpcmpub(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpcmpud instruction.<br/>
		/// <br/>
		/// <c>VPCMPUD k1 {k2}, xmm2, xmm3/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 1E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668679)]
public static void vpcmpud(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vpcmpud instruction.<br/>
		/// <br/>
		/// <c>VPCMPUD k1 {k2}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 1E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668680)]
public static void vpcmpud(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vpcmpud instruction.<br/>
		/// <br/>
		/// <c>VPCMPUD k1 {k2}, zmm2, zmm3/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 1E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668681)]
public static void vpcmpud(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, sbyte imm) {}
		/// <summary>vpcmpud instruction.<br/>
		/// <br/>
		/// <c>VPCMPUD k1 {k2}, xmm2, xmm3/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 1E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668682)]
public static void vpcmpud(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpcmpud instruction.<br/>
		/// <br/>
		/// <c>VPCMPUD k1 {k2}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 1E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668683)]
public static void vpcmpud(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpcmpud instruction.<br/>
		/// <br/>
		/// <c>VPCMPUD k1 {k2}, zmm2, zmm3/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 1E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668684)]
public static void vpcmpud(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpcmpud instruction.<br/>
		/// <br/>
		/// <c>VPCMPUD k1 {k2}, xmm2, xmm3/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 1E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668685)]
public static void vpcmpud(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vpcmpud instruction.<br/>
		/// <br/>
		/// <c>VPCMPUD k1 {k2}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 1E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668686)]
public static void vpcmpud(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vpcmpud instruction.<br/>
		/// <br/>
		/// <c>VPCMPUD k1 {k2}, zmm2, zmm3/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 1E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668687)]
public static void vpcmpud(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, byte imm) {}
		/// <summary>vpcmpud instruction.<br/>
		/// <br/>
		/// <c>VPCMPUD k1 {k2}, xmm2, xmm3/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 1E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668688)]
public static void vpcmpud(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpcmpud instruction.<br/>
		/// <br/>
		/// <c>VPCMPUD k1 {k2}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 1E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668689)]
public static void vpcmpud(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpcmpud instruction.<br/>
		/// <br/>
		/// <c>VPCMPUD k1 {k2}, zmm2, zmm3/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 1E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668690)]
public static void vpcmpud(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpcmpuq instruction.<br/>
		/// <br/>
		/// <c>VPCMPUQ k1 {k2}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 1E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668691)]
public static void vpcmpuq(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vpcmpuq instruction.<br/>
		/// <br/>
		/// <c>VPCMPUQ k1 {k2}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 1E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668692)]
public static void vpcmpuq(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vpcmpuq instruction.<br/>
		/// <br/>
		/// <c>VPCMPUQ k1 {k2}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 1E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668693)]
public static void vpcmpuq(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, sbyte imm) {}
		/// <summary>vpcmpuq instruction.<br/>
		/// <br/>
		/// <c>VPCMPUQ k1 {k2}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 1E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668694)]
public static void vpcmpuq(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpcmpuq instruction.<br/>
		/// <br/>
		/// <c>VPCMPUQ k1 {k2}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 1E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668695)]
public static void vpcmpuq(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpcmpuq instruction.<br/>
		/// <br/>
		/// <c>VPCMPUQ k1 {k2}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 1E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668696)]
public static void vpcmpuq(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpcmpuq instruction.<br/>
		/// <br/>
		/// <c>VPCMPUQ k1 {k2}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 1E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668697)]
public static void vpcmpuq(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vpcmpuq instruction.<br/>
		/// <br/>
		/// <c>VPCMPUQ k1 {k2}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 1E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668698)]
public static void vpcmpuq(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vpcmpuq instruction.<br/>
		/// <br/>
		/// <c>VPCMPUQ k1 {k2}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 1E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668699)]
public static void vpcmpuq(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, byte imm) {}
		/// <summary>vpcmpuq instruction.<br/>
		/// <br/>
		/// <c>VPCMPUQ k1 {k2}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 1E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668700)]
public static void vpcmpuq(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpcmpuq instruction.<br/>
		/// <br/>
		/// <c>VPCMPUQ k1 {k2}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 1E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668701)]
public static void vpcmpuq(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpcmpuq instruction.<br/>
		/// <br/>
		/// <c>VPCMPUQ k1 {k2}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 1E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668702)]
public static void vpcmpuq(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpcmpuw instruction.<br/>
		/// <br/>
		/// <c>VPCMPUW k1 {k2}, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 3E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668703)]
public static void vpcmpuw(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vpcmpuw instruction.<br/>
		/// <br/>
		/// <c>VPCMPUW k1 {k2}, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 3E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668704)]
public static void vpcmpuw(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vpcmpuw instruction.<br/>
		/// <br/>
		/// <c>VPCMPUW k1 {k2}, zmm2, zmm3/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 3E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668705)]
public static void vpcmpuw(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, sbyte imm) {}
		/// <summary>vpcmpuw instruction.<br/>
		/// <br/>
		/// <c>VPCMPUW k1 {k2}, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 3E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668706)]
public static void vpcmpuw(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpcmpuw instruction.<br/>
		/// <br/>
		/// <c>VPCMPUW k1 {k2}, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 3E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668707)]
public static void vpcmpuw(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpcmpuw instruction.<br/>
		/// <br/>
		/// <c>VPCMPUW k1 {k2}, zmm2, zmm3/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 3E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668708)]
public static void vpcmpuw(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpcmpuw instruction.<br/>
		/// <br/>
		/// <c>VPCMPUW k1 {k2}, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 3E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668709)]
public static void vpcmpuw(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vpcmpuw instruction.<br/>
		/// <br/>
		/// <c>VPCMPUW k1 {k2}, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 3E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668710)]
public static void vpcmpuw(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vpcmpuw instruction.<br/>
		/// <br/>
		/// <c>VPCMPUW k1 {k2}, zmm2, zmm3/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 3E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668711)]
public static void vpcmpuw(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, byte imm) {}
		/// <summary>vpcmpuw instruction.<br/>
		/// <br/>
		/// <c>VPCMPUW k1 {k2}, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 3E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668712)]
public static void vpcmpuw(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpcmpuw instruction.<br/>
		/// <br/>
		/// <c>VPCMPUW k1 {k2}, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 3E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668713)]
public static void vpcmpuw(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpcmpuw instruction.<br/>
		/// <br/>
		/// <c>VPCMPUW k1 {k2}, zmm2, zmm3/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 3E /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668714)]
public static void vpcmpuw(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpcmpw instruction.<br/>
		/// <br/>
		/// <c>VPCMPW k1 {k2}, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 3F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668715)]
public static void vpcmpw(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vpcmpw instruction.<br/>
		/// <br/>
		/// <c>VPCMPW k1 {k2}, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 3F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668716)]
public static void vpcmpw(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vpcmpw instruction.<br/>
		/// <br/>
		/// <c>VPCMPW k1 {k2}, zmm2, zmm3/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 3F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668717)]
public static void vpcmpw(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, sbyte imm) {}
		/// <summary>vpcmpw instruction.<br/>
		/// <br/>
		/// <c>VPCMPW k1 {k2}, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 3F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668718)]
public static void vpcmpw(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpcmpw instruction.<br/>
		/// <br/>
		/// <c>VPCMPW k1 {k2}, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 3F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668719)]
public static void vpcmpw(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpcmpw instruction.<br/>
		/// <br/>
		/// <c>VPCMPW k1 {k2}, zmm2, zmm3/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 3F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668720)]
public static void vpcmpw(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpcmpw instruction.<br/>
		/// <br/>
		/// <c>VPCMPW k1 {k2}, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 3F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668721)]
public static void vpcmpw(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vpcmpw instruction.<br/>
		/// <br/>
		/// <c>VPCMPW k1 {k2}, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 3F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668722)]
public static void vpcmpw(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vpcmpw instruction.<br/>
		/// <br/>
		/// <c>VPCMPW k1 {k2}, zmm2, zmm3/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 3F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668723)]
public static void vpcmpw(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, byte imm) {}
		/// <summary>vpcmpw instruction.<br/>
		/// <br/>
		/// <c>VPCMPW k1 {k2}, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 3F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668724)]
public static void vpcmpw(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpcmpw instruction.<br/>
		/// <br/>
		/// <c>VPCMPW k1 {k2}, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 3F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668725)]
public static void vpcmpw(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpcmpw instruction.<br/>
		/// <br/>
		/// <c>VPCMPW k1 {k2}, zmm2, zmm3/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 3F /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668726)]
public static void vpcmpw(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpcomb instruction.<br/>
		/// <br/>
		/// <c>VPCOMB xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 CC /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668727)]
public static void vpcomb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vpcomb instruction.<br/>
		/// <br/>
		/// <c>VPCOMB xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 CC /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668728)]
public static void vpcomb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpcomb instruction.<br/>
		/// <br/>
		/// <c>VPCOMB xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 CC /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668729)]
public static void vpcomb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vpcomb instruction.<br/>
		/// <br/>
		/// <c>VPCOMB xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 CC /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668730)]
public static void vpcomb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpcomd instruction.<br/>
		/// <br/>
		/// <c>VPCOMD xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 CE /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668731)]
public static void vpcomd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vpcomd instruction.<br/>
		/// <br/>
		/// <c>VPCOMD xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 CE /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668732)]
public static void vpcomd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpcomd instruction.<br/>
		/// <br/>
		/// <c>VPCOMD xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 CE /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668733)]
public static void vpcomd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vpcomd instruction.<br/>
		/// <br/>
		/// <c>VPCOMD xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 CE /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668734)]
public static void vpcomd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpcomeqb instruction.</summary>
[MethodToken(100668735)]
public static void vpcomeqb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomeqb instruction.</summary>
[MethodToken(100668736)]
public static void vpcomeqb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomeqd instruction.</summary>
[MethodToken(100668737)]
public static void vpcomeqd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomeqd instruction.</summary>
[MethodToken(100668738)]
public static void vpcomeqd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomeqq instruction.</summary>
[MethodToken(100668739)]
public static void vpcomeqq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomeqq instruction.</summary>
[MethodToken(100668740)]
public static void vpcomeqq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomequb instruction.</summary>
[MethodToken(100668741)]
public static void vpcomequb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomequb instruction.</summary>
[MethodToken(100668742)]
public static void vpcomequb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomequd instruction.</summary>
[MethodToken(100668743)]
public static void vpcomequd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomequd instruction.</summary>
[MethodToken(100668744)]
public static void vpcomequd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomequq instruction.</summary>
[MethodToken(100668745)]
public static void vpcomequq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomequq instruction.</summary>
[MethodToken(100668746)]
public static void vpcomequq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomequw instruction.</summary>
[MethodToken(100668747)]
public static void vpcomequw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomequw instruction.</summary>
[MethodToken(100668748)]
public static void vpcomequw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomeqw instruction.</summary>
[MethodToken(100668749)]
public static void vpcomeqw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomeqw instruction.</summary>
[MethodToken(100668750)]
public static void vpcomeqw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomfalseb instruction.</summary>
[MethodToken(100668751)]
public static void vpcomfalseb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomfalseb instruction.</summary>
[MethodToken(100668752)]
public static void vpcomfalseb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomfalsed instruction.</summary>
[MethodToken(100668753)]
public static void vpcomfalsed(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomfalsed instruction.</summary>
[MethodToken(100668754)]
public static void vpcomfalsed(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomfalseq instruction.</summary>
[MethodToken(100668755)]
public static void vpcomfalseq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomfalseq instruction.</summary>
[MethodToken(100668756)]
public static void vpcomfalseq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomfalseub instruction.</summary>
[MethodToken(100668757)]
public static void vpcomfalseub(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomfalseub instruction.</summary>
[MethodToken(100668758)]
public static void vpcomfalseub(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomfalseud instruction.</summary>
[MethodToken(100668759)]
public static void vpcomfalseud(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomfalseud instruction.</summary>
[MethodToken(100668760)]
public static void vpcomfalseud(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomfalseuq instruction.</summary>
[MethodToken(100668761)]
public static void vpcomfalseuq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomfalseuq instruction.</summary>
[MethodToken(100668762)]
public static void vpcomfalseuq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomfalseuw instruction.</summary>
[MethodToken(100668763)]
public static void vpcomfalseuw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomfalseuw instruction.</summary>
[MethodToken(100668764)]
public static void vpcomfalseuw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomfalsew instruction.</summary>
[MethodToken(100668765)]
public static void vpcomfalsew(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomfalsew instruction.</summary>
[MethodToken(100668766)]
public static void vpcomfalsew(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomgeb instruction.</summary>
[MethodToken(100668767)]
public static void vpcomgeb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomgeb instruction.</summary>
[MethodToken(100668768)]
public static void vpcomgeb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomged instruction.</summary>
[MethodToken(100668769)]
public static void vpcomged(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomged instruction.</summary>
[MethodToken(100668770)]
public static void vpcomged(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomgeq instruction.</summary>
[MethodToken(100668771)]
public static void vpcomgeq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomgeq instruction.</summary>
[MethodToken(100668772)]
public static void vpcomgeq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomgeub instruction.</summary>
[MethodToken(100668773)]
public static void vpcomgeub(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomgeub instruction.</summary>
[MethodToken(100668774)]
public static void vpcomgeub(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomgeud instruction.</summary>
[MethodToken(100668775)]
public static void vpcomgeud(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomgeud instruction.</summary>
[MethodToken(100668776)]
public static void vpcomgeud(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomgeuq instruction.</summary>
[MethodToken(100668777)]
public static void vpcomgeuq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomgeuq instruction.</summary>
[MethodToken(100668778)]
public static void vpcomgeuq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomgeuw instruction.</summary>
[MethodToken(100668779)]
public static void vpcomgeuw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomgeuw instruction.</summary>
[MethodToken(100668780)]
public static void vpcomgeuw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomgew instruction.</summary>
[MethodToken(100668781)]
public static void vpcomgew(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomgew instruction.</summary>
[MethodToken(100668782)]
public static void vpcomgew(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomgtb instruction.</summary>
[MethodToken(100668783)]
public static void vpcomgtb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomgtb instruction.</summary>
[MethodToken(100668784)]
public static void vpcomgtb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomgtd instruction.</summary>
[MethodToken(100668785)]
public static void vpcomgtd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomgtd instruction.</summary>
[MethodToken(100668786)]
public static void vpcomgtd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomgtq instruction.</summary>
[MethodToken(100668787)]
public static void vpcomgtq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomgtq instruction.</summary>
[MethodToken(100668788)]
public static void vpcomgtq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomgtub instruction.</summary>
[MethodToken(100668789)]
public static void vpcomgtub(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomgtub instruction.</summary>
[MethodToken(100668790)]
public static void vpcomgtub(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomgtud instruction.</summary>
[MethodToken(100668791)]
public static void vpcomgtud(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomgtud instruction.</summary>
[MethodToken(100668792)]
public static void vpcomgtud(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomgtuq instruction.</summary>
[MethodToken(100668793)]
public static void vpcomgtuq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomgtuq instruction.</summary>
[MethodToken(100668794)]
public static void vpcomgtuq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomgtuw instruction.</summary>
[MethodToken(100668795)]
public static void vpcomgtuw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomgtuw instruction.</summary>
[MethodToken(100668796)]
public static void vpcomgtuw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomgtw instruction.</summary>
[MethodToken(100668797)]
public static void vpcomgtw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomgtw instruction.</summary>
[MethodToken(100668798)]
public static void vpcomgtw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomleb instruction.</summary>
[MethodToken(100668799)]
public static void vpcomleb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomleb instruction.</summary>
[MethodToken(100668800)]
public static void vpcomleb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomled instruction.</summary>
[MethodToken(100668801)]
public static void vpcomled(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomled instruction.</summary>
[MethodToken(100668802)]
public static void vpcomled(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomleq instruction.</summary>
[MethodToken(100668803)]
public static void vpcomleq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomleq instruction.</summary>
[MethodToken(100668804)]
public static void vpcomleq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomleub instruction.</summary>
[MethodToken(100668805)]
public static void vpcomleub(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomleub instruction.</summary>
[MethodToken(100668806)]
public static void vpcomleub(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomleud instruction.</summary>
[MethodToken(100668807)]
public static void vpcomleud(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomleud instruction.</summary>
[MethodToken(100668808)]
public static void vpcomleud(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomleuq instruction.</summary>
[MethodToken(100668809)]
public static void vpcomleuq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomleuq instruction.</summary>
[MethodToken(100668810)]
public static void vpcomleuq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomleuw instruction.</summary>
[MethodToken(100668811)]
public static void vpcomleuw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomleuw instruction.</summary>
[MethodToken(100668812)]
public static void vpcomleuw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomlew instruction.</summary>
[MethodToken(100668813)]
public static void vpcomlew(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomlew instruction.</summary>
[MethodToken(100668814)]
public static void vpcomlew(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomltb instruction.</summary>
[MethodToken(100668815)]
public static void vpcomltb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomltb instruction.</summary>
[MethodToken(100668816)]
public static void vpcomltb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomltd instruction.</summary>
[MethodToken(100668817)]
public static void vpcomltd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomltd instruction.</summary>
[MethodToken(100668818)]
public static void vpcomltd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomltq instruction.</summary>
[MethodToken(100668819)]
public static void vpcomltq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomltq instruction.</summary>
[MethodToken(100668820)]
public static void vpcomltq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomltub instruction.</summary>
[MethodToken(100668821)]
public static void vpcomltub(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomltub instruction.</summary>
[MethodToken(100668822)]
public static void vpcomltub(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomltud instruction.</summary>
[MethodToken(100668823)]
public static void vpcomltud(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomltud instruction.</summary>
[MethodToken(100668824)]
public static void vpcomltud(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomltuq instruction.</summary>
[MethodToken(100668825)]
public static void vpcomltuq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomltuq instruction.</summary>
[MethodToken(100668826)]
public static void vpcomltuq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomltuw instruction.</summary>
[MethodToken(100668827)]
public static void vpcomltuw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomltuw instruction.</summary>
[MethodToken(100668828)]
public static void vpcomltuw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomltw instruction.</summary>
[MethodToken(100668829)]
public static void vpcomltw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomltw instruction.</summary>
[MethodToken(100668830)]
public static void vpcomltw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomneqb instruction.</summary>
[MethodToken(100668831)]
public static void vpcomneqb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomneqb instruction.</summary>
[MethodToken(100668832)]
public static void vpcomneqb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomneqd instruction.</summary>
[MethodToken(100668833)]
public static void vpcomneqd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomneqd instruction.</summary>
[MethodToken(100668834)]
public static void vpcomneqd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomneqq instruction.</summary>
[MethodToken(100668835)]
public static void vpcomneqq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomneqq instruction.</summary>
[MethodToken(100668836)]
public static void vpcomneqq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomnequb instruction.</summary>
[MethodToken(100668837)]
public static void vpcomnequb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomnequb instruction.</summary>
[MethodToken(100668838)]
public static void vpcomnequb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomnequd instruction.</summary>
[MethodToken(100668839)]
public static void vpcomnequd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomnequd instruction.</summary>
[MethodToken(100668840)]
public static void vpcomnequd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomnequq instruction.</summary>
[MethodToken(100668841)]
public static void vpcomnequq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomnequq instruction.</summary>
[MethodToken(100668842)]
public static void vpcomnequq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomnequw instruction.</summary>
[MethodToken(100668843)]
public static void vpcomnequw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomnequw instruction.</summary>
[MethodToken(100668844)]
public static void vpcomnequw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomneqw instruction.</summary>
[MethodToken(100668845)]
public static void vpcomneqw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomneqw instruction.</summary>
[MethodToken(100668846)]
public static void vpcomneqw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcompressb instruction.<br/>
		/// <br/>
		/// <c>VPCOMPRESSB xmm1/m128 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 63 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668847)]
public static void vpcompressb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpcompressb instruction.<br/>
		/// <br/>
		/// <c>VPCOMPRESSB xmm1/m128 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 63 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668848)]
public static void vpcompressb(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vpcompressb instruction.<br/>
		/// <br/>
		/// <c>VPCOMPRESSB ymm1/m256 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 63 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668849)]
public static void vpcompressb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpcompressb instruction.<br/>
		/// <br/>
		/// <c>VPCOMPRESSB ymm1/m256 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 63 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668850)]
public static void vpcompressb(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vpcompressb instruction.<br/>
		/// <br/>
		/// <c>VPCOMPRESSB zmm1/m512 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 63 /r</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668851)]
public static void vpcompressb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vpcompressb instruction.<br/>
		/// <br/>
		/// <c>VPCOMPRESSB zmm1/m512 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 63 /r</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668852)]
public static void vpcompressb(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vpcompressd instruction.<br/>
		/// <br/>
		/// <c>VPCOMPRESSD xmm1/m128 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 8B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668853)]
public static void vpcompressd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpcompressd instruction.<br/>
		/// <br/>
		/// <c>VPCOMPRESSD xmm1/m128 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 8B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668854)]
public static void vpcompressd(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vpcompressd instruction.<br/>
		/// <br/>
		/// <c>VPCOMPRESSD ymm1/m256 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 8B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668855)]
public static void vpcompressd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpcompressd instruction.<br/>
		/// <br/>
		/// <c>VPCOMPRESSD ymm1/m256 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 8B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668856)]
public static void vpcompressd(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vpcompressd instruction.<br/>
		/// <br/>
		/// <c>VPCOMPRESSD zmm1/m512 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 8B /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668857)]
public static void vpcompressd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vpcompressd instruction.<br/>
		/// <br/>
		/// <c>VPCOMPRESSD zmm1/m512 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 8B /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668858)]
public static void vpcompressd(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vpcompressq instruction.<br/>
		/// <br/>
		/// <c>VPCOMPRESSQ xmm1/m128 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 8B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668859)]
public static void vpcompressq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpcompressq instruction.<br/>
		/// <br/>
		/// <c>VPCOMPRESSQ xmm1/m128 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 8B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668860)]
public static void vpcompressq(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vpcompressq instruction.<br/>
		/// <br/>
		/// <c>VPCOMPRESSQ ymm1/m256 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 8B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668861)]
public static void vpcompressq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpcompressq instruction.<br/>
		/// <br/>
		/// <c>VPCOMPRESSQ ymm1/m256 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 8B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668862)]
public static void vpcompressq(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vpcompressq instruction.<br/>
		/// <br/>
		/// <c>VPCOMPRESSQ zmm1/m512 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 8B /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668863)]
public static void vpcompressq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vpcompressq instruction.<br/>
		/// <br/>
		/// <c>VPCOMPRESSQ zmm1/m512 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 8B /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668864)]
public static void vpcompressq(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vpcompressw instruction.<br/>
		/// <br/>
		/// <c>VPCOMPRESSW xmm1/m128 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 63 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668865)]
public static void vpcompressw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpcompressw instruction.<br/>
		/// <br/>
		/// <c>VPCOMPRESSW xmm1/m128 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 63 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668866)]
public static void vpcompressw(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vpcompressw instruction.<br/>
		/// <br/>
		/// <c>VPCOMPRESSW ymm1/m256 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 63 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668867)]
public static void vpcompressw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpcompressw instruction.<br/>
		/// <br/>
		/// <c>VPCOMPRESSW ymm1/m256 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 63 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668868)]
public static void vpcompressw(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vpcompressw instruction.<br/>
		/// <br/>
		/// <c>VPCOMPRESSW zmm1/m512 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 63 /r</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668869)]
public static void vpcompressw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vpcompressw instruction.<br/>
		/// <br/>
		/// <c>VPCOMPRESSW zmm1/m512 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 63 /r</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668870)]
public static void vpcompressw(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vpcomq instruction.<br/>
		/// <br/>
		/// <c>VPCOMQ xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 CF /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668871)]
public static void vpcomq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vpcomq instruction.<br/>
		/// <br/>
		/// <c>VPCOMQ xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 CF /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668872)]
public static void vpcomq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpcomq instruction.<br/>
		/// <br/>
		/// <c>VPCOMQ xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 CF /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668873)]
public static void vpcomq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vpcomq instruction.<br/>
		/// <br/>
		/// <c>VPCOMQ xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 CF /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668874)]
public static void vpcomq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpcomtrueb instruction.</summary>
[MethodToken(100668875)]
public static void vpcomtrueb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomtrueb instruction.</summary>
[MethodToken(100668876)]
public static void vpcomtrueb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomtrued instruction.</summary>
[MethodToken(100668877)]
public static void vpcomtrued(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomtrued instruction.</summary>
[MethodToken(100668878)]
public static void vpcomtrued(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomtrueq instruction.</summary>
[MethodToken(100668879)]
public static void vpcomtrueq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomtrueq instruction.</summary>
[MethodToken(100668880)]
public static void vpcomtrueq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomtrueub instruction.</summary>
[MethodToken(100668881)]
public static void vpcomtrueub(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomtrueub instruction.</summary>
[MethodToken(100668882)]
public static void vpcomtrueub(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomtrueud instruction.</summary>
[MethodToken(100668883)]
public static void vpcomtrueud(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomtrueud instruction.</summary>
[MethodToken(100668884)]
public static void vpcomtrueud(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomtrueuq instruction.</summary>
[MethodToken(100668885)]
public static void vpcomtrueuq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomtrueuq instruction.</summary>
[MethodToken(100668886)]
public static void vpcomtrueuq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomtrueuw instruction.</summary>
[MethodToken(100668887)]
public static void vpcomtrueuw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomtrueuw instruction.</summary>
[MethodToken(100668888)]
public static void vpcomtrueuw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomtruew instruction.</summary>
[MethodToken(100668889)]
public static void vpcomtruew(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpcomtruew instruction.</summary>
[MethodToken(100668890)]
public static void vpcomtruew(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpcomub instruction.<br/>
		/// <br/>
		/// <c>VPCOMUB xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 EC /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668891)]
public static void vpcomub(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vpcomub instruction.<br/>
		/// <br/>
		/// <c>VPCOMUB xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 EC /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668892)]
public static void vpcomub(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpcomub instruction.<br/>
		/// <br/>
		/// <c>VPCOMUB xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 EC /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668893)]
public static void vpcomub(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vpcomub instruction.<br/>
		/// <br/>
		/// <c>VPCOMUB xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 EC /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668894)]
public static void vpcomub(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpcomud instruction.<br/>
		/// <br/>
		/// <c>VPCOMUD xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 EE /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668895)]
public static void vpcomud(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vpcomud instruction.<br/>
		/// <br/>
		/// <c>VPCOMUD xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 EE /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668896)]
public static void vpcomud(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpcomud instruction.<br/>
		/// <br/>
		/// <c>VPCOMUD xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 EE /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668897)]
public static void vpcomud(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vpcomud instruction.<br/>
		/// <br/>
		/// <c>VPCOMUD xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 EE /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668898)]
public static void vpcomud(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpcomuq instruction.<br/>
		/// <br/>
		/// <c>VPCOMUQ xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 EF /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668899)]
public static void vpcomuq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vpcomuq instruction.<br/>
		/// <br/>
		/// <c>VPCOMUQ xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 EF /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668900)]
public static void vpcomuq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpcomuq instruction.<br/>
		/// <br/>
		/// <c>VPCOMUQ xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 EF /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668901)]
public static void vpcomuq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vpcomuq instruction.<br/>
		/// <br/>
		/// <c>VPCOMUQ xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 EF /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668902)]
public static void vpcomuq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpcomuw instruction.<br/>
		/// <br/>
		/// <c>VPCOMUW xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 ED /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668903)]
public static void vpcomuw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vpcomuw instruction.<br/>
		/// <br/>
		/// <c>VPCOMUW xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 ED /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668904)]
public static void vpcomuw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpcomuw instruction.<br/>
		/// <br/>
		/// <c>VPCOMUW xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 ED /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668905)]
public static void vpcomuw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vpcomuw instruction.<br/>
		/// <br/>
		/// <c>VPCOMUW xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 ED /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668906)]
public static void vpcomuw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpcomw instruction.<br/>
		/// <br/>
		/// <c>VPCOMW xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 CD /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668907)]
public static void vpcomw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vpcomw instruction.<br/>
		/// <br/>
		/// <c>VPCOMW xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 CD /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668908)]
public static void vpcomw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpcomw instruction.<br/>
		/// <br/>
		/// <c>VPCOMW xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 CD /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668909)]
public static void vpcomw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vpcomw instruction.<br/>
		/// <br/>
		/// <c>VPCOMW xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 CD /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668910)]
public static void vpcomw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpconflictd instruction.<br/>
		/// <br/>
		/// <c>VPCONFLICTD xmm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 C4 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512CD</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668911)]
public static void vpconflictd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpconflictd instruction.<br/>
		/// <br/>
		/// <c>VPCONFLICTD ymm1 {k1}{z}, ymm2/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 C4 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512CD</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668912)]
public static void vpconflictd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpconflictd instruction.<br/>
		/// <br/>
		/// <c>VPCONFLICTD zmm1 {k1}{z}, zmm2/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 C4 /r</c><br/>
		/// <br/>
		/// <c>AVX512CD</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668913)]
public static void vpconflictd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vpconflictd instruction.<br/>
		/// <br/>
		/// <c>VPCONFLICTD xmm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 C4 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512CD</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668914)]
public static void vpconflictd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpconflictd instruction.<br/>
		/// <br/>
		/// <c>VPCONFLICTD ymm1 {k1}{z}, ymm2/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 C4 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512CD</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668915)]
public static void vpconflictd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpconflictd instruction.<br/>
		/// <br/>
		/// <c>VPCONFLICTD zmm1 {k1}{z}, zmm2/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 C4 /r</c><br/>
		/// <br/>
		/// <c>AVX512CD</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668916)]
public static void vpconflictd(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpconflictq instruction.<br/>
		/// <br/>
		/// <c>VPCONFLICTQ xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 C4 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512CD</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668917)]
public static void vpconflictq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpconflictq instruction.<br/>
		/// <br/>
		/// <c>VPCONFLICTQ ymm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 C4 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512CD</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668918)]
public static void vpconflictq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpconflictq instruction.<br/>
		/// <br/>
		/// <c>VPCONFLICTQ zmm1 {k1}{z}, zmm2/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 C4 /r</c><br/>
		/// <br/>
		/// <c>AVX512CD</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668919)]
public static void vpconflictq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vpconflictq instruction.<br/>
		/// <br/>
		/// <c>VPCONFLICTQ xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 C4 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512CD</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668920)]
public static void vpconflictq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpconflictq instruction.<br/>
		/// <br/>
		/// <c>VPCONFLICTQ ymm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 C4 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512CD</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668921)]
public static void vpconflictq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpconflictq instruction.<br/>
		/// <br/>
		/// <c>VPCONFLICTQ zmm1 {k1}{z}, zmm2/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 C4 /r</c><br/>
		/// <br/>
		/// <c>AVX512CD</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668922)]
public static void vpconflictq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpdpbusd instruction.<br/>
		/// <br/>
		/// <c>VPDPBUSD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 50 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VNNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPDPBUSD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 50 /r</c><br/>
		/// <br/>
		/// <c>AVX-VNNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668923)]
public static void vpdpbusd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpdpbusd instruction.<br/>
		/// <br/>
		/// <c>VPDPBUSD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 50 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VNNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPDPBUSD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 50 /r</c><br/>
		/// <br/>
		/// <c>AVX-VNNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668924)]
public static void vpdpbusd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpdpbusd instruction.<br/>
		/// <br/>
		/// <c>VPDPBUSD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 50 /r</c><br/>
		/// <br/>
		/// <c>AVX512_VNNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668925)]
public static void vpdpbusd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpdpbusd instruction.<br/>
		/// <br/>
		/// <c>VPDPBUSD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 50 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VNNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPDPBUSD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 50 /r</c><br/>
		/// <br/>
		/// <c>AVX-VNNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668926)]
public static void vpdpbusd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpdpbusd instruction.<br/>
		/// <br/>
		/// <c>VPDPBUSD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 50 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VNNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPDPBUSD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 50 /r</c><br/>
		/// <br/>
		/// <c>AVX-VNNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668927)]
public static void vpdpbusd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpdpbusd instruction.<br/>
		/// <br/>
		/// <c>VPDPBUSD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 50 /r</c><br/>
		/// <br/>
		/// <c>AVX512_VNNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668928)]
public static void vpdpbusd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpdpbusds instruction.<br/>
		/// <br/>
		/// <c>VPDPBUSDS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 51 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VNNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPDPBUSDS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 51 /r</c><br/>
		/// <br/>
		/// <c>AVX-VNNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668929)]
public static void vpdpbusds(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpdpbusds instruction.<br/>
		/// <br/>
		/// <c>VPDPBUSDS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 51 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VNNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPDPBUSDS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 51 /r</c><br/>
		/// <br/>
		/// <c>AVX-VNNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668930)]
public static void vpdpbusds(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpdpbusds instruction.<br/>
		/// <br/>
		/// <c>VPDPBUSDS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 51 /r</c><br/>
		/// <br/>
		/// <c>AVX512_VNNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668931)]
public static void vpdpbusds(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpdpbusds instruction.<br/>
		/// <br/>
		/// <c>VPDPBUSDS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 51 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VNNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPDPBUSDS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 51 /r</c><br/>
		/// <br/>
		/// <c>AVX-VNNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668932)]
public static void vpdpbusds(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpdpbusds instruction.<br/>
		/// <br/>
		/// <c>VPDPBUSDS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 51 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VNNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPDPBUSDS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 51 /r</c><br/>
		/// <br/>
		/// <c>AVX-VNNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668933)]
public static void vpdpbusds(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpdpbusds instruction.<br/>
		/// <br/>
		/// <c>VPDPBUSDS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 51 /r</c><br/>
		/// <br/>
		/// <c>AVX512_VNNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668934)]
public static void vpdpbusds(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpdpwssd instruction.<br/>
		/// <br/>
		/// <c>VPDPWSSD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 52 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VNNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPDPWSSD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 52 /r</c><br/>
		/// <br/>
		/// <c>AVX-VNNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668935)]
public static void vpdpwssd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpdpwssd instruction.<br/>
		/// <br/>
		/// <c>VPDPWSSD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 52 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VNNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPDPWSSD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 52 /r</c><br/>
		/// <br/>
		/// <c>AVX-VNNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668936)]
public static void vpdpwssd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpdpwssd instruction.<br/>
		/// <br/>
		/// <c>VPDPWSSD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 52 /r</c><br/>
		/// <br/>
		/// <c>AVX512_VNNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668937)]
public static void vpdpwssd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpdpwssd instruction.<br/>
		/// <br/>
		/// <c>VPDPWSSD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 52 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VNNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPDPWSSD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 52 /r</c><br/>
		/// <br/>
		/// <c>AVX-VNNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668938)]
public static void vpdpwssd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpdpwssd instruction.<br/>
		/// <br/>
		/// <c>VPDPWSSD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 52 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VNNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPDPWSSD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 52 /r</c><br/>
		/// <br/>
		/// <c>AVX-VNNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668939)]
public static void vpdpwssd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpdpwssd instruction.<br/>
		/// <br/>
		/// <c>VPDPWSSD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 52 /r</c><br/>
		/// <br/>
		/// <c>AVX512_VNNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668940)]
public static void vpdpwssd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpdpwssds instruction.<br/>
		/// <br/>
		/// <c>VPDPWSSDS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 53 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VNNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPDPWSSDS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 53 /r</c><br/>
		/// <br/>
		/// <c>AVX-VNNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668941)]
public static void vpdpwssds(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpdpwssds instruction.<br/>
		/// <br/>
		/// <c>VPDPWSSDS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 53 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VNNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPDPWSSDS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 53 /r</c><br/>
		/// <br/>
		/// <c>AVX-VNNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668942)]
public static void vpdpwssds(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpdpwssds instruction.<br/>
		/// <br/>
		/// <c>VPDPWSSDS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 53 /r</c><br/>
		/// <br/>
		/// <c>AVX512_VNNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668943)]
public static void vpdpwssds(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpdpwssds instruction.<br/>
		/// <br/>
		/// <c>VPDPWSSDS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 53 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VNNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPDPWSSDS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 53 /r</c><br/>
		/// <br/>
		/// <c>AVX-VNNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668944)]
public static void vpdpwssds(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpdpwssds instruction.<br/>
		/// <br/>
		/// <c>VPDPWSSDS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 53 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VNNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPDPWSSDS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 53 /r</c><br/>
		/// <br/>
		/// <c>AVX-VNNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668945)]
public static void vpdpwssds(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpdpwssds instruction.<br/>
		/// <br/>
		/// <c>VPDPWSSDS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 53 /r</c><br/>
		/// <br/>
		/// <c>AVX512_VNNI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668946)]
public static void vpdpwssds(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vperm2f128 instruction.<br/>
		/// <br/>
		/// <c>VPERM2F128 ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 06 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668947)]
public static void vperm2f128(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vperm2f128 instruction.<br/>
		/// <br/>
		/// <c>VPERM2F128 ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 06 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668948)]
public static void vperm2f128(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vperm2f128 instruction.<br/>
		/// <br/>
		/// <c>VPERM2F128 ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 06 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668949)]
public static void vperm2f128(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vperm2f128 instruction.<br/>
		/// <br/>
		/// <c>VPERM2F128 ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 06 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668950)]
public static void vperm2f128(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vperm2i128 instruction.<br/>
		/// <br/>
		/// <c>VPERM2I128 ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 46 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668951)]
public static void vperm2i128(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vperm2i128 instruction.<br/>
		/// <br/>
		/// <c>VPERM2I128 ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 46 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668952)]
public static void vperm2i128(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vperm2i128 instruction.<br/>
		/// <br/>
		/// <c>VPERM2I128 ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 46 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668953)]
public static void vperm2i128(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vperm2i128 instruction.<br/>
		/// <br/>
		/// <c>VPERM2I128 ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 46 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668954)]
public static void vperm2i128(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpermb instruction.<br/>
		/// <br/>
		/// <c>VPERMB xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 8D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668955)]
public static void vpermb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpermb instruction.<br/>
		/// <br/>
		/// <c>VPERMB ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 8D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668956)]
public static void vpermb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpermb instruction.<br/>
		/// <br/>
		/// <c>VPERMB zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 8D /r</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668957)]
public static void vpermb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpermb instruction.<br/>
		/// <br/>
		/// <c>VPERMB xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 8D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668958)]
public static void vpermb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermb instruction.<br/>
		/// <br/>
		/// <c>VPERMB ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 8D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668959)]
public static void vpermb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermb instruction.<br/>
		/// <br/>
		/// <c>VPERMB zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 8D /r</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668960)]
public static void vpermb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermd instruction.<br/>
		/// <br/>
		/// <c>VPERMD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 36 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPERMD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 36 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668961)]
public static void vpermd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpermd instruction.<br/>
		/// <br/>
		/// <c>VPERMD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 36 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668962)]
public static void vpermd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpermd instruction.<br/>
		/// <br/>
		/// <c>VPERMD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 36 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPERMD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 36 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668963)]
public static void vpermd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermd instruction.<br/>
		/// <br/>
		/// <c>VPERMD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 36 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668964)]
public static void vpermd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermi2b instruction.<br/>
		/// <br/>
		/// <c>VPERMI2B xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 75 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668965)]
public static void vpermi2b(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpermi2b instruction.<br/>
		/// <br/>
		/// <c>VPERMI2B ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 75 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668966)]
public static void vpermi2b(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpermi2b instruction.<br/>
		/// <br/>
		/// <c>VPERMI2B zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 75 /r</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668967)]
public static void vpermi2b(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpermi2b instruction.<br/>
		/// <br/>
		/// <c>VPERMI2B xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 75 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668968)]
public static void vpermi2b(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermi2b instruction.<br/>
		/// <br/>
		/// <c>VPERMI2B ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 75 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668969)]
public static void vpermi2b(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermi2b instruction.<br/>
		/// <br/>
		/// <c>VPERMI2B zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 75 /r</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668970)]
public static void vpermi2b(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermi2d instruction.<br/>
		/// <br/>
		/// <c>VPERMI2D xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 76 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668971)]
public static void vpermi2d(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpermi2d instruction.<br/>
		/// <br/>
		/// <c>VPERMI2D ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 76 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668972)]
public static void vpermi2d(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpermi2d instruction.<br/>
		/// <br/>
		/// <c>VPERMI2D zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 76 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668973)]
public static void vpermi2d(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpermi2d instruction.<br/>
		/// <br/>
		/// <c>VPERMI2D xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 76 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668974)]
public static void vpermi2d(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermi2d instruction.<br/>
		/// <br/>
		/// <c>VPERMI2D ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 76 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668975)]
public static void vpermi2d(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermi2d instruction.<br/>
		/// <br/>
		/// <c>VPERMI2D zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 76 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668976)]
public static void vpermi2d(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermi2pd instruction.<br/>
		/// <br/>
		/// <c>VPERMI2PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 77 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668977)]
public static void vpermi2pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpermi2pd instruction.<br/>
		/// <br/>
		/// <c>VPERMI2PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 77 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668978)]
public static void vpermi2pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpermi2pd instruction.<br/>
		/// <br/>
		/// <c>VPERMI2PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 77 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668979)]
public static void vpermi2pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpermi2pd instruction.<br/>
		/// <br/>
		/// <c>VPERMI2PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 77 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668980)]
public static void vpermi2pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermi2pd instruction.<br/>
		/// <br/>
		/// <c>VPERMI2PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 77 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668981)]
public static void vpermi2pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermi2pd instruction.<br/>
		/// <br/>
		/// <c>VPERMI2PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 77 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668982)]
public static void vpermi2pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermi2ps instruction.<br/>
		/// <br/>
		/// <c>VPERMI2PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 77 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668983)]
public static void vpermi2ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpermi2ps instruction.<br/>
		/// <br/>
		/// <c>VPERMI2PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 77 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668984)]
public static void vpermi2ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpermi2ps instruction.<br/>
		/// <br/>
		/// <c>VPERMI2PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 77 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668985)]
public static void vpermi2ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpermi2ps instruction.<br/>
		/// <br/>
		/// <c>VPERMI2PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 77 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668986)]
public static void vpermi2ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermi2ps instruction.<br/>
		/// <br/>
		/// <c>VPERMI2PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 77 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668987)]
public static void vpermi2ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermi2ps instruction.<br/>
		/// <br/>
		/// <c>VPERMI2PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 77 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668988)]
public static void vpermi2ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermi2q instruction.<br/>
		/// <br/>
		/// <c>VPERMI2Q xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 76 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668989)]
public static void vpermi2q(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpermi2q instruction.<br/>
		/// <br/>
		/// <c>VPERMI2Q ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 76 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668990)]
public static void vpermi2q(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpermi2q instruction.<br/>
		/// <br/>
		/// <c>VPERMI2Q zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 76 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668991)]
public static void vpermi2q(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpermi2q instruction.<br/>
		/// <br/>
		/// <c>VPERMI2Q xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 76 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668992)]
public static void vpermi2q(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermi2q instruction.<br/>
		/// <br/>
		/// <c>VPERMI2Q ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 76 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668993)]
public static void vpermi2q(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermi2q instruction.<br/>
		/// <br/>
		/// <c>VPERMI2Q zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 76 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668994)]
public static void vpermi2q(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermi2w instruction.<br/>
		/// <br/>
		/// <c>VPERMI2W xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 75 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668995)]
public static void vpermi2w(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpermi2w instruction.<br/>
		/// <br/>
		/// <c>VPERMI2W ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 75 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668996)]
public static void vpermi2w(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpermi2w instruction.<br/>
		/// <br/>
		/// <c>VPERMI2W zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 75 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668997)]
public static void vpermi2w(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpermi2w instruction.<br/>
		/// <br/>
		/// <c>VPERMI2W xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 75 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668998)]
public static void vpermi2w(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermi2w instruction.<br/>
		/// <br/>
		/// <c>VPERMI2W ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 75 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100668999)]
public static void vpermi2w(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermi2w instruction.<br/>
		/// <br/>
		/// <c>VPERMI2W zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 75 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669000)]
public static void vpermi2w(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermil2pd instruction.<br/>
		/// <br/>
		/// <c>VPERMIL2PD xmm1, xmm2, xmm3/m128, xmm4, imm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 49 /r /is5</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669001)]
public static void vpermil2pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerRegisterXMM src3, sbyte imm) {}
		/// <summary>vpermil2pd instruction.<br/>
		/// <br/>
		/// <c>VPERMIL2PD xmm1, xmm2, xmm3/m128, xmm4, imm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 49 /r /is5</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669002)]
public static void vpermil2pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, AssemblerRegisterXMM src3, sbyte imm) {}
		/// <summary>vpermil2pd instruction.<br/>
		/// <br/>
		/// <c>VPERMIL2PD ymm1, ymm2, ymm3/m256, ymm4, imm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 49 /r /is5</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669003)]
public static void vpermil2pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, AssemblerRegisterYMM src3, sbyte imm) {}
		/// <summary>vpermil2pd instruction.<br/>
		/// <br/>
		/// <c>VPERMIL2PD ymm1, ymm2, ymm3/m256, ymm4, imm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 49 /r /is5</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669004)]
public static void vpermil2pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, AssemblerRegisterYMM src3, sbyte imm) {}
		/// <summary>vpermil2pd instruction.<br/>
		/// <br/>
		/// <c>VPERMIL2PD xmm1, xmm2, xmm3, xmm4/m128, imm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 49 /r /is5</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669005)]
public static void vpermil2pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerMemoryOperand src3, sbyte imm) {}
		/// <summary>vpermil2pd instruction.<br/>
		/// <br/>
		/// <c>VPERMIL2PD ymm1, ymm2, ymm3, ymm4/m256, imm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W1 49 /r /is5</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669006)]
public static void vpermil2pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, AssemblerMemoryOperand src3, sbyte imm) {}
		/// <summary>vpermil2pd instruction.<br/>
		/// <br/>
		/// <c>VPERMIL2PD xmm1, xmm2, xmm3/m128, xmm4, imm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 49 /r /is5</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669007)]
public static void vpermil2pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerRegisterXMM src3, byte imm) {}
		/// <summary>vpermil2pd instruction.<br/>
		/// <br/>
		/// <c>VPERMIL2PD xmm1, xmm2, xmm3/m128, xmm4, imm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 49 /r /is5</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669008)]
public static void vpermil2pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, AssemblerRegisterXMM src3, byte imm) {}
		/// <summary>vpermil2pd instruction.<br/>
		/// <br/>
		/// <c>VPERMIL2PD ymm1, ymm2, ymm3/m256, ymm4, imm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 49 /r /is5</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669009)]
public static void vpermil2pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, AssemblerRegisterYMM src3, byte imm) {}
		/// <summary>vpermil2pd instruction.<br/>
		/// <br/>
		/// <c>VPERMIL2PD ymm1, ymm2, ymm3/m256, ymm4, imm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 49 /r /is5</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669010)]
public static void vpermil2pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, AssemblerRegisterYMM src3, byte imm) {}
		/// <summary>vpermil2pd instruction.<br/>
		/// <br/>
		/// <c>VPERMIL2PD xmm1, xmm2, xmm3, xmm4/m128, imm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 49 /r /is5</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669011)]
public static void vpermil2pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerMemoryOperand src3, byte imm) {}
		/// <summary>vpermil2pd instruction.<br/>
		/// <br/>
		/// <c>VPERMIL2PD ymm1, ymm2, ymm3, ymm4/m256, imm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W1 49 /r /is5</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669012)]
public static void vpermil2pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, AssemblerMemoryOperand src3, byte imm) {}
		/// <summary>vpermil2ps instruction.<br/>
		/// <br/>
		/// <c>VPERMIL2PS xmm1, xmm2, xmm3/m128, xmm4, imm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 48 /r /is5</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669013)]
public static void vpermil2ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerRegisterXMM src3, sbyte imm) {}
		/// <summary>vpermil2ps instruction.<br/>
		/// <br/>
		/// <c>VPERMIL2PS xmm1, xmm2, xmm3/m128, xmm4, imm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 48 /r /is5</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669014)]
public static void vpermil2ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, AssemblerRegisterXMM src3, sbyte imm) {}
		/// <summary>vpermil2ps instruction.<br/>
		/// <br/>
		/// <c>VPERMIL2PS ymm1, ymm2, ymm3/m256, ymm4, imm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 48 /r /is5</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669015)]
public static void vpermil2ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, AssemblerRegisterYMM src3, sbyte imm) {}
		/// <summary>vpermil2ps instruction.<br/>
		/// <br/>
		/// <c>VPERMIL2PS ymm1, ymm2, ymm3/m256, ymm4, imm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 48 /r /is5</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669016)]
public static void vpermil2ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, AssemblerRegisterYMM src3, sbyte imm) {}
		/// <summary>vpermil2ps instruction.<br/>
		/// <br/>
		/// <c>VPERMIL2PS xmm1, xmm2, xmm3, xmm4/m128, imm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 48 /r /is5</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669017)]
public static void vpermil2ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerMemoryOperand src3, sbyte imm) {}
		/// <summary>vpermil2ps instruction.<br/>
		/// <br/>
		/// <c>VPERMIL2PS ymm1, ymm2, ymm3, ymm4/m256, imm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W1 48 /r /is5</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669018)]
public static void vpermil2ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, AssemblerMemoryOperand src3, sbyte imm) {}
		/// <summary>vpermil2ps instruction.<br/>
		/// <br/>
		/// <c>VPERMIL2PS xmm1, xmm2, xmm3/m128, xmm4, imm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 48 /r /is5</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669019)]
public static void vpermil2ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerRegisterXMM src3, byte imm) {}
		/// <summary>vpermil2ps instruction.<br/>
		/// <br/>
		/// <c>VPERMIL2PS xmm1, xmm2, xmm3/m128, xmm4, imm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 48 /r /is5</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669020)]
public static void vpermil2ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, AssemblerRegisterXMM src3, byte imm) {}
		/// <summary>vpermil2ps instruction.<br/>
		/// <br/>
		/// <c>VPERMIL2PS ymm1, ymm2, ymm3/m256, ymm4, imm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 48 /r /is5</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669021)]
public static void vpermil2ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, AssemblerRegisterYMM src3, byte imm) {}
		/// <summary>vpermil2ps instruction.<br/>
		/// <br/>
		/// <c>VPERMIL2PS ymm1, ymm2, ymm3/m256, ymm4, imm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 48 /r /is5</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669022)]
public static void vpermil2ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, AssemblerRegisterYMM src3, byte imm) {}
		/// <summary>vpermil2ps instruction.<br/>
		/// <br/>
		/// <c>VPERMIL2PS xmm1, xmm2, xmm3, xmm4/m128, imm4</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 48 /r /is5</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669023)]
public static void vpermil2ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerMemoryOperand src3, byte imm) {}
		/// <summary>vpermil2ps instruction.<br/>
		/// <br/>
		/// <c>VPERMIL2PS ymm1, ymm2, ymm3, ymm4/m256, imm4</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W1 48 /r /is5</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669024)]
public static void vpermil2ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, AssemblerMemoryOperand src3, byte imm) {}
		/// <summary>vpermilpd instruction.<br/>
		/// <br/>
		/// <c>VPERMILPD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 0D /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPERMILPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 0D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669025)]
public static void vpermilpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpermilpd instruction.<br/>
		/// <br/>
		/// <c>VPERMILPD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 0D /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPERMILPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 0D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669026)]
public static void vpermilpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpermilpd instruction.<br/>
		/// <br/>
		/// <c>VPERMILPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 0D /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669027)]
public static void vpermilpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpermilpd instruction.<br/>
		/// <br/>
		/// <c>VPERMILPD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 0D /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPERMILPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 0D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669028)]
public static void vpermilpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermilpd instruction.<br/>
		/// <br/>
		/// <c>VPERMILPD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 0D /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPERMILPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 0D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669029)]
public static void vpermilpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermilpd instruction.<br/>
		/// <br/>
		/// <c>VPERMILPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 0D /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669030)]
public static void vpermilpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermilpd instruction.<br/>
		/// <br/>
		/// <c>VPERMILPD xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 05 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPERMILPD xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 05 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669031)]
public static void vpermilpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vpermilpd instruction.<br/>
		/// <br/>
		/// <c>VPERMILPD ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 05 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPERMILPD ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 05 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669032)]
public static void vpermilpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vpermilpd instruction.<br/>
		/// <br/>
		/// <c>VPERMILPD zmm1 {k1}{z}, zmm2/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 05 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669033)]
public static void vpermilpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vpermilpd instruction.<br/>
		/// <br/>
		/// <c>VPERMILPD xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 05 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPERMILPD xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 05 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669034)]
public static void vpermilpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpermilpd instruction.<br/>
		/// <br/>
		/// <c>VPERMILPD ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 05 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPERMILPD ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 05 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669035)]
public static void vpermilpd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpermilpd instruction.<br/>
		/// <br/>
		/// <c>VPERMILPD zmm1 {k1}{z}, zmm2/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 05 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669036)]
public static void vpermilpd(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpermilpd instruction.<br/>
		/// <br/>
		/// <c>VPERMILPD xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 05 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPERMILPD xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 05 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669037)]
public static void vpermilpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vpermilpd instruction.<br/>
		/// <br/>
		/// <c>VPERMILPD ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 05 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPERMILPD ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 05 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669038)]
public static void vpermilpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vpermilpd instruction.<br/>
		/// <br/>
		/// <c>VPERMILPD zmm1 {k1}{z}, zmm2/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 05 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669039)]
public static void vpermilpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vpermilpd instruction.<br/>
		/// <br/>
		/// <c>VPERMILPD xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 05 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPERMILPD xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 05 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669040)]
public static void vpermilpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpermilpd instruction.<br/>
		/// <br/>
		/// <c>VPERMILPD ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 05 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPERMILPD ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 05 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669041)]
public static void vpermilpd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpermilpd instruction.<br/>
		/// <br/>
		/// <c>VPERMILPD zmm1 {k1}{z}, zmm2/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 05 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669042)]
public static void vpermilpd(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpermilps instruction.<br/>
		/// <br/>
		/// <c>VPERMILPS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 0C /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPERMILPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 0C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669043)]
public static void vpermilps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpermilps instruction.<br/>
		/// <br/>
		/// <c>VPERMILPS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 0C /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPERMILPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 0C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669044)]
public static void vpermilps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpermilps instruction.<br/>
		/// <br/>
		/// <c>VPERMILPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 0C /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669045)]
public static void vpermilps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpermilps instruction.<br/>
		/// <br/>
		/// <c>VPERMILPS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 0C /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPERMILPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 0C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669046)]
public static void vpermilps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermilps instruction.<br/>
		/// <br/>
		/// <c>VPERMILPS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 0C /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPERMILPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 0C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669047)]
public static void vpermilps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermilps instruction.<br/>
		/// <br/>
		/// <c>VPERMILPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 0C /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669048)]
public static void vpermilps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermilps instruction.<br/>
		/// <br/>
		/// <c>VPERMILPS xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 04 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPERMILPS xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 04 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669049)]
public static void vpermilps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vpermilps instruction.<br/>
		/// <br/>
		/// <c>VPERMILPS ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 04 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPERMILPS ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 04 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669050)]
public static void vpermilps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vpermilps instruction.<br/>
		/// <br/>
		/// <c>VPERMILPS zmm1 {k1}{z}, zmm2/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 04 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669051)]
public static void vpermilps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vpermilps instruction.<br/>
		/// <br/>
		/// <c>VPERMILPS xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 04 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPERMILPS xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 04 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669052)]
public static void vpermilps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpermilps instruction.<br/>
		/// <br/>
		/// <c>VPERMILPS ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 04 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPERMILPS ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 04 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669053)]
public static void vpermilps(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpermilps instruction.<br/>
		/// <br/>
		/// <c>VPERMILPS zmm1 {k1}{z}, zmm2/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 04 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669054)]
public static void vpermilps(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpermilps instruction.<br/>
		/// <br/>
		/// <c>VPERMILPS xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 04 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPERMILPS xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 04 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669055)]
public static void vpermilps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vpermilps instruction.<br/>
		/// <br/>
		/// <c>VPERMILPS ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 04 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPERMILPS ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 04 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669056)]
public static void vpermilps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vpermilps instruction.<br/>
		/// <br/>
		/// <c>VPERMILPS zmm1 {k1}{z}, zmm2/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 04 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669057)]
public static void vpermilps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vpermilps instruction.<br/>
		/// <br/>
		/// <c>VPERMILPS xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 04 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPERMILPS xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 04 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669058)]
public static void vpermilps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpermilps instruction.<br/>
		/// <br/>
		/// <c>VPERMILPS ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W0 04 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPERMILPS ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 04 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669059)]
public static void vpermilps(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpermilps instruction.<br/>
		/// <br/>
		/// <c>VPERMILPS zmm1 {k1}{z}, zmm2/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 04 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669060)]
public static void vpermilps(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpermpd instruction.<br/>
		/// <br/>
		/// <c>VPERMPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 16 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669061)]
public static void vpermpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpermpd instruction.<br/>
		/// <br/>
		/// <c>VPERMPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 16 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669062)]
public static void vpermpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpermpd instruction.<br/>
		/// <br/>
		/// <c>VPERMPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 16 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669063)]
public static void vpermpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermpd instruction.<br/>
		/// <br/>
		/// <c>VPERMPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 16 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669064)]
public static void vpermpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermpd instruction.<br/>
		/// <br/>
		/// <c>VPERMPD ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W1 01 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPERMPD ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 01 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669065)]
public static void vpermpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vpermpd instruction.<br/>
		/// <br/>
		/// <c>VPERMPD zmm1 {k1}{z}, zmm2/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 01 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669066)]
public static void vpermpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vpermpd instruction.<br/>
		/// <br/>
		/// <c>VPERMPD ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W1 01 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPERMPD ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 01 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669067)]
public static void vpermpd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpermpd instruction.<br/>
		/// <br/>
		/// <c>VPERMPD zmm1 {k1}{z}, zmm2/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 01 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669068)]
public static void vpermpd(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpermpd instruction.<br/>
		/// <br/>
		/// <c>VPERMPD ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W1 01 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPERMPD ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 01 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669069)]
public static void vpermpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vpermpd instruction.<br/>
		/// <br/>
		/// <c>VPERMPD zmm1 {k1}{z}, zmm2/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 01 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669070)]
public static void vpermpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vpermpd instruction.<br/>
		/// <br/>
		/// <c>VPERMPD ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W1 01 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPERMPD ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 01 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669071)]
public static void vpermpd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpermpd instruction.<br/>
		/// <br/>
		/// <c>VPERMPD zmm1 {k1}{z}, zmm2/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 01 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669072)]
public static void vpermpd(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpermps instruction.<br/>
		/// <br/>
		/// <c>VPERMPS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 16 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPERMPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 16 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669073)]
public static void vpermps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpermps instruction.<br/>
		/// <br/>
		/// <c>VPERMPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 16 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669074)]
public static void vpermps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpermps instruction.<br/>
		/// <br/>
		/// <c>VPERMPS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 16 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPERMPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 16 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669075)]
public static void vpermps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermps instruction.<br/>
		/// <br/>
		/// <c>VPERMPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 16 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669076)]
public static void vpermps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermq instruction.<br/>
		/// <br/>
		/// <c>VPERMQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 36 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669077)]
public static void vpermq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpermq instruction.<br/>
		/// <br/>
		/// <c>VPERMQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 36 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669078)]
public static void vpermq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpermq instruction.<br/>
		/// <br/>
		/// <c>VPERMQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 36 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669079)]
public static void vpermq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermq instruction.<br/>
		/// <br/>
		/// <c>VPERMQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 36 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669080)]
public static void vpermq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermq instruction.<br/>
		/// <br/>
		/// <c>VPERMQ ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W1 00 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPERMQ ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 00 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669081)]
public static void vpermq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vpermq instruction.<br/>
		/// <br/>
		/// <c>VPERMQ zmm1 {k1}{z}, zmm2/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 00 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669082)]
public static void vpermq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vpermq instruction.<br/>
		/// <br/>
		/// <c>VPERMQ ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W1 00 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPERMQ ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 00 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669083)]
public static void vpermq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpermq instruction.<br/>
		/// <br/>
		/// <c>VPERMQ zmm1 {k1}{z}, zmm2/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 00 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669084)]
public static void vpermq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpermq instruction.<br/>
		/// <br/>
		/// <c>VPERMQ ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W1 00 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPERMQ ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 00 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669085)]
public static void vpermq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vpermq instruction.<br/>
		/// <br/>
		/// <c>VPERMQ zmm1 {k1}{z}, zmm2/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 00 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669086)]
public static void vpermq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vpermq instruction.<br/>
		/// <br/>
		/// <c>VPERMQ ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.W1 00 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPERMQ ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 00 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669087)]
public static void vpermq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpermq instruction.<br/>
		/// <br/>
		/// <c>VPERMQ zmm1 {k1}{z}, zmm2/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 00 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669088)]
public static void vpermq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpermt2b instruction.<br/>
		/// <br/>
		/// <c>VPERMT2B xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 7D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669089)]
public static void vpermt2b(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpermt2b instruction.<br/>
		/// <br/>
		/// <c>VPERMT2B ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 7D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669090)]
public static void vpermt2b(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpermt2b instruction.<br/>
		/// <br/>
		/// <c>VPERMT2B zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 7D /r</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669091)]
public static void vpermt2b(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpermt2b instruction.<br/>
		/// <br/>
		/// <c>VPERMT2B xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 7D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669092)]
public static void vpermt2b(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermt2b instruction.<br/>
		/// <br/>
		/// <c>VPERMT2B ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 7D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669093)]
public static void vpermt2b(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermt2b instruction.<br/>
		/// <br/>
		/// <c>VPERMT2B zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 7D /r</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669094)]
public static void vpermt2b(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermt2d instruction.<br/>
		/// <br/>
		/// <c>VPERMT2D xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 7E /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669095)]
public static void vpermt2d(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpermt2d instruction.<br/>
		/// <br/>
		/// <c>VPERMT2D ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 7E /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669096)]
public static void vpermt2d(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpermt2d instruction.<br/>
		/// <br/>
		/// <c>VPERMT2D zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 7E /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669097)]
public static void vpermt2d(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpermt2d instruction.<br/>
		/// <br/>
		/// <c>VPERMT2D xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 7E /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669098)]
public static void vpermt2d(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermt2d instruction.<br/>
		/// <br/>
		/// <c>VPERMT2D ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 7E /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669099)]
public static void vpermt2d(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermt2d instruction.<br/>
		/// <br/>
		/// <c>VPERMT2D zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 7E /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669100)]
public static void vpermt2d(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermt2pd instruction.<br/>
		/// <br/>
		/// <c>VPERMT2PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 7F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669101)]
public static void vpermt2pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpermt2pd instruction.<br/>
		/// <br/>
		/// <c>VPERMT2PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 7F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669102)]
public static void vpermt2pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpermt2pd instruction.<br/>
		/// <br/>
		/// <c>VPERMT2PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 7F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669103)]
public static void vpermt2pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpermt2pd instruction.<br/>
		/// <br/>
		/// <c>VPERMT2PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 7F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669104)]
public static void vpermt2pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermt2pd instruction.<br/>
		/// <br/>
		/// <c>VPERMT2PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 7F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669105)]
public static void vpermt2pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermt2pd instruction.<br/>
		/// <br/>
		/// <c>VPERMT2PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 7F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669106)]
public static void vpermt2pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermt2ps instruction.<br/>
		/// <br/>
		/// <c>VPERMT2PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 7F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669107)]
public static void vpermt2ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpermt2ps instruction.<br/>
		/// <br/>
		/// <c>VPERMT2PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 7F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669108)]
public static void vpermt2ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpermt2ps instruction.<br/>
		/// <br/>
		/// <c>VPERMT2PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 7F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669109)]
public static void vpermt2ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpermt2ps instruction.<br/>
		/// <br/>
		/// <c>VPERMT2PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 7F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669110)]
public static void vpermt2ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermt2ps instruction.<br/>
		/// <br/>
		/// <c>VPERMT2PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 7F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669111)]
public static void vpermt2ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermt2ps instruction.<br/>
		/// <br/>
		/// <c>VPERMT2PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 7F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669112)]
public static void vpermt2ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermt2q instruction.<br/>
		/// <br/>
		/// <c>VPERMT2Q xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 7E /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669113)]
public static void vpermt2q(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpermt2q instruction.<br/>
		/// <br/>
		/// <c>VPERMT2Q ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 7E /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669114)]
public static void vpermt2q(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpermt2q instruction.<br/>
		/// <br/>
		/// <c>VPERMT2Q zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 7E /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669115)]
public static void vpermt2q(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpermt2q instruction.<br/>
		/// <br/>
		/// <c>VPERMT2Q xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 7E /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669116)]
public static void vpermt2q(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermt2q instruction.<br/>
		/// <br/>
		/// <c>VPERMT2Q ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 7E /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669117)]
public static void vpermt2q(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermt2q instruction.<br/>
		/// <br/>
		/// <c>VPERMT2Q zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 7E /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669118)]
public static void vpermt2q(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermt2w instruction.<br/>
		/// <br/>
		/// <c>VPERMT2W xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 7D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669119)]
public static void vpermt2w(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpermt2w instruction.<br/>
		/// <br/>
		/// <c>VPERMT2W ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 7D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669120)]
public static void vpermt2w(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpermt2w instruction.<br/>
		/// <br/>
		/// <c>VPERMT2W zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 7D /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669121)]
public static void vpermt2w(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpermt2w instruction.<br/>
		/// <br/>
		/// <c>VPERMT2W xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 7D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669122)]
public static void vpermt2w(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermt2w instruction.<br/>
		/// <br/>
		/// <c>VPERMT2W ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 7D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669123)]
public static void vpermt2w(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermt2w instruction.<br/>
		/// <br/>
		/// <c>VPERMT2W zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 7D /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669124)]
public static void vpermt2w(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermw instruction.<br/>
		/// <br/>
		/// <c>VPERMW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 8D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669125)]
public static void vpermw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpermw instruction.<br/>
		/// <br/>
		/// <c>VPERMW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 8D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669126)]
public static void vpermw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpermw instruction.<br/>
		/// <br/>
		/// <c>VPERMW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 8D /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669127)]
public static void vpermw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpermw instruction.<br/>
		/// <br/>
		/// <c>VPERMW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 8D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669128)]
public static void vpermw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermw instruction.<br/>
		/// <br/>
		/// <c>VPERMW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 8D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669129)]
public static void vpermw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpermw instruction.<br/>
		/// <br/>
		/// <c>VPERMW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 8D /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669130)]
public static void vpermw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpexpandb instruction.<br/>
		/// <br/>
		/// <c>VPEXPANDB xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 62 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669131)]
public static void vpexpandb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpexpandb instruction.<br/>
		/// <br/>
		/// <c>VPEXPANDB ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 62 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669132)]
public static void vpexpandb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpexpandb instruction.<br/>
		/// <br/>
		/// <c>VPEXPANDB zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 62 /r</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669133)]
public static void vpexpandb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vpexpandb instruction.<br/>
		/// <br/>
		/// <c>VPEXPANDB xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 62 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669134)]
public static void vpexpandb(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpexpandb instruction.<br/>
		/// <br/>
		/// <c>VPEXPANDB ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 62 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669135)]
public static void vpexpandb(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpexpandb instruction.<br/>
		/// <br/>
		/// <c>VPEXPANDB zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 62 /r</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669136)]
public static void vpexpandb(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpexpandd instruction.<br/>
		/// <br/>
		/// <c>VPEXPANDD xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 89 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669137)]
public static void vpexpandd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpexpandd instruction.<br/>
		/// <br/>
		/// <c>VPEXPANDD ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 89 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669138)]
public static void vpexpandd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpexpandd instruction.<br/>
		/// <br/>
		/// <c>VPEXPANDD zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 89 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669139)]
public static void vpexpandd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vpexpandd instruction.<br/>
		/// <br/>
		/// <c>VPEXPANDD xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 89 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669140)]
public static void vpexpandd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpexpandd instruction.<br/>
		/// <br/>
		/// <c>VPEXPANDD ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 89 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669141)]
public static void vpexpandd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpexpandd instruction.<br/>
		/// <br/>
		/// <c>VPEXPANDD zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 89 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669142)]
public static void vpexpandd(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpexpandq instruction.<br/>
		/// <br/>
		/// <c>VPEXPANDQ xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 89 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669143)]
public static void vpexpandq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpexpandq instruction.<br/>
		/// <br/>
		/// <c>VPEXPANDQ ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 89 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669144)]
public static void vpexpandq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpexpandq instruction.<br/>
		/// <br/>
		/// <c>VPEXPANDQ zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 89 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669145)]
public static void vpexpandq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vpexpandq instruction.<br/>
		/// <br/>
		/// <c>VPEXPANDQ xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 89 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669146)]
public static void vpexpandq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpexpandq instruction.<br/>
		/// <br/>
		/// <c>VPEXPANDQ ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 89 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669147)]
public static void vpexpandq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpexpandq instruction.<br/>
		/// <br/>
		/// <c>VPEXPANDQ zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 89 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669148)]
public static void vpexpandq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpexpandw instruction.<br/>
		/// <br/>
		/// <c>VPEXPANDW xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 62 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669149)]
public static void vpexpandw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpexpandw instruction.<br/>
		/// <br/>
		/// <c>VPEXPANDW ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 62 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669150)]
public static void vpexpandw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpexpandw instruction.<br/>
		/// <br/>
		/// <c>VPEXPANDW zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 62 /r</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669151)]
public static void vpexpandw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vpexpandw instruction.<br/>
		/// <br/>
		/// <c>VPEXPANDW xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 62 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669152)]
public static void vpexpandw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpexpandw instruction.<br/>
		/// <br/>
		/// <c>VPEXPANDW ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 62 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669153)]
public static void vpexpandw(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpexpandw instruction.<br/>
		/// <br/>
		/// <c>VPEXPANDW zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 62 /r</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669154)]
public static void vpexpandw(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpextrb instruction.<br/>
		/// <br/>
		/// <c>VPEXTRB r32/m8, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 14 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPEXTRB r32/m8, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 14 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669155)]
public static void vpextrb(AssemblerRegister32 dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vpextrb instruction.<br/>
		/// <br/>
		/// <c>VPEXTRB r64/m8, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 14 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>VPEXTRB r64/m8, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 14 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100669156)]
public static void vpextrb(AssemblerRegister64 dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vpextrb instruction.<br/>
		/// <br/>
		/// <c>VPEXTRB r32/m8, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 14 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPEXTRB r32/m8, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 14 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669157)]
public static void vpextrb(AssemblerMemoryOperand dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vpextrb instruction.<br/>
		/// <br/>
		/// <c>VPEXTRB r32/m8, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 14 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPEXTRB r32/m8, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 14 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669158)]
public static void vpextrb(AssemblerRegister32 dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vpextrb instruction.<br/>
		/// <br/>
		/// <c>VPEXTRB r64/m8, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 14 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>VPEXTRB r64/m8, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 14 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100669159)]
public static void vpextrb(AssemblerRegister64 dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vpextrb instruction.<br/>
		/// <br/>
		/// <c>VPEXTRB r32/m8, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 14 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPEXTRB r32/m8, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 14 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669160)]
public static void vpextrb(AssemblerMemoryOperand dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vpextrd instruction.<br/>
		/// <br/>
		/// <c>VPEXTRD r/m32, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 16 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPEXTRD r/m32, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 16 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669161)]
public static void vpextrd(AssemblerRegister32 dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vpextrd instruction.<br/>
		/// <br/>
		/// <c>VPEXTRD r/m32, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 16 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPEXTRD r/m32, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 16 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669162)]
public static void vpextrd(AssemblerMemoryOperand dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vpextrd instruction.<br/>
		/// <br/>
		/// <c>VPEXTRD r/m32, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 16 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPEXTRD r/m32, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 16 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669163)]
public static void vpextrd(AssemblerRegister32 dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vpextrd instruction.<br/>
		/// <br/>
		/// <c>VPEXTRD r/m32, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 16 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPEXTRD r/m32, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 16 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669164)]
public static void vpextrd(AssemblerMemoryOperand dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vpextrq instruction.<br/>
		/// <br/>
		/// <c>VPEXTRQ r/m64, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 16 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>VPEXTRQ r/m64, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 16 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100669165)]
public static void vpextrq(AssemblerRegister64 dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vpextrq instruction.<br/>
		/// <br/>
		/// <c>VPEXTRQ r/m64, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 16 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>VPEXTRQ r/m64, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 16 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100669166)]
public static void vpextrq(AssemblerMemoryOperand dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vpextrq instruction.<br/>
		/// <br/>
		/// <c>VPEXTRQ r/m64, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 16 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>VPEXTRQ r/m64, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 16 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100669167)]
public static void vpextrq(AssemblerRegister64 dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vpextrq instruction.<br/>
		/// <br/>
		/// <c>VPEXTRQ r/m64, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 16 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>VPEXTRQ r/m64, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 16 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100669168)]
public static void vpextrq(AssemblerMemoryOperand dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vpextrw instruction.<br/>
		/// <br/>
		/// <c>VPEXTRW r32, xmm1, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.W0 C5 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPEXTRW r32, xmm1, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 C5 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669169)]
public static void vpextrw(AssemblerRegister32 dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vpextrw instruction.<br/>
		/// <br/>
		/// <c>VPEXTRW r64, xmm1, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.W1 C5 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>VPEXTRW r64, xmm1, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 C5 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100669170)]
public static void vpextrw(AssemblerRegister64 dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vpextrw instruction.<br/>
		/// <br/>
		/// <c>VPEXTRW r32/m16, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 15 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPEXTRW r32/m16, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 15 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669171)]
public static void vpextrw(AssemblerMemoryOperand dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vpextrw instruction.<br/>
		/// <br/>
		/// <c>VPEXTRW r32, xmm1, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.W0 C5 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPEXTRW r32, xmm1, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 C5 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669172)]
public static void vpextrw(AssemblerRegister32 dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vpextrw instruction.<br/>
		/// <br/>
		/// <c>VPEXTRW r64, xmm1, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.W1 C5 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>VPEXTRW r64, xmm1, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 C5 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100669173)]
public static void vpextrw(AssemblerRegister64 dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vpextrw instruction.<br/>
		/// <br/>
		/// <c>VPEXTRW r32/m16, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 15 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPEXTRW r32/m16, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 15 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669174)]
public static void vpextrw(AssemblerMemoryOperand dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vpgatherdd instruction.<br/>
		/// <br/>
		/// <c>VPGATHERDD xmm1 {k1}, vm32x</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 90 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669175)]
public static void vpgatherdd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpgatherdd instruction.<br/>
		/// <br/>
		/// <c>VPGATHERDD ymm1 {k1}, vm32y</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 90 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669176)]
public static void vpgatherdd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpgatherdd instruction.<br/>
		/// <br/>
		/// <c>VPGATHERDD zmm1 {k1}, vm32z</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 90 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669177)]
public static void vpgatherdd(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpgatherdd instruction.<br/>
		/// <br/>
		/// <c>VPGATHERDD xmm1, vm32x, xmm2</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 90 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669178)]
public static void vpgatherdd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpgatherdd instruction.<br/>
		/// <br/>
		/// <c>VPGATHERDD ymm1, vm32y, ymm2</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 90 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669179)]
public static void vpgatherdd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpgatherdq instruction.<br/>
		/// <br/>
		/// <c>VPGATHERDQ xmm1 {k1}, vm32x</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 90 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669180)]
public static void vpgatherdq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpgatherdq instruction.<br/>
		/// <br/>
		/// <c>VPGATHERDQ ymm1 {k1}, vm32x</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 90 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669181)]
public static void vpgatherdq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpgatherdq instruction.<br/>
		/// <br/>
		/// <c>VPGATHERDQ zmm1 {k1}, vm32y</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 90 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669182)]
public static void vpgatherdq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpgatherdq instruction.<br/>
		/// <br/>
		/// <c>VPGATHERDQ xmm1, vm32x, xmm2</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 90 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669183)]
public static void vpgatherdq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpgatherdq instruction.<br/>
		/// <br/>
		/// <c>VPGATHERDQ ymm1, vm32x, ymm2</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 90 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669184)]
public static void vpgatherdq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpgatherqd instruction.<br/>
		/// <br/>
		/// <c>VPGATHERQD xmm1 {k1}, vm64x</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 91 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPGATHERQD xmm1 {k1}, vm64y</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 91 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669185)]
public static void vpgatherqd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpgatherqd instruction.<br/>
		/// <br/>
		/// <c>VPGATHERQD ymm1 {k1}, vm64z</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 91 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669186)]
public static void vpgatherqd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpgatherqd instruction.<br/>
		/// <br/>
		/// <c>VPGATHERQD xmm1, vm64x, xmm2</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 91 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPGATHERQD xmm1, vm64y, xmm2</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 91 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669187)]
public static void vpgatherqd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpgatherqq instruction.<br/>
		/// <br/>
		/// <c>VPGATHERQQ xmm1 {k1}, vm64x</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 91 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669188)]
public static void vpgatherqq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpgatherqq instruction.<br/>
		/// <br/>
		/// <c>VPGATHERQQ ymm1 {k1}, vm64y</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 91 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669189)]
public static void vpgatherqq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpgatherqq instruction.<br/>
		/// <br/>
		/// <c>VPGATHERQQ zmm1 {k1}, vm64z</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 91 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669190)]
public static void vpgatherqq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpgatherqq instruction.<br/>
		/// <br/>
		/// <c>VPGATHERQQ xmm1, vm64x, xmm2</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 91 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669191)]
public static void vpgatherqq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpgatherqq instruction.<br/>
		/// <br/>
		/// <c>VPGATHERQQ ymm1, vm64y, ymm2</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 91 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669192)]
public static void vpgatherqq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, AssemblerRegisterYMM src2) {}
		/// <summary>vphaddbd instruction.<br/>
		/// <br/>
		/// <c>VPHADDBD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 C2 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669193)]
public static void vphaddbd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vphaddbd instruction.<br/>
		/// <br/>
		/// <c>VPHADDBD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 C2 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669194)]
public static void vphaddbd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vphaddbq instruction.<br/>
		/// <br/>
		/// <c>VPHADDBQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 C3 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669195)]
public static void vphaddbq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vphaddbq instruction.<br/>
		/// <br/>
		/// <c>VPHADDBQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 C3 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669196)]
public static void vphaddbq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vphaddbw instruction.<br/>
		/// <br/>
		/// <c>VPHADDBW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 C1 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669197)]
public static void vphaddbw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vphaddbw instruction.<br/>
		/// <br/>
		/// <c>VPHADDBW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 C1 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669198)]
public static void vphaddbw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vphaddd instruction.<br/>
		/// <br/>
		/// <c>VPHADDD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 02 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669199)]
public static void vphaddd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vphaddd instruction.<br/>
		/// <br/>
		/// <c>VPHADDD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 02 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669200)]
public static void vphaddd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vphaddd instruction.<br/>
		/// <br/>
		/// <c>VPHADDD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 02 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669201)]
public static void vphaddd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vphaddd instruction.<br/>
		/// <br/>
		/// <c>VPHADDD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 02 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669202)]
public static void vphaddd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vphadddq instruction.<br/>
		/// <br/>
		/// <c>VPHADDDQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 CB /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669203)]
public static void vphadddq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vphadddq instruction.<br/>
		/// <br/>
		/// <c>VPHADDDQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 CB /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669204)]
public static void vphadddq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vphaddsw instruction.<br/>
		/// <br/>
		/// <c>VPHADDSW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 03 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669205)]
public static void vphaddsw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vphaddsw instruction.<br/>
		/// <br/>
		/// <c>VPHADDSW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 03 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669206)]
public static void vphaddsw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vphaddsw instruction.<br/>
		/// <br/>
		/// <c>VPHADDSW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 03 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669207)]
public static void vphaddsw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vphaddsw instruction.<br/>
		/// <br/>
		/// <c>VPHADDSW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 03 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669208)]
public static void vphaddsw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vphaddubd instruction.<br/>
		/// <br/>
		/// <c>VPHADDUBD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 D2 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669209)]
public static void vphaddubd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vphaddubd instruction.<br/>
		/// <br/>
		/// <c>VPHADDUBD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 D2 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669210)]
public static void vphaddubd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vphaddubq instruction.<br/>
		/// <br/>
		/// <c>VPHADDUBQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 D3 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669211)]
public static void vphaddubq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vphaddubq instruction.<br/>
		/// <br/>
		/// <c>VPHADDUBQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 D3 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669212)]
public static void vphaddubq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vphaddubw instruction.<br/>
		/// <br/>
		/// <c>VPHADDUBW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 D1 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669213)]
public static void vphaddubw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vphaddubw instruction.<br/>
		/// <br/>
		/// <c>VPHADDUBW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 D1 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669214)]
public static void vphaddubw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vphaddudq instruction.<br/>
		/// <br/>
		/// <c>VPHADDUDQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 DB /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669215)]
public static void vphaddudq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vphaddudq instruction.<br/>
		/// <br/>
		/// <c>VPHADDUDQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 DB /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669216)]
public static void vphaddudq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vphadduwd instruction.<br/>
		/// <br/>
		/// <c>VPHADDUWD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 D6 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669217)]
public static void vphadduwd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vphadduwd instruction.<br/>
		/// <br/>
		/// <c>VPHADDUWD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 D6 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669218)]
public static void vphadduwd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vphadduwq instruction.<br/>
		/// <br/>
		/// <c>VPHADDUWQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 D7 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669219)]
public static void vphadduwq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vphadduwq instruction.<br/>
		/// <br/>
		/// <c>VPHADDUWQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 D7 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669220)]
public static void vphadduwq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vphaddw instruction.<br/>
		/// <br/>
		/// <c>VPHADDW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 01 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669221)]
public static void vphaddw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vphaddw instruction.<br/>
		/// <br/>
		/// <c>VPHADDW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 01 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669222)]
public static void vphaddw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vphaddw instruction.<br/>
		/// <br/>
		/// <c>VPHADDW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 01 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669223)]
public static void vphaddw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vphaddw instruction.<br/>
		/// <br/>
		/// <c>VPHADDW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 01 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669224)]
public static void vphaddw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vphaddwd instruction.<br/>
		/// <br/>
		/// <c>VPHADDWD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 C6 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669225)]
public static void vphaddwd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vphaddwd instruction.<br/>
		/// <br/>
		/// <c>VPHADDWD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 C6 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669226)]
public static void vphaddwd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vphaddwq instruction.<br/>
		/// <br/>
		/// <c>VPHADDWQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 C7 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669227)]
public static void vphaddwq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vphaddwq instruction.<br/>
		/// <br/>
		/// <c>VPHADDWQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 C7 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669228)]
public static void vphaddwq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vphminposuw instruction.<br/>
		/// <br/>
		/// <c>VPHMINPOSUW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 41 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669229)]
public static void vphminposuw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vphminposuw instruction.<br/>
		/// <br/>
		/// <c>VPHMINPOSUW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 41 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669230)]
public static void vphminposuw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vphsubbw instruction.<br/>
		/// <br/>
		/// <c>VPHSUBBW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 E1 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669231)]
public static void vphsubbw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vphsubbw instruction.<br/>
		/// <br/>
		/// <c>VPHSUBBW xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 E1 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669232)]
public static void vphsubbw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vphsubd instruction.<br/>
		/// <br/>
		/// <c>VPHSUBD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 06 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669233)]
public static void vphsubd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vphsubd instruction.<br/>
		/// <br/>
		/// <c>VPHSUBD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 06 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669234)]
public static void vphsubd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vphsubd instruction.<br/>
		/// <br/>
		/// <c>VPHSUBD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 06 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669235)]
public static void vphsubd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vphsubd instruction.<br/>
		/// <br/>
		/// <c>VPHSUBD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 06 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669236)]
public static void vphsubd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vphsubdq instruction.<br/>
		/// <br/>
		/// <c>VPHSUBDQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 E3 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669237)]
public static void vphsubdq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vphsubdq instruction.<br/>
		/// <br/>
		/// <c>VPHSUBDQ xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 E3 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669238)]
public static void vphsubdq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vphsubsw instruction.<br/>
		/// <br/>
		/// <c>VPHSUBSW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 07 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669239)]
public static void vphsubsw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vphsubsw instruction.<br/>
		/// <br/>
		/// <c>VPHSUBSW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 07 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669240)]
public static void vphsubsw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vphsubsw instruction.<br/>
		/// <br/>
		/// <c>VPHSUBSW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 07 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669241)]
public static void vphsubsw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vphsubsw instruction.<br/>
		/// <br/>
		/// <c>VPHSUBSW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 07 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669242)]
public static void vphsubsw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vphsubw instruction.<br/>
		/// <br/>
		/// <c>VPHSUBW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 05 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669243)]
public static void vphsubw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vphsubw instruction.<br/>
		/// <br/>
		/// <c>VPHSUBW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 05 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669244)]
public static void vphsubw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vphsubw instruction.<br/>
		/// <br/>
		/// <c>VPHSUBW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 05 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669245)]
public static void vphsubw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vphsubw instruction.<br/>
		/// <br/>
		/// <c>VPHSUBW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 05 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669246)]
public static void vphsubw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vphsubwd instruction.<br/>
		/// <br/>
		/// <c>VPHSUBWD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 E2 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669247)]
public static void vphsubwd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vphsubwd instruction.<br/>
		/// <br/>
		/// <c>VPHSUBWD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 E2 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669248)]
public static void vphsubwd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpinsrb instruction.<br/>
		/// <br/>
		/// <c>VPINSRB xmm1, xmm2, r32/m8, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 20 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPINSRB xmm1, xmm2, r32/m8, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 20 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669249)]
public static void vpinsrb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegister32 src2, sbyte imm) {}
		/// <summary>vpinsrb instruction.<br/>
		/// <br/>
		/// <c>VPINSRB xmm1, xmm2, r64/m8, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 20 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>VPINSRB xmm1, xmm2, r64/m8, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 20 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100669250)]
public static void vpinsrb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegister64 src2, sbyte imm) {}
		/// <summary>vpinsrb instruction.<br/>
		/// <br/>
		/// <c>VPINSRB xmm1, xmm2, r32/m8, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 20 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPINSRB xmm1, xmm2, r32/m8, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 20 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669251)]
public static void vpinsrb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpinsrb instruction.<br/>
		/// <br/>
		/// <c>VPINSRB xmm1, xmm2, r32/m8, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 20 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPINSRB xmm1, xmm2, r32/m8, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 20 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669252)]
public static void vpinsrb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegister32 src2, byte imm) {}
		/// <summary>vpinsrb instruction.<br/>
		/// <br/>
		/// <c>VPINSRB xmm1, xmm2, r64/m8, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 20 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>VPINSRB xmm1, xmm2, r64/m8, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 20 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100669253)]
public static void vpinsrb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegister64 src2, byte imm) {}
		/// <summary>vpinsrb instruction.<br/>
		/// <br/>
		/// <c>VPINSRB xmm1, xmm2, r32/m8, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 20 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPINSRB xmm1, xmm2, r32/m8, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 20 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669254)]
public static void vpinsrb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpinsrd instruction.<br/>
		/// <br/>
		/// <c>VPINSRD xmm1, xmm2, r/m32, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 22 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPINSRD xmm1, xmm2, r/m32, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 22 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669255)]
public static void vpinsrd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegister32 src2, sbyte imm) {}
		/// <summary>vpinsrd instruction.<br/>
		/// <br/>
		/// <c>VPINSRD xmm1, xmm2, r/m32, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 22 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPINSRD xmm1, xmm2, r/m32, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 22 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669256)]
public static void vpinsrd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpinsrd instruction.<br/>
		/// <br/>
		/// <c>VPINSRD xmm1, xmm2, r/m32, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 22 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPINSRD xmm1, xmm2, r/m32, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 22 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669257)]
public static void vpinsrd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegister32 src2, byte imm) {}
		/// <summary>vpinsrd instruction.<br/>
		/// <br/>
		/// <c>VPINSRD xmm1, xmm2, r/m32, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W0 22 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPINSRD xmm1, xmm2, r/m32, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 22 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669258)]
public static void vpinsrd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpinsrq instruction.<br/>
		/// <br/>
		/// <c>VPINSRQ xmm1, xmm2, r/m64, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 22 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>VPINSRQ xmm1, xmm2, r/m64, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 22 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100669259)]
public static void vpinsrq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegister64 src2, sbyte imm) {}
		/// <summary>vpinsrq instruction.<br/>
		/// <br/>
		/// <c>VPINSRQ xmm1, xmm2, r/m64, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 22 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>VPINSRQ xmm1, xmm2, r/m64, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 22 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100669260)]
public static void vpinsrq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpinsrq instruction.<br/>
		/// <br/>
		/// <c>VPINSRQ xmm1, xmm2, r/m64, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 22 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>VPINSRQ xmm1, xmm2, r/m64, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 22 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100669261)]
public static void vpinsrq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegister64 src2, byte imm) {}
		/// <summary>vpinsrq instruction.<br/>
		/// <br/>
		/// <c>VPINSRQ xmm1, xmm2, r/m64, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.W1 22 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>VPINSRQ xmm1, xmm2, r/m64, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 22 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100669262)]
public static void vpinsrq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpinsrw instruction.<br/>
		/// <br/>
		/// <c>VPINSRW xmm1, xmm2, r32/m16, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.W0 C4 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPINSRW xmm1, xmm2, r32/m16, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 C4 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669263)]
public static void vpinsrw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegister32 src2, sbyte imm) {}
		/// <summary>vpinsrw instruction.<br/>
		/// <br/>
		/// <c>VPINSRW xmm1, xmm2, r64/m16, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.W1 C4 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>VPINSRW xmm1, xmm2, r64/m16, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 C4 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100669264)]
public static void vpinsrw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegister64 src2, sbyte imm) {}
		/// <summary>vpinsrw instruction.<br/>
		/// <br/>
		/// <c>VPINSRW xmm1, xmm2, r32/m16, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.W0 C4 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPINSRW xmm1, xmm2, r32/m16, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 C4 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669265)]
public static void vpinsrw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpinsrw instruction.<br/>
		/// <br/>
		/// <c>VPINSRW xmm1, xmm2, r32/m16, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.W0 C4 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPINSRW xmm1, xmm2, r32/m16, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 C4 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669266)]
public static void vpinsrw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegister32 src2, byte imm) {}
		/// <summary>vpinsrw instruction.<br/>
		/// <br/>
		/// <c>VPINSRW xmm1, xmm2, r64/m16, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.W1 C4 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>VPINSRW xmm1, xmm2, r64/m16, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 C4 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100669267)]
public static void vpinsrw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegister64 src2, byte imm) {}
		/// <summary>vpinsrw instruction.<br/>
		/// <br/>
		/// <c>VPINSRW xmm1, xmm2, r32/m16, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.W0 C4 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPINSRW xmm1, xmm2, r32/m16, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 C4 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669268)]
public static void vpinsrw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vplzcntd instruction.<br/>
		/// <br/>
		/// <c>VPLZCNTD xmm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 44 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512CD</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669269)]
public static void vplzcntd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vplzcntd instruction.<br/>
		/// <br/>
		/// <c>VPLZCNTD ymm1 {k1}{z}, ymm2/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 44 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512CD</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669270)]
public static void vplzcntd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vplzcntd instruction.<br/>
		/// <br/>
		/// <c>VPLZCNTD zmm1 {k1}{z}, zmm2/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 44 /r</c><br/>
		/// <br/>
		/// <c>AVX512CD</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669271)]
public static void vplzcntd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vplzcntd instruction.<br/>
		/// <br/>
		/// <c>VPLZCNTD xmm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 44 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512CD</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669272)]
public static void vplzcntd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vplzcntd instruction.<br/>
		/// <br/>
		/// <c>VPLZCNTD ymm1 {k1}{z}, ymm2/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 44 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512CD</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669273)]
public static void vplzcntd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vplzcntd instruction.<br/>
		/// <br/>
		/// <c>VPLZCNTD zmm1 {k1}{z}, zmm2/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 44 /r</c><br/>
		/// <br/>
		/// <c>AVX512CD</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669274)]
public static void vplzcntd(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vplzcntq instruction.<br/>
		/// <br/>
		/// <c>VPLZCNTQ xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 44 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512CD</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669275)]
public static void vplzcntq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vplzcntq instruction.<br/>
		/// <br/>
		/// <c>VPLZCNTQ ymm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 44 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512CD</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669276)]
public static void vplzcntq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vplzcntq instruction.<br/>
		/// <br/>
		/// <c>VPLZCNTQ zmm1 {k1}{z}, zmm2/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 44 /r</c><br/>
		/// <br/>
		/// <c>AVX512CD</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669277)]
public static void vplzcntq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vplzcntq instruction.<br/>
		/// <br/>
		/// <c>VPLZCNTQ xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 44 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512CD</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669278)]
public static void vplzcntq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vplzcntq instruction.<br/>
		/// <br/>
		/// <c>VPLZCNTQ ymm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 44 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512CD</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669279)]
public static void vplzcntq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vplzcntq instruction.<br/>
		/// <br/>
		/// <c>VPLZCNTQ zmm1 {k1}{z}, zmm2/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 44 /r</c><br/>
		/// <br/>
		/// <c>AVX512CD</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669280)]
public static void vplzcntq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpmacsdd instruction.<br/>
		/// <br/>
		/// <c>VPMACSDD xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 9E /r /is4</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669281)]
public static void vpmacsdd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerRegisterXMM src3) {}
		/// <summary>vpmacsdd instruction.<br/>
		/// <br/>
		/// <c>VPMACSDD xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 9E /r /is4</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669282)]
public static void vpmacsdd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, AssemblerRegisterXMM src3) {}
		/// <summary>vpmacsdqh instruction.<br/>
		/// <br/>
		/// <c>VPMACSDQH xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 9F /r /is4</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669283)]
public static void vpmacsdqh(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerRegisterXMM src3) {}
		/// <summary>vpmacsdqh instruction.<br/>
		/// <br/>
		/// <c>VPMACSDQH xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 9F /r /is4</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669284)]
public static void vpmacsdqh(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, AssemblerRegisterXMM src3) {}
		/// <summary>vpmacsdql instruction.<br/>
		/// <br/>
		/// <c>VPMACSDQL xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 97 /r /is4</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669285)]
public static void vpmacsdql(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerRegisterXMM src3) {}
		/// <summary>vpmacsdql instruction.<br/>
		/// <br/>
		/// <c>VPMACSDQL xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 97 /r /is4</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669286)]
public static void vpmacsdql(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, AssemblerRegisterXMM src3) {}
		/// <summary>vpmacssdd instruction.<br/>
		/// <br/>
		/// <c>VPMACSSDD xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 8E /r /is4</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669287)]
public static void vpmacssdd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerRegisterXMM src3) {}
		/// <summary>vpmacssdd instruction.<br/>
		/// <br/>
		/// <c>VPMACSSDD xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 8E /r /is4</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669288)]
public static void vpmacssdd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, AssemblerRegisterXMM src3) {}
		/// <summary>vpmacssdqh instruction.<br/>
		/// <br/>
		/// <c>VPMACSSDQH xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 8F /r /is4</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669289)]
public static void vpmacssdqh(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerRegisterXMM src3) {}
		/// <summary>vpmacssdqh instruction.<br/>
		/// <br/>
		/// <c>VPMACSSDQH xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 8F /r /is4</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669290)]
public static void vpmacssdqh(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, AssemblerRegisterXMM src3) {}
		/// <summary>vpmacssdql instruction.<br/>
		/// <br/>
		/// <c>VPMACSSDQL xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 87 /r /is4</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669291)]
public static void vpmacssdql(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerRegisterXMM src3) {}
		/// <summary>vpmacssdql instruction.<br/>
		/// <br/>
		/// <c>VPMACSSDQL xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 87 /r /is4</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669292)]
public static void vpmacssdql(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, AssemblerRegisterXMM src3) {}
		/// <summary>vpmacsswd instruction.<br/>
		/// <br/>
		/// <c>VPMACSSWD xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 86 /r /is4</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669293)]
public static void vpmacsswd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerRegisterXMM src3) {}
		/// <summary>vpmacsswd instruction.<br/>
		/// <br/>
		/// <c>VPMACSSWD xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 86 /r /is4</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669294)]
public static void vpmacsswd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, AssemblerRegisterXMM src3) {}
		/// <summary>vpmacssww instruction.<br/>
		/// <br/>
		/// <c>VPMACSSWW xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 85 /r /is4</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669295)]
public static void vpmacssww(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerRegisterXMM src3) {}
		/// <summary>vpmacssww instruction.<br/>
		/// <br/>
		/// <c>VPMACSSWW xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 85 /r /is4</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669296)]
public static void vpmacssww(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, AssemblerRegisterXMM src3) {}
		/// <summary>vpmacswd instruction.<br/>
		/// <br/>
		/// <c>VPMACSWD xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 96 /r /is4</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669297)]
public static void vpmacswd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerRegisterXMM src3) {}
		/// <summary>vpmacswd instruction.<br/>
		/// <br/>
		/// <c>VPMACSWD xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 96 /r /is4</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669298)]
public static void vpmacswd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, AssemblerRegisterXMM src3) {}
		/// <summary>vpmacsww instruction.<br/>
		/// <br/>
		/// <c>VPMACSWW xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 95 /r /is4</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669299)]
public static void vpmacsww(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerRegisterXMM src3) {}
		/// <summary>vpmacsww instruction.<br/>
		/// <br/>
		/// <c>VPMACSWW xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 95 /r /is4</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669300)]
public static void vpmacsww(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, AssemblerRegisterXMM src3) {}
		/// <summary>vpmadcsswd instruction.<br/>
		/// <br/>
		/// <c>VPMADCSSWD xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 A6 /r /is4</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669301)]
public static void vpmadcsswd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerRegisterXMM src3) {}
		/// <summary>vpmadcsswd instruction.<br/>
		/// <br/>
		/// <c>VPMADCSSWD xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 A6 /r /is4</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669302)]
public static void vpmadcsswd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, AssemblerRegisterXMM src3) {}
		/// <summary>vpmadcswd instruction.<br/>
		/// <br/>
		/// <c>VPMADCSWD xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 B6 /r /is4</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669303)]
public static void vpmadcswd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerRegisterXMM src3) {}
		/// <summary>vpmadcswd instruction.<br/>
		/// <br/>
		/// <c>VPMADCSWD xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 B6 /r /is4</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669304)]
public static void vpmadcswd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, AssemblerRegisterXMM src3) {}
		/// <summary>vpmadd52huq instruction.<br/>
		/// <br/>
		/// <c>VPMADD52HUQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 B5 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_IFMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669305)]
public static void vpmadd52huq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpmadd52huq instruction.<br/>
		/// <br/>
		/// <c>VPMADD52HUQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 B5 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_IFMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669306)]
public static void vpmadd52huq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpmadd52huq instruction.<br/>
		/// <br/>
		/// <c>VPMADD52HUQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 B5 /r</c><br/>
		/// <br/>
		/// <c>AVX512_IFMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669307)]
public static void vpmadd52huq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpmadd52huq instruction.<br/>
		/// <br/>
		/// <c>VPMADD52HUQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 B5 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_IFMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669308)]
public static void vpmadd52huq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmadd52huq instruction.<br/>
		/// <br/>
		/// <c>VPMADD52HUQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 B5 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_IFMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669309)]
public static void vpmadd52huq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmadd52huq instruction.<br/>
		/// <br/>
		/// <c>VPMADD52HUQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 B5 /r</c><br/>
		/// <br/>
		/// <c>AVX512_IFMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669310)]
public static void vpmadd52huq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmadd52luq instruction.<br/>
		/// <br/>
		/// <c>VPMADD52LUQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 B4 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_IFMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669311)]
public static void vpmadd52luq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpmadd52luq instruction.<br/>
		/// <br/>
		/// <c>VPMADD52LUQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 B4 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_IFMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669312)]
public static void vpmadd52luq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpmadd52luq instruction.<br/>
		/// <br/>
		/// <c>VPMADD52LUQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 B4 /r</c><br/>
		/// <br/>
		/// <c>AVX512_IFMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669313)]
public static void vpmadd52luq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpmadd52luq instruction.<br/>
		/// <br/>
		/// <c>VPMADD52LUQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 B4 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_IFMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669314)]
public static void vpmadd52luq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmadd52luq instruction.<br/>
		/// <br/>
		/// <c>VPMADD52LUQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 B4 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_IFMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669315)]
public static void vpmadd52luq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmadd52luq instruction.<br/>
		/// <br/>
		/// <c>VPMADD52LUQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 B4 /r</c><br/>
		/// <br/>
		/// <c>AVX512_IFMA</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669316)]
public static void vpmadd52luq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmaddubsw instruction.<br/>
		/// <br/>
		/// <c>VPMADDUBSW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 04 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMADDUBSW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG 04 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669317)]
public static void vpmaddubsw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpmaddubsw instruction.<br/>
		/// <br/>
		/// <c>VPMADDUBSW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 04 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMADDUBSW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG 04 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669318)]
public static void vpmaddubsw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpmaddubsw instruction.<br/>
		/// <br/>
		/// <c>VPMADDUBSW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG 04 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669319)]
public static void vpmaddubsw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpmaddubsw instruction.<br/>
		/// <br/>
		/// <c>VPMADDUBSW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 04 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMADDUBSW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG 04 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669320)]
public static void vpmaddubsw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmaddubsw instruction.<br/>
		/// <br/>
		/// <c>VPMADDUBSW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 04 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMADDUBSW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG 04 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669321)]
public static void vpmaddubsw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmaddubsw instruction.<br/>
		/// <br/>
		/// <c>VPMADDUBSW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG 04 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669322)]
public static void vpmaddubsw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmaddwd instruction.<br/>
		/// <br/>
		/// <c>VPMADDWD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG F5 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMADDWD xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG F5 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669323)]
public static void vpmaddwd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpmaddwd instruction.<br/>
		/// <br/>
		/// <c>VPMADDWD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG F5 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMADDWD ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG F5 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669324)]
public static void vpmaddwd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpmaddwd instruction.<br/>
		/// <br/>
		/// <c>VPMADDWD zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG F5 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669325)]
public static void vpmaddwd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpmaddwd instruction.<br/>
		/// <br/>
		/// <c>VPMADDWD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG F5 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMADDWD xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG F5 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669326)]
public static void vpmaddwd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmaddwd instruction.<br/>
		/// <br/>
		/// <c>VPMADDWD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG F5 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMADDWD ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG F5 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669327)]
public static void vpmaddwd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmaddwd instruction.<br/>
		/// <br/>
		/// <c>VPMADDWD zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG F5 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669328)]
public static void vpmaddwd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmaskmovd instruction.<br/>
		/// <br/>
		/// <c>VPMASKMOVD m128, xmm1, xmm2</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 8E /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669329)]
public static void vpmaskmovd(AssemblerMemoryOperand dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpmaskmovd instruction.<br/>
		/// <br/>
		/// <c>VPMASKMOVD m256, ymm1, ymm2</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 8E /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669330)]
public static void vpmaskmovd(AssemblerMemoryOperand dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpmaskmovd instruction.<br/>
		/// <br/>
		/// <c>VPMASKMOVD xmm1, xmm2, m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 8C /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669331)]
public static void vpmaskmovd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmaskmovd instruction.<br/>
		/// <br/>
		/// <c>VPMASKMOVD ymm1, ymm2, m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 8C /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669332)]
public static void vpmaskmovd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmaskmovq instruction.<br/>
		/// <br/>
		/// <c>VPMASKMOVQ m128, xmm1, xmm2</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 8E /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669333)]
public static void vpmaskmovq(AssemblerMemoryOperand dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpmaskmovq instruction.<br/>
		/// <br/>
		/// <c>VPMASKMOVQ m256, ymm1, ymm2</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 8E /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669334)]
public static void vpmaskmovq(AssemblerMemoryOperand dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpmaskmovq instruction.<br/>
		/// <br/>
		/// <c>VPMASKMOVQ xmm1, xmm2, m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 8C /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669335)]
public static void vpmaskmovq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmaskmovq instruction.<br/>
		/// <br/>
		/// <c>VPMASKMOVQ ymm1, ymm2, m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 8C /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669336)]
public static void vpmaskmovq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmaxsb instruction.<br/>
		/// <br/>
		/// <c>VPMAXSB xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 3C /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMAXSB xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG 3C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669337)]
public static void vpmaxsb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpmaxsb instruction.<br/>
		/// <br/>
		/// <c>VPMAXSB ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 3C /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMAXSB ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG 3C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669338)]
public static void vpmaxsb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpmaxsb instruction.<br/>
		/// <br/>
		/// <c>VPMAXSB zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG 3C /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669339)]
public static void vpmaxsb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpmaxsb instruction.<br/>
		/// <br/>
		/// <c>VPMAXSB xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 3C /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMAXSB xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG 3C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669340)]
public static void vpmaxsb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmaxsb instruction.<br/>
		/// <br/>
		/// <c>VPMAXSB ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 3C /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMAXSB ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG 3C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669341)]
public static void vpmaxsb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmaxsb instruction.<br/>
		/// <br/>
		/// <c>VPMAXSB zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG 3C /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669342)]
public static void vpmaxsb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmaxsd instruction.<br/>
		/// <br/>
		/// <c>VPMAXSD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 3D /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMAXSD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 3D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669343)]
public static void vpmaxsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpmaxsd instruction.<br/>
		/// <br/>
		/// <c>VPMAXSD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 3D /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMAXSD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 3D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669344)]
public static void vpmaxsd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpmaxsd instruction.<br/>
		/// <br/>
		/// <c>VPMAXSD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 3D /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669345)]
public static void vpmaxsd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpmaxsd instruction.<br/>
		/// <br/>
		/// <c>VPMAXSD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 3D /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMAXSD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 3D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669346)]
public static void vpmaxsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmaxsd instruction.<br/>
		/// <br/>
		/// <c>VPMAXSD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 3D /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMAXSD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 3D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669347)]
public static void vpmaxsd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmaxsd instruction.<br/>
		/// <br/>
		/// <c>VPMAXSD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 3D /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669348)]
public static void vpmaxsd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmaxsq instruction.<br/>
		/// <br/>
		/// <c>VPMAXSQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 3D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669349)]
public static void vpmaxsq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpmaxsq instruction.<br/>
		/// <br/>
		/// <c>VPMAXSQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 3D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669350)]
public static void vpmaxsq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpmaxsq instruction.<br/>
		/// <br/>
		/// <c>VPMAXSQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 3D /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669351)]
public static void vpmaxsq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpmaxsq instruction.<br/>
		/// <br/>
		/// <c>VPMAXSQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 3D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669352)]
public static void vpmaxsq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmaxsq instruction.<br/>
		/// <br/>
		/// <c>VPMAXSQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 3D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669353)]
public static void vpmaxsq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmaxsq instruction.<br/>
		/// <br/>
		/// <c>VPMAXSQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 3D /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669354)]
public static void vpmaxsq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmaxsw instruction.<br/>
		/// <br/>
		/// <c>VPMAXSW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG EE /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMAXSW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG EE /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669355)]
public static void vpmaxsw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpmaxsw instruction.<br/>
		/// <br/>
		/// <c>VPMAXSW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG EE /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMAXSW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG EE /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669356)]
public static void vpmaxsw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpmaxsw instruction.<br/>
		/// <br/>
		/// <c>VPMAXSW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG EE /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669357)]
public static void vpmaxsw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpmaxsw instruction.<br/>
		/// <br/>
		/// <c>VPMAXSW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG EE /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMAXSW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG EE /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669358)]
public static void vpmaxsw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmaxsw instruction.<br/>
		/// <br/>
		/// <c>VPMAXSW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG EE /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMAXSW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG EE /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669359)]
public static void vpmaxsw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmaxsw instruction.<br/>
		/// <br/>
		/// <c>VPMAXSW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG EE /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669360)]
public static void vpmaxsw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmaxub instruction.<br/>
		/// <br/>
		/// <c>VPMAXUB xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG DE /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMAXUB xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG DE /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669361)]
public static void vpmaxub(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpmaxub instruction.<br/>
		/// <br/>
		/// <c>VPMAXUB ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG DE /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMAXUB ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG DE /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669362)]
public static void vpmaxub(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpmaxub instruction.<br/>
		/// <br/>
		/// <c>VPMAXUB zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG DE /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669363)]
public static void vpmaxub(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpmaxub instruction.<br/>
		/// <br/>
		/// <c>VPMAXUB xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG DE /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMAXUB xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG DE /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669364)]
public static void vpmaxub(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmaxub instruction.<br/>
		/// <br/>
		/// <c>VPMAXUB ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG DE /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMAXUB ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG DE /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669365)]
public static void vpmaxub(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmaxub instruction.<br/>
		/// <br/>
		/// <c>VPMAXUB zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG DE /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669366)]
public static void vpmaxub(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmaxud instruction.<br/>
		/// <br/>
		/// <c>VPMAXUD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 3F /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMAXUD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 3F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669367)]
public static void vpmaxud(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpmaxud instruction.<br/>
		/// <br/>
		/// <c>VPMAXUD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 3F /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMAXUD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 3F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669368)]
public static void vpmaxud(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpmaxud instruction.<br/>
		/// <br/>
		/// <c>VPMAXUD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 3F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669369)]
public static void vpmaxud(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpmaxud instruction.<br/>
		/// <br/>
		/// <c>VPMAXUD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 3F /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMAXUD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 3F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669370)]
public static void vpmaxud(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmaxud instruction.<br/>
		/// <br/>
		/// <c>VPMAXUD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 3F /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMAXUD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 3F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669371)]
public static void vpmaxud(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmaxud instruction.<br/>
		/// <br/>
		/// <c>VPMAXUD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 3F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669372)]
public static void vpmaxud(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmaxuq instruction.<br/>
		/// <br/>
		/// <c>VPMAXUQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 3F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669373)]
public static void vpmaxuq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpmaxuq instruction.<br/>
		/// <br/>
		/// <c>VPMAXUQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 3F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669374)]
public static void vpmaxuq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpmaxuq instruction.<br/>
		/// <br/>
		/// <c>VPMAXUQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 3F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669375)]
public static void vpmaxuq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpmaxuq instruction.<br/>
		/// <br/>
		/// <c>VPMAXUQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 3F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669376)]
public static void vpmaxuq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmaxuq instruction.<br/>
		/// <br/>
		/// <c>VPMAXUQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 3F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669377)]
public static void vpmaxuq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmaxuq instruction.<br/>
		/// <br/>
		/// <c>VPMAXUQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 3F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669378)]
public static void vpmaxuq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmaxuw instruction.<br/>
		/// <br/>
		/// <c>VPMAXUW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 3E /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMAXUW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG 3E /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669379)]
public static void vpmaxuw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpmaxuw instruction.<br/>
		/// <br/>
		/// <c>VPMAXUW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 3E /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMAXUW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG 3E /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669380)]
public static void vpmaxuw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpmaxuw instruction.<br/>
		/// <br/>
		/// <c>VPMAXUW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG 3E /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669381)]
public static void vpmaxuw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpmaxuw instruction.<br/>
		/// <br/>
		/// <c>VPMAXUW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 3E /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMAXUW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG 3E /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669382)]
public static void vpmaxuw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmaxuw instruction.<br/>
		/// <br/>
		/// <c>VPMAXUW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 3E /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMAXUW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG 3E /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669383)]
public static void vpmaxuw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmaxuw instruction.<br/>
		/// <br/>
		/// <c>VPMAXUW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG 3E /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669384)]
public static void vpmaxuw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpminsb instruction.<br/>
		/// <br/>
		/// <c>VPMINSB xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 38 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMINSB xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG 38 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669385)]
public static void vpminsb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpminsb instruction.<br/>
		/// <br/>
		/// <c>VPMINSB ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 38 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMINSB ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG 38 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669386)]
public static void vpminsb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpminsb instruction.<br/>
		/// <br/>
		/// <c>VPMINSB zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG 38 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669387)]
public static void vpminsb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpminsb instruction.<br/>
		/// <br/>
		/// <c>VPMINSB xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 38 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMINSB xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG 38 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669388)]
public static void vpminsb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpminsb instruction.<br/>
		/// <br/>
		/// <c>VPMINSB ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 38 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMINSB ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG 38 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669389)]
public static void vpminsb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpminsb instruction.<br/>
		/// <br/>
		/// <c>VPMINSB zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG 38 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669390)]
public static void vpminsb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpminsd instruction.<br/>
		/// <br/>
		/// <c>VPMINSD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 39 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMINSD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 39 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669391)]
public static void vpminsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpminsd instruction.<br/>
		/// <br/>
		/// <c>VPMINSD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 39 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMINSD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 39 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669392)]
public static void vpminsd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpminsd instruction.<br/>
		/// <br/>
		/// <c>VPMINSD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 39 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669393)]
public static void vpminsd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpminsd instruction.<br/>
		/// <br/>
		/// <c>VPMINSD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 39 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMINSD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 39 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669394)]
public static void vpminsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpminsd instruction.<br/>
		/// <br/>
		/// <c>VPMINSD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 39 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMINSD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 39 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669395)]
public static void vpminsd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpminsd instruction.<br/>
		/// <br/>
		/// <c>VPMINSD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 39 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669396)]
public static void vpminsd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpminsq instruction.<br/>
		/// <br/>
		/// <c>VPMINSQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 39 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669397)]
public static void vpminsq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpminsq instruction.<br/>
		/// <br/>
		/// <c>VPMINSQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 39 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669398)]
public static void vpminsq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpminsq instruction.<br/>
		/// <br/>
		/// <c>VPMINSQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 39 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669399)]
public static void vpminsq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpminsq instruction.<br/>
		/// <br/>
		/// <c>VPMINSQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 39 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669400)]
public static void vpminsq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpminsq instruction.<br/>
		/// <br/>
		/// <c>VPMINSQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 39 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669401)]
public static void vpminsq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpminsq instruction.<br/>
		/// <br/>
		/// <c>VPMINSQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 39 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669402)]
public static void vpminsq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpminsw instruction.<br/>
		/// <br/>
		/// <c>VPMINSW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG EA /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMINSW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG EA /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669403)]
public static void vpminsw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpminsw instruction.<br/>
		/// <br/>
		/// <c>VPMINSW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG EA /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMINSW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG EA /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669404)]
public static void vpminsw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpminsw instruction.<br/>
		/// <br/>
		/// <c>VPMINSW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG EA /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669405)]
public static void vpminsw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpminsw instruction.<br/>
		/// <br/>
		/// <c>VPMINSW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG EA /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMINSW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG EA /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669406)]
public static void vpminsw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpminsw instruction.<br/>
		/// <br/>
		/// <c>VPMINSW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG EA /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMINSW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG EA /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669407)]
public static void vpminsw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpminsw instruction.<br/>
		/// <br/>
		/// <c>VPMINSW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG EA /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669408)]
public static void vpminsw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpminub instruction.<br/>
		/// <br/>
		/// <c>VPMINUB xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG DA /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMINUB xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG DA /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669409)]
public static void vpminub(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpminub instruction.<br/>
		/// <br/>
		/// <c>VPMINUB ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG DA /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMINUB ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG DA /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669410)]
public static void vpminub(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpminub instruction.<br/>
		/// <br/>
		/// <c>VPMINUB zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG DA /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669411)]
public static void vpminub(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpminub instruction.<br/>
		/// <br/>
		/// <c>VPMINUB xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG DA /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMINUB xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG DA /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669412)]
public static void vpminub(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpminub instruction.<br/>
		/// <br/>
		/// <c>VPMINUB ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG DA /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMINUB ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG DA /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669413)]
public static void vpminub(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpminub instruction.<br/>
		/// <br/>
		/// <c>VPMINUB zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG DA /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669414)]
public static void vpminub(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpminud instruction.<br/>
		/// <br/>
		/// <c>VPMINUD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 3B /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMINUD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 3B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669415)]
public static void vpminud(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpminud instruction.<br/>
		/// <br/>
		/// <c>VPMINUD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 3B /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMINUD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 3B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669416)]
public static void vpminud(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpminud instruction.<br/>
		/// <br/>
		/// <c>VPMINUD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 3B /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669417)]
public static void vpminud(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpminud instruction.<br/>
		/// <br/>
		/// <c>VPMINUD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 3B /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMINUD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 3B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669418)]
public static void vpminud(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpminud instruction.<br/>
		/// <br/>
		/// <c>VPMINUD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 3B /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMINUD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 3B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669419)]
public static void vpminud(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpminud instruction.<br/>
		/// <br/>
		/// <c>VPMINUD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 3B /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669420)]
public static void vpminud(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpminuq instruction.<br/>
		/// <br/>
		/// <c>VPMINUQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 3B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669421)]
public static void vpminuq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpminuq instruction.<br/>
		/// <br/>
		/// <c>VPMINUQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 3B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669422)]
public static void vpminuq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpminuq instruction.<br/>
		/// <br/>
		/// <c>VPMINUQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 3B /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669423)]
public static void vpminuq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpminuq instruction.<br/>
		/// <br/>
		/// <c>VPMINUQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 3B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669424)]
public static void vpminuq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpminuq instruction.<br/>
		/// <br/>
		/// <c>VPMINUQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 3B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669425)]
public static void vpminuq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpminuq instruction.<br/>
		/// <br/>
		/// <c>VPMINUQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 3B /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669426)]
public static void vpminuq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpminuw instruction.<br/>
		/// <br/>
		/// <c>VPMINUW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 3A /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMINUW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG 3A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669427)]
public static void vpminuw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpminuw instruction.<br/>
		/// <br/>
		/// <c>VPMINUW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 3A /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMINUW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG 3A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669428)]
public static void vpminuw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpminuw instruction.<br/>
		/// <br/>
		/// <c>VPMINUW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG 3A /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669429)]
public static void vpminuw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpminuw instruction.<br/>
		/// <br/>
		/// <c>VPMINUW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 3A /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMINUW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG 3A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669430)]
public static void vpminuw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpminuw instruction.<br/>
		/// <br/>
		/// <c>VPMINUW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 3A /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMINUW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG 3A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669431)]
public static void vpminuw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpminuw instruction.<br/>
		/// <br/>
		/// <c>VPMINUW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG 3A /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669432)]
public static void vpminuw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmovb2m instruction.<br/>
		/// <br/>
		/// <c>VPMOVB2M k1, xmm1</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 29 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669433)]
public static void vpmovb2m(AssemblerRegisterK dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovb2m instruction.<br/>
		/// <br/>
		/// <c>VPMOVB2M k1, ymm1</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 29 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669434)]
public static void vpmovb2m(AssemblerRegisterK dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovb2m instruction.<br/>
		/// <br/>
		/// <c>VPMOVB2M k1, zmm1</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 29 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669435)]
public static void vpmovb2m(AssemblerRegisterK dst, AssemblerRegisterZMM src) {}
		/// <summary>vpmovd2m instruction.<br/>
		/// <br/>
		/// <c>VPMOVD2M k1, xmm1</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 39 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669436)]
public static void vpmovd2m(AssemblerRegisterK dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovd2m instruction.<br/>
		/// <br/>
		/// <c>VPMOVD2M k1, ymm1</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 39 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669437)]
public static void vpmovd2m(AssemblerRegisterK dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovd2m instruction.<br/>
		/// <br/>
		/// <c>VPMOVD2M k1, zmm1</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 39 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669438)]
public static void vpmovd2m(AssemblerRegisterK dst, AssemblerRegisterZMM src) {}
		/// <summary>vpmovdb instruction.<br/>
		/// <br/>
		/// <c>VPMOVDB xmm1/m32 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 31 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669439)]
public static void vpmovdb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovdb instruction.<br/>
		/// <br/>
		/// <c>VPMOVDB xmm1/m32 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 31 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669440)]
public static void vpmovdb(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovdb instruction.<br/>
		/// <br/>
		/// <c>VPMOVDB xmm1/m64 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 31 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669441)]
public static void vpmovdb(AssemblerRegisterXMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovdb instruction.<br/>
		/// <br/>
		/// <c>VPMOVDB xmm1/m64 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 31 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669442)]
public static void vpmovdb(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovdb instruction.<br/>
		/// <br/>
		/// <c>VPMOVDB xmm1/m128 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 31 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669443)]
public static void vpmovdb(AssemblerRegisterXMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vpmovdb instruction.<br/>
		/// <br/>
		/// <c>VPMOVDB xmm1/m128 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 31 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669444)]
public static void vpmovdb(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vpmovdw instruction.<br/>
		/// <br/>
		/// <c>VPMOVDW xmm1/m64 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 33 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669445)]
public static void vpmovdw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovdw instruction.<br/>
		/// <br/>
		/// <c>VPMOVDW xmm1/m64 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 33 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669446)]
public static void vpmovdw(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovdw instruction.<br/>
		/// <br/>
		/// <c>VPMOVDW xmm1/m128 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 33 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669447)]
public static void vpmovdw(AssemblerRegisterXMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovdw instruction.<br/>
		/// <br/>
		/// <c>VPMOVDW xmm1/m128 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 33 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669448)]
public static void vpmovdw(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovdw instruction.<br/>
		/// <br/>
		/// <c>VPMOVDW ymm1/m256 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 33 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669449)]
public static void vpmovdw(AssemblerRegisterYMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vpmovdw instruction.<br/>
		/// <br/>
		/// <c>VPMOVDW ymm1/m256 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 33 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669450)]
public static void vpmovdw(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vpmovm2b instruction.<br/>
		/// <br/>
		/// <c>VPMOVM2B xmm1, k1</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 28 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669451)]
public static void vpmovm2b(AssemblerRegisterXMM dst, AssemblerRegisterK src) {}
		/// <summary>vpmovm2b instruction.<br/>
		/// <br/>
		/// <c>VPMOVM2B ymm1, k1</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 28 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669452)]
public static void vpmovm2b(AssemblerRegisterYMM dst, AssemblerRegisterK src) {}
		/// <summary>vpmovm2b instruction.<br/>
		/// <br/>
		/// <c>VPMOVM2B zmm1, k1</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 28 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669453)]
public static void vpmovm2b(AssemblerRegisterZMM dst, AssemblerRegisterK src) {}
		/// <summary>vpmovm2d instruction.<br/>
		/// <br/>
		/// <c>VPMOVM2D xmm1, k1</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 38 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669454)]
public static void vpmovm2d(AssemblerRegisterXMM dst, AssemblerRegisterK src) {}
		/// <summary>vpmovm2d instruction.<br/>
		/// <br/>
		/// <c>VPMOVM2D ymm1, k1</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 38 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669455)]
public static void vpmovm2d(AssemblerRegisterYMM dst, AssemblerRegisterK src) {}
		/// <summary>vpmovm2d instruction.<br/>
		/// <br/>
		/// <c>VPMOVM2D zmm1, k1</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 38 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669456)]
public static void vpmovm2d(AssemblerRegisterZMM dst, AssemblerRegisterK src) {}
		/// <summary>vpmovm2q instruction.<br/>
		/// <br/>
		/// <c>VPMOVM2Q xmm1, k1</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W1 38 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669457)]
public static void vpmovm2q(AssemblerRegisterXMM dst, AssemblerRegisterK src) {}
		/// <summary>vpmovm2q instruction.<br/>
		/// <br/>
		/// <c>VPMOVM2Q ymm1, k1</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W1 38 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669458)]
public static void vpmovm2q(AssemblerRegisterYMM dst, AssemblerRegisterK src) {}
		/// <summary>vpmovm2q instruction.<br/>
		/// <br/>
		/// <c>VPMOVM2Q zmm1, k1</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W1 38 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669459)]
public static void vpmovm2q(AssemblerRegisterZMM dst, AssemblerRegisterK src) {}
		/// <summary>vpmovm2w instruction.<br/>
		/// <br/>
		/// <c>VPMOVM2W xmm1, k1</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W1 28 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669460)]
public static void vpmovm2w(AssemblerRegisterXMM dst, AssemblerRegisterK src) {}
		/// <summary>vpmovm2w instruction.<br/>
		/// <br/>
		/// <c>VPMOVM2W ymm1, k1</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W1 28 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669461)]
public static void vpmovm2w(AssemblerRegisterYMM dst, AssemblerRegisterK src) {}
		/// <summary>vpmovm2w instruction.<br/>
		/// <br/>
		/// <c>VPMOVM2W zmm1, k1</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W1 28 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669462)]
public static void vpmovm2w(AssemblerRegisterZMM dst, AssemblerRegisterK src) {}
		/// <summary>vpmovmskb instruction.<br/>
		/// <br/>
		/// <c>VPMOVMSKB r32, xmm1</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.W0 D7 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669463)]
public static void vpmovmskb(AssemblerRegister32 dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovmskb instruction.<br/>
		/// <br/>
		/// <c>VPMOVMSKB r64, xmm1</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.W1 D7 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100669464)]
public static void vpmovmskb(AssemblerRegister64 dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovmskb instruction.<br/>
		/// <br/>
		/// <c>VPMOVMSKB r32, ymm1</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.W0 D7 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669465)]
public static void vpmovmskb(AssemblerRegister32 dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovmskb instruction.<br/>
		/// <br/>
		/// <c>VPMOVMSKB r64, ymm1</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.W1 D7 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100669466)]
public static void vpmovmskb(AssemblerRegister64 dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovq2m instruction.<br/>
		/// <br/>
		/// <c>VPMOVQ2M k1, xmm1</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W1 39 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669467)]
public static void vpmovq2m(AssemblerRegisterK dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovq2m instruction.<br/>
		/// <br/>
		/// <c>VPMOVQ2M k1, ymm1</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W1 39 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669468)]
public static void vpmovq2m(AssemblerRegisterK dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovq2m instruction.<br/>
		/// <br/>
		/// <c>VPMOVQ2M k1, zmm1</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W1 39 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669469)]
public static void vpmovq2m(AssemblerRegisterK dst, AssemblerRegisterZMM src) {}
		/// <summary>vpmovqb instruction.<br/>
		/// <br/>
		/// <c>VPMOVQB xmm1/m16 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 32 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669470)]
public static void vpmovqb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovqb instruction.<br/>
		/// <br/>
		/// <c>VPMOVQB xmm1/m16 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 32 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669471)]
public static void vpmovqb(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovqb instruction.<br/>
		/// <br/>
		/// <c>VPMOVQB xmm1/m32 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 32 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669472)]
public static void vpmovqb(AssemblerRegisterXMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovqb instruction.<br/>
		/// <br/>
		/// <c>VPMOVQB xmm1/m32 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 32 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669473)]
public static void vpmovqb(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovqb instruction.<br/>
		/// <br/>
		/// <c>VPMOVQB xmm1/m64 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 32 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669474)]
public static void vpmovqb(AssemblerRegisterXMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vpmovqb instruction.<br/>
		/// <br/>
		/// <c>VPMOVQB xmm1/m64 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 32 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669475)]
public static void vpmovqb(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vpmovqd instruction.<br/>
		/// <br/>
		/// <c>VPMOVQD xmm1/m64 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 35 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669476)]
public static void vpmovqd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovqd instruction.<br/>
		/// <br/>
		/// <c>VPMOVQD xmm1/m64 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 35 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669477)]
public static void vpmovqd(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovqd instruction.<br/>
		/// <br/>
		/// <c>VPMOVQD xmm1/m128 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 35 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669478)]
public static void vpmovqd(AssemblerRegisterXMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovqd instruction.<br/>
		/// <br/>
		/// <c>VPMOVQD xmm1/m128 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 35 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669479)]
public static void vpmovqd(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovqd instruction.<br/>
		/// <br/>
		/// <c>VPMOVQD ymm1/m256 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 35 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669480)]
public static void vpmovqd(AssemblerRegisterYMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vpmovqd instruction.<br/>
		/// <br/>
		/// <c>VPMOVQD ymm1/m256 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 35 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669481)]
public static void vpmovqd(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vpmovqw instruction.<br/>
		/// <br/>
		/// <c>VPMOVQW xmm1/m32 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 34 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669482)]
public static void vpmovqw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovqw instruction.<br/>
		/// <br/>
		/// <c>VPMOVQW xmm1/m32 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 34 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669483)]
public static void vpmovqw(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovqw instruction.<br/>
		/// <br/>
		/// <c>VPMOVQW xmm1/m64 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 34 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669484)]
public static void vpmovqw(AssemblerRegisterXMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovqw instruction.<br/>
		/// <br/>
		/// <c>VPMOVQW xmm1/m64 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 34 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669485)]
public static void vpmovqw(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovqw instruction.<br/>
		/// <br/>
		/// <c>VPMOVQW xmm1/m128 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 34 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669486)]
public static void vpmovqw(AssemblerRegisterXMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vpmovqw instruction.<br/>
		/// <br/>
		/// <c>VPMOVQW xmm1/m128 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 34 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669487)]
public static void vpmovqw(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vpmovsdb instruction.<br/>
		/// <br/>
		/// <c>VPMOVSDB xmm1/m32 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 21 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669488)]
public static void vpmovsdb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovsdb instruction.<br/>
		/// <br/>
		/// <c>VPMOVSDB xmm1/m32 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 21 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669489)]
public static void vpmovsdb(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovsdb instruction.<br/>
		/// <br/>
		/// <c>VPMOVSDB xmm1/m64 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 21 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669490)]
public static void vpmovsdb(AssemblerRegisterXMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovsdb instruction.<br/>
		/// <br/>
		/// <c>VPMOVSDB xmm1/m64 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 21 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669491)]
public static void vpmovsdb(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovsdb instruction.<br/>
		/// <br/>
		/// <c>VPMOVSDB xmm1/m128 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 21 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669492)]
public static void vpmovsdb(AssemblerRegisterXMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vpmovsdb instruction.<br/>
		/// <br/>
		/// <c>VPMOVSDB xmm1/m128 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 21 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669493)]
public static void vpmovsdb(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vpmovsdw instruction.<br/>
		/// <br/>
		/// <c>VPMOVSDW xmm1/m64 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 23 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669494)]
public static void vpmovsdw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovsdw instruction.<br/>
		/// <br/>
		/// <c>VPMOVSDW xmm1/m64 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 23 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669495)]
public static void vpmovsdw(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovsdw instruction.<br/>
		/// <br/>
		/// <c>VPMOVSDW xmm1/m128 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 23 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669496)]
public static void vpmovsdw(AssemblerRegisterXMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovsdw instruction.<br/>
		/// <br/>
		/// <c>VPMOVSDW xmm1/m128 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 23 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669497)]
public static void vpmovsdw(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovsdw instruction.<br/>
		/// <br/>
		/// <c>VPMOVSDW ymm1/m256 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 23 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669498)]
public static void vpmovsdw(AssemblerRegisterYMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vpmovsdw instruction.<br/>
		/// <br/>
		/// <c>VPMOVSDW ymm1/m256 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 23 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669499)]
public static void vpmovsdw(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vpmovsqb instruction.<br/>
		/// <br/>
		/// <c>VPMOVSQB xmm1/m16 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 22 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669500)]
public static void vpmovsqb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovsqb instruction.<br/>
		/// <br/>
		/// <c>VPMOVSQB xmm1/m16 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 22 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669501)]
public static void vpmovsqb(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovsqb instruction.<br/>
		/// <br/>
		/// <c>VPMOVSQB xmm1/m32 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 22 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669502)]
public static void vpmovsqb(AssemblerRegisterXMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovsqb instruction.<br/>
		/// <br/>
		/// <c>VPMOVSQB xmm1/m32 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 22 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669503)]
public static void vpmovsqb(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovsqb instruction.<br/>
		/// <br/>
		/// <c>VPMOVSQB xmm1/m64 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 22 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669504)]
public static void vpmovsqb(AssemblerRegisterXMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vpmovsqb instruction.<br/>
		/// <br/>
		/// <c>VPMOVSQB xmm1/m64 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 22 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669505)]
public static void vpmovsqb(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vpmovsqd instruction.<br/>
		/// <br/>
		/// <c>VPMOVSQD xmm1/m64 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 25 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669506)]
public static void vpmovsqd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovsqd instruction.<br/>
		/// <br/>
		/// <c>VPMOVSQD xmm1/m64 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 25 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669507)]
public static void vpmovsqd(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovsqd instruction.<br/>
		/// <br/>
		/// <c>VPMOVSQD xmm1/m128 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 25 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669508)]
public static void vpmovsqd(AssemblerRegisterXMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovsqd instruction.<br/>
		/// <br/>
		/// <c>VPMOVSQD xmm1/m128 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 25 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669509)]
public static void vpmovsqd(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovsqd instruction.<br/>
		/// <br/>
		/// <c>VPMOVSQD ymm1/m256 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 25 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669510)]
public static void vpmovsqd(AssemblerRegisterYMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vpmovsqd instruction.<br/>
		/// <br/>
		/// <c>VPMOVSQD ymm1/m256 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 25 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669511)]
public static void vpmovsqd(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vpmovsqw instruction.<br/>
		/// <br/>
		/// <c>VPMOVSQW xmm1/m32 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 24 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669512)]
public static void vpmovsqw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovsqw instruction.<br/>
		/// <br/>
		/// <c>VPMOVSQW xmm1/m32 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 24 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669513)]
public static void vpmovsqw(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovsqw instruction.<br/>
		/// <br/>
		/// <c>VPMOVSQW xmm1/m64 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 24 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669514)]
public static void vpmovsqw(AssemblerRegisterXMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovsqw instruction.<br/>
		/// <br/>
		/// <c>VPMOVSQW xmm1/m64 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 24 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669515)]
public static void vpmovsqw(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovsqw instruction.<br/>
		/// <br/>
		/// <c>VPMOVSQW xmm1/m128 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 24 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669516)]
public static void vpmovsqw(AssemblerRegisterXMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vpmovsqw instruction.<br/>
		/// <br/>
		/// <c>VPMOVSQW xmm1/m128 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 24 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669517)]
public static void vpmovsqw(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vpmovswb instruction.<br/>
		/// <br/>
		/// <c>VPMOVSWB xmm1/m64 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 20 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669518)]
public static void vpmovswb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovswb instruction.<br/>
		/// <br/>
		/// <c>VPMOVSWB xmm1/m64 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 20 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669519)]
public static void vpmovswb(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovswb instruction.<br/>
		/// <br/>
		/// <c>VPMOVSWB xmm1/m128 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 20 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669520)]
public static void vpmovswb(AssemblerRegisterXMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovswb instruction.<br/>
		/// <br/>
		/// <c>VPMOVSWB xmm1/m128 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 20 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669521)]
public static void vpmovswb(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovswb instruction.<br/>
		/// <br/>
		/// <c>VPMOVSWB ymm1/m256 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 20 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669522)]
public static void vpmovswb(AssemblerRegisterYMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vpmovswb instruction.<br/>
		/// <br/>
		/// <c>VPMOVSWB ymm1/m256 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 20 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669523)]
public static void vpmovswb(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vpmovsxbd instruction.<br/>
		/// <br/>
		/// <c>VPMOVSXBD xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 21 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVSXBD xmm1 {k1}{z}, xmm2/m32</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG 21 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669524)]
public static void vpmovsxbd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovsxbd instruction.<br/>
		/// <br/>
		/// <c>VPMOVSXBD ymm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 21 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVSXBD ymm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG 21 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669525)]
public static void vpmovsxbd(AssemblerRegisterYMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovsxbd instruction.<br/>
		/// <br/>
		/// <c>VPMOVSXBD zmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG 21 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669526)]
public static void vpmovsxbd(AssemblerRegisterZMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovsxbd instruction.<br/>
		/// <br/>
		/// <c>VPMOVSXBD xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 21 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVSXBD xmm1 {k1}{z}, xmm2/m32</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG 21 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669527)]
public static void vpmovsxbd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpmovsxbd instruction.<br/>
		/// <br/>
		/// <c>VPMOVSXBD ymm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 21 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVSXBD ymm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG 21 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669528)]
public static void vpmovsxbd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpmovsxbd instruction.<br/>
		/// <br/>
		/// <c>VPMOVSXBD zmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG 21 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669529)]
public static void vpmovsxbd(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpmovsxbq instruction.<br/>
		/// <br/>
		/// <c>VPMOVSXBQ xmm1, xmm2/m16</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 22 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVSXBQ xmm1 {k1}{z}, xmm2/m16</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG 22 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669530)]
public static void vpmovsxbq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovsxbq instruction.<br/>
		/// <br/>
		/// <c>VPMOVSXBQ ymm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 22 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVSXBQ ymm1 {k1}{z}, xmm2/m32</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG 22 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669531)]
public static void vpmovsxbq(AssemblerRegisterYMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovsxbq instruction.<br/>
		/// <br/>
		/// <c>VPMOVSXBQ zmm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG 22 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669532)]
public static void vpmovsxbq(AssemblerRegisterZMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovsxbq instruction.<br/>
		/// <br/>
		/// <c>VPMOVSXBQ xmm1, xmm2/m16</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 22 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVSXBQ xmm1 {k1}{z}, xmm2/m16</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG 22 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669533)]
public static void vpmovsxbq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpmovsxbq instruction.<br/>
		/// <br/>
		/// <c>VPMOVSXBQ ymm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 22 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVSXBQ ymm1 {k1}{z}, xmm2/m32</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG 22 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669534)]
public static void vpmovsxbq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpmovsxbq instruction.<br/>
		/// <br/>
		/// <c>VPMOVSXBQ zmm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG 22 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669535)]
public static void vpmovsxbq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpmovsxbw instruction.<br/>
		/// <br/>
		/// <c>VPMOVSXBW xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 20 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVSXBW xmm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG 20 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669536)]
public static void vpmovsxbw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovsxbw instruction.<br/>
		/// <br/>
		/// <c>VPMOVSXBW ymm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 20 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVSXBW ymm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG 20 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669537)]
public static void vpmovsxbw(AssemblerRegisterYMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovsxbw instruction.<br/>
		/// <br/>
		/// <c>VPMOVSXBW zmm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG 20 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669538)]
public static void vpmovsxbw(AssemblerRegisterZMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovsxbw instruction.<br/>
		/// <br/>
		/// <c>VPMOVSXBW xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 20 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVSXBW xmm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG 20 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669539)]
public static void vpmovsxbw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpmovsxbw instruction.<br/>
		/// <br/>
		/// <c>VPMOVSXBW ymm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 20 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVSXBW ymm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG 20 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669540)]
public static void vpmovsxbw(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpmovsxbw instruction.<br/>
		/// <br/>
		/// <c>VPMOVSXBW zmm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG 20 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669541)]
public static void vpmovsxbw(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpmovsxdq instruction.<br/>
		/// <br/>
		/// <c>VPMOVSXDQ xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 25 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVSXDQ xmm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 25 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669542)]
public static void vpmovsxdq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovsxdq instruction.<br/>
		/// <br/>
		/// <c>VPMOVSXDQ ymm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 25 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVSXDQ ymm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 25 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669543)]
public static void vpmovsxdq(AssemblerRegisterYMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovsxdq instruction.<br/>
		/// <br/>
		/// <c>VPMOVSXDQ zmm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 25 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669544)]
public static void vpmovsxdq(AssemblerRegisterZMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovsxdq instruction.<br/>
		/// <br/>
		/// <c>VPMOVSXDQ xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 25 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVSXDQ xmm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 25 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669545)]
public static void vpmovsxdq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpmovsxdq instruction.<br/>
		/// <br/>
		/// <c>VPMOVSXDQ ymm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 25 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVSXDQ ymm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 25 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669546)]
public static void vpmovsxdq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpmovsxdq instruction.<br/>
		/// <br/>
		/// <c>VPMOVSXDQ zmm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 25 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669547)]
public static void vpmovsxdq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpmovsxwd instruction.<br/>
		/// <br/>
		/// <c>VPMOVSXWD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 23 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVSXWD xmm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG 23 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669548)]
public static void vpmovsxwd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovsxwd instruction.<br/>
		/// <br/>
		/// <c>VPMOVSXWD ymm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 23 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVSXWD ymm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG 23 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669549)]
public static void vpmovsxwd(AssemblerRegisterYMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovsxwd instruction.<br/>
		/// <br/>
		/// <c>VPMOVSXWD zmm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG 23 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669550)]
public static void vpmovsxwd(AssemblerRegisterZMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovsxwd instruction.<br/>
		/// <br/>
		/// <c>VPMOVSXWD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 23 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVSXWD xmm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG 23 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669551)]
public static void vpmovsxwd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpmovsxwd instruction.<br/>
		/// <br/>
		/// <c>VPMOVSXWD ymm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 23 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVSXWD ymm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG 23 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669552)]
public static void vpmovsxwd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpmovsxwd instruction.<br/>
		/// <br/>
		/// <c>VPMOVSXWD zmm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG 23 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669553)]
public static void vpmovsxwd(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpmovsxwq instruction.<br/>
		/// <br/>
		/// <c>VPMOVSXWQ xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 24 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVSXWQ xmm1 {k1}{z}, xmm2/m32</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG 24 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669554)]
public static void vpmovsxwq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovsxwq instruction.<br/>
		/// <br/>
		/// <c>VPMOVSXWQ ymm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 24 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVSXWQ ymm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG 24 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669555)]
public static void vpmovsxwq(AssemblerRegisterYMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovsxwq instruction.<br/>
		/// <br/>
		/// <c>VPMOVSXWQ zmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG 24 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669556)]
public static void vpmovsxwq(AssemblerRegisterZMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovsxwq instruction.<br/>
		/// <br/>
		/// <c>VPMOVSXWQ xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 24 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVSXWQ xmm1 {k1}{z}, xmm2/m32</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG 24 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669557)]
public static void vpmovsxwq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpmovsxwq instruction.<br/>
		/// <br/>
		/// <c>VPMOVSXWQ ymm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 24 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVSXWQ ymm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG 24 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669558)]
public static void vpmovsxwq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpmovsxwq instruction.<br/>
		/// <br/>
		/// <c>VPMOVSXWQ zmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG 24 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669559)]
public static void vpmovsxwq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpmovusdb instruction.<br/>
		/// <br/>
		/// <c>VPMOVUSDB xmm1/m32 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 11 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669560)]
public static void vpmovusdb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovusdb instruction.<br/>
		/// <br/>
		/// <c>VPMOVUSDB xmm1/m32 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 11 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669561)]
public static void vpmovusdb(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovusdb instruction.<br/>
		/// <br/>
		/// <c>VPMOVUSDB xmm1/m64 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 11 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669562)]
public static void vpmovusdb(AssemblerRegisterXMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovusdb instruction.<br/>
		/// <br/>
		/// <c>VPMOVUSDB xmm1/m64 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 11 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669563)]
public static void vpmovusdb(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovusdb instruction.<br/>
		/// <br/>
		/// <c>VPMOVUSDB xmm1/m128 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 11 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669564)]
public static void vpmovusdb(AssemblerRegisterXMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vpmovusdb instruction.<br/>
		/// <br/>
		/// <c>VPMOVUSDB xmm1/m128 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 11 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669565)]
public static void vpmovusdb(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vpmovusdw instruction.<br/>
		/// <br/>
		/// <c>VPMOVUSDW xmm1/m64 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 13 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669566)]
public static void vpmovusdw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovusdw instruction.<br/>
		/// <br/>
		/// <c>VPMOVUSDW xmm1/m64 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 13 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669567)]
public static void vpmovusdw(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovusdw instruction.<br/>
		/// <br/>
		/// <c>VPMOVUSDW xmm1/m128 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 13 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669568)]
public static void vpmovusdw(AssemblerRegisterXMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovusdw instruction.<br/>
		/// <br/>
		/// <c>VPMOVUSDW xmm1/m128 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 13 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669569)]
public static void vpmovusdw(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovusdw instruction.<br/>
		/// <br/>
		/// <c>VPMOVUSDW ymm1/m256 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 13 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669570)]
public static void vpmovusdw(AssemblerRegisterYMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vpmovusdw instruction.<br/>
		/// <br/>
		/// <c>VPMOVUSDW ymm1/m256 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 13 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669571)]
public static void vpmovusdw(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vpmovusqb instruction.<br/>
		/// <br/>
		/// <c>VPMOVUSQB xmm1/m16 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 12 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669572)]
public static void vpmovusqb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovusqb instruction.<br/>
		/// <br/>
		/// <c>VPMOVUSQB xmm1/m16 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 12 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669573)]
public static void vpmovusqb(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovusqb instruction.<br/>
		/// <br/>
		/// <c>VPMOVUSQB xmm1/m32 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 12 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669574)]
public static void vpmovusqb(AssemblerRegisterXMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovusqb instruction.<br/>
		/// <br/>
		/// <c>VPMOVUSQB xmm1/m32 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 12 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669575)]
public static void vpmovusqb(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovusqb instruction.<br/>
		/// <br/>
		/// <c>VPMOVUSQB xmm1/m64 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 12 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669576)]
public static void vpmovusqb(AssemblerRegisterXMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vpmovusqb instruction.<br/>
		/// <br/>
		/// <c>VPMOVUSQB xmm1/m64 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 12 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669577)]
public static void vpmovusqb(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vpmovusqd instruction.<br/>
		/// <br/>
		/// <c>VPMOVUSQD xmm1/m64 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 15 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669578)]
public static void vpmovusqd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovusqd instruction.<br/>
		/// <br/>
		/// <c>VPMOVUSQD xmm1/m64 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 15 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669579)]
public static void vpmovusqd(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovusqd instruction.<br/>
		/// <br/>
		/// <c>VPMOVUSQD xmm1/m128 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 15 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669580)]
public static void vpmovusqd(AssemblerRegisterXMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovusqd instruction.<br/>
		/// <br/>
		/// <c>VPMOVUSQD xmm1/m128 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 15 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669581)]
public static void vpmovusqd(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovusqd instruction.<br/>
		/// <br/>
		/// <c>VPMOVUSQD ymm1/m256 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 15 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669582)]
public static void vpmovusqd(AssemblerRegisterYMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vpmovusqd instruction.<br/>
		/// <br/>
		/// <c>VPMOVUSQD ymm1/m256 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 15 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669583)]
public static void vpmovusqd(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vpmovusqw instruction.<br/>
		/// <br/>
		/// <c>VPMOVUSQW xmm1/m32 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 14 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669584)]
public static void vpmovusqw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovusqw instruction.<br/>
		/// <br/>
		/// <c>VPMOVUSQW xmm1/m32 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 14 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669585)]
public static void vpmovusqw(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovusqw instruction.<br/>
		/// <br/>
		/// <c>VPMOVUSQW xmm1/m64 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 14 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669586)]
public static void vpmovusqw(AssemblerRegisterXMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovusqw instruction.<br/>
		/// <br/>
		/// <c>VPMOVUSQW xmm1/m64 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 14 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669587)]
public static void vpmovusqw(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovusqw instruction.<br/>
		/// <br/>
		/// <c>VPMOVUSQW xmm1/m128 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 14 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669588)]
public static void vpmovusqw(AssemblerRegisterXMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vpmovusqw instruction.<br/>
		/// <br/>
		/// <c>VPMOVUSQW xmm1/m128 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 14 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669589)]
public static void vpmovusqw(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vpmovuswb instruction.<br/>
		/// <br/>
		/// <c>VPMOVUSWB xmm1/m64 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 10 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669590)]
public static void vpmovuswb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovuswb instruction.<br/>
		/// <br/>
		/// <c>VPMOVUSWB xmm1/m64 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 10 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669591)]
public static void vpmovuswb(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovuswb instruction.<br/>
		/// <br/>
		/// <c>VPMOVUSWB xmm1/m128 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 10 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669592)]
public static void vpmovuswb(AssemblerRegisterXMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovuswb instruction.<br/>
		/// <br/>
		/// <c>VPMOVUSWB xmm1/m128 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 10 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669593)]
public static void vpmovuswb(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovuswb instruction.<br/>
		/// <br/>
		/// <c>VPMOVUSWB ymm1/m256 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 10 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669594)]
public static void vpmovuswb(AssemblerRegisterYMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vpmovuswb instruction.<br/>
		/// <br/>
		/// <c>VPMOVUSWB ymm1/m256 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 10 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669595)]
public static void vpmovuswb(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vpmovw2m instruction.<br/>
		/// <br/>
		/// <c>VPMOVW2M k1, xmm1</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W1 29 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669596)]
public static void vpmovw2m(AssemblerRegisterK dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovw2m instruction.<br/>
		/// <br/>
		/// <c>VPMOVW2M k1, ymm1</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W1 29 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669597)]
public static void vpmovw2m(AssemblerRegisterK dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovw2m instruction.<br/>
		/// <br/>
		/// <c>VPMOVW2M k1, zmm1</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W1 29 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669598)]
public static void vpmovw2m(AssemblerRegisterK dst, AssemblerRegisterZMM src) {}
		/// <summary>vpmovwb instruction.<br/>
		/// <br/>
		/// <c>VPMOVWB xmm1/m64 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 30 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669599)]
public static void vpmovwb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovwb instruction.<br/>
		/// <br/>
		/// <c>VPMOVWB xmm1/m64 {k1}{z}, xmm2</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 30 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669600)]
public static void vpmovwb(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovwb instruction.<br/>
		/// <br/>
		/// <c>VPMOVWB xmm1/m128 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 30 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669601)]
public static void vpmovwb(AssemblerRegisterXMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovwb instruction.<br/>
		/// <br/>
		/// <c>VPMOVWB xmm1/m128 {k1}{z}, ymm2</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 30 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669602)]
public static void vpmovwb(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovwb instruction.<br/>
		/// <br/>
		/// <c>VPMOVWB ymm1/m256 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 30 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669603)]
public static void vpmovwb(AssemblerRegisterYMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vpmovwb instruction.<br/>
		/// <br/>
		/// <c>VPMOVWB ymm1/m256 {k1}{z}, zmm2</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 30 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669604)]
public static void vpmovwb(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vpmovzxbd instruction.<br/>
		/// <br/>
		/// <c>VPMOVZXBD xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 31 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVZXBD xmm1 {k1}{z}, xmm2/m32</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG 31 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669605)]
public static void vpmovzxbd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovzxbd instruction.<br/>
		/// <br/>
		/// <c>VPMOVZXBD ymm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 31 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVZXBD ymm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG 31 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669606)]
public static void vpmovzxbd(AssemblerRegisterYMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovzxbd instruction.<br/>
		/// <br/>
		/// <c>VPMOVZXBD zmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG 31 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669607)]
public static void vpmovzxbd(AssemblerRegisterZMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovzxbd instruction.<br/>
		/// <br/>
		/// <c>VPMOVZXBD xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 31 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVZXBD xmm1 {k1}{z}, xmm2/m32</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG 31 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669608)]
public static void vpmovzxbd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpmovzxbd instruction.<br/>
		/// <br/>
		/// <c>VPMOVZXBD ymm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 31 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVZXBD ymm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG 31 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669609)]
public static void vpmovzxbd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpmovzxbd instruction.<br/>
		/// <br/>
		/// <c>VPMOVZXBD zmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG 31 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669610)]
public static void vpmovzxbd(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpmovzxbq instruction.<br/>
		/// <br/>
		/// <c>VPMOVZXBQ xmm1, xmm2/m16</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 32 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVZXBQ xmm1 {k1}{z}, xmm2/m16</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG 32 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669611)]
public static void vpmovzxbq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovzxbq instruction.<br/>
		/// <br/>
		/// <c>VPMOVZXBQ ymm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 32 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVZXBQ ymm1 {k1}{z}, xmm2/m32</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG 32 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669612)]
public static void vpmovzxbq(AssemblerRegisterYMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovzxbq instruction.<br/>
		/// <br/>
		/// <c>VPMOVZXBQ zmm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG 32 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669613)]
public static void vpmovzxbq(AssemblerRegisterZMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovzxbq instruction.<br/>
		/// <br/>
		/// <c>VPMOVZXBQ xmm1, xmm2/m16</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 32 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVZXBQ xmm1 {k1}{z}, xmm2/m16</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG 32 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669614)]
public static void vpmovzxbq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpmovzxbq instruction.<br/>
		/// <br/>
		/// <c>VPMOVZXBQ ymm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 32 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVZXBQ ymm1 {k1}{z}, xmm2/m32</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG 32 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669615)]
public static void vpmovzxbq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpmovzxbq instruction.<br/>
		/// <br/>
		/// <c>VPMOVZXBQ zmm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG 32 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669616)]
public static void vpmovzxbq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpmovzxbw instruction.<br/>
		/// <br/>
		/// <c>VPMOVZXBW xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 30 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVZXBW xmm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG 30 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669617)]
public static void vpmovzxbw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovzxbw instruction.<br/>
		/// <br/>
		/// <c>VPMOVZXBW ymm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 30 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVZXBW ymm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG 30 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669618)]
public static void vpmovzxbw(AssemblerRegisterYMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovzxbw instruction.<br/>
		/// <br/>
		/// <c>VPMOVZXBW zmm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG 30 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669619)]
public static void vpmovzxbw(AssemblerRegisterZMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovzxbw instruction.<br/>
		/// <br/>
		/// <c>VPMOVZXBW xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 30 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVZXBW xmm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG 30 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669620)]
public static void vpmovzxbw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpmovzxbw instruction.<br/>
		/// <br/>
		/// <c>VPMOVZXBW ymm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 30 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVZXBW ymm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG 30 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669621)]
public static void vpmovzxbw(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpmovzxbw instruction.<br/>
		/// <br/>
		/// <c>VPMOVZXBW zmm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG 30 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669622)]
public static void vpmovzxbw(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpmovzxdq instruction.<br/>
		/// <br/>
		/// <c>VPMOVZXDQ xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 35 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVZXDQ xmm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 35 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669623)]
public static void vpmovzxdq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovzxdq instruction.<br/>
		/// <br/>
		/// <c>VPMOVZXDQ ymm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 35 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVZXDQ ymm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 35 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669624)]
public static void vpmovzxdq(AssemblerRegisterYMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovzxdq instruction.<br/>
		/// <br/>
		/// <c>VPMOVZXDQ zmm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 35 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669625)]
public static void vpmovzxdq(AssemblerRegisterZMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovzxdq instruction.<br/>
		/// <br/>
		/// <c>VPMOVZXDQ xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 35 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVZXDQ xmm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 35 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669626)]
public static void vpmovzxdq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpmovzxdq instruction.<br/>
		/// <br/>
		/// <c>VPMOVZXDQ ymm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 35 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVZXDQ ymm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 35 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669627)]
public static void vpmovzxdq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpmovzxdq instruction.<br/>
		/// <br/>
		/// <c>VPMOVZXDQ zmm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 35 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669628)]
public static void vpmovzxdq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpmovzxwd instruction.<br/>
		/// <br/>
		/// <c>VPMOVZXWD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 33 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVZXWD xmm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG 33 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669629)]
public static void vpmovzxwd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovzxwd instruction.<br/>
		/// <br/>
		/// <c>VPMOVZXWD ymm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 33 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVZXWD ymm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG 33 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669630)]
public static void vpmovzxwd(AssemblerRegisterYMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovzxwd instruction.<br/>
		/// <br/>
		/// <c>VPMOVZXWD zmm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG 33 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669631)]
public static void vpmovzxwd(AssemblerRegisterZMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpmovzxwd instruction.<br/>
		/// <br/>
		/// <c>VPMOVZXWD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 33 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVZXWD xmm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG 33 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669632)]
public static void vpmovzxwd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpmovzxwd instruction.<br/>
		/// <br/>
		/// <c>VPMOVZXWD ymm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 33 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVZXWD ymm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG 33 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669633)]
public static void vpmovzxwd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpmovzxwd instruction.<br/>
		/// <br/>
		/// <c>VPMOVZXWD zmm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG 33 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669634)]
public static void vpmovzxwd(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpmovzxwq instruction.<br/>
		/// <br/>
		/// <c>VPMOVZXWQ xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 34 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVZXWQ xmm1 {k1}{z}, xmm2/m32</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG 34 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669635)]
public static void vpmovzxwq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovzxwq instruction.<br/>
		/// <br/>
		/// <c>VPMOVZXWQ ymm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 34 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVZXWQ ymm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG 34 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669636)]
public static void vpmovzxwq(AssemblerRegisterYMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovzxwq instruction.<br/>
		/// <br/>
		/// <c>VPMOVZXWQ zmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG 34 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669637)]
public static void vpmovzxwq(AssemblerRegisterZMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpmovzxwq instruction.<br/>
		/// <br/>
		/// <c>VPMOVZXWQ xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 34 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVZXWQ xmm1 {k1}{z}, xmm2/m32</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG 34 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669638)]
public static void vpmovzxwq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpmovzxwq instruction.<br/>
		/// <br/>
		/// <c>VPMOVZXWQ ymm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 34 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMOVZXWQ ymm1 {k1}{z}, xmm2/m64</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG 34 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669639)]
public static void vpmovzxwq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpmovzxwq instruction.<br/>
		/// <br/>
		/// <c>VPMOVZXWQ zmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG 34 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669640)]
public static void vpmovzxwq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpmuldq instruction.<br/>
		/// <br/>
		/// <c>VPMULDQ xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 28 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMULDQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 28 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669641)]
public static void vpmuldq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpmuldq instruction.<br/>
		/// <br/>
		/// <c>VPMULDQ ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 28 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMULDQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 28 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669642)]
public static void vpmuldq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpmuldq instruction.<br/>
		/// <br/>
		/// <c>VPMULDQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 28 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669643)]
public static void vpmuldq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpmuldq instruction.<br/>
		/// <br/>
		/// <c>VPMULDQ xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 28 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMULDQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 28 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669644)]
public static void vpmuldq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmuldq instruction.<br/>
		/// <br/>
		/// <c>VPMULDQ ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 28 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMULDQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 28 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669645)]
public static void vpmuldq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmuldq instruction.<br/>
		/// <br/>
		/// <c>VPMULDQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 28 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669646)]
public static void vpmuldq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmulhrsw instruction.<br/>
		/// <br/>
		/// <c>VPMULHRSW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 0B /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMULHRSW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG 0B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669647)]
public static void vpmulhrsw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpmulhrsw instruction.<br/>
		/// <br/>
		/// <c>VPMULHRSW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 0B /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMULHRSW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG 0B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669648)]
public static void vpmulhrsw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpmulhrsw instruction.<br/>
		/// <br/>
		/// <c>VPMULHRSW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG 0B /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669649)]
public static void vpmulhrsw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpmulhrsw instruction.<br/>
		/// <br/>
		/// <c>VPMULHRSW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 0B /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMULHRSW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG 0B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669650)]
public static void vpmulhrsw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmulhrsw instruction.<br/>
		/// <br/>
		/// <c>VPMULHRSW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 0B /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMULHRSW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG 0B /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669651)]
public static void vpmulhrsw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmulhrsw instruction.<br/>
		/// <br/>
		/// <c>VPMULHRSW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG 0B /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669652)]
public static void vpmulhrsw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmulhuw instruction.<br/>
		/// <br/>
		/// <c>VPMULHUW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG E4 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMULHUW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG E4 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669653)]
public static void vpmulhuw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpmulhuw instruction.<br/>
		/// <br/>
		/// <c>VPMULHUW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG E4 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMULHUW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG E4 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669654)]
public static void vpmulhuw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpmulhuw instruction.<br/>
		/// <br/>
		/// <c>VPMULHUW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG E4 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669655)]
public static void vpmulhuw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpmulhuw instruction.<br/>
		/// <br/>
		/// <c>VPMULHUW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG E4 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMULHUW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG E4 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669656)]
public static void vpmulhuw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmulhuw instruction.<br/>
		/// <br/>
		/// <c>VPMULHUW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG E4 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMULHUW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG E4 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669657)]
public static void vpmulhuw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmulhuw instruction.<br/>
		/// <br/>
		/// <c>VPMULHUW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG E4 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669658)]
public static void vpmulhuw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmulhw instruction.<br/>
		/// <br/>
		/// <c>VPMULHW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG E5 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMULHW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG E5 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669659)]
public static void vpmulhw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpmulhw instruction.<br/>
		/// <br/>
		/// <c>VPMULHW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG E5 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMULHW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG E5 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669660)]
public static void vpmulhw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpmulhw instruction.<br/>
		/// <br/>
		/// <c>VPMULHW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG E5 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669661)]
public static void vpmulhw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpmulhw instruction.<br/>
		/// <br/>
		/// <c>VPMULHW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG E5 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMULHW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG E5 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669662)]
public static void vpmulhw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmulhw instruction.<br/>
		/// <br/>
		/// <c>VPMULHW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG E5 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMULHW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG E5 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669663)]
public static void vpmulhw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmulhw instruction.<br/>
		/// <br/>
		/// <c>VPMULHW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG E5 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669664)]
public static void vpmulhw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmulld instruction.<br/>
		/// <br/>
		/// <c>VPMULLD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 40 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMULLD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 40 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669665)]
public static void vpmulld(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpmulld instruction.<br/>
		/// <br/>
		/// <c>VPMULLD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 40 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMULLD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 40 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669666)]
public static void vpmulld(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpmulld instruction.<br/>
		/// <br/>
		/// <c>VPMULLD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 40 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669667)]
public static void vpmulld(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpmulld instruction.<br/>
		/// <br/>
		/// <c>VPMULLD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 40 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMULLD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 40 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669668)]
public static void vpmulld(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmulld instruction.<br/>
		/// <br/>
		/// <c>VPMULLD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 40 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMULLD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 40 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669669)]
public static void vpmulld(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmulld instruction.<br/>
		/// <br/>
		/// <c>VPMULLD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 40 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669670)]
public static void vpmulld(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmullq instruction.<br/>
		/// <br/>
		/// <c>VPMULLQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 40 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669671)]
public static void vpmullq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpmullq instruction.<br/>
		/// <br/>
		/// <c>VPMULLQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 40 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669672)]
public static void vpmullq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpmullq instruction.<br/>
		/// <br/>
		/// <c>VPMULLQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 40 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669673)]
public static void vpmullq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpmullq instruction.<br/>
		/// <br/>
		/// <c>VPMULLQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 40 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669674)]
public static void vpmullq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmullq instruction.<br/>
		/// <br/>
		/// <c>VPMULLQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 40 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669675)]
public static void vpmullq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmullq instruction.<br/>
		/// <br/>
		/// <c>VPMULLQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 40 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669676)]
public static void vpmullq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmullw instruction.<br/>
		/// <br/>
		/// <c>VPMULLW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG D5 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMULLW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG D5 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669677)]
public static void vpmullw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpmullw instruction.<br/>
		/// <br/>
		/// <c>VPMULLW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG D5 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMULLW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG D5 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669678)]
public static void vpmullw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpmullw instruction.<br/>
		/// <br/>
		/// <c>VPMULLW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG D5 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669679)]
public static void vpmullw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpmullw instruction.<br/>
		/// <br/>
		/// <c>VPMULLW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG D5 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMULLW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG D5 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669680)]
public static void vpmullw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmullw instruction.<br/>
		/// <br/>
		/// <c>VPMULLW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG D5 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMULLW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG D5 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669681)]
public static void vpmullw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmullw instruction.<br/>
		/// <br/>
		/// <c>VPMULLW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG D5 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669682)]
public static void vpmullw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmultishiftqb instruction.<br/>
		/// <br/>
		/// <c>VPMULTISHIFTQB xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 83 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669683)]
public static void vpmultishiftqb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpmultishiftqb instruction.<br/>
		/// <br/>
		/// <c>VPMULTISHIFTQB ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 83 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669684)]
public static void vpmultishiftqb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpmultishiftqb instruction.<br/>
		/// <br/>
		/// <c>VPMULTISHIFTQB zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 83 /r</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669685)]
public static void vpmultishiftqb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpmultishiftqb instruction.<br/>
		/// <br/>
		/// <c>VPMULTISHIFTQB xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 83 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669686)]
public static void vpmultishiftqb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmultishiftqb instruction.<br/>
		/// <br/>
		/// <c>VPMULTISHIFTQB ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 83 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669687)]
public static void vpmultishiftqb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmultishiftqb instruction.<br/>
		/// <br/>
		/// <c>VPMULTISHIFTQB zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 83 /r</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669688)]
public static void vpmultishiftqb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmuludq instruction.<br/>
		/// <br/>
		/// <c>VPMULUDQ xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG F4 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMULUDQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 F4 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669689)]
public static void vpmuludq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpmuludq instruction.<br/>
		/// <br/>
		/// <c>VPMULUDQ ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG F4 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMULUDQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 F4 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669690)]
public static void vpmuludq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpmuludq instruction.<br/>
		/// <br/>
		/// <c>VPMULUDQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 F4 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669691)]
public static void vpmuludq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpmuludq instruction.<br/>
		/// <br/>
		/// <c>VPMULUDQ xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG F4 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMULUDQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 F4 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669692)]
public static void vpmuludq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmuludq instruction.<br/>
		/// <br/>
		/// <c>VPMULUDQ ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG F4 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPMULUDQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 F4 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669693)]
public static void vpmuludq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpmuludq instruction.<br/>
		/// <br/>
		/// <c>VPMULUDQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 F4 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669694)]
public static void vpmuludq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpopcntb instruction.<br/>
		/// <br/>
		/// <c>VPOPCNTB xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 54 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_BITALG</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669695)]
public static void vpopcntb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpopcntb instruction.<br/>
		/// <br/>
		/// <c>VPOPCNTB ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 54 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_BITALG</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669696)]
public static void vpopcntb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpopcntb instruction.<br/>
		/// <br/>
		/// <c>VPOPCNTB zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 54 /r</c><br/>
		/// <br/>
		/// <c>AVX512_BITALG</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669697)]
public static void vpopcntb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vpopcntb instruction.<br/>
		/// <br/>
		/// <c>VPOPCNTB xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 54 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_BITALG</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669698)]
public static void vpopcntb(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpopcntb instruction.<br/>
		/// <br/>
		/// <c>VPOPCNTB ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 54 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_BITALG</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669699)]
public static void vpopcntb(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpopcntb instruction.<br/>
		/// <br/>
		/// <c>VPOPCNTB zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 54 /r</c><br/>
		/// <br/>
		/// <c>AVX512_BITALG</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669700)]
public static void vpopcntb(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpopcntd instruction.<br/>
		/// <br/>
		/// <c>VPOPCNTD xmm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 55 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VPOPCNTDQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669701)]
public static void vpopcntd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpopcntd instruction.<br/>
		/// <br/>
		/// <c>VPOPCNTD ymm1 {k1}{z}, ymm2/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 55 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VPOPCNTDQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669702)]
public static void vpopcntd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpopcntd instruction.<br/>
		/// <br/>
		/// <c>VPOPCNTD zmm1 {k1}{z}, zmm2/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 55 /r</c><br/>
		/// <br/>
		/// <c>AVX512_VPOPCNTDQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669703)]
public static void vpopcntd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vpopcntd instruction.<br/>
		/// <br/>
		/// <c>VPOPCNTD xmm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 55 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VPOPCNTDQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669704)]
public static void vpopcntd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpopcntd instruction.<br/>
		/// <br/>
		/// <c>VPOPCNTD ymm1 {k1}{z}, ymm2/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 55 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VPOPCNTDQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669705)]
public static void vpopcntd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpopcntd instruction.<br/>
		/// <br/>
		/// <c>VPOPCNTD zmm1 {k1}{z}, zmm2/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 55 /r</c><br/>
		/// <br/>
		/// <c>AVX512_VPOPCNTDQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669706)]
public static void vpopcntd(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpopcntq instruction.<br/>
		/// <br/>
		/// <c>VPOPCNTQ xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 55 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VPOPCNTDQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669707)]
public static void vpopcntq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpopcntq instruction.<br/>
		/// <br/>
		/// <c>VPOPCNTQ ymm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 55 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VPOPCNTDQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669708)]
public static void vpopcntq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpopcntq instruction.<br/>
		/// <br/>
		/// <c>VPOPCNTQ zmm1 {k1}{z}, zmm2/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 55 /r</c><br/>
		/// <br/>
		/// <c>AVX512_VPOPCNTDQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669709)]
public static void vpopcntq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vpopcntq instruction.<br/>
		/// <br/>
		/// <c>VPOPCNTQ xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 55 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VPOPCNTDQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669710)]
public static void vpopcntq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpopcntq instruction.<br/>
		/// <br/>
		/// <c>VPOPCNTQ ymm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 55 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VPOPCNTDQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669711)]
public static void vpopcntq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpopcntq instruction.<br/>
		/// <br/>
		/// <c>VPOPCNTQ zmm1 {k1}{z}, zmm2/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 55 /r</c><br/>
		/// <br/>
		/// <c>AVX512_VPOPCNTDQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669712)]
public static void vpopcntq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpopcntw instruction.<br/>
		/// <br/>
		/// <c>VPOPCNTW xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 54 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_BITALG</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669713)]
public static void vpopcntw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vpopcntw instruction.<br/>
		/// <br/>
		/// <c>VPOPCNTW ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 54 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_BITALG</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669714)]
public static void vpopcntw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vpopcntw instruction.<br/>
		/// <br/>
		/// <c>VPOPCNTW zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 54 /r</c><br/>
		/// <br/>
		/// <c>AVX512_BITALG</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669715)]
public static void vpopcntw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vpopcntw instruction.<br/>
		/// <br/>
		/// <c>VPOPCNTW xmm1 {k1}{z}, xmm2/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 54 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_BITALG</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669716)]
public static void vpopcntw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpopcntw instruction.<br/>
		/// <br/>
		/// <c>VPOPCNTW ymm1 {k1}{z}, ymm2/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 54 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_BITALG</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669717)]
public static void vpopcntw(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpopcntw instruction.<br/>
		/// <br/>
		/// <c>VPOPCNTW zmm1 {k1}{z}, zmm2/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 54 /r</c><br/>
		/// <br/>
		/// <c>AVX512_BITALG</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669718)]
public static void vpopcntw(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vpor instruction.<br/>
		/// <br/>
		/// <c>VPOR xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG EB /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669719)]
public static void vpor(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpor instruction.<br/>
		/// <br/>
		/// <c>VPOR ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG EB /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669720)]
public static void vpor(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpor instruction.<br/>
		/// <br/>
		/// <c>VPOR xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG EB /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669721)]
public static void vpor(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpor instruction.<br/>
		/// <br/>
		/// <c>VPOR ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG EB /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669722)]
public static void vpor(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpord instruction.<br/>
		/// <br/>
		/// <c>VPORD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 EB /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669723)]
public static void vpord(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpord instruction.<br/>
		/// <br/>
		/// <c>VPORD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 EB /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669724)]
public static void vpord(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpord instruction.<br/>
		/// <br/>
		/// <c>VPORD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 EB /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669725)]
public static void vpord(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpord instruction.<br/>
		/// <br/>
		/// <c>VPORD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 EB /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669726)]
public static void vpord(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpord instruction.<br/>
		/// <br/>
		/// <c>VPORD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 EB /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669727)]
public static void vpord(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpord instruction.<br/>
		/// <br/>
		/// <c>VPORD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 EB /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669728)]
public static void vpord(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vporq instruction.<br/>
		/// <br/>
		/// <c>VPORQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 EB /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669729)]
public static void vporq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vporq instruction.<br/>
		/// <br/>
		/// <c>VPORQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 EB /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669730)]
public static void vporq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vporq instruction.<br/>
		/// <br/>
		/// <c>VPORQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 EB /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669731)]
public static void vporq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vporq instruction.<br/>
		/// <br/>
		/// <c>VPORQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 EB /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669732)]
public static void vporq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vporq instruction.<br/>
		/// <br/>
		/// <c>VPORQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 EB /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669733)]
public static void vporq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vporq instruction.<br/>
		/// <br/>
		/// <c>VPORQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 EB /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669734)]
public static void vporq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpperm instruction.<br/>
		/// <br/>
		/// <c>VPPERM xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 A3 /r /is4</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669735)]
public static void vpperm(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerRegisterXMM src3) {}
		/// <summary>vpperm instruction.<br/>
		/// <br/>
		/// <c>VPPERM xmm1, xmm2, xmm3/m128, xmm4</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 A3 /r /is4</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669736)]
public static void vpperm(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, AssemblerRegisterXMM src3) {}
		/// <summary>vpperm instruction.<br/>
		/// <br/>
		/// <c>VPPERM xmm1, xmm2, xmm3, xmm4/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W1 A3 /r /is4</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669737)]
public static void vpperm(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, AssemblerMemoryOperand src3) {}
		/// <summary>vprold instruction.<br/>
		/// <br/>
		/// <c>VPROLD xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 72 /1 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669738)]
public static void vprold(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vprold instruction.<br/>
		/// <br/>
		/// <c>VPROLD ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 72 /1 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669739)]
public static void vprold(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vprold instruction.<br/>
		/// <br/>
		/// <c>VPROLD zmm1 {k1}{z}, zmm2/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 72 /1 ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669740)]
public static void vprold(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vprold instruction.<br/>
		/// <br/>
		/// <c>VPROLD xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 72 /1 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669741)]
public static void vprold(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vprold instruction.<br/>
		/// <br/>
		/// <c>VPROLD ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 72 /1 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669742)]
public static void vprold(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vprold instruction.<br/>
		/// <br/>
		/// <c>VPROLD zmm1 {k1}{z}, zmm2/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 72 /1 ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669743)]
public static void vprold(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vprold instruction.<br/>
		/// <br/>
		/// <c>VPROLD xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 72 /1 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669744)]
public static void vprold(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vprold instruction.<br/>
		/// <br/>
		/// <c>VPROLD ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 72 /1 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669745)]
public static void vprold(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vprold instruction.<br/>
		/// <br/>
		/// <c>VPROLD zmm1 {k1}{z}, zmm2/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 72 /1 ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669746)]
public static void vprold(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vprold instruction.<br/>
		/// <br/>
		/// <c>VPROLD xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 72 /1 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669747)]
public static void vprold(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vprold instruction.<br/>
		/// <br/>
		/// <c>VPROLD ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 72 /1 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669748)]
public static void vprold(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vprold instruction.<br/>
		/// <br/>
		/// <c>VPROLD zmm1 {k1}{z}, zmm2/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 72 /1 ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669749)]
public static void vprold(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vprolq instruction.<br/>
		/// <br/>
		/// <c>VPROLQ xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 72 /1 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669750)]
public static void vprolq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vprolq instruction.<br/>
		/// <br/>
		/// <c>VPROLQ ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 72 /1 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669751)]
public static void vprolq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vprolq instruction.<br/>
		/// <br/>
		/// <c>VPROLQ zmm1 {k1}{z}, zmm2/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 72 /1 ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669752)]
public static void vprolq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vprolq instruction.<br/>
		/// <br/>
		/// <c>VPROLQ xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 72 /1 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669753)]
public static void vprolq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vprolq instruction.<br/>
		/// <br/>
		/// <c>VPROLQ ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 72 /1 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669754)]
public static void vprolq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vprolq instruction.<br/>
		/// <br/>
		/// <c>VPROLQ zmm1 {k1}{z}, zmm2/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 72 /1 ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669755)]
public static void vprolq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vprolq instruction.<br/>
		/// <br/>
		/// <c>VPROLQ xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 72 /1 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669756)]
public static void vprolq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vprolq instruction.<br/>
		/// <br/>
		/// <c>VPROLQ ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 72 /1 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669757)]
public static void vprolq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vprolq instruction.<br/>
		/// <br/>
		/// <c>VPROLQ zmm1 {k1}{z}, zmm2/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 72 /1 ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669758)]
public static void vprolq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vprolq instruction.<br/>
		/// <br/>
		/// <c>VPROLQ xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 72 /1 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669759)]
public static void vprolq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vprolq instruction.<br/>
		/// <br/>
		/// <c>VPROLQ ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 72 /1 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669760)]
public static void vprolq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vprolq instruction.<br/>
		/// <br/>
		/// <c>VPROLQ zmm1 {k1}{z}, zmm2/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 72 /1 ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669761)]
public static void vprolq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vprolvd instruction.<br/>
		/// <br/>
		/// <c>VPROLVD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 15 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669762)]
public static void vprolvd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vprolvd instruction.<br/>
		/// <br/>
		/// <c>VPROLVD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 15 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669763)]
public static void vprolvd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vprolvd instruction.<br/>
		/// <br/>
		/// <c>VPROLVD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 15 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669764)]
public static void vprolvd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vprolvd instruction.<br/>
		/// <br/>
		/// <c>VPROLVD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 15 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669765)]
public static void vprolvd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vprolvd instruction.<br/>
		/// <br/>
		/// <c>VPROLVD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 15 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669766)]
public static void vprolvd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vprolvd instruction.<br/>
		/// <br/>
		/// <c>VPROLVD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 15 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669767)]
public static void vprolvd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vprolvq instruction.<br/>
		/// <br/>
		/// <c>VPROLVQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 15 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669768)]
public static void vprolvq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vprolvq instruction.<br/>
		/// <br/>
		/// <c>VPROLVQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 15 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669769)]
public static void vprolvq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vprolvq instruction.<br/>
		/// <br/>
		/// <c>VPROLVQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 15 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669770)]
public static void vprolvq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vprolvq instruction.<br/>
		/// <br/>
		/// <c>VPROLVQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 15 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669771)]
public static void vprolvq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vprolvq instruction.<br/>
		/// <br/>
		/// <c>VPROLVQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 15 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669772)]
public static void vprolvq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vprolvq instruction.<br/>
		/// <br/>
		/// <c>VPROLVQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 15 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669773)]
public static void vprolvq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vprord instruction.<br/>
		/// <br/>
		/// <c>VPRORD xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 72 /0 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669774)]
public static void vprord(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vprord instruction.<br/>
		/// <br/>
		/// <c>VPRORD ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 72 /0 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669775)]
public static void vprord(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vprord instruction.<br/>
		/// <br/>
		/// <c>VPRORD zmm1 {k1}{z}, zmm2/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 72 /0 ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669776)]
public static void vprord(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vprord instruction.<br/>
		/// <br/>
		/// <c>VPRORD xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 72 /0 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669777)]
public static void vprord(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vprord instruction.<br/>
		/// <br/>
		/// <c>VPRORD ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 72 /0 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669778)]
public static void vprord(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vprord instruction.<br/>
		/// <br/>
		/// <c>VPRORD zmm1 {k1}{z}, zmm2/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 72 /0 ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669779)]
public static void vprord(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vprord instruction.<br/>
		/// <br/>
		/// <c>VPRORD xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 72 /0 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669780)]
public static void vprord(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vprord instruction.<br/>
		/// <br/>
		/// <c>VPRORD ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 72 /0 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669781)]
public static void vprord(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vprord instruction.<br/>
		/// <br/>
		/// <c>VPRORD zmm1 {k1}{z}, zmm2/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 72 /0 ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669782)]
public static void vprord(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vprord instruction.<br/>
		/// <br/>
		/// <c>VPRORD xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 72 /0 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669783)]
public static void vprord(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vprord instruction.<br/>
		/// <br/>
		/// <c>VPRORD ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 72 /0 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669784)]
public static void vprord(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vprord instruction.<br/>
		/// <br/>
		/// <c>VPRORD zmm1 {k1}{z}, zmm2/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 72 /0 ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669785)]
public static void vprord(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vprorq instruction.<br/>
		/// <br/>
		/// <c>VPRORQ xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 72 /0 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669786)]
public static void vprorq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vprorq instruction.<br/>
		/// <br/>
		/// <c>VPRORQ ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 72 /0 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669787)]
public static void vprorq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vprorq instruction.<br/>
		/// <br/>
		/// <c>VPRORQ zmm1 {k1}{z}, zmm2/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 72 /0 ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669788)]
public static void vprorq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vprorq instruction.<br/>
		/// <br/>
		/// <c>VPRORQ xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 72 /0 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669789)]
public static void vprorq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vprorq instruction.<br/>
		/// <br/>
		/// <c>VPRORQ ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 72 /0 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669790)]
public static void vprorq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vprorq instruction.<br/>
		/// <br/>
		/// <c>VPRORQ zmm1 {k1}{z}, zmm2/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 72 /0 ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669791)]
public static void vprorq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vprorq instruction.<br/>
		/// <br/>
		/// <c>VPRORQ xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 72 /0 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669792)]
public static void vprorq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vprorq instruction.<br/>
		/// <br/>
		/// <c>VPRORQ ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 72 /0 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669793)]
public static void vprorq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vprorq instruction.<br/>
		/// <br/>
		/// <c>VPRORQ zmm1 {k1}{z}, zmm2/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 72 /0 ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669794)]
public static void vprorq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vprorq instruction.<br/>
		/// <br/>
		/// <c>VPRORQ xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 72 /0 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669795)]
public static void vprorq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vprorq instruction.<br/>
		/// <br/>
		/// <c>VPRORQ ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 72 /0 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669796)]
public static void vprorq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vprorq instruction.<br/>
		/// <br/>
		/// <c>VPRORQ zmm1 {k1}{z}, zmm2/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 72 /0 ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669797)]
public static void vprorq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vprorvd instruction.<br/>
		/// <br/>
		/// <c>VPRORVD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 14 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669798)]
public static void vprorvd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vprorvd instruction.<br/>
		/// <br/>
		/// <c>VPRORVD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 14 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669799)]
public static void vprorvd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vprorvd instruction.<br/>
		/// <br/>
		/// <c>VPRORVD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 14 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669800)]
public static void vprorvd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vprorvd instruction.<br/>
		/// <br/>
		/// <c>VPRORVD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 14 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669801)]
public static void vprorvd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vprorvd instruction.<br/>
		/// <br/>
		/// <c>VPRORVD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 14 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669802)]
public static void vprorvd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vprorvd instruction.<br/>
		/// <br/>
		/// <c>VPRORVD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 14 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669803)]
public static void vprorvd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vprorvq instruction.<br/>
		/// <br/>
		/// <c>VPRORVQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 14 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669804)]
public static void vprorvq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vprorvq instruction.<br/>
		/// <br/>
		/// <c>VPRORVQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 14 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669805)]
public static void vprorvq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vprorvq instruction.<br/>
		/// <br/>
		/// <c>VPRORVQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 14 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669806)]
public static void vprorvq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vprorvq instruction.<br/>
		/// <br/>
		/// <c>VPRORVQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 14 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669807)]
public static void vprorvq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vprorvq instruction.<br/>
		/// <br/>
		/// <c>VPRORVQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 14 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669808)]
public static void vprorvq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vprorvq instruction.<br/>
		/// <br/>
		/// <c>VPRORVQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 14 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669809)]
public static void vprorvq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vprotb instruction.<br/>
		/// <br/>
		/// <c>VPROTB xmm1, xmm2/m128, xmm3</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 90 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669810)]
public static void vprotb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vprotb instruction.<br/>
		/// <br/>
		/// <c>VPROTB xmm1, xmm2/m128, xmm3</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 90 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669811)]
public static void vprotb(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, AssemblerRegisterXMM src2) {}
		/// <summary>vprotb instruction.<br/>
		/// <br/>
		/// <c>VPROTB xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W1 90 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669812)]
public static void vprotb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vprotb instruction.<br/>
		/// <br/>
		/// <c>VPROTB xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 C0 /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669813)]
public static void vprotb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vprotb instruction.<br/>
		/// <br/>
		/// <c>VPROTB xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 C0 /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669814)]
public static void vprotb(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vprotb instruction.<br/>
		/// <br/>
		/// <c>VPROTB xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 C0 /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669815)]
public static void vprotb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vprotb instruction.<br/>
		/// <br/>
		/// <c>VPROTB xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 C0 /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669816)]
public static void vprotb(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vprotd instruction.<br/>
		/// <br/>
		/// <c>VPROTD xmm1, xmm2/m128, xmm3</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 92 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669817)]
public static void vprotd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vprotd instruction.<br/>
		/// <br/>
		/// <c>VPROTD xmm1, xmm2/m128, xmm3</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 92 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669818)]
public static void vprotd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, AssemblerRegisterXMM src2) {}
		/// <summary>vprotd instruction.<br/>
		/// <br/>
		/// <c>VPROTD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W1 92 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669819)]
public static void vprotd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vprotd instruction.<br/>
		/// <br/>
		/// <c>VPROTD xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 C2 /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669820)]
public static void vprotd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vprotd instruction.<br/>
		/// <br/>
		/// <c>VPROTD xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 C2 /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669821)]
public static void vprotd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vprotd instruction.<br/>
		/// <br/>
		/// <c>VPROTD xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 C2 /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669822)]
public static void vprotd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vprotd instruction.<br/>
		/// <br/>
		/// <c>VPROTD xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 C2 /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669823)]
public static void vprotd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vprotq instruction.<br/>
		/// <br/>
		/// <c>VPROTQ xmm1, xmm2/m128, xmm3</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 93 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669824)]
public static void vprotq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vprotq instruction.<br/>
		/// <br/>
		/// <c>VPROTQ xmm1, xmm2/m128, xmm3</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 93 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669825)]
public static void vprotq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, AssemblerRegisterXMM src2) {}
		/// <summary>vprotq instruction.<br/>
		/// <br/>
		/// <c>VPROTQ xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W1 93 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669826)]
public static void vprotq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vprotq instruction.<br/>
		/// <br/>
		/// <c>VPROTQ xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 C3 /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669827)]
public static void vprotq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vprotq instruction.<br/>
		/// <br/>
		/// <c>VPROTQ xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 C3 /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669828)]
public static void vprotq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vprotq instruction.<br/>
		/// <br/>
		/// <c>VPROTQ xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 C3 /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669829)]
public static void vprotq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vprotq instruction.<br/>
		/// <br/>
		/// <c>VPROTQ xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 C3 /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669830)]
public static void vprotq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vprotw instruction.<br/>
		/// <br/>
		/// <c>VPROTW xmm1, xmm2/m128, xmm3</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 91 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669831)]
public static void vprotw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vprotw instruction.<br/>
		/// <br/>
		/// <c>VPROTW xmm1, xmm2/m128, xmm3</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 91 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669832)]
public static void vprotw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, AssemblerRegisterXMM src2) {}
		/// <summary>vprotw instruction.<br/>
		/// <br/>
		/// <c>VPROTW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W1 91 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669833)]
public static void vprotw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vprotw instruction.<br/>
		/// <br/>
		/// <c>VPROTW xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 C1 /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669834)]
public static void vprotw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vprotw instruction.<br/>
		/// <br/>
		/// <c>VPROTW xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 C1 /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669835)]
public static void vprotw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vprotw instruction.<br/>
		/// <br/>
		/// <c>VPROTW xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 C1 /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669836)]
public static void vprotw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vprotw instruction.<br/>
		/// <br/>
		/// <c>VPROTW xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>XOP.128.X8.W0 C1 /r ib</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669837)]
public static void vprotw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpsadbw instruction.<br/>
		/// <br/>
		/// <c>VPSADBW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG F6 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSADBW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG F6 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669838)]
public static void vpsadbw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsadbw instruction.<br/>
		/// <br/>
		/// <c>VPSADBW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG F6 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSADBW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG F6 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669839)]
public static void vpsadbw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpsadbw instruction.<br/>
		/// <br/>
		/// <c>VPSADBW zmm1, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG F6 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669840)]
public static void vpsadbw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpsadbw instruction.<br/>
		/// <br/>
		/// <c>VPSADBW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG F6 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSADBW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG F6 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669841)]
public static void vpsadbw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsadbw instruction.<br/>
		/// <br/>
		/// <c>VPSADBW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG F6 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSADBW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG F6 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669842)]
public static void vpsadbw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsadbw instruction.<br/>
		/// <br/>
		/// <c>VPSADBW zmm1, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG F6 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669843)]
public static void vpsadbw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpscatterdd instruction.<br/>
		/// <br/>
		/// <c>VPSCATTERDD vm32x {k1}, xmm1</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 A0 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669844)]
public static void vpscatterdd(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vpscatterdd instruction.<br/>
		/// <br/>
		/// <c>VPSCATTERDD vm32y {k1}, ymm1</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 A0 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669845)]
public static void vpscatterdd(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vpscatterdd instruction.<br/>
		/// <br/>
		/// <c>VPSCATTERDD vm32z {k1}, zmm1</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 A0 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669846)]
public static void vpscatterdd(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vpscatterdq instruction.<br/>
		/// <br/>
		/// <c>VPSCATTERDQ vm32x {k1}, xmm1</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 A0 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669847)]
public static void vpscatterdq(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vpscatterdq instruction.<br/>
		/// <br/>
		/// <c>VPSCATTERDQ vm32x {k1}, ymm1</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 A0 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669848)]
public static void vpscatterdq(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vpscatterdq instruction.<br/>
		/// <br/>
		/// <c>VPSCATTERDQ vm32y {k1}, zmm1</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 A0 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669849)]
public static void vpscatterdq(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vpscatterqd instruction.<br/>
		/// <br/>
		/// <c>VPSCATTERQD vm64x {k1}, xmm1</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 A1 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSCATTERQD vm64y {k1}, xmm1</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 A1 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669850)]
public static void vpscatterqd(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vpscatterqd instruction.<br/>
		/// <br/>
		/// <c>VPSCATTERQD vm64z {k1}, ymm1</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 A1 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669851)]
public static void vpscatterqd(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vpscatterqq instruction.<br/>
		/// <br/>
		/// <c>VPSCATTERQQ vm64x {k1}, xmm1</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 A1 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669852)]
public static void vpscatterqq(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vpscatterqq instruction.<br/>
		/// <br/>
		/// <c>VPSCATTERQQ vm64y {k1}, ymm1</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 A1 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669853)]
public static void vpscatterqq(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vpscatterqq instruction.<br/>
		/// <br/>
		/// <c>VPSCATTERQQ vm64z {k1}, zmm1</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 A1 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669854)]
public static void vpscatterqq(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vpshab instruction.<br/>
		/// <br/>
		/// <c>VPSHAB xmm1, xmm2/m128, xmm3</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 98 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669855)]
public static void vpshab(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpshab instruction.<br/>
		/// <br/>
		/// <c>VPSHAB xmm1, xmm2/m128, xmm3</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 98 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669856)]
public static void vpshab(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpshab instruction.<br/>
		/// <br/>
		/// <c>VPSHAB xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W1 98 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669857)]
public static void vpshab(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpshad instruction.<br/>
		/// <br/>
		/// <c>VPSHAD xmm1, xmm2/m128, xmm3</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 9A /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669858)]
public static void vpshad(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpshad instruction.<br/>
		/// <br/>
		/// <c>VPSHAD xmm1, xmm2/m128, xmm3</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 9A /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669859)]
public static void vpshad(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpshad instruction.<br/>
		/// <br/>
		/// <c>VPSHAD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W1 9A /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669860)]
public static void vpshad(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpshaq instruction.<br/>
		/// <br/>
		/// <c>VPSHAQ xmm1, xmm2/m128, xmm3</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 9B /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669861)]
public static void vpshaq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpshaq instruction.<br/>
		/// <br/>
		/// <c>VPSHAQ xmm1, xmm2/m128, xmm3</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 9B /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669862)]
public static void vpshaq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpshaq instruction.<br/>
		/// <br/>
		/// <c>VPSHAQ xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W1 9B /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669863)]
public static void vpshaq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpshaw instruction.<br/>
		/// <br/>
		/// <c>VPSHAW xmm1, xmm2/m128, xmm3</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 99 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669864)]
public static void vpshaw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpshaw instruction.<br/>
		/// <br/>
		/// <c>VPSHAW xmm1, xmm2/m128, xmm3</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 99 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669865)]
public static void vpshaw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpshaw instruction.<br/>
		/// <br/>
		/// <c>VPSHAW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W1 99 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669866)]
public static void vpshaw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpshlb instruction.<br/>
		/// <br/>
		/// <c>VPSHLB xmm1, xmm2/m128, xmm3</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 94 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669867)]
public static void vpshlb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpshlb instruction.<br/>
		/// <br/>
		/// <c>VPSHLB xmm1, xmm2/m128, xmm3</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 94 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669868)]
public static void vpshlb(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpshlb instruction.<br/>
		/// <br/>
		/// <c>VPSHLB xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W1 94 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669869)]
public static void vpshlb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpshld instruction.<br/>
		/// <br/>
		/// <c>VPSHLD xmm1, xmm2/m128, xmm3</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 96 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669870)]
public static void vpshld(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpshld instruction.<br/>
		/// <br/>
		/// <c>VPSHLD xmm1, xmm2/m128, xmm3</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 96 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669871)]
public static void vpshld(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpshld instruction.<br/>
		/// <br/>
		/// <c>VPSHLD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W1 96 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669872)]
public static void vpshld(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpshldd instruction.<br/>
		/// <br/>
		/// <c>VPSHLDD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 71 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669873)]
public static void vpshldd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vpshldd instruction.<br/>
		/// <br/>
		/// <c>VPSHLDD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 71 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669874)]
public static void vpshldd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vpshldd instruction.<br/>
		/// <br/>
		/// <c>VPSHLDD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 71 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669875)]
public static void vpshldd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, sbyte imm) {}
		/// <summary>vpshldd instruction.<br/>
		/// <br/>
		/// <c>VPSHLDD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 71 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669876)]
public static void vpshldd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpshldd instruction.<br/>
		/// <br/>
		/// <c>VPSHLDD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 71 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669877)]
public static void vpshldd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpshldd instruction.<br/>
		/// <br/>
		/// <c>VPSHLDD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 71 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669878)]
public static void vpshldd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpshldd instruction.<br/>
		/// <br/>
		/// <c>VPSHLDD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 71 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669879)]
public static void vpshldd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vpshldd instruction.<br/>
		/// <br/>
		/// <c>VPSHLDD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 71 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669880)]
public static void vpshldd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vpshldd instruction.<br/>
		/// <br/>
		/// <c>VPSHLDD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 71 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669881)]
public static void vpshldd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, byte imm) {}
		/// <summary>vpshldd instruction.<br/>
		/// <br/>
		/// <c>VPSHLDD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 71 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669882)]
public static void vpshldd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpshldd instruction.<br/>
		/// <br/>
		/// <c>VPSHLDD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 71 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669883)]
public static void vpshldd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpshldd instruction.<br/>
		/// <br/>
		/// <c>VPSHLDD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 71 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669884)]
public static void vpshldd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpshldq instruction.<br/>
		/// <br/>
		/// <c>VPSHLDQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 71 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669885)]
public static void vpshldq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vpshldq instruction.<br/>
		/// <br/>
		/// <c>VPSHLDQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 71 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669886)]
public static void vpshldq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vpshldq instruction.<br/>
		/// <br/>
		/// <c>VPSHLDQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 71 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669887)]
public static void vpshldq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, sbyte imm) {}
		/// <summary>vpshldq instruction.<br/>
		/// <br/>
		/// <c>VPSHLDQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 71 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669888)]
public static void vpshldq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpshldq instruction.<br/>
		/// <br/>
		/// <c>VPSHLDQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 71 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669889)]
public static void vpshldq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpshldq instruction.<br/>
		/// <br/>
		/// <c>VPSHLDQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 71 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669890)]
public static void vpshldq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpshldq instruction.<br/>
		/// <br/>
		/// <c>VPSHLDQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 71 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669891)]
public static void vpshldq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vpshldq instruction.<br/>
		/// <br/>
		/// <c>VPSHLDQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 71 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669892)]
public static void vpshldq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vpshldq instruction.<br/>
		/// <br/>
		/// <c>VPSHLDQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 71 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669893)]
public static void vpshldq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, byte imm) {}
		/// <summary>vpshldq instruction.<br/>
		/// <br/>
		/// <c>VPSHLDQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 71 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669894)]
public static void vpshldq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpshldq instruction.<br/>
		/// <br/>
		/// <c>VPSHLDQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 71 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669895)]
public static void vpshldq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpshldq instruction.<br/>
		/// <br/>
		/// <c>VPSHLDQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 71 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669896)]
public static void vpshldq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpshldvd instruction.<br/>
		/// <br/>
		/// <c>VPSHLDVD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 71 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669897)]
public static void vpshldvd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpshldvd instruction.<br/>
		/// <br/>
		/// <c>VPSHLDVD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 71 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669898)]
public static void vpshldvd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpshldvd instruction.<br/>
		/// <br/>
		/// <c>VPSHLDVD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 71 /r</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669899)]
public static void vpshldvd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpshldvd instruction.<br/>
		/// <br/>
		/// <c>VPSHLDVD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 71 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669900)]
public static void vpshldvd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpshldvd instruction.<br/>
		/// <br/>
		/// <c>VPSHLDVD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 71 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669901)]
public static void vpshldvd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpshldvd instruction.<br/>
		/// <br/>
		/// <c>VPSHLDVD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 71 /r</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669902)]
public static void vpshldvd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpshldvq instruction.<br/>
		/// <br/>
		/// <c>VPSHLDVQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 71 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669903)]
public static void vpshldvq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpshldvq instruction.<br/>
		/// <br/>
		/// <c>VPSHLDVQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 71 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669904)]
public static void vpshldvq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpshldvq instruction.<br/>
		/// <br/>
		/// <c>VPSHLDVQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 71 /r</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669905)]
public static void vpshldvq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpshldvq instruction.<br/>
		/// <br/>
		/// <c>VPSHLDVQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 71 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669906)]
public static void vpshldvq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpshldvq instruction.<br/>
		/// <br/>
		/// <c>VPSHLDVQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 71 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669907)]
public static void vpshldvq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpshldvq instruction.<br/>
		/// <br/>
		/// <c>VPSHLDVQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 71 /r</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669908)]
public static void vpshldvq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpshldvw instruction.<br/>
		/// <br/>
		/// <c>VPSHLDVW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 70 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669909)]
public static void vpshldvw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpshldvw instruction.<br/>
		/// <br/>
		/// <c>VPSHLDVW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 70 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669910)]
public static void vpshldvw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpshldvw instruction.<br/>
		/// <br/>
		/// <c>VPSHLDVW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 70 /r</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669911)]
public static void vpshldvw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpshldvw instruction.<br/>
		/// <br/>
		/// <c>VPSHLDVW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 70 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669912)]
public static void vpshldvw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpshldvw instruction.<br/>
		/// <br/>
		/// <c>VPSHLDVW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 70 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669913)]
public static void vpshldvw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpshldvw instruction.<br/>
		/// <br/>
		/// <c>VPSHLDVW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 70 /r</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669914)]
public static void vpshldvw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpshldw instruction.<br/>
		/// <br/>
		/// <c>VPSHLDW xmm1 {k1}{z}, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669915)]
public static void vpshldw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vpshldw instruction.<br/>
		/// <br/>
		/// <c>VPSHLDW ymm1 {k1}{z}, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669916)]
public static void vpshldw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vpshldw instruction.<br/>
		/// <br/>
		/// <c>VPSHLDW zmm1 {k1}{z}, zmm2, zmm3/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669917)]
public static void vpshldw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, sbyte imm) {}
		/// <summary>vpshldw instruction.<br/>
		/// <br/>
		/// <c>VPSHLDW xmm1 {k1}{z}, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669918)]
public static void vpshldw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpshldw instruction.<br/>
		/// <br/>
		/// <c>VPSHLDW ymm1 {k1}{z}, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669919)]
public static void vpshldw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpshldw instruction.<br/>
		/// <br/>
		/// <c>VPSHLDW zmm1 {k1}{z}, zmm2, zmm3/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669920)]
public static void vpshldw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpshldw instruction.<br/>
		/// <br/>
		/// <c>VPSHLDW xmm1 {k1}{z}, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669921)]
public static void vpshldw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vpshldw instruction.<br/>
		/// <br/>
		/// <c>VPSHLDW ymm1 {k1}{z}, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669922)]
public static void vpshldw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vpshldw instruction.<br/>
		/// <br/>
		/// <c>VPSHLDW zmm1 {k1}{z}, zmm2, zmm3/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669923)]
public static void vpshldw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, byte imm) {}
		/// <summary>vpshldw instruction.<br/>
		/// <br/>
		/// <c>VPSHLDW xmm1 {k1}{z}, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669924)]
public static void vpshldw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpshldw instruction.<br/>
		/// <br/>
		/// <c>VPSHLDW ymm1 {k1}{z}, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669925)]
public static void vpshldw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpshldw instruction.<br/>
		/// <br/>
		/// <c>VPSHLDW zmm1 {k1}{z}, zmm2, zmm3/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669926)]
public static void vpshldw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpshlq instruction.<br/>
		/// <br/>
		/// <c>VPSHLQ xmm1, xmm2/m128, xmm3</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 97 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669927)]
public static void vpshlq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpshlq instruction.<br/>
		/// <br/>
		/// <c>VPSHLQ xmm1, xmm2/m128, xmm3</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 97 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669928)]
public static void vpshlq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpshlq instruction.<br/>
		/// <br/>
		/// <c>VPSHLQ xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W1 97 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669929)]
public static void vpshlq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpshlw instruction.<br/>
		/// <br/>
		/// <c>VPSHLW xmm1, xmm2/m128, xmm3</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 95 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669930)]
public static void vpshlw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpshlw instruction.<br/>
		/// <br/>
		/// <c>VPSHLW xmm1, xmm2/m128, xmm3</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W0 95 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669931)]
public static void vpshlw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpshlw instruction.<br/>
		/// <br/>
		/// <c>VPSHLW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>XOP.128.X9.W1 95 /r</c><br/>
		/// <br/>
		/// <c>XOP</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669932)]
public static void vpshlw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpshrdd instruction.<br/>
		/// <br/>
		/// <c>VPSHRDD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 73 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669933)]
public static void vpshrdd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vpshrdd instruction.<br/>
		/// <br/>
		/// <c>VPSHRDD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 73 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669934)]
public static void vpshrdd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vpshrdd instruction.<br/>
		/// <br/>
		/// <c>VPSHRDD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 73 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669935)]
public static void vpshrdd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, sbyte imm) {}
		/// <summary>vpshrdd instruction.<br/>
		/// <br/>
		/// <c>VPSHRDD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 73 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669936)]
public static void vpshrdd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpshrdd instruction.<br/>
		/// <br/>
		/// <c>VPSHRDD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 73 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669937)]
public static void vpshrdd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpshrdd instruction.<br/>
		/// <br/>
		/// <c>VPSHRDD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 73 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669938)]
public static void vpshrdd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpshrdd instruction.<br/>
		/// <br/>
		/// <c>VPSHRDD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 73 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669939)]
public static void vpshrdd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vpshrdd instruction.<br/>
		/// <br/>
		/// <c>VPSHRDD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 73 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669940)]
public static void vpshrdd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vpshrdd instruction.<br/>
		/// <br/>
		/// <c>VPSHRDD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 73 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669941)]
public static void vpshrdd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, byte imm) {}
		/// <summary>vpshrdd instruction.<br/>
		/// <br/>
		/// <c>VPSHRDD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 73 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669942)]
public static void vpshrdd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpshrdd instruction.<br/>
		/// <br/>
		/// <c>VPSHRDD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 73 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669943)]
public static void vpshrdd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpshrdd instruction.<br/>
		/// <br/>
		/// <c>VPSHRDD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 73 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669944)]
public static void vpshrdd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpshrdq instruction.<br/>
		/// <br/>
		/// <c>VPSHRDQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 73 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669945)]
public static void vpshrdq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vpshrdq instruction.<br/>
		/// <br/>
		/// <c>VPSHRDQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 73 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669946)]
public static void vpshrdq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vpshrdq instruction.<br/>
		/// <br/>
		/// <c>VPSHRDQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 73 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669947)]
public static void vpshrdq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, sbyte imm) {}
		/// <summary>vpshrdq instruction.<br/>
		/// <br/>
		/// <c>VPSHRDQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 73 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669948)]
public static void vpshrdq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpshrdq instruction.<br/>
		/// <br/>
		/// <c>VPSHRDQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 73 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669949)]
public static void vpshrdq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpshrdq instruction.<br/>
		/// <br/>
		/// <c>VPSHRDQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 73 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669950)]
public static void vpshrdq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpshrdq instruction.<br/>
		/// <br/>
		/// <c>VPSHRDQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 73 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669951)]
public static void vpshrdq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vpshrdq instruction.<br/>
		/// <br/>
		/// <c>VPSHRDQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 73 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669952)]
public static void vpshrdq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vpshrdq instruction.<br/>
		/// <br/>
		/// <c>VPSHRDQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 73 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669953)]
public static void vpshrdq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, byte imm) {}
		/// <summary>vpshrdq instruction.<br/>
		/// <br/>
		/// <c>VPSHRDQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 73 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669954)]
public static void vpshrdq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpshrdq instruction.<br/>
		/// <br/>
		/// <c>VPSHRDQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 73 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669955)]
public static void vpshrdq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpshrdq instruction.<br/>
		/// <br/>
		/// <c>VPSHRDQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 73 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669956)]
public static void vpshrdq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpshrdvd instruction.<br/>
		/// <br/>
		/// <c>VPSHRDVD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 73 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669957)]
public static void vpshrdvd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpshrdvd instruction.<br/>
		/// <br/>
		/// <c>VPSHRDVD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 73 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669958)]
public static void vpshrdvd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpshrdvd instruction.<br/>
		/// <br/>
		/// <c>VPSHRDVD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 73 /r</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669959)]
public static void vpshrdvd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpshrdvd instruction.<br/>
		/// <br/>
		/// <c>VPSHRDVD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 73 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669960)]
public static void vpshrdvd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpshrdvd instruction.<br/>
		/// <br/>
		/// <c>VPSHRDVD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 73 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669961)]
public static void vpshrdvd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpshrdvd instruction.<br/>
		/// <br/>
		/// <c>VPSHRDVD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 73 /r</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669962)]
public static void vpshrdvd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpshrdvq instruction.<br/>
		/// <br/>
		/// <c>VPSHRDVQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 73 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669963)]
public static void vpshrdvq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpshrdvq instruction.<br/>
		/// <br/>
		/// <c>VPSHRDVQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 73 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669964)]
public static void vpshrdvq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpshrdvq instruction.<br/>
		/// <br/>
		/// <c>VPSHRDVQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 73 /r</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669965)]
public static void vpshrdvq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpshrdvq instruction.<br/>
		/// <br/>
		/// <c>VPSHRDVQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 73 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669966)]
public static void vpshrdvq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpshrdvq instruction.<br/>
		/// <br/>
		/// <c>VPSHRDVQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 73 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669967)]
public static void vpshrdvq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpshrdvq instruction.<br/>
		/// <br/>
		/// <c>VPSHRDVQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 73 /r</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669968)]
public static void vpshrdvq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpshrdvw instruction.<br/>
		/// <br/>
		/// <c>VPSHRDVW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 72 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669969)]
public static void vpshrdvw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpshrdvw instruction.<br/>
		/// <br/>
		/// <c>VPSHRDVW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 72 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669970)]
public static void vpshrdvw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpshrdvw instruction.<br/>
		/// <br/>
		/// <c>VPSHRDVW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 72 /r</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669971)]
public static void vpshrdvw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpshrdvw instruction.<br/>
		/// <br/>
		/// <c>VPSHRDVW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 72 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669972)]
public static void vpshrdvw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpshrdvw instruction.<br/>
		/// <br/>
		/// <c>VPSHRDVW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 72 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669973)]
public static void vpshrdvw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpshrdvw instruction.<br/>
		/// <br/>
		/// <c>VPSHRDVW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 72 /r</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669974)]
public static void vpshrdvw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpshrdw instruction.<br/>
		/// <br/>
		/// <c>VPSHRDW xmm1 {k1}{z}, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 72 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669975)]
public static void vpshrdw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vpshrdw instruction.<br/>
		/// <br/>
		/// <c>VPSHRDW ymm1 {k1}{z}, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 72 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669976)]
public static void vpshrdw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vpshrdw instruction.<br/>
		/// <br/>
		/// <c>VPSHRDW zmm1 {k1}{z}, zmm2, zmm3/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 72 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669977)]
public static void vpshrdw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, sbyte imm) {}
		/// <summary>vpshrdw instruction.<br/>
		/// <br/>
		/// <c>VPSHRDW xmm1 {k1}{z}, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 72 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669978)]
public static void vpshrdw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpshrdw instruction.<br/>
		/// <br/>
		/// <c>VPSHRDW ymm1 {k1}{z}, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 72 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669979)]
public static void vpshrdw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpshrdw instruction.<br/>
		/// <br/>
		/// <c>VPSHRDW zmm1 {k1}{z}, zmm2, zmm3/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 72 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669980)]
public static void vpshrdw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpshrdw instruction.<br/>
		/// <br/>
		/// <c>VPSHRDW xmm1 {k1}{z}, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 72 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669981)]
public static void vpshrdw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vpshrdw instruction.<br/>
		/// <br/>
		/// <c>VPSHRDW ymm1 {k1}{z}, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 72 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669982)]
public static void vpshrdw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vpshrdw instruction.<br/>
		/// <br/>
		/// <c>VPSHRDW zmm1 {k1}{z}, zmm2, zmm3/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 72 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669983)]
public static void vpshrdw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, byte imm) {}
		/// <summary>vpshrdw instruction.<br/>
		/// <br/>
		/// <c>VPSHRDW xmm1 {k1}{z}, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 72 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669984)]
public static void vpshrdw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpshrdw instruction.<br/>
		/// <br/>
		/// <c>VPSHRDW ymm1 {k1}{z}, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 72 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669985)]
public static void vpshrdw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpshrdw instruction.<br/>
		/// <br/>
		/// <c>VPSHRDW zmm1 {k1}{z}, zmm2, zmm3/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 72 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512_VBMI2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669986)]
public static void vpshrdw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpshufb instruction.<br/>
		/// <br/>
		/// <c>VPSHUFB xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 00 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSHUFB xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG 00 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669987)]
public static void vpshufb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpshufb instruction.<br/>
		/// <br/>
		/// <c>VPSHUFB ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 00 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSHUFB ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG 00 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669988)]
public static void vpshufb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpshufb instruction.<br/>
		/// <br/>
		/// <c>VPSHUFB zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG 00 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669989)]
public static void vpshufb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpshufb instruction.<br/>
		/// <br/>
		/// <c>VPSHUFB xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 00 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSHUFB xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.WIG 00 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669990)]
public static void vpshufb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpshufb instruction.<br/>
		/// <br/>
		/// <c>VPSHUFB ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 00 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSHUFB ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.WIG 00 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669991)]
public static void vpshufb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpshufb instruction.<br/>
		/// <br/>
		/// <c>VPSHUFB zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.WIG 00 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669992)]
public static void vpshufb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpshufbitqmb instruction.<br/>
		/// <br/>
		/// <c>VPSHUFBITQMB k1 {k2}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 8F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_BITALG</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669993)]
public static void vpshufbitqmb(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpshufbitqmb instruction.<br/>
		/// <br/>
		/// <c>VPSHUFBITQMB k1 {k2}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 8F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_BITALG</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669994)]
public static void vpshufbitqmb(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpshufbitqmb instruction.<br/>
		/// <br/>
		/// <c>VPSHUFBITQMB k1 {k2}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 8F /r</c><br/>
		/// <br/>
		/// <c>AVX512_BITALG</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669995)]
public static void vpshufbitqmb(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpshufbitqmb instruction.<br/>
		/// <br/>
		/// <c>VPSHUFBITQMB k1 {k2}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 8F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_BITALG</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669996)]
public static void vpshufbitqmb(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpshufbitqmb instruction.<br/>
		/// <br/>
		/// <c>VPSHUFBITQMB k1 {k2}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 8F /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512_BITALG</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669997)]
public static void vpshufbitqmb(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpshufbitqmb instruction.<br/>
		/// <br/>
		/// <c>VPSHUFBITQMB k1 {k2}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 8F /r</c><br/>
		/// <br/>
		/// <c>AVX512_BITALG</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669998)]
public static void vpshufbitqmb(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpshufd instruction.<br/>
		/// <br/>
		/// <c>VPSHUFD xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSHUFD xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100669999)]
public static void vpshufd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vpshufd instruction.<br/>
		/// <br/>
		/// <c>VPSHUFD ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSHUFD ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670000)]
public static void vpshufd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vpshufd instruction.<br/>
		/// <br/>
		/// <c>VPSHUFD zmm1 {k1}{z}, zmm2/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670001)]
public static void vpshufd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vpshufd instruction.<br/>
		/// <br/>
		/// <c>VPSHUFD xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSHUFD xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670002)]
public static void vpshufd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpshufd instruction.<br/>
		/// <br/>
		/// <c>VPSHUFD ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSHUFD ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670003)]
public static void vpshufd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpshufd instruction.<br/>
		/// <br/>
		/// <c>VPSHUFD zmm1 {k1}{z}, zmm2/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670004)]
public static void vpshufd(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpshufd instruction.<br/>
		/// <br/>
		/// <c>VPSHUFD xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSHUFD xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670005)]
public static void vpshufd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vpshufd instruction.<br/>
		/// <br/>
		/// <c>VPSHUFD ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSHUFD ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670006)]
public static void vpshufd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vpshufd instruction.<br/>
		/// <br/>
		/// <c>VPSHUFD zmm1 {k1}{z}, zmm2/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670007)]
public static void vpshufd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vpshufd instruction.<br/>
		/// <br/>
		/// <c>VPSHUFD xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSHUFD xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670008)]
public static void vpshufd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpshufd instruction.<br/>
		/// <br/>
		/// <c>VPSHUFD ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSHUFD ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670009)]
public static void vpshufd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpshufd instruction.<br/>
		/// <br/>
		/// <c>VPSHUFD zmm1 {k1}{z}, zmm2/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670010)]
public static void vpshufd(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpshufhw instruction.<br/>
		/// <br/>
		/// <c>VPSHUFHW xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.F3.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSHUFHW xmm1 {k1}{z}, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670011)]
public static void vpshufhw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vpshufhw instruction.<br/>
		/// <br/>
		/// <c>VPSHUFHW ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.F3.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSHUFHW ymm1 {k1}{z}, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670012)]
public static void vpshufhw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vpshufhw instruction.<br/>
		/// <br/>
		/// <c>VPSHUFHW zmm1 {k1}{z}, zmm2/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670013)]
public static void vpshufhw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vpshufhw instruction.<br/>
		/// <br/>
		/// <c>VPSHUFHW xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.F3.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSHUFHW xmm1 {k1}{z}, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670014)]
public static void vpshufhw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpshufhw instruction.<br/>
		/// <br/>
		/// <c>VPSHUFHW ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.F3.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSHUFHW ymm1 {k1}{z}, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670015)]
public static void vpshufhw(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpshufhw instruction.<br/>
		/// <br/>
		/// <c>VPSHUFHW zmm1 {k1}{z}, zmm2/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670016)]
public static void vpshufhw(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpshufhw instruction.<br/>
		/// <br/>
		/// <c>VPSHUFHW xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.F3.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSHUFHW xmm1 {k1}{z}, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670017)]
public static void vpshufhw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vpshufhw instruction.<br/>
		/// <br/>
		/// <c>VPSHUFHW ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.F3.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSHUFHW ymm1 {k1}{z}, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670018)]
public static void vpshufhw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vpshufhw instruction.<br/>
		/// <br/>
		/// <c>VPSHUFHW zmm1 {k1}{z}, zmm2/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670019)]
public static void vpshufhw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vpshufhw instruction.<br/>
		/// <br/>
		/// <c>VPSHUFHW xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.F3.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSHUFHW xmm1 {k1}{z}, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670020)]
public static void vpshufhw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpshufhw instruction.<br/>
		/// <br/>
		/// <c>VPSHUFHW ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.F3.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSHUFHW ymm1 {k1}{z}, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670021)]
public static void vpshufhw(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpshufhw instruction.<br/>
		/// <br/>
		/// <c>VPSHUFHW zmm1 {k1}{z}, zmm2/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670022)]
public static void vpshufhw(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpshuflw instruction.<br/>
		/// <br/>
		/// <c>VPSHUFLW xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.F2.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSHUFLW xmm1 {k1}{z}, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.F2.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670023)]
public static void vpshuflw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vpshuflw instruction.<br/>
		/// <br/>
		/// <c>VPSHUFLW ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.F2.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSHUFLW ymm1 {k1}{z}, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.F2.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670024)]
public static void vpshuflw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vpshuflw instruction.<br/>
		/// <br/>
		/// <c>VPSHUFLW zmm1 {k1}{z}, zmm2/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.F2.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670025)]
public static void vpshuflw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vpshuflw instruction.<br/>
		/// <br/>
		/// <c>VPSHUFLW xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.F2.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSHUFLW xmm1 {k1}{z}, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.F2.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670026)]
public static void vpshuflw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpshuflw instruction.<br/>
		/// <br/>
		/// <c>VPSHUFLW ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.F2.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSHUFLW ymm1 {k1}{z}, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.F2.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670027)]
public static void vpshuflw(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpshuflw instruction.<br/>
		/// <br/>
		/// <c>VPSHUFLW zmm1 {k1}{z}, zmm2/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.F2.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670028)]
public static void vpshuflw(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpshuflw instruction.<br/>
		/// <br/>
		/// <c>VPSHUFLW xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.F2.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSHUFLW xmm1 {k1}{z}, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.F2.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670029)]
public static void vpshuflw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vpshuflw instruction.<br/>
		/// <br/>
		/// <c>VPSHUFLW ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.F2.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSHUFLW ymm1 {k1}{z}, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.F2.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670030)]
public static void vpshuflw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vpshuflw instruction.<br/>
		/// <br/>
		/// <c>VPSHUFLW zmm1 {k1}{z}, zmm2/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.F2.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670031)]
public static void vpshuflw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vpshuflw instruction.<br/>
		/// <br/>
		/// <c>VPSHUFLW xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.F2.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSHUFLW xmm1 {k1}{z}, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.F2.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670032)]
public static void vpshuflw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpshuflw instruction.<br/>
		/// <br/>
		/// <c>VPSHUFLW ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.F2.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSHUFLW ymm1 {k1}{z}, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.F2.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670033)]
public static void vpshuflw(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpshuflw instruction.<br/>
		/// <br/>
		/// <c>VPSHUFLW zmm1 {k1}{z}, zmm2/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.F2.0F.WIG 70 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670034)]
public static void vpshuflw(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpsignb instruction.<br/>
		/// <br/>
		/// <c>VPSIGNB xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 08 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670035)]
public static void vpsignb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsignb instruction.<br/>
		/// <br/>
		/// <c>VPSIGNB ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 08 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670036)]
public static void vpsignb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpsignb instruction.<br/>
		/// <br/>
		/// <c>VPSIGNB xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 08 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670037)]
public static void vpsignb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsignb instruction.<br/>
		/// <br/>
		/// <c>VPSIGNB ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 08 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670038)]
public static void vpsignb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsignd instruction.<br/>
		/// <br/>
		/// <c>VPSIGND xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 0A /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670039)]
public static void vpsignd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsignd instruction.<br/>
		/// <br/>
		/// <c>VPSIGND ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 0A /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670040)]
public static void vpsignd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpsignd instruction.<br/>
		/// <br/>
		/// <c>VPSIGND xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 0A /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670041)]
public static void vpsignd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsignd instruction.<br/>
		/// <br/>
		/// <c>VPSIGND ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 0A /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670042)]
public static void vpsignd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsignw instruction.<br/>
		/// <br/>
		/// <c>VPSIGNW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 09 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670043)]
public static void vpsignw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsignw instruction.<br/>
		/// <br/>
		/// <c>VPSIGNW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 09 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670044)]
public static void vpsignw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpsignw instruction.<br/>
		/// <br/>
		/// <c>VPSIGNW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 09 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670045)]
public static void vpsignw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsignw instruction.<br/>
		/// <br/>
		/// <c>VPSIGNW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 09 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670046)]
public static void vpsignw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpslld instruction.<br/>
		/// <br/>
		/// <c>VPSLLD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG F2 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSLLD xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 F2 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670047)]
public static void vpslld(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpslld instruction.<br/>
		/// <br/>
		/// <c>VPSLLD ymm1, ymm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG F2 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSLLD ymm1 {k1}{z}, ymm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 F2 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670048)]
public static void vpslld(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpslld instruction.<br/>
		/// <br/>
		/// <c>VPSLLD zmm1 {k1}{z}, zmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 F2 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670049)]
public static void vpslld(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpslld instruction.<br/>
		/// <br/>
		/// <c>VPSLLD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG F2 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSLLD xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 F2 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670050)]
public static void vpslld(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpslld instruction.<br/>
		/// <br/>
		/// <c>VPSLLD ymm1, ymm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG F2 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSLLD ymm1 {k1}{z}, ymm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 F2 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670051)]
public static void vpslld(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpslld instruction.<br/>
		/// <br/>
		/// <c>VPSLLD zmm1 {k1}{z}, zmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 F2 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670052)]
public static void vpslld(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpslld instruction.<br/>
		/// <br/>
		/// <c>VPSLLD xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 72 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSLLD xmm1, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 72 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670053)]
public static void vpslld(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vpslld instruction.<br/>
		/// <br/>
		/// <c>VPSLLD ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 72 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSLLD ymm1, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 72 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670054)]
public static void vpslld(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vpslld instruction.<br/>
		/// <br/>
		/// <c>VPSLLD zmm1 {k1}{z}, zmm2/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 72 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670055)]
public static void vpslld(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vpslld instruction.<br/>
		/// <br/>
		/// <c>VPSLLD xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 72 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670056)]
public static void vpslld(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpslld instruction.<br/>
		/// <br/>
		/// <c>VPSLLD ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 72 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670057)]
public static void vpslld(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpslld instruction.<br/>
		/// <br/>
		/// <c>VPSLLD zmm1 {k1}{z}, zmm2/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 72 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670058)]
public static void vpslld(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpslld instruction.<br/>
		/// <br/>
		/// <c>VPSLLD xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 72 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSLLD xmm1, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 72 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670059)]
public static void vpslld(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vpslld instruction.<br/>
		/// <br/>
		/// <c>VPSLLD ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 72 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSLLD ymm1, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 72 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670060)]
public static void vpslld(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vpslld instruction.<br/>
		/// <br/>
		/// <c>VPSLLD zmm1 {k1}{z}, zmm2/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 72 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670061)]
public static void vpslld(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vpslld instruction.<br/>
		/// <br/>
		/// <c>VPSLLD xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 72 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670062)]
public static void vpslld(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpslld instruction.<br/>
		/// <br/>
		/// <c>VPSLLD ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 72 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670063)]
public static void vpslld(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpslld instruction.<br/>
		/// <br/>
		/// <c>VPSLLD zmm1 {k1}{z}, zmm2/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 72 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670064)]
public static void vpslld(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpslldq instruction.<br/>
		/// <br/>
		/// <c>VPSLLDQ xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG 73 /7 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSLLDQ xmm1, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 73 /7 ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670065)]
public static void vpslldq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vpslldq instruction.<br/>
		/// <br/>
		/// <c>VPSLLDQ ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG 73 /7 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSLLDQ ymm1, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 73 /7 ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670066)]
public static void vpslldq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vpslldq instruction.<br/>
		/// <br/>
		/// <c>VPSLLDQ zmm1, zmm2/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG 73 /7 ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670067)]
public static void vpslldq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vpslldq instruction.<br/>
		/// <br/>
		/// <c>VPSLLDQ xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG 73 /7 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670068)]
public static void vpslldq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpslldq instruction.<br/>
		/// <br/>
		/// <c>VPSLLDQ ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG 73 /7 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670069)]
public static void vpslldq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpslldq instruction.<br/>
		/// <br/>
		/// <c>VPSLLDQ zmm1, zmm2/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG 73 /7 ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670070)]
public static void vpslldq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpslldq instruction.<br/>
		/// <br/>
		/// <c>VPSLLDQ xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG 73 /7 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSLLDQ xmm1, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 73 /7 ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670071)]
public static void vpslldq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vpslldq instruction.<br/>
		/// <br/>
		/// <c>VPSLLDQ ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG 73 /7 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSLLDQ ymm1, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 73 /7 ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670072)]
public static void vpslldq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vpslldq instruction.<br/>
		/// <br/>
		/// <c>VPSLLDQ zmm1, zmm2/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG 73 /7 ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670073)]
public static void vpslldq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vpslldq instruction.<br/>
		/// <br/>
		/// <c>VPSLLDQ xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG 73 /7 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670074)]
public static void vpslldq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpslldq instruction.<br/>
		/// <br/>
		/// <c>VPSLLDQ ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG 73 /7 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670075)]
public static void vpslldq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpslldq instruction.<br/>
		/// <br/>
		/// <c>VPSLLDQ zmm1, zmm2/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG 73 /7 ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670076)]
public static void vpslldq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpsllq instruction.<br/>
		/// <br/>
		/// <c>VPSLLQ xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG F3 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSLLQ xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 F3 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670077)]
public static void vpsllq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsllq instruction.<br/>
		/// <br/>
		/// <c>VPSLLQ ymm1, ymm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG F3 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSLLQ ymm1 {k1}{z}, ymm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 F3 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670078)]
public static void vpsllq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsllq instruction.<br/>
		/// <br/>
		/// <c>VPSLLQ zmm1 {k1}{z}, zmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 F3 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670079)]
public static void vpsllq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsllq instruction.<br/>
		/// <br/>
		/// <c>VPSLLQ xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG F3 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSLLQ xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 F3 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670080)]
public static void vpsllq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsllq instruction.<br/>
		/// <br/>
		/// <c>VPSLLQ ymm1, ymm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG F3 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSLLQ ymm1 {k1}{z}, ymm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 F3 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670081)]
public static void vpsllq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsllq instruction.<br/>
		/// <br/>
		/// <c>VPSLLQ zmm1 {k1}{z}, zmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 F3 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670082)]
public static void vpsllq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsllq instruction.<br/>
		/// <br/>
		/// <c>VPSLLQ xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 73 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSLLQ xmm1, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 73 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670083)]
public static void vpsllq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vpsllq instruction.<br/>
		/// <br/>
		/// <c>VPSLLQ ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 73 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSLLQ ymm1, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 73 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670084)]
public static void vpsllq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vpsllq instruction.<br/>
		/// <br/>
		/// <c>VPSLLQ zmm1 {k1}{z}, zmm2/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 73 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670085)]
public static void vpsllq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vpsllq instruction.<br/>
		/// <br/>
		/// <c>VPSLLQ xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 73 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670086)]
public static void vpsllq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpsllq instruction.<br/>
		/// <br/>
		/// <c>VPSLLQ ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 73 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670087)]
public static void vpsllq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpsllq instruction.<br/>
		/// <br/>
		/// <c>VPSLLQ zmm1 {k1}{z}, zmm2/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 73 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670088)]
public static void vpsllq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpsllq instruction.<br/>
		/// <br/>
		/// <c>VPSLLQ xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 73 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSLLQ xmm1, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 73 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670089)]
public static void vpsllq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vpsllq instruction.<br/>
		/// <br/>
		/// <c>VPSLLQ ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 73 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSLLQ ymm1, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 73 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670090)]
public static void vpsllq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vpsllq instruction.<br/>
		/// <br/>
		/// <c>VPSLLQ zmm1 {k1}{z}, zmm2/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 73 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670091)]
public static void vpsllq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vpsllq instruction.<br/>
		/// <br/>
		/// <c>VPSLLQ xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 73 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670092)]
public static void vpsllq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpsllq instruction.<br/>
		/// <br/>
		/// <c>VPSLLQ ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 73 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670093)]
public static void vpsllq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpsllq instruction.<br/>
		/// <br/>
		/// <c>VPSLLQ zmm1 {k1}{z}, zmm2/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 73 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670094)]
public static void vpsllq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpsllvd instruction.<br/>
		/// <br/>
		/// <c>VPSLLVD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 47 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSLLVD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 47 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670095)]
public static void vpsllvd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsllvd instruction.<br/>
		/// <br/>
		/// <c>VPSLLVD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 47 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSLLVD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 47 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670096)]
public static void vpsllvd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpsllvd instruction.<br/>
		/// <br/>
		/// <c>VPSLLVD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 47 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670097)]
public static void vpsllvd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpsllvd instruction.<br/>
		/// <br/>
		/// <c>VPSLLVD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 47 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSLLVD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 47 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670098)]
public static void vpsllvd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsllvd instruction.<br/>
		/// <br/>
		/// <c>VPSLLVD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 47 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSLLVD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 47 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670099)]
public static void vpsllvd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsllvd instruction.<br/>
		/// <br/>
		/// <c>VPSLLVD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 47 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670100)]
public static void vpsllvd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsllvq instruction.<br/>
		/// <br/>
		/// <c>VPSLLVQ xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 47 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSLLVQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 47 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670101)]
public static void vpsllvq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsllvq instruction.<br/>
		/// <br/>
		/// <c>VPSLLVQ ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 47 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSLLVQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 47 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670102)]
public static void vpsllvq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpsllvq instruction.<br/>
		/// <br/>
		/// <c>VPSLLVQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 47 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670103)]
public static void vpsllvq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpsllvq instruction.<br/>
		/// <br/>
		/// <c>VPSLLVQ xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 47 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSLLVQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 47 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670104)]
public static void vpsllvq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsllvq instruction.<br/>
		/// <br/>
		/// <c>VPSLLVQ ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 47 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSLLVQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 47 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670105)]
public static void vpsllvq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsllvq instruction.<br/>
		/// <br/>
		/// <c>VPSLLVQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 47 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670106)]
public static void vpsllvq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsllvw instruction.<br/>
		/// <br/>
		/// <c>VPSLLVW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 12 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670107)]
public static void vpsllvw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsllvw instruction.<br/>
		/// <br/>
		/// <c>VPSLLVW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 12 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670108)]
public static void vpsllvw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpsllvw instruction.<br/>
		/// <br/>
		/// <c>VPSLLVW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 12 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670109)]
public static void vpsllvw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpsllvw instruction.<br/>
		/// <br/>
		/// <c>VPSLLVW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 12 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670110)]
public static void vpsllvw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsllvw instruction.<br/>
		/// <br/>
		/// <c>VPSLLVW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 12 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670111)]
public static void vpsllvw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsllvw instruction.<br/>
		/// <br/>
		/// <c>VPSLLVW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 12 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670112)]
public static void vpsllvw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsllw instruction.<br/>
		/// <br/>
		/// <c>VPSLLW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG F1 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSLLW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG F1 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670113)]
public static void vpsllw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsllw instruction.<br/>
		/// <br/>
		/// <c>VPSLLW ymm1, ymm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG F1 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSLLW ymm1 {k1}{z}, ymm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG F1 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670114)]
public static void vpsllw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsllw instruction.<br/>
		/// <br/>
		/// <c>VPSLLW zmm1 {k1}{z}, zmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG F1 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670115)]
public static void vpsllw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsllw instruction.<br/>
		/// <br/>
		/// <c>VPSLLW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG F1 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSLLW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG F1 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670116)]
public static void vpsllw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsllw instruction.<br/>
		/// <br/>
		/// <c>VPSLLW ymm1, ymm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG F1 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSLLW ymm1 {k1}{z}, ymm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG F1 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670117)]
public static void vpsllw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsllw instruction.<br/>
		/// <br/>
		/// <c>VPSLLW zmm1 {k1}{z}, zmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG F1 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670118)]
public static void vpsllw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsllw instruction.<br/>
		/// <br/>
		/// <c>VPSLLW xmm1 {k1}{z}, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG 71 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSLLW xmm1, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 71 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670119)]
public static void vpsllw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vpsllw instruction.<br/>
		/// <br/>
		/// <c>VPSLLW ymm1 {k1}{z}, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG 71 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSLLW ymm1, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 71 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670120)]
public static void vpsllw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vpsllw instruction.<br/>
		/// <br/>
		/// <c>VPSLLW zmm1 {k1}{z}, zmm2/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG 71 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670121)]
public static void vpsllw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vpsllw instruction.<br/>
		/// <br/>
		/// <c>VPSLLW xmm1 {k1}{z}, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG 71 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670122)]
public static void vpsllw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpsllw instruction.<br/>
		/// <br/>
		/// <c>VPSLLW ymm1 {k1}{z}, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG 71 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670123)]
public static void vpsllw(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpsllw instruction.<br/>
		/// <br/>
		/// <c>VPSLLW zmm1 {k1}{z}, zmm2/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG 71 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670124)]
public static void vpsllw(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpsllw instruction.<br/>
		/// <br/>
		/// <c>VPSLLW xmm1 {k1}{z}, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG 71 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSLLW xmm1, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 71 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670125)]
public static void vpsllw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vpsllw instruction.<br/>
		/// <br/>
		/// <c>VPSLLW ymm1 {k1}{z}, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG 71 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSLLW ymm1, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 71 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670126)]
public static void vpsllw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vpsllw instruction.<br/>
		/// <br/>
		/// <c>VPSLLW zmm1 {k1}{z}, zmm2/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG 71 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670127)]
public static void vpsllw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vpsllw instruction.<br/>
		/// <br/>
		/// <c>VPSLLW xmm1 {k1}{z}, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG 71 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670128)]
public static void vpsllw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpsllw instruction.<br/>
		/// <br/>
		/// <c>VPSLLW ymm1 {k1}{z}, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG 71 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670129)]
public static void vpsllw(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpsllw instruction.<br/>
		/// <br/>
		/// <c>VPSLLW zmm1 {k1}{z}, zmm2/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG 71 /6 ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670130)]
public static void vpsllw(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpsrad instruction.<br/>
		/// <br/>
		/// <c>VPSRAD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG E2 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 E2 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670131)]
public static void vpsrad(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsrad instruction.<br/>
		/// <br/>
		/// <c>VPSRAD ymm1, ymm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG E2 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 E2 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670132)]
public static void vpsrad(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsrad instruction.<br/>
		/// <br/>
		/// <c>VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 E2 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670133)]
public static void vpsrad(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsrad instruction.<br/>
		/// <br/>
		/// <c>VPSRAD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG E2 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 E2 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670134)]
public static void vpsrad(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsrad instruction.<br/>
		/// <br/>
		/// <c>VPSRAD ymm1, ymm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG E2 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 E2 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670135)]
public static void vpsrad(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsrad instruction.<br/>
		/// <br/>
		/// <c>VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 E2 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670136)]
public static void vpsrad(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsrad instruction.<br/>
		/// <br/>
		/// <c>VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 72 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRAD xmm1, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 72 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670137)]
public static void vpsrad(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vpsrad instruction.<br/>
		/// <br/>
		/// <c>VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 72 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRAD ymm1, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 72 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670138)]
public static void vpsrad(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vpsrad instruction.<br/>
		/// <br/>
		/// <c>VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 72 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670139)]
public static void vpsrad(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vpsrad instruction.<br/>
		/// <br/>
		/// <c>VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 72 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670140)]
public static void vpsrad(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpsrad instruction.<br/>
		/// <br/>
		/// <c>VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 72 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670141)]
public static void vpsrad(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpsrad instruction.<br/>
		/// <br/>
		/// <c>VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 72 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670142)]
public static void vpsrad(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpsrad instruction.<br/>
		/// <br/>
		/// <c>VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 72 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRAD xmm1, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 72 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670143)]
public static void vpsrad(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vpsrad instruction.<br/>
		/// <br/>
		/// <c>VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 72 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRAD ymm1, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 72 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670144)]
public static void vpsrad(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vpsrad instruction.<br/>
		/// <br/>
		/// <c>VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 72 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670145)]
public static void vpsrad(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vpsrad instruction.<br/>
		/// <br/>
		/// <c>VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 72 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670146)]
public static void vpsrad(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpsrad instruction.<br/>
		/// <br/>
		/// <c>VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 72 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670147)]
public static void vpsrad(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpsrad instruction.<br/>
		/// <br/>
		/// <c>VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 72 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670148)]
public static void vpsrad(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpsraq instruction.<br/>
		/// <br/>
		/// <c>VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 E2 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670149)]
public static void vpsraq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsraq instruction.<br/>
		/// <br/>
		/// <c>VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 E2 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670150)]
public static void vpsraq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsraq instruction.<br/>
		/// <br/>
		/// <c>VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 E2 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670151)]
public static void vpsraq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsraq instruction.<br/>
		/// <br/>
		/// <c>VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 E2 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670152)]
public static void vpsraq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsraq instruction.<br/>
		/// <br/>
		/// <c>VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 E2 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670153)]
public static void vpsraq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsraq instruction.<br/>
		/// <br/>
		/// <c>VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 E2 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670154)]
public static void vpsraq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsraq instruction.<br/>
		/// <br/>
		/// <c>VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 72 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670155)]
public static void vpsraq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vpsraq instruction.<br/>
		/// <br/>
		/// <c>VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 72 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670156)]
public static void vpsraq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vpsraq instruction.<br/>
		/// <br/>
		/// <c>VPSRAQ zmm1 {k1}{z}, zmm2/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 72 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670157)]
public static void vpsraq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vpsraq instruction.<br/>
		/// <br/>
		/// <c>VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 72 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670158)]
public static void vpsraq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpsraq instruction.<br/>
		/// <br/>
		/// <c>VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 72 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670159)]
public static void vpsraq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpsraq instruction.<br/>
		/// <br/>
		/// <c>VPSRAQ zmm1 {k1}{z}, zmm2/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 72 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670160)]
public static void vpsraq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpsraq instruction.<br/>
		/// <br/>
		/// <c>VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 72 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670161)]
public static void vpsraq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vpsraq instruction.<br/>
		/// <br/>
		/// <c>VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 72 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670162)]
public static void vpsraq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vpsraq instruction.<br/>
		/// <br/>
		/// <c>VPSRAQ zmm1 {k1}{z}, zmm2/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 72 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670163)]
public static void vpsraq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vpsraq instruction.<br/>
		/// <br/>
		/// <c>VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 72 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670164)]
public static void vpsraq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpsraq instruction.<br/>
		/// <br/>
		/// <c>VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 72 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670165)]
public static void vpsraq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpsraq instruction.<br/>
		/// <br/>
		/// <c>VPSRAQ zmm1 {k1}{z}, zmm2/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 72 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670166)]
public static void vpsraq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpsravd instruction.<br/>
		/// <br/>
		/// <c>VPSRAVD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 46 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRAVD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 46 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670167)]
public static void vpsravd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsravd instruction.<br/>
		/// <br/>
		/// <c>VPSRAVD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 46 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRAVD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 46 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670168)]
public static void vpsravd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpsravd instruction.<br/>
		/// <br/>
		/// <c>VPSRAVD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 46 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670169)]
public static void vpsravd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpsravd instruction.<br/>
		/// <br/>
		/// <c>VPSRAVD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 46 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRAVD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 46 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670170)]
public static void vpsravd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsravd instruction.<br/>
		/// <br/>
		/// <c>VPSRAVD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 46 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRAVD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 46 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670171)]
public static void vpsravd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsravd instruction.<br/>
		/// <br/>
		/// <c>VPSRAVD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 46 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670172)]
public static void vpsravd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsravq instruction.<br/>
		/// <br/>
		/// <c>VPSRAVQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 46 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670173)]
public static void vpsravq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsravq instruction.<br/>
		/// <br/>
		/// <c>VPSRAVQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 46 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670174)]
public static void vpsravq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpsravq instruction.<br/>
		/// <br/>
		/// <c>VPSRAVQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 46 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670175)]
public static void vpsravq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpsravq instruction.<br/>
		/// <br/>
		/// <c>VPSRAVQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 46 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670176)]
public static void vpsravq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsravq instruction.<br/>
		/// <br/>
		/// <c>VPSRAVQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 46 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670177)]
public static void vpsravq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsravq instruction.<br/>
		/// <br/>
		/// <c>VPSRAVQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 46 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670178)]
public static void vpsravq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsravw instruction.<br/>
		/// <br/>
		/// <c>VPSRAVW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 11 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670179)]
public static void vpsravw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsravw instruction.<br/>
		/// <br/>
		/// <c>VPSRAVW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 11 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670180)]
public static void vpsravw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpsravw instruction.<br/>
		/// <br/>
		/// <c>VPSRAVW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 11 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670181)]
public static void vpsravw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpsravw instruction.<br/>
		/// <br/>
		/// <c>VPSRAVW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 11 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670182)]
public static void vpsravw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsravw instruction.<br/>
		/// <br/>
		/// <c>VPSRAVW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 11 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670183)]
public static void vpsravw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsravw instruction.<br/>
		/// <br/>
		/// <c>VPSRAVW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 11 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670184)]
public static void vpsravw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsraw instruction.<br/>
		/// <br/>
		/// <c>VPSRAW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG E1 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRAW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG E1 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670185)]
public static void vpsraw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsraw instruction.<br/>
		/// <br/>
		/// <c>VPSRAW ymm1, ymm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG E1 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRAW ymm1 {k1}{z}, ymm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG E1 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670186)]
public static void vpsraw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsraw instruction.<br/>
		/// <br/>
		/// <c>VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG E1 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670187)]
public static void vpsraw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsraw instruction.<br/>
		/// <br/>
		/// <c>VPSRAW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG E1 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRAW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG E1 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670188)]
public static void vpsraw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsraw instruction.<br/>
		/// <br/>
		/// <c>VPSRAW ymm1, ymm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG E1 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRAW ymm1 {k1}{z}, ymm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG E1 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670189)]
public static void vpsraw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsraw instruction.<br/>
		/// <br/>
		/// <c>VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG E1 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670190)]
public static void vpsraw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsraw instruction.<br/>
		/// <br/>
		/// <c>VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG 71 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRAW xmm1, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 71 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670191)]
public static void vpsraw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vpsraw instruction.<br/>
		/// <br/>
		/// <c>VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG 71 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRAW ymm1, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 71 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670192)]
public static void vpsraw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vpsraw instruction.<br/>
		/// <br/>
		/// <c>VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG 71 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670193)]
public static void vpsraw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vpsraw instruction.<br/>
		/// <br/>
		/// <c>VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG 71 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670194)]
public static void vpsraw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpsraw instruction.<br/>
		/// <br/>
		/// <c>VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG 71 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670195)]
public static void vpsraw(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpsraw instruction.<br/>
		/// <br/>
		/// <c>VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG 71 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670196)]
public static void vpsraw(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpsraw instruction.<br/>
		/// <br/>
		/// <c>VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG 71 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRAW xmm1, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 71 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670197)]
public static void vpsraw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vpsraw instruction.<br/>
		/// <br/>
		/// <c>VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG 71 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRAW ymm1, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 71 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670198)]
public static void vpsraw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vpsraw instruction.<br/>
		/// <br/>
		/// <c>VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG 71 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670199)]
public static void vpsraw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vpsraw instruction.<br/>
		/// <br/>
		/// <c>VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG 71 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670200)]
public static void vpsraw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpsraw instruction.<br/>
		/// <br/>
		/// <c>VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG 71 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670201)]
public static void vpsraw(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpsraw instruction.<br/>
		/// <br/>
		/// <c>VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG 71 /4 ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670202)]
public static void vpsraw(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpsrld instruction.<br/>
		/// <br/>
		/// <c>VPSRLD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG D2 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRLD xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 D2 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670203)]
public static void vpsrld(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsrld instruction.<br/>
		/// <br/>
		/// <c>VPSRLD ymm1, ymm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG D2 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRLD ymm1 {k1}{z}, ymm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 D2 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670204)]
public static void vpsrld(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsrld instruction.<br/>
		/// <br/>
		/// <c>VPSRLD zmm1 {k1}{z}, zmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 D2 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670205)]
public static void vpsrld(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsrld instruction.<br/>
		/// <br/>
		/// <c>VPSRLD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG D2 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRLD xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 D2 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670206)]
public static void vpsrld(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsrld instruction.<br/>
		/// <br/>
		/// <c>VPSRLD ymm1, ymm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG D2 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRLD ymm1 {k1}{z}, ymm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 D2 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670207)]
public static void vpsrld(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsrld instruction.<br/>
		/// <br/>
		/// <c>VPSRLD zmm1 {k1}{z}, zmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 D2 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670208)]
public static void vpsrld(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsrld instruction.<br/>
		/// <br/>
		/// <c>VPSRLD xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 72 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRLD xmm1, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 72 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670209)]
public static void vpsrld(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vpsrld instruction.<br/>
		/// <br/>
		/// <c>VPSRLD ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 72 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRLD ymm1, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 72 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670210)]
public static void vpsrld(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vpsrld instruction.<br/>
		/// <br/>
		/// <c>VPSRLD zmm1 {k1}{z}, zmm2/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 72 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670211)]
public static void vpsrld(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vpsrld instruction.<br/>
		/// <br/>
		/// <c>VPSRLD xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 72 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670212)]
public static void vpsrld(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpsrld instruction.<br/>
		/// <br/>
		/// <c>VPSRLD ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 72 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670213)]
public static void vpsrld(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpsrld instruction.<br/>
		/// <br/>
		/// <c>VPSRLD zmm1 {k1}{z}, zmm2/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 72 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670214)]
public static void vpsrld(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpsrld instruction.<br/>
		/// <br/>
		/// <c>VPSRLD xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 72 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRLD xmm1, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 72 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670215)]
public static void vpsrld(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vpsrld instruction.<br/>
		/// <br/>
		/// <c>VPSRLD ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 72 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRLD ymm1, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 72 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670216)]
public static void vpsrld(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vpsrld instruction.<br/>
		/// <br/>
		/// <c>VPSRLD zmm1 {k1}{z}, zmm2/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 72 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670217)]
public static void vpsrld(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vpsrld instruction.<br/>
		/// <br/>
		/// <c>VPSRLD xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 72 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670218)]
public static void vpsrld(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpsrld instruction.<br/>
		/// <br/>
		/// <c>VPSRLD ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 72 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670219)]
public static void vpsrld(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpsrld instruction.<br/>
		/// <br/>
		/// <c>VPSRLD zmm1 {k1}{z}, zmm2/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 72 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670220)]
public static void vpsrld(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpsrldq instruction.<br/>
		/// <br/>
		/// <c>VPSRLDQ xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG 73 /3 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRLDQ xmm1, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 73 /3 ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670221)]
public static void vpsrldq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vpsrldq instruction.<br/>
		/// <br/>
		/// <c>VPSRLDQ ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG 73 /3 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRLDQ ymm1, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 73 /3 ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670222)]
public static void vpsrldq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vpsrldq instruction.<br/>
		/// <br/>
		/// <c>VPSRLDQ zmm1, zmm2/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG 73 /3 ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670223)]
public static void vpsrldq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vpsrldq instruction.<br/>
		/// <br/>
		/// <c>VPSRLDQ xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG 73 /3 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670224)]
public static void vpsrldq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpsrldq instruction.<br/>
		/// <br/>
		/// <c>VPSRLDQ ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG 73 /3 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670225)]
public static void vpsrldq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpsrldq instruction.<br/>
		/// <br/>
		/// <c>VPSRLDQ zmm1, zmm2/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG 73 /3 ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670226)]
public static void vpsrldq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpsrldq instruction.<br/>
		/// <br/>
		/// <c>VPSRLDQ xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG 73 /3 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRLDQ xmm1, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 73 /3 ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670227)]
public static void vpsrldq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vpsrldq instruction.<br/>
		/// <br/>
		/// <c>VPSRLDQ ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG 73 /3 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRLDQ ymm1, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 73 /3 ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670228)]
public static void vpsrldq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vpsrldq instruction.<br/>
		/// <br/>
		/// <c>VPSRLDQ zmm1, zmm2/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG 73 /3 ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670229)]
public static void vpsrldq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vpsrldq instruction.<br/>
		/// <br/>
		/// <c>VPSRLDQ xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG 73 /3 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670230)]
public static void vpsrldq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpsrldq instruction.<br/>
		/// <br/>
		/// <c>VPSRLDQ ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG 73 /3 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670231)]
public static void vpsrldq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpsrldq instruction.<br/>
		/// <br/>
		/// <c>VPSRLDQ zmm1, zmm2/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG 73 /3 ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670232)]
public static void vpsrldq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpsrlq instruction.<br/>
		/// <br/>
		/// <c>VPSRLQ xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG D3 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRLQ xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 D3 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670233)]
public static void vpsrlq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsrlq instruction.<br/>
		/// <br/>
		/// <c>VPSRLQ ymm1, ymm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG D3 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRLQ ymm1 {k1}{z}, ymm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 D3 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670234)]
public static void vpsrlq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsrlq instruction.<br/>
		/// <br/>
		/// <c>VPSRLQ zmm1 {k1}{z}, zmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 D3 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670235)]
public static void vpsrlq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsrlq instruction.<br/>
		/// <br/>
		/// <c>VPSRLQ xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG D3 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRLQ xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 D3 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670236)]
public static void vpsrlq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsrlq instruction.<br/>
		/// <br/>
		/// <c>VPSRLQ ymm1, ymm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG D3 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRLQ ymm1 {k1}{z}, ymm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 D3 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670237)]
public static void vpsrlq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsrlq instruction.<br/>
		/// <br/>
		/// <c>VPSRLQ zmm1 {k1}{z}, zmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 D3 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670238)]
public static void vpsrlq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsrlq instruction.<br/>
		/// <br/>
		/// <c>VPSRLQ xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 73 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRLQ xmm1, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 73 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670239)]
public static void vpsrlq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vpsrlq instruction.<br/>
		/// <br/>
		/// <c>VPSRLQ ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 73 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRLQ ymm1, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 73 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670240)]
public static void vpsrlq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vpsrlq instruction.<br/>
		/// <br/>
		/// <c>VPSRLQ zmm1 {k1}{z}, zmm2/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 73 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670241)]
public static void vpsrlq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vpsrlq instruction.<br/>
		/// <br/>
		/// <c>VPSRLQ xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 73 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670242)]
public static void vpsrlq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpsrlq instruction.<br/>
		/// <br/>
		/// <c>VPSRLQ ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 73 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670243)]
public static void vpsrlq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpsrlq instruction.<br/>
		/// <br/>
		/// <c>VPSRLQ zmm1 {k1}{z}, zmm2/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 73 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670244)]
public static void vpsrlq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpsrlq instruction.<br/>
		/// <br/>
		/// <c>VPSRLQ xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 73 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRLQ xmm1, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 73 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670245)]
public static void vpsrlq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vpsrlq instruction.<br/>
		/// <br/>
		/// <c>VPSRLQ ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 73 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRLQ ymm1, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 73 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670246)]
public static void vpsrlq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vpsrlq instruction.<br/>
		/// <br/>
		/// <c>VPSRLQ zmm1 {k1}{z}, zmm2/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 73 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670247)]
public static void vpsrlq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vpsrlq instruction.<br/>
		/// <br/>
		/// <c>VPSRLQ xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 73 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670248)]
public static void vpsrlq(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpsrlq instruction.<br/>
		/// <br/>
		/// <c>VPSRLQ ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 73 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670249)]
public static void vpsrlq(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpsrlq instruction.<br/>
		/// <br/>
		/// <c>VPSRLQ zmm1 {k1}{z}, zmm2/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 73 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670250)]
public static void vpsrlq(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpsrlvd instruction.<br/>
		/// <br/>
		/// <c>VPSRLVD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 45 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRLVD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 45 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670251)]
public static void vpsrlvd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsrlvd instruction.<br/>
		/// <br/>
		/// <c>VPSRLVD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 45 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRLVD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 45 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670252)]
public static void vpsrlvd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpsrlvd instruction.<br/>
		/// <br/>
		/// <c>VPSRLVD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 45 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670253)]
public static void vpsrlvd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpsrlvd instruction.<br/>
		/// <br/>
		/// <c>VPSRLVD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 45 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRLVD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 45 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670254)]
public static void vpsrlvd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsrlvd instruction.<br/>
		/// <br/>
		/// <c>VPSRLVD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 45 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRLVD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 45 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670255)]
public static void vpsrlvd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsrlvd instruction.<br/>
		/// <br/>
		/// <c>VPSRLVD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 45 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670256)]
public static void vpsrlvd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsrlvq instruction.<br/>
		/// <br/>
		/// <c>VPSRLVQ xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 45 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRLVQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 45 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670257)]
public static void vpsrlvq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsrlvq instruction.<br/>
		/// <br/>
		/// <c>VPSRLVQ ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 45 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRLVQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 45 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670258)]
public static void vpsrlvq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpsrlvq instruction.<br/>
		/// <br/>
		/// <c>VPSRLVQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 45 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670259)]
public static void vpsrlvq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpsrlvq instruction.<br/>
		/// <br/>
		/// <c>VPSRLVQ xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W1 45 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRLVQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 45 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670260)]
public static void vpsrlvq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsrlvq instruction.<br/>
		/// <br/>
		/// <c>VPSRLVQ ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W1 45 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRLVQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 45 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670261)]
public static void vpsrlvq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsrlvq instruction.<br/>
		/// <br/>
		/// <c>VPSRLVQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 45 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670262)]
public static void vpsrlvq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsrlvw instruction.<br/>
		/// <br/>
		/// <c>VPSRLVW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 10 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670263)]
public static void vpsrlvw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsrlvw instruction.<br/>
		/// <br/>
		/// <c>VPSRLVW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 10 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670264)]
public static void vpsrlvw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpsrlvw instruction.<br/>
		/// <br/>
		/// <c>VPSRLVW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 10 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670265)]
public static void vpsrlvw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpsrlvw instruction.<br/>
		/// <br/>
		/// <c>VPSRLVW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 10 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670266)]
public static void vpsrlvw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsrlvw instruction.<br/>
		/// <br/>
		/// <c>VPSRLVW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 10 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670267)]
public static void vpsrlvw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsrlvw instruction.<br/>
		/// <br/>
		/// <c>VPSRLVW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 10 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670268)]
public static void vpsrlvw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsrlw instruction.<br/>
		/// <br/>
		/// <c>VPSRLW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG D1 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRLW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG D1 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670269)]
public static void vpsrlw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsrlw instruction.<br/>
		/// <br/>
		/// <c>VPSRLW ymm1, ymm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG D1 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRLW ymm1 {k1}{z}, ymm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG D1 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670270)]
public static void vpsrlw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsrlw instruction.<br/>
		/// <br/>
		/// <c>VPSRLW zmm1 {k1}{z}, zmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG D1 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670271)]
public static void vpsrlw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsrlw instruction.<br/>
		/// <br/>
		/// <c>VPSRLW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG D1 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRLW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG D1 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670272)]
public static void vpsrlw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsrlw instruction.<br/>
		/// <br/>
		/// <c>VPSRLW ymm1, ymm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG D1 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRLW ymm1 {k1}{z}, ymm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG D1 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670273)]
public static void vpsrlw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsrlw instruction.<br/>
		/// <br/>
		/// <c>VPSRLW zmm1 {k1}{z}, zmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG D1 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670274)]
public static void vpsrlw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsrlw instruction.<br/>
		/// <br/>
		/// <c>VPSRLW xmm1 {k1}{z}, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG 71 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRLW xmm1, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 71 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670275)]
public static void vpsrlw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vpsrlw instruction.<br/>
		/// <br/>
		/// <c>VPSRLW ymm1 {k1}{z}, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG 71 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRLW ymm1, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 71 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670276)]
public static void vpsrlw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vpsrlw instruction.<br/>
		/// <br/>
		/// <c>VPSRLW zmm1 {k1}{z}, zmm2/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG 71 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670277)]
public static void vpsrlw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vpsrlw instruction.<br/>
		/// <br/>
		/// <c>VPSRLW xmm1 {k1}{z}, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG 71 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670278)]
public static void vpsrlw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpsrlw instruction.<br/>
		/// <br/>
		/// <c>VPSRLW ymm1 {k1}{z}, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG 71 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670279)]
public static void vpsrlw(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpsrlw instruction.<br/>
		/// <br/>
		/// <c>VPSRLW zmm1 {k1}{z}, zmm2/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG 71 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670280)]
public static void vpsrlw(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vpsrlw instruction.<br/>
		/// <br/>
		/// <c>VPSRLW xmm1 {k1}{z}, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG 71 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRLW xmm1, xmm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 71 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670281)]
public static void vpsrlw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vpsrlw instruction.<br/>
		/// <br/>
		/// <c>VPSRLW ymm1 {k1}{z}, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG 71 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSRLW ymm1, ymm2, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 71 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670282)]
public static void vpsrlw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vpsrlw instruction.<br/>
		/// <br/>
		/// <c>VPSRLW zmm1 {k1}{z}, zmm2/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG 71 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670283)]
public static void vpsrlw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vpsrlw instruction.<br/>
		/// <br/>
		/// <c>VPSRLW xmm1 {k1}{z}, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG 71 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670284)]
public static void vpsrlw(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpsrlw instruction.<br/>
		/// <br/>
		/// <c>VPSRLW ymm1 {k1}{z}, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG 71 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670285)]
public static void vpsrlw(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpsrlw instruction.<br/>
		/// <br/>
		/// <c>VPSRLW zmm1 {k1}{z}, zmm2/m512, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG 71 /2 ib</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670286)]
public static void vpsrlw(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vpsubb instruction.<br/>
		/// <br/>
		/// <c>VPSUBB xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG F8 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSUBB xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG F8 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670287)]
public static void vpsubb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsubb instruction.<br/>
		/// <br/>
		/// <c>VPSUBB ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG F8 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSUBB ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG F8 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670288)]
public static void vpsubb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpsubb instruction.<br/>
		/// <br/>
		/// <c>VPSUBB zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG F8 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670289)]
public static void vpsubb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpsubb instruction.<br/>
		/// <br/>
		/// <c>VPSUBB xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG F8 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSUBB xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG F8 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670290)]
public static void vpsubb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsubb instruction.<br/>
		/// <br/>
		/// <c>VPSUBB ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG F8 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSUBB ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG F8 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670291)]
public static void vpsubb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsubb instruction.<br/>
		/// <br/>
		/// <c>VPSUBB zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG F8 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670292)]
public static void vpsubb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsubd instruction.<br/>
		/// <br/>
		/// <c>VPSUBD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG FA /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSUBD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 FA /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670293)]
public static void vpsubd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsubd instruction.<br/>
		/// <br/>
		/// <c>VPSUBD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG FA /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSUBD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 FA /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670294)]
public static void vpsubd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpsubd instruction.<br/>
		/// <br/>
		/// <c>VPSUBD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 FA /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670295)]
public static void vpsubd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpsubd instruction.<br/>
		/// <br/>
		/// <c>VPSUBD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG FA /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSUBD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 FA /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670296)]
public static void vpsubd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsubd instruction.<br/>
		/// <br/>
		/// <c>VPSUBD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG FA /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSUBD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 FA /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670297)]
public static void vpsubd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsubd instruction.<br/>
		/// <br/>
		/// <c>VPSUBD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 FA /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670298)]
public static void vpsubd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsubq instruction.<br/>
		/// <br/>
		/// <c>VPSUBQ xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG FB /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSUBQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 FB /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670299)]
public static void vpsubq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsubq instruction.<br/>
		/// <br/>
		/// <c>VPSUBQ ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG FB /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSUBQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 FB /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670300)]
public static void vpsubq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpsubq instruction.<br/>
		/// <br/>
		/// <c>VPSUBQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 FB /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670301)]
public static void vpsubq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpsubq instruction.<br/>
		/// <br/>
		/// <c>VPSUBQ xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG FB /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSUBQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 FB /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670302)]
public static void vpsubq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsubq instruction.<br/>
		/// <br/>
		/// <c>VPSUBQ ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG FB /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSUBQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 FB /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670303)]
public static void vpsubq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsubq instruction.<br/>
		/// <br/>
		/// <c>VPSUBQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 FB /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670304)]
public static void vpsubq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsubsb instruction.<br/>
		/// <br/>
		/// <c>VPSUBSB xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG E8 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSUBSB xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG E8 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670305)]
public static void vpsubsb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsubsb instruction.<br/>
		/// <br/>
		/// <c>VPSUBSB ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG E8 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSUBSB ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG E8 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670306)]
public static void vpsubsb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpsubsb instruction.<br/>
		/// <br/>
		/// <c>VPSUBSB zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG E8 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670307)]
public static void vpsubsb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpsubsb instruction.<br/>
		/// <br/>
		/// <c>VPSUBSB xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG E8 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSUBSB xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG E8 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670308)]
public static void vpsubsb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsubsb instruction.<br/>
		/// <br/>
		/// <c>VPSUBSB ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG E8 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSUBSB ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG E8 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670309)]
public static void vpsubsb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsubsb instruction.<br/>
		/// <br/>
		/// <c>VPSUBSB zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG E8 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670310)]
public static void vpsubsb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsubsw instruction.<br/>
		/// <br/>
		/// <c>VPSUBSW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG E9 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSUBSW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG E9 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670311)]
public static void vpsubsw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsubsw instruction.<br/>
		/// <br/>
		/// <c>VPSUBSW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG E9 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSUBSW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG E9 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670312)]
public static void vpsubsw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpsubsw instruction.<br/>
		/// <br/>
		/// <c>VPSUBSW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG E9 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670313)]
public static void vpsubsw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpsubsw instruction.<br/>
		/// <br/>
		/// <c>VPSUBSW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG E9 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSUBSW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG E9 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670314)]
public static void vpsubsw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsubsw instruction.<br/>
		/// <br/>
		/// <c>VPSUBSW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG E9 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSUBSW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG E9 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670315)]
public static void vpsubsw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsubsw instruction.<br/>
		/// <br/>
		/// <c>VPSUBSW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG E9 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670316)]
public static void vpsubsw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsubusb instruction.<br/>
		/// <br/>
		/// <c>VPSUBUSB xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG D8 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSUBUSB xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG D8 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670317)]
public static void vpsubusb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsubusb instruction.<br/>
		/// <br/>
		/// <c>VPSUBUSB ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG D8 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSUBUSB ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG D8 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670318)]
public static void vpsubusb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpsubusb instruction.<br/>
		/// <br/>
		/// <c>VPSUBUSB zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG D8 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670319)]
public static void vpsubusb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpsubusb instruction.<br/>
		/// <br/>
		/// <c>VPSUBUSB xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG D8 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSUBUSB xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG D8 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670320)]
public static void vpsubusb(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsubusb instruction.<br/>
		/// <br/>
		/// <c>VPSUBUSB ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG D8 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSUBUSB ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG D8 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670321)]
public static void vpsubusb(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsubusb instruction.<br/>
		/// <br/>
		/// <c>VPSUBUSB zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG D8 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670322)]
public static void vpsubusb(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsubusw instruction.<br/>
		/// <br/>
		/// <c>VPSUBUSW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG D9 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSUBUSW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG D9 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670323)]
public static void vpsubusw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsubusw instruction.<br/>
		/// <br/>
		/// <c>VPSUBUSW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG D9 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSUBUSW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG D9 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670324)]
public static void vpsubusw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpsubusw instruction.<br/>
		/// <br/>
		/// <c>VPSUBUSW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG D9 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670325)]
public static void vpsubusw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpsubusw instruction.<br/>
		/// <br/>
		/// <c>VPSUBUSW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG D9 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSUBUSW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG D9 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670326)]
public static void vpsubusw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsubusw instruction.<br/>
		/// <br/>
		/// <c>VPSUBUSW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG D9 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSUBUSW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG D9 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670327)]
public static void vpsubusw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsubusw instruction.<br/>
		/// <br/>
		/// <c>VPSUBUSW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG D9 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670328)]
public static void vpsubusw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsubw instruction.<br/>
		/// <br/>
		/// <c>VPSUBW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG F9 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSUBW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG F9 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670329)]
public static void vpsubw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpsubw instruction.<br/>
		/// <br/>
		/// <c>VPSUBW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG F9 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSUBW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG F9 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670330)]
public static void vpsubw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpsubw instruction.<br/>
		/// <br/>
		/// <c>VPSUBW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG F9 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670331)]
public static void vpsubw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpsubw instruction.<br/>
		/// <br/>
		/// <c>VPSUBW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG F9 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSUBW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG F9 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670332)]
public static void vpsubw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsubw instruction.<br/>
		/// <br/>
		/// <c>VPSUBW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG F9 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPSUBW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG F9 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670333)]
public static void vpsubw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpsubw instruction.<br/>
		/// <br/>
		/// <c>VPSUBW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG F9 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670334)]
public static void vpsubw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpternlogd instruction.<br/>
		/// <br/>
		/// <c>VPTERNLOGD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 25 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670335)]
public static void vpternlogd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vpternlogd instruction.<br/>
		/// <br/>
		/// <c>VPTERNLOGD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 25 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670336)]
public static void vpternlogd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vpternlogd instruction.<br/>
		/// <br/>
		/// <c>VPTERNLOGD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 25 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670337)]
public static void vpternlogd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, sbyte imm) {}
		/// <summary>vpternlogd instruction.<br/>
		/// <br/>
		/// <c>VPTERNLOGD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 25 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670338)]
public static void vpternlogd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpternlogd instruction.<br/>
		/// <br/>
		/// <c>VPTERNLOGD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 25 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670339)]
public static void vpternlogd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpternlogd instruction.<br/>
		/// <br/>
		/// <c>VPTERNLOGD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 25 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670340)]
public static void vpternlogd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpternlogd instruction.<br/>
		/// <br/>
		/// <c>VPTERNLOGD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 25 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670341)]
public static void vpternlogd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vpternlogd instruction.<br/>
		/// <br/>
		/// <c>VPTERNLOGD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 25 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670342)]
public static void vpternlogd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vpternlogd instruction.<br/>
		/// <br/>
		/// <c>VPTERNLOGD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 25 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670343)]
public static void vpternlogd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, byte imm) {}
		/// <summary>vpternlogd instruction.<br/>
		/// <br/>
		/// <c>VPTERNLOGD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 25 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670344)]
public static void vpternlogd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpternlogd instruction.<br/>
		/// <br/>
		/// <c>VPTERNLOGD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 25 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670345)]
public static void vpternlogd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpternlogd instruction.<br/>
		/// <br/>
		/// <c>VPTERNLOGD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 25 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670346)]
public static void vpternlogd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpternlogq instruction.<br/>
		/// <br/>
		/// <c>VPTERNLOGQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 25 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670347)]
public static void vpternlogq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vpternlogq instruction.<br/>
		/// <br/>
		/// <c>VPTERNLOGQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 25 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670348)]
public static void vpternlogq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vpternlogq instruction.<br/>
		/// <br/>
		/// <c>VPTERNLOGQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 25 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670349)]
public static void vpternlogq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, sbyte imm) {}
		/// <summary>vpternlogq instruction.<br/>
		/// <br/>
		/// <c>VPTERNLOGQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 25 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670350)]
public static void vpternlogq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpternlogq instruction.<br/>
		/// <br/>
		/// <c>VPTERNLOGQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 25 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670351)]
public static void vpternlogq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpternlogq instruction.<br/>
		/// <br/>
		/// <c>VPTERNLOGQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 25 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670352)]
public static void vpternlogq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vpternlogq instruction.<br/>
		/// <br/>
		/// <c>VPTERNLOGQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 25 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670353)]
public static void vpternlogq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vpternlogq instruction.<br/>
		/// <br/>
		/// <c>VPTERNLOGQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 25 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670354)]
public static void vpternlogq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vpternlogq instruction.<br/>
		/// <br/>
		/// <c>VPTERNLOGQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 25 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670355)]
public static void vpternlogq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, byte imm) {}
		/// <summary>vpternlogq instruction.<br/>
		/// <br/>
		/// <c>VPTERNLOGQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 25 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670356)]
public static void vpternlogq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpternlogq instruction.<br/>
		/// <br/>
		/// <c>VPTERNLOGQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 25 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670357)]
public static void vpternlogq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vpternlogq instruction.<br/>
		/// <br/>
		/// <c>VPTERNLOGQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 25 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670358)]
public static void vpternlogq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vptest instruction.<br/>
		/// <br/>
		/// <c>VPTEST xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 17 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670359)]
public static void vptest(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vptest instruction.<br/>
		/// <br/>
		/// <c>VPTEST ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 17 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670360)]
public static void vptest(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vptest instruction.<br/>
		/// <br/>
		/// <c>VPTEST xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.WIG 17 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670361)]
public static void vptest(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vptest instruction.<br/>
		/// <br/>
		/// <c>VPTEST ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.WIG 17 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670362)]
public static void vptest(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vptestmb instruction.<br/>
		/// <br/>
		/// <c>VPTESTMB k2 {k1}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 26 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670363)]
public static void vptestmb(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vptestmb instruction.<br/>
		/// <br/>
		/// <c>VPTESTMB k2 {k1}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 26 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670364)]
public static void vptestmb(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vptestmb instruction.<br/>
		/// <br/>
		/// <c>VPTESTMB k2 {k1}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 26 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670365)]
public static void vptestmb(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vptestmb instruction.<br/>
		/// <br/>
		/// <c>VPTESTMB k2 {k1}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 26 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670366)]
public static void vptestmb(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vptestmb instruction.<br/>
		/// <br/>
		/// <c>VPTESTMB k2 {k1}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 26 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670367)]
public static void vptestmb(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vptestmb instruction.<br/>
		/// <br/>
		/// <c>VPTESTMB k2 {k1}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 26 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670368)]
public static void vptestmb(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vptestmd instruction.<br/>
		/// <br/>
		/// <c>VPTESTMD k2 {k1}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 27 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670369)]
public static void vptestmd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vptestmd instruction.<br/>
		/// <br/>
		/// <c>VPTESTMD k2 {k1}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 27 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670370)]
public static void vptestmd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vptestmd instruction.<br/>
		/// <br/>
		/// <c>VPTESTMD k2 {k1}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 27 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670371)]
public static void vptestmd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vptestmd instruction.<br/>
		/// <br/>
		/// <c>VPTESTMD k2 {k1}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 27 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670372)]
public static void vptestmd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vptestmd instruction.<br/>
		/// <br/>
		/// <c>VPTESTMD k2 {k1}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 27 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670373)]
public static void vptestmd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vptestmd instruction.<br/>
		/// <br/>
		/// <c>VPTESTMD k2 {k1}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 27 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670374)]
public static void vptestmd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vptestmq instruction.<br/>
		/// <br/>
		/// <c>VPTESTMQ k2 {k1}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 27 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670375)]
public static void vptestmq(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vptestmq instruction.<br/>
		/// <br/>
		/// <c>VPTESTMQ k2 {k1}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 27 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670376)]
public static void vptestmq(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vptestmq instruction.<br/>
		/// <br/>
		/// <c>VPTESTMQ k2 {k1}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 27 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670377)]
public static void vptestmq(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vptestmq instruction.<br/>
		/// <br/>
		/// <c>VPTESTMQ k2 {k1}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 27 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670378)]
public static void vptestmq(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vptestmq instruction.<br/>
		/// <br/>
		/// <c>VPTESTMQ k2 {k1}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 27 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670379)]
public static void vptestmq(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vptestmq instruction.<br/>
		/// <br/>
		/// <c>VPTESTMQ k2 {k1}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 27 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670380)]
public static void vptestmq(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vptestmw instruction.<br/>
		/// <br/>
		/// <c>VPTESTMW k2 {k1}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 26 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670381)]
public static void vptestmw(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vptestmw instruction.<br/>
		/// <br/>
		/// <c>VPTESTMW k2 {k1}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 26 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670382)]
public static void vptestmw(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vptestmw instruction.<br/>
		/// <br/>
		/// <c>VPTESTMW k2 {k1}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 26 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670383)]
public static void vptestmw(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vptestmw instruction.<br/>
		/// <br/>
		/// <c>VPTESTMW k2 {k1}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 26 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670384)]
public static void vptestmw(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vptestmw instruction.<br/>
		/// <br/>
		/// <c>VPTESTMW k2 {k1}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 26 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670385)]
public static void vptestmw(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vptestmw instruction.<br/>
		/// <br/>
		/// <c>VPTESTMW k2 {k1}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 26 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670386)]
public static void vptestmw(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vptestnmb instruction.<br/>
		/// <br/>
		/// <c>VPTESTNMB k2 {k1}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 26 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670387)]
public static void vptestnmb(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vptestnmb instruction.<br/>
		/// <br/>
		/// <c>VPTESTNMB k2 {k1}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 26 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670388)]
public static void vptestnmb(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vptestnmb instruction.<br/>
		/// <br/>
		/// <c>VPTESTNMB k2 {k1}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 26 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670389)]
public static void vptestnmb(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vptestnmb instruction.<br/>
		/// <br/>
		/// <c>VPTESTNMB k2 {k1}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 26 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670390)]
public static void vptestnmb(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vptestnmb instruction.<br/>
		/// <br/>
		/// <c>VPTESTNMB k2 {k1}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 26 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670391)]
public static void vptestnmb(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vptestnmb instruction.<br/>
		/// <br/>
		/// <c>VPTESTNMB k2 {k1}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 26 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670392)]
public static void vptestnmb(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vptestnmd instruction.<br/>
		/// <br/>
		/// <c>VPTESTNMD k2 {k1}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 27 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670393)]
public static void vptestnmd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vptestnmd instruction.<br/>
		/// <br/>
		/// <c>VPTESTNMD k2 {k1}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 27 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670394)]
public static void vptestnmd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vptestnmd instruction.<br/>
		/// <br/>
		/// <c>VPTESTNMD k2 {k1}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 27 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670395)]
public static void vptestnmd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vptestnmd instruction.<br/>
		/// <br/>
		/// <c>VPTESTNMD k2 {k1}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W0 27 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670396)]
public static void vptestnmd(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vptestnmd instruction.<br/>
		/// <br/>
		/// <c>VPTESTNMD k2 {k1}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W0 27 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670397)]
public static void vptestnmd(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vptestnmd instruction.<br/>
		/// <br/>
		/// <c>VPTESTNMD k2 {k1}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W0 27 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670398)]
public static void vptestnmd(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vptestnmq instruction.<br/>
		/// <br/>
		/// <c>VPTESTNMQ k2 {k1}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W1 27 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670399)]
public static void vptestnmq(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vptestnmq instruction.<br/>
		/// <br/>
		/// <c>VPTESTNMQ k2 {k1}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W1 27 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670400)]
public static void vptestnmq(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vptestnmq instruction.<br/>
		/// <br/>
		/// <c>VPTESTNMQ k2 {k1}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W1 27 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670401)]
public static void vptestnmq(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vptestnmq instruction.<br/>
		/// <br/>
		/// <c>VPTESTNMQ k2 {k1}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W1 27 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670402)]
public static void vptestnmq(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vptestnmq instruction.<br/>
		/// <br/>
		/// <c>VPTESTNMQ k2 {k1}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W1 27 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670403)]
public static void vptestnmq(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vptestnmq instruction.<br/>
		/// <br/>
		/// <c>VPTESTNMQ k2 {k1}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W1 27 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670404)]
public static void vptestnmq(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vptestnmw instruction.<br/>
		/// <br/>
		/// <c>VPTESTNMW k2 {k1}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W1 26 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670405)]
public static void vptestnmw(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vptestnmw instruction.<br/>
		/// <br/>
		/// <c>VPTESTNMW k2 {k1}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W1 26 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670406)]
public static void vptestnmw(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vptestnmw instruction.<br/>
		/// <br/>
		/// <c>VPTESTNMW k2 {k1}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W1 26 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670407)]
public static void vptestnmw(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vptestnmw instruction.<br/>
		/// <br/>
		/// <c>VPTESTNMW k2 {k1}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.F3.0F38.W1 26 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670408)]
public static void vptestnmw(AssemblerRegisterK dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vptestnmw instruction.<br/>
		/// <br/>
		/// <c>VPTESTNMW k2 {k1}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.F3.0F38.W1 26 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670409)]
public static void vptestnmw(AssemblerRegisterK dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vptestnmw instruction.<br/>
		/// <br/>
		/// <c>VPTESTNMW k2 {k1}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.F3.0F38.W1 26 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670410)]
public static void vptestnmw(AssemblerRegisterK dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpunpckhbw instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKHBW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 68 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPUNPCKHBW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG 68 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670411)]
public static void vpunpckhbw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpunpckhbw instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKHBW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 68 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPUNPCKHBW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG 68 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670412)]
public static void vpunpckhbw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpunpckhbw instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKHBW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG 68 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670413)]
public static void vpunpckhbw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpunpckhbw instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKHBW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 68 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPUNPCKHBW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG 68 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670414)]
public static void vpunpckhbw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpunpckhbw instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKHBW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 68 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPUNPCKHBW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG 68 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670415)]
public static void vpunpckhbw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpunpckhbw instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKHBW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG 68 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670416)]
public static void vpunpckhbw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpunpckhdq instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKHDQ xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 6A /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPUNPCKHDQ xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 6A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670417)]
public static void vpunpckhdq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpunpckhdq instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKHDQ ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 6A /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPUNPCKHDQ ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 6A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670418)]
public static void vpunpckhdq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpunpckhdq instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKHDQ zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 6A /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670419)]
public static void vpunpckhdq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpunpckhdq instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKHDQ xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 6A /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPUNPCKHDQ xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 6A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670420)]
public static void vpunpckhdq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpunpckhdq instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKHDQ ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 6A /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPUNPCKHDQ ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 6A /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670421)]
public static void vpunpckhdq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpunpckhdq instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKHDQ zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 6A /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670422)]
public static void vpunpckhdq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpunpckhqdq instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKHQDQ xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 6D /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPUNPCKHQDQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 6D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670423)]
public static void vpunpckhqdq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpunpckhqdq instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKHQDQ ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 6D /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPUNPCKHQDQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 6D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670424)]
public static void vpunpckhqdq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpunpckhqdq instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKHQDQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 6D /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670425)]
public static void vpunpckhqdq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpunpckhqdq instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKHQDQ xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 6D /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPUNPCKHQDQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 6D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670426)]
public static void vpunpckhqdq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpunpckhqdq instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKHQDQ ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 6D /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPUNPCKHQDQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 6D /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670427)]
public static void vpunpckhqdq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpunpckhqdq instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKHQDQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 6D /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670428)]
public static void vpunpckhqdq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpunpckhwd instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKHWD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 69 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPUNPCKHWD xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG 69 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670429)]
public static void vpunpckhwd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpunpckhwd instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKHWD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 69 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPUNPCKHWD ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG 69 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670430)]
public static void vpunpckhwd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpunpckhwd instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKHWD zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG 69 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670431)]
public static void vpunpckhwd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpunpckhwd instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKHWD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 69 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPUNPCKHWD xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG 69 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670432)]
public static void vpunpckhwd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpunpckhwd instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKHWD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 69 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPUNPCKHWD ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG 69 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670433)]
public static void vpunpckhwd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpunpckhwd instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKHWD zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG 69 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670434)]
public static void vpunpckhwd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpunpcklbw instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKLBW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 60 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPUNPCKLBW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG 60 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670435)]
public static void vpunpcklbw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpunpcklbw instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKLBW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 60 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPUNPCKLBW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG 60 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670436)]
public static void vpunpcklbw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpunpcklbw instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKLBW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG 60 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670437)]
public static void vpunpcklbw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpunpcklbw instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKLBW xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 60 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPUNPCKLBW xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG 60 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670438)]
public static void vpunpcklbw(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpunpcklbw instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKLBW ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 60 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPUNPCKLBW ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG 60 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670439)]
public static void vpunpcklbw(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpunpcklbw instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKLBW zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG 60 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670440)]
public static void vpunpcklbw(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpunpckldq instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKLDQ xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 62 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPUNPCKLDQ xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 62 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670441)]
public static void vpunpckldq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpunpckldq instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKLDQ ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 62 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPUNPCKLDQ ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 62 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670442)]
public static void vpunpckldq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpunpckldq instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKLDQ zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 62 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670443)]
public static void vpunpckldq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpunpckldq instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKLDQ xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 62 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPUNPCKLDQ xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 62 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670444)]
public static void vpunpckldq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpunpckldq instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKLDQ ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 62 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPUNPCKLDQ ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 62 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670445)]
public static void vpunpckldq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpunpckldq instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKLDQ zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 62 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670446)]
public static void vpunpckldq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpunpcklqdq instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKLQDQ xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 6C /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPUNPCKLQDQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 6C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670447)]
public static void vpunpcklqdq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpunpcklqdq instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKLQDQ ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 6C /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPUNPCKLQDQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 6C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670448)]
public static void vpunpcklqdq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpunpcklqdq instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKLQDQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 6C /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670449)]
public static void vpunpcklqdq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpunpcklqdq instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKLQDQ xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 6C /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPUNPCKLQDQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 6C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670450)]
public static void vpunpcklqdq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpunpcklqdq instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKLQDQ ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 6C /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPUNPCKLQDQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 6C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670451)]
public static void vpunpcklqdq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpunpcklqdq instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKLQDQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 6C /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670452)]
public static void vpunpcklqdq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpunpcklwd instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKLWD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 61 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPUNPCKLWD xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG 61 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670453)]
public static void vpunpcklwd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpunpcklwd instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKLWD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 61 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPUNPCKLWD ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG 61 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670454)]
public static void vpunpcklwd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpunpcklwd instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKLWD zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG 61 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670455)]
public static void vpunpcklwd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpunpcklwd instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKLWD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 61 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPUNPCKLWD xmm1 {k1}{z}, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.WIG 61 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670456)]
public static void vpunpcklwd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpunpcklwd instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKLWD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 61 /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VPUNPCKLWD ymm1 {k1}{z}, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.WIG 61 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670457)]
public static void vpunpcklwd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpunpcklwd instruction.<br/>
		/// <br/>
		/// <c>VPUNPCKLWD zmm1 {k1}{z}, zmm2, zmm3/m512</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.WIG 61 /r</c><br/>
		/// <br/>
		/// <c>AVX512BW</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670458)]
public static void vpunpcklwd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpxor instruction.<br/>
		/// <br/>
		/// <c>VPXOR xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG EF /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670459)]
public static void vpxor(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpxor instruction.<br/>
		/// <br/>
		/// <c>VPXOR ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG EF /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670460)]
public static void vpxor(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpxor instruction.<br/>
		/// <br/>
		/// <c>VPXOR xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG EF /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670461)]
public static void vpxor(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpxor instruction.<br/>
		/// <br/>
		/// <c>VPXOR ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG EF /r</c><br/>
		/// <br/>
		/// <c>AVX2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670462)]
public static void vpxor(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpxord instruction.<br/>
		/// <br/>
		/// <c>VPXORD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 EF /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670463)]
public static void vpxord(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpxord instruction.<br/>
		/// <br/>
		/// <c>VPXORD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 EF /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670464)]
public static void vpxord(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpxord instruction.<br/>
		/// <br/>
		/// <c>VPXORD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 EF /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670465)]
public static void vpxord(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpxord instruction.<br/>
		/// <br/>
		/// <c>VPXORD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W0 EF /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670466)]
public static void vpxord(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpxord instruction.<br/>
		/// <br/>
		/// <c>VPXORD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W0 EF /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670467)]
public static void vpxord(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpxord instruction.<br/>
		/// <br/>
		/// <c>VPXORD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W0 EF /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670468)]
public static void vpxord(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpxorq instruction.<br/>
		/// <br/>
		/// <c>VPXORQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 EF /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670469)]
public static void vpxorq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vpxorq instruction.<br/>
		/// <br/>
		/// <c>VPXORQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 EF /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670470)]
public static void vpxorq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vpxorq instruction.<br/>
		/// <br/>
		/// <c>VPXORQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 EF /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670471)]
public static void vpxorq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vpxorq instruction.<br/>
		/// <br/>
		/// <c>VPXORQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 EF /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670472)]
public static void vpxorq(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpxorq instruction.<br/>
		/// <br/>
		/// <c>VPXORQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 EF /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670473)]
public static void vpxorq(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vpxorq instruction.<br/>
		/// <br/>
		/// <c>VPXORQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 EF /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670474)]
public static void vpxorq(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vrangepd instruction.<br/>
		/// <br/>
		/// <c>VRANGEPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 50 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670475)]
public static void vrangepd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vrangepd instruction.<br/>
		/// <br/>
		/// <c>VRANGEPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 50 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670476)]
public static void vrangepd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vrangepd instruction.<br/>
		/// <br/>
		/// <c>VRANGEPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 50 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670477)]
public static void vrangepd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, sbyte imm) {}
		/// <summary>vrangepd instruction.<br/>
		/// <br/>
		/// <c>VRANGEPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 50 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670478)]
public static void vrangepd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vrangepd instruction.<br/>
		/// <br/>
		/// <c>VRANGEPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 50 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670479)]
public static void vrangepd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vrangepd instruction.<br/>
		/// <br/>
		/// <c>VRANGEPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 50 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670480)]
public static void vrangepd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vrangepd instruction.<br/>
		/// <br/>
		/// <c>VRANGEPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 50 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670481)]
public static void vrangepd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vrangepd instruction.<br/>
		/// <br/>
		/// <c>VRANGEPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 50 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670482)]
public static void vrangepd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vrangepd instruction.<br/>
		/// <br/>
		/// <c>VRANGEPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 50 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670483)]
public static void vrangepd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, byte imm) {}
		/// <summary>vrangepd instruction.<br/>
		/// <br/>
		/// <c>VRANGEPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 50 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670484)]
public static void vrangepd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vrangepd instruction.<br/>
		/// <br/>
		/// <c>VRANGEPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 50 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670485)]
public static void vrangepd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vrangepd instruction.<br/>
		/// <br/>
		/// <c>VRANGEPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 50 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670486)]
public static void vrangepd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vrangeps instruction.<br/>
		/// <br/>
		/// <c>VRANGEPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 50 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670487)]
public static void vrangeps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vrangeps instruction.<br/>
		/// <br/>
		/// <c>VRANGEPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 50 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670488)]
public static void vrangeps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vrangeps instruction.<br/>
		/// <br/>
		/// <c>VRANGEPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 50 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670489)]
public static void vrangeps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, sbyte imm) {}
		/// <summary>vrangeps instruction.<br/>
		/// <br/>
		/// <c>VRANGEPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 50 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670490)]
public static void vrangeps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vrangeps instruction.<br/>
		/// <br/>
		/// <c>VRANGEPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 50 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670491)]
public static void vrangeps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vrangeps instruction.<br/>
		/// <br/>
		/// <c>VRANGEPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 50 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670492)]
public static void vrangeps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vrangeps instruction.<br/>
		/// <br/>
		/// <c>VRANGEPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 50 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670493)]
public static void vrangeps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vrangeps instruction.<br/>
		/// <br/>
		/// <c>VRANGEPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 50 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670494)]
public static void vrangeps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vrangeps instruction.<br/>
		/// <br/>
		/// <c>VRANGEPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 50 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670495)]
public static void vrangeps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, byte imm) {}
		/// <summary>vrangeps instruction.<br/>
		/// <br/>
		/// <c>VRANGEPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 50 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670496)]
public static void vrangeps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vrangeps instruction.<br/>
		/// <br/>
		/// <c>VRANGEPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 50 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670497)]
public static void vrangeps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vrangeps instruction.<br/>
		/// <br/>
		/// <c>VRANGEPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 50 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670498)]
public static void vrangeps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vrangesd instruction.<br/>
		/// <br/>
		/// <c>VRANGESD xmm1 {k1}{z}, xmm2, xmm3/m64{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W1 51 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670499)]
public static void vrangesd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vrangesd instruction.<br/>
		/// <br/>
		/// <c>VRANGESD xmm1 {k1}{z}, xmm2, xmm3/m64{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W1 51 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670500)]
public static void vrangesd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vrangesd instruction.<br/>
		/// <br/>
		/// <c>VRANGESD xmm1 {k1}{z}, xmm2, xmm3/m64{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W1 51 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670501)]
public static void vrangesd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vrangesd instruction.<br/>
		/// <br/>
		/// <c>VRANGESD xmm1 {k1}{z}, xmm2, xmm3/m64{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W1 51 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670502)]
public static void vrangesd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vrangess instruction.<br/>
		/// <br/>
		/// <c>VRANGESS xmm1 {k1}{z}, xmm2, xmm3/m32{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W0 51 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670503)]
public static void vrangess(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vrangess instruction.<br/>
		/// <br/>
		/// <c>VRANGESS xmm1 {k1}{z}, xmm2, xmm3/m32{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W0 51 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670504)]
public static void vrangess(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vrangess instruction.<br/>
		/// <br/>
		/// <c>VRANGESS xmm1 {k1}{z}, xmm2, xmm3/m32{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W0 51 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670505)]
public static void vrangess(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vrangess instruction.<br/>
		/// <br/>
		/// <c>VRANGESS xmm1 {k1}{z}, xmm2, xmm3/m32{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W0 51 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670506)]
public static void vrangess(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vrcp14pd instruction.<br/>
		/// <br/>
		/// <c>VRCP14PD xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 4C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670507)]
public static void vrcp14pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vrcp14pd instruction.<br/>
		/// <br/>
		/// <c>VRCP14PD ymm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 4C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670508)]
public static void vrcp14pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vrcp14pd instruction.<br/>
		/// <br/>
		/// <c>VRCP14PD zmm1 {k1}{z}, zmm2/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 4C /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670509)]
public static void vrcp14pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vrcp14pd instruction.<br/>
		/// <br/>
		/// <c>VRCP14PD xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 4C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670510)]
public static void vrcp14pd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vrcp14pd instruction.<br/>
		/// <br/>
		/// <c>VRCP14PD ymm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 4C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670511)]
public static void vrcp14pd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vrcp14pd instruction.<br/>
		/// <br/>
		/// <c>VRCP14PD zmm1 {k1}{z}, zmm2/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 4C /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670512)]
public static void vrcp14pd(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vrcp14ps instruction.<br/>
		/// <br/>
		/// <c>VRCP14PS xmm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 4C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670513)]
public static void vrcp14ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vrcp14ps instruction.<br/>
		/// <br/>
		/// <c>VRCP14PS ymm1 {k1}{z}, ymm2/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 4C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670514)]
public static void vrcp14ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vrcp14ps instruction.<br/>
		/// <br/>
		/// <c>VRCP14PS zmm1 {k1}{z}, zmm2/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 4C /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670515)]
public static void vrcp14ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vrcp14ps instruction.<br/>
		/// <br/>
		/// <c>VRCP14PS xmm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 4C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670516)]
public static void vrcp14ps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vrcp14ps instruction.<br/>
		/// <br/>
		/// <c>VRCP14PS ymm1 {k1}{z}, ymm2/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 4C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670517)]
public static void vrcp14ps(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vrcp14ps instruction.<br/>
		/// <br/>
		/// <c>VRCP14PS zmm1 {k1}{z}, zmm2/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 4C /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670518)]
public static void vrcp14ps(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vrcp14sd instruction.<br/>
		/// <br/>
		/// <c>VRCP14SD xmm1 {k1}{z}, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W1 4D /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670519)]
public static void vrcp14sd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vrcp14sd instruction.<br/>
		/// <br/>
		/// <c>VRCP14SD xmm1 {k1}{z}, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W1 4D /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670520)]
public static void vrcp14sd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vrcp14ss instruction.<br/>
		/// <br/>
		/// <c>VRCP14SS xmm1 {k1}{z}, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W0 4D /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670521)]
public static void vrcp14ss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vrcp14ss instruction.<br/>
		/// <br/>
		/// <c>VRCP14SS xmm1 {k1}{z}, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W0 4D /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670522)]
public static void vrcp14ss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vrcp28pd instruction.<br/>
		/// <br/>
		/// <c>VRCP28PD zmm1 {k1}{z}, zmm2/m512/m64bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 CA /r</c><br/>
		/// <br/>
		/// <c>AVX512ER</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670523)]
public static void vrcp28pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vrcp28pd instruction.<br/>
		/// <br/>
		/// <c>VRCP28PD zmm1 {k1}{z}, zmm2/m512/m64bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 CA /r</c><br/>
		/// <br/>
		/// <c>AVX512ER</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670524)]
public static void vrcp28pd(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vrcp28ps instruction.<br/>
		/// <br/>
		/// <c>VRCP28PS zmm1 {k1}{z}, zmm2/m512/m32bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 CA /r</c><br/>
		/// <br/>
		/// <c>AVX512ER</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670525)]
public static void vrcp28ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vrcp28ps instruction.<br/>
		/// <br/>
		/// <c>VRCP28PS zmm1 {k1}{z}, zmm2/m512/m32bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 CA /r</c><br/>
		/// <br/>
		/// <c>AVX512ER</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670526)]
public static void vrcp28ps(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vrcp28sd instruction.<br/>
		/// <br/>
		/// <c>VRCP28SD xmm1 {k1}{z}, xmm2, xmm3/m64{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W1 CB /r</c><br/>
		/// <br/>
		/// <c>AVX512ER</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670527)]
public static void vrcp28sd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vrcp28sd instruction.<br/>
		/// <br/>
		/// <c>VRCP28SD xmm1 {k1}{z}, xmm2, xmm3/m64{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W1 CB /r</c><br/>
		/// <br/>
		/// <c>AVX512ER</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670528)]
public static void vrcp28sd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vrcp28ss instruction.<br/>
		/// <br/>
		/// <c>VRCP28SS xmm1 {k1}{z}, xmm2, xmm3/m32{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W0 CB /r</c><br/>
		/// <br/>
		/// <c>AVX512ER</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670529)]
public static void vrcp28ss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vrcp28ss instruction.<br/>
		/// <br/>
		/// <c>VRCP28SS xmm1 {k1}{z}, xmm2, xmm3/m32{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W0 CB /r</c><br/>
		/// <br/>
		/// <c>AVX512ER</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670530)]
public static void vrcp28ss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vrcpps instruction.<br/>
		/// <br/>
		/// <c>VRCPPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 53 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670531)]
public static void vrcpps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vrcpps instruction.<br/>
		/// <br/>
		/// <c>VRCPPS ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 53 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670532)]
public static void vrcpps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vrcpps instruction.<br/>
		/// <br/>
		/// <c>VRCPPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 53 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670533)]
public static void vrcpps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vrcpps instruction.<br/>
		/// <br/>
		/// <c>VRCPPS ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 53 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670534)]
public static void vrcpps(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vrcpss instruction.<br/>
		/// <br/>
		/// <c>VRCPSS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F3.0F.WIG 53 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670535)]
public static void vrcpss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vrcpss instruction.<br/>
		/// <br/>
		/// <c>VRCPSS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F3.0F.WIG 53 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670536)]
public static void vrcpss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vreducepd instruction.<br/>
		/// <br/>
		/// <c>VREDUCEPD xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 56 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670537)]
public static void vreducepd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vreducepd instruction.<br/>
		/// <br/>
		/// <c>VREDUCEPD ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 56 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670538)]
public static void vreducepd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vreducepd instruction.<br/>
		/// <br/>
		/// <c>VREDUCEPD zmm1 {k1}{z}, zmm2/m512/m64bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 56 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670539)]
public static void vreducepd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vreducepd instruction.<br/>
		/// <br/>
		/// <c>VREDUCEPD xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 56 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670540)]
public static void vreducepd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vreducepd instruction.<br/>
		/// <br/>
		/// <c>VREDUCEPD ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 56 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670541)]
public static void vreducepd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vreducepd instruction.<br/>
		/// <br/>
		/// <c>VREDUCEPD zmm1 {k1}{z}, zmm2/m512/m64bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 56 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670542)]
public static void vreducepd(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vreducepd instruction.<br/>
		/// <br/>
		/// <c>VREDUCEPD xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 56 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670543)]
public static void vreducepd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vreducepd instruction.<br/>
		/// <br/>
		/// <c>VREDUCEPD ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 56 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670544)]
public static void vreducepd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vreducepd instruction.<br/>
		/// <br/>
		/// <c>VREDUCEPD zmm1 {k1}{z}, zmm2/m512/m64bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 56 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670545)]
public static void vreducepd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vreducepd instruction.<br/>
		/// <br/>
		/// <c>VREDUCEPD xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 56 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670546)]
public static void vreducepd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vreducepd instruction.<br/>
		/// <br/>
		/// <c>VREDUCEPD ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 56 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670547)]
public static void vreducepd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vreducepd instruction.<br/>
		/// <br/>
		/// <c>VREDUCEPD zmm1 {k1}{z}, zmm2/m512/m64bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 56 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670548)]
public static void vreducepd(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vreduceps instruction.<br/>
		/// <br/>
		/// <c>VREDUCEPS xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 56 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670549)]
public static void vreduceps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vreduceps instruction.<br/>
		/// <br/>
		/// <c>VREDUCEPS ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 56 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670550)]
public static void vreduceps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vreduceps instruction.<br/>
		/// <br/>
		/// <c>VREDUCEPS zmm1 {k1}{z}, zmm2/m512/m32bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 56 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670551)]
public static void vreduceps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vreduceps instruction.<br/>
		/// <br/>
		/// <c>VREDUCEPS xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 56 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670552)]
public static void vreduceps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vreduceps instruction.<br/>
		/// <br/>
		/// <c>VREDUCEPS ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 56 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670553)]
public static void vreduceps(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vreduceps instruction.<br/>
		/// <br/>
		/// <c>VREDUCEPS zmm1 {k1}{z}, zmm2/m512/m32bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 56 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670554)]
public static void vreduceps(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vreduceps instruction.<br/>
		/// <br/>
		/// <c>VREDUCEPS xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 56 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670555)]
public static void vreduceps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vreduceps instruction.<br/>
		/// <br/>
		/// <c>VREDUCEPS ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 56 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670556)]
public static void vreduceps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vreduceps instruction.<br/>
		/// <br/>
		/// <c>VREDUCEPS zmm1 {k1}{z}, zmm2/m512/m32bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 56 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670557)]
public static void vreduceps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vreduceps instruction.<br/>
		/// <br/>
		/// <c>VREDUCEPS xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 56 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670558)]
public static void vreduceps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vreduceps instruction.<br/>
		/// <br/>
		/// <c>VREDUCEPS ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 56 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670559)]
public static void vreduceps(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vreduceps instruction.<br/>
		/// <br/>
		/// <c>VREDUCEPS zmm1 {k1}{z}, zmm2/m512/m32bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 56 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670560)]
public static void vreduceps(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vreducesd instruction.<br/>
		/// <br/>
		/// <c>VREDUCESD xmm1 {k1}{z}, xmm2, xmm3/m64{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W1 57 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670561)]
public static void vreducesd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vreducesd instruction.<br/>
		/// <br/>
		/// <c>VREDUCESD xmm1 {k1}{z}, xmm2, xmm3/m64{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W1 57 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670562)]
public static void vreducesd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vreducesd instruction.<br/>
		/// <br/>
		/// <c>VREDUCESD xmm1 {k1}{z}, xmm2, xmm3/m64{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W1 57 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670563)]
public static void vreducesd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vreducesd instruction.<br/>
		/// <br/>
		/// <c>VREDUCESD xmm1 {k1}{z}, xmm2, xmm3/m64{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W1 57 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670564)]
public static void vreducesd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vreducess instruction.<br/>
		/// <br/>
		/// <c>VREDUCESS xmm1 {k1}{z}, xmm2, xmm3/m32{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W0 57 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670565)]
public static void vreducess(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vreducess instruction.<br/>
		/// <br/>
		/// <c>VREDUCESS xmm1 {k1}{z}, xmm2, xmm3/m32{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W0 57 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670566)]
public static void vreducess(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vreducess instruction.<br/>
		/// <br/>
		/// <c>VREDUCESS xmm1 {k1}{z}, xmm2, xmm3/m32{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W0 57 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670567)]
public static void vreducess(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vreducess instruction.<br/>
		/// <br/>
		/// <c>VREDUCESS xmm1 {k1}{z}, xmm2, xmm3/m32{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W0 57 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670568)]
public static void vreducess(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vrndscalepd instruction.<br/>
		/// <br/>
		/// <c>VRNDSCALEPD xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 09 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670569)]
public static void vrndscalepd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vrndscalepd instruction.<br/>
		/// <br/>
		/// <c>VRNDSCALEPD ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 09 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670570)]
public static void vrndscalepd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vrndscalepd instruction.<br/>
		/// <br/>
		/// <c>VRNDSCALEPD zmm1 {k1}{z}, zmm2/m512/m64bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 09 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670571)]
public static void vrndscalepd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vrndscalepd instruction.<br/>
		/// <br/>
		/// <c>VRNDSCALEPD xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 09 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670572)]
public static void vrndscalepd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vrndscalepd instruction.<br/>
		/// <br/>
		/// <c>VRNDSCALEPD ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 09 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670573)]
public static void vrndscalepd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vrndscalepd instruction.<br/>
		/// <br/>
		/// <c>VRNDSCALEPD zmm1 {k1}{z}, zmm2/m512/m64bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 09 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670574)]
public static void vrndscalepd(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vrndscalepd instruction.<br/>
		/// <br/>
		/// <c>VRNDSCALEPD xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 09 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670575)]
public static void vrndscalepd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vrndscalepd instruction.<br/>
		/// <br/>
		/// <c>VRNDSCALEPD ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 09 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670576)]
public static void vrndscalepd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vrndscalepd instruction.<br/>
		/// <br/>
		/// <c>VRNDSCALEPD zmm1 {k1}{z}, zmm2/m512/m64bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 09 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670577)]
public static void vrndscalepd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vrndscalepd instruction.<br/>
		/// <br/>
		/// <c>VRNDSCALEPD xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W1 09 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670578)]
public static void vrndscalepd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vrndscalepd instruction.<br/>
		/// <br/>
		/// <c>VRNDSCALEPD ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 09 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670579)]
public static void vrndscalepd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vrndscalepd instruction.<br/>
		/// <br/>
		/// <c>VRNDSCALEPD zmm1 {k1}{z}, zmm2/m512/m64bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 09 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670580)]
public static void vrndscalepd(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vrndscaleps instruction.<br/>
		/// <br/>
		/// <c>VRNDSCALEPS xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 08 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670581)]
public static void vrndscaleps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vrndscaleps instruction.<br/>
		/// <br/>
		/// <c>VRNDSCALEPS ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 08 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670582)]
public static void vrndscaleps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vrndscaleps instruction.<br/>
		/// <br/>
		/// <c>VRNDSCALEPS zmm1 {k1}{z}, zmm2/m512/m32bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 08 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670583)]
public static void vrndscaleps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, sbyte imm) {}
		/// <summary>vrndscaleps instruction.<br/>
		/// <br/>
		/// <c>VRNDSCALEPS xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 08 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670584)]
public static void vrndscaleps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vrndscaleps instruction.<br/>
		/// <br/>
		/// <c>VRNDSCALEPS ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 08 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670585)]
public static void vrndscaleps(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vrndscaleps instruction.<br/>
		/// <br/>
		/// <c>VRNDSCALEPS zmm1 {k1}{z}, zmm2/m512/m32bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 08 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670586)]
public static void vrndscaleps(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vrndscaleps instruction.<br/>
		/// <br/>
		/// <c>VRNDSCALEPS xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 08 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670587)]
public static void vrndscaleps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vrndscaleps instruction.<br/>
		/// <br/>
		/// <c>VRNDSCALEPS ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 08 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670588)]
public static void vrndscaleps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vrndscaleps instruction.<br/>
		/// <br/>
		/// <c>VRNDSCALEPS zmm1 {k1}{z}, zmm2/m512/m32bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 08 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670589)]
public static void vrndscaleps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, byte imm) {}
		/// <summary>vrndscaleps instruction.<br/>
		/// <br/>
		/// <c>VRNDSCALEPS xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F3A.W0 08 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670590)]
public static void vrndscaleps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vrndscaleps instruction.<br/>
		/// <br/>
		/// <c>VRNDSCALEPS ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 08 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670591)]
public static void vrndscaleps(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vrndscaleps instruction.<br/>
		/// <br/>
		/// <c>VRNDSCALEPS zmm1 {k1}{z}, zmm2/m512/m32bcst{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 08 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670592)]
public static void vrndscaleps(AssemblerRegisterZMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vrndscalesd instruction.<br/>
		/// <br/>
		/// <c>VRNDSCALESD xmm1 {k1}{z}, xmm2, xmm3/m64{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W1 0B /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670593)]
public static void vrndscalesd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vrndscalesd instruction.<br/>
		/// <br/>
		/// <c>VRNDSCALESD xmm1 {k1}{z}, xmm2, xmm3/m64{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W1 0B /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670594)]
public static void vrndscalesd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vrndscalesd instruction.<br/>
		/// <br/>
		/// <c>VRNDSCALESD xmm1 {k1}{z}, xmm2, xmm3/m64{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W1 0B /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670595)]
public static void vrndscalesd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vrndscalesd instruction.<br/>
		/// <br/>
		/// <c>VRNDSCALESD xmm1 {k1}{z}, xmm2, xmm3/m64{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W1 0B /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670596)]
public static void vrndscalesd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vrndscaless instruction.<br/>
		/// <br/>
		/// <c>VRNDSCALESS xmm1 {k1}{z}, xmm2, xmm3/m32{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W0 0A /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670597)]
public static void vrndscaless(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vrndscaless instruction.<br/>
		/// <br/>
		/// <c>VRNDSCALESS xmm1 {k1}{z}, xmm2, xmm3/m32{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W0 0A /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670598)]
public static void vrndscaless(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vrndscaless instruction.<br/>
		/// <br/>
		/// <c>VRNDSCALESS xmm1 {k1}{z}, xmm2, xmm3/m32{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W0 0A /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670599)]
public static void vrndscaless(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vrndscaless instruction.<br/>
		/// <br/>
		/// <c>VRNDSCALESS xmm1 {k1}{z}, xmm2, xmm3/m32{sae}, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F3A.W0 0A /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670600)]
public static void vrndscaless(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vroundpd instruction.<br/>
		/// <br/>
		/// <c>VROUNDPD xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 09 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670601)]
public static void vroundpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vroundpd instruction.<br/>
		/// <br/>
		/// <c>VROUNDPD ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.WIG 09 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670602)]
public static void vroundpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vroundpd instruction.<br/>
		/// <br/>
		/// <c>VROUNDPD xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 09 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670603)]
public static void vroundpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vroundpd instruction.<br/>
		/// <br/>
		/// <c>VROUNDPD ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.WIG 09 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670604)]
public static void vroundpd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vroundpd instruction.<br/>
		/// <br/>
		/// <c>VROUNDPD xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 09 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670605)]
public static void vroundpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vroundpd instruction.<br/>
		/// <br/>
		/// <c>VROUNDPD ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.WIG 09 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670606)]
public static void vroundpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vroundpd instruction.<br/>
		/// <br/>
		/// <c>VROUNDPD xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 09 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670607)]
public static void vroundpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vroundpd instruction.<br/>
		/// <br/>
		/// <c>VROUNDPD ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.WIG 09 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670608)]
public static void vroundpd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vroundps instruction.<br/>
		/// <br/>
		/// <c>VROUNDPS xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 08 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670609)]
public static void vroundps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, sbyte imm) {}
		/// <summary>vroundps instruction.<br/>
		/// <br/>
		/// <c>VROUNDPS ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.WIG 08 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670610)]
public static void vroundps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, sbyte imm) {}
		/// <summary>vroundps instruction.<br/>
		/// <br/>
		/// <c>VROUNDPS xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 08 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670611)]
public static void vroundps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vroundps instruction.<br/>
		/// <br/>
		/// <c>VROUNDPS ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.WIG 08 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670612)]
public static void vroundps(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, sbyte imm) {}
		/// <summary>vroundps instruction.<br/>
		/// <br/>
		/// <c>VROUNDPS xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 08 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670613)]
public static void vroundps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, byte imm) {}
		/// <summary>vroundps instruction.<br/>
		/// <br/>
		/// <c>VROUNDPS ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.WIG 08 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670614)]
public static void vroundps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, byte imm) {}
		/// <summary>vroundps instruction.<br/>
		/// <br/>
		/// <c>VROUNDPS xmm1, xmm2/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F3A.WIG 08 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670615)]
public static void vroundps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vroundps instruction.<br/>
		/// <br/>
		/// <c>VROUNDPS ymm1, ymm2/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F3A.WIG 08 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670616)]
public static void vroundps(AssemblerRegisterYMM dst, AssemblerMemoryOperand src1, byte imm) {}
		/// <summary>vroundsd instruction.<br/>
		/// <br/>
		/// <c>VROUNDSD xmm1, xmm2, xmm3/m64, imm8</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F3A.WIG 0B /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670617)]
public static void vroundsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vroundsd instruction.<br/>
		/// <br/>
		/// <c>VROUNDSD xmm1, xmm2, xmm3/m64, imm8</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F3A.WIG 0B /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670618)]
public static void vroundsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vroundsd instruction.<br/>
		/// <br/>
		/// <c>VROUNDSD xmm1, xmm2, xmm3/m64, imm8</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F3A.WIG 0B /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670619)]
public static void vroundsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vroundsd instruction.<br/>
		/// <br/>
		/// <c>VROUNDSD xmm1, xmm2, xmm3/m64, imm8</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F3A.WIG 0B /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670620)]
public static void vroundsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vroundss instruction.<br/>
		/// <br/>
		/// <c>VROUNDSS xmm1, xmm2, xmm3/m32, imm8</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F3A.WIG 0A /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670621)]
public static void vroundss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vroundss instruction.<br/>
		/// <br/>
		/// <c>VROUNDSS xmm1, xmm2, xmm3/m32, imm8</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F3A.WIG 0A /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670622)]
public static void vroundss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vroundss instruction.<br/>
		/// <br/>
		/// <c>VROUNDSS xmm1, xmm2, xmm3/m32, imm8</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F3A.WIG 0A /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670623)]
public static void vroundss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vroundss instruction.<br/>
		/// <br/>
		/// <c>VROUNDSS xmm1, xmm2, xmm3/m32, imm8</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F3A.WIG 0A /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670624)]
public static void vroundss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vrsqrt14pd instruction.<br/>
		/// <br/>
		/// <c>VRSQRT14PD xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 4E /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670625)]
public static void vrsqrt14pd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vrsqrt14pd instruction.<br/>
		/// <br/>
		/// <c>VRSQRT14PD ymm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 4E /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670626)]
public static void vrsqrt14pd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vrsqrt14pd instruction.<br/>
		/// <br/>
		/// <c>VRSQRT14PD zmm1 {k1}{z}, zmm2/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 4E /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670627)]
public static void vrsqrt14pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vrsqrt14pd instruction.<br/>
		/// <br/>
		/// <c>VRSQRT14PD xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 4E /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670628)]
public static void vrsqrt14pd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vrsqrt14pd instruction.<br/>
		/// <br/>
		/// <c>VRSQRT14PD ymm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 4E /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670629)]
public static void vrsqrt14pd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vrsqrt14pd instruction.<br/>
		/// <br/>
		/// <c>VRSQRT14PD zmm1 {k1}{z}, zmm2/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 4E /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670630)]
public static void vrsqrt14pd(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vrsqrt14ps instruction.<br/>
		/// <br/>
		/// <c>VRSQRT14PS xmm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 4E /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670631)]
public static void vrsqrt14ps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vrsqrt14ps instruction.<br/>
		/// <br/>
		/// <c>VRSQRT14PS ymm1 {k1}{z}, ymm2/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 4E /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670632)]
public static void vrsqrt14ps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vrsqrt14ps instruction.<br/>
		/// <br/>
		/// <c>VRSQRT14PS zmm1 {k1}{z}, zmm2/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 4E /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670633)]
public static void vrsqrt14ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vrsqrt14ps instruction.<br/>
		/// <br/>
		/// <c>VRSQRT14PS xmm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 4E /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670634)]
public static void vrsqrt14ps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vrsqrt14ps instruction.<br/>
		/// <br/>
		/// <c>VRSQRT14PS ymm1 {k1}{z}, ymm2/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 4E /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670635)]
public static void vrsqrt14ps(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vrsqrt14ps instruction.<br/>
		/// <br/>
		/// <c>VRSQRT14PS zmm1 {k1}{z}, zmm2/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 4E /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670636)]
public static void vrsqrt14ps(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vrsqrt14sd instruction.<br/>
		/// <br/>
		/// <c>VRSQRT14SD xmm1 {k1}{z}, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W1 4F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670637)]
public static void vrsqrt14sd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vrsqrt14sd instruction.<br/>
		/// <br/>
		/// <c>VRSQRT14SD xmm1 {k1}{z}, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W1 4F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670638)]
public static void vrsqrt14sd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vrsqrt14ss instruction.<br/>
		/// <br/>
		/// <c>VRSQRT14SS xmm1 {k1}{z}, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W0 4F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670639)]
public static void vrsqrt14ss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vrsqrt14ss instruction.<br/>
		/// <br/>
		/// <c>VRSQRT14SS xmm1 {k1}{z}, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W0 4F /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670640)]
public static void vrsqrt14ss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vrsqrt28pd instruction.<br/>
		/// <br/>
		/// <c>VRSQRT28PD zmm1 {k1}{z}, zmm2/m512/m64bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 CC /r</c><br/>
		/// <br/>
		/// <c>AVX512ER</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670641)]
public static void vrsqrt28pd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vrsqrt28pd instruction.<br/>
		/// <br/>
		/// <c>VRSQRT28PD zmm1 {k1}{z}, zmm2/m512/m64bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 CC /r</c><br/>
		/// <br/>
		/// <c>AVX512ER</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670642)]
public static void vrsqrt28pd(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vrsqrt28ps instruction.<br/>
		/// <br/>
		/// <c>VRSQRT28PS zmm1 {k1}{z}, zmm2/m512/m32bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 CC /r</c><br/>
		/// <br/>
		/// <c>AVX512ER</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670643)]
public static void vrsqrt28ps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vrsqrt28ps instruction.<br/>
		/// <br/>
		/// <c>VRSQRT28PS zmm1 {k1}{z}, zmm2/m512/m32bcst{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 CC /r</c><br/>
		/// <br/>
		/// <c>AVX512ER</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670644)]
public static void vrsqrt28ps(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vrsqrt28sd instruction.<br/>
		/// <br/>
		/// <c>VRSQRT28SD xmm1 {k1}{z}, xmm2, xmm3/m64{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W1 CD /r</c><br/>
		/// <br/>
		/// <c>AVX512ER</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670645)]
public static void vrsqrt28sd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vrsqrt28sd instruction.<br/>
		/// <br/>
		/// <c>VRSQRT28SD xmm1 {k1}{z}, xmm2, xmm3/m64{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W1 CD /r</c><br/>
		/// <br/>
		/// <c>AVX512ER</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670646)]
public static void vrsqrt28sd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vrsqrt28ss instruction.<br/>
		/// <br/>
		/// <c>VRSQRT28SS xmm1 {k1}{z}, xmm2, xmm3/m32{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W0 CD /r</c><br/>
		/// <br/>
		/// <c>AVX512ER</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670647)]
public static void vrsqrt28ss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vrsqrt28ss instruction.<br/>
		/// <br/>
		/// <c>VRSQRT28SS xmm1 {k1}{z}, xmm2, xmm3/m32{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W0 CD /r</c><br/>
		/// <br/>
		/// <c>AVX512ER</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670648)]
public static void vrsqrt28ss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vrsqrtps instruction.<br/>
		/// <br/>
		/// <c>VRSQRTPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 52 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670649)]
public static void vrsqrtps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vrsqrtps instruction.<br/>
		/// <br/>
		/// <c>VRSQRTPS ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 52 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670650)]
public static void vrsqrtps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vrsqrtps instruction.<br/>
		/// <br/>
		/// <c>VRSQRTPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 52 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670651)]
public static void vrsqrtps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vrsqrtps instruction.<br/>
		/// <br/>
		/// <c>VRSQRTPS ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 52 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670652)]
public static void vrsqrtps(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vrsqrtss instruction.<br/>
		/// <br/>
		/// <c>VRSQRTSS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F3.0F.WIG 52 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670653)]
public static void vrsqrtss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vrsqrtss instruction.<br/>
		/// <br/>
		/// <c>VRSQRTSS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F3.0F.WIG 52 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670654)]
public static void vrsqrtss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vscalefpd instruction.<br/>
		/// <br/>
		/// <c>VSCALEFPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 2C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670655)]
public static void vscalefpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vscalefpd instruction.<br/>
		/// <br/>
		/// <c>VSCALEFPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 2C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670656)]
public static void vscalefpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vscalefpd instruction.<br/>
		/// <br/>
		/// <c>VSCALEFPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 2C /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670657)]
public static void vscalefpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vscalefpd instruction.<br/>
		/// <br/>
		/// <c>VSCALEFPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 2C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670658)]
public static void vscalefpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vscalefpd instruction.<br/>
		/// <br/>
		/// <c>VSCALEFPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 2C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670659)]
public static void vscalefpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vscalefpd instruction.<br/>
		/// <br/>
		/// <c>VSCALEFPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 2C /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670660)]
public static void vscalefpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vscalefps instruction.<br/>
		/// <br/>
		/// <c>VSCALEFPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 2C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670661)]
public static void vscalefps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vscalefps instruction.<br/>
		/// <br/>
		/// <c>VSCALEFPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 2C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670662)]
public static void vscalefps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vscalefps instruction.<br/>
		/// <br/>
		/// <c>VSCALEFPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 2C /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670663)]
public static void vscalefps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vscalefps instruction.<br/>
		/// <br/>
		/// <c>VSCALEFPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 2C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670664)]
public static void vscalefps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vscalefps instruction.<br/>
		/// <br/>
		/// <c>VSCALEFPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 2C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670665)]
public static void vscalefps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vscalefps instruction.<br/>
		/// <br/>
		/// <c>VSCALEFPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 2C /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670666)]
public static void vscalefps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vscalefsd instruction.<br/>
		/// <br/>
		/// <c>VSCALEFSD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W1 2D /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670667)]
public static void vscalefsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vscalefsd instruction.<br/>
		/// <br/>
		/// <c>VSCALEFSD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W1 2D /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670668)]
public static void vscalefsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vscalefss instruction.<br/>
		/// <br/>
		/// <c>VSCALEFSS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W0 2D /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670669)]
public static void vscalefss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vscalefss instruction.<br/>
		/// <br/>
		/// <c>VSCALEFSS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F38.W0 2D /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670670)]
public static void vscalefss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vscatterdpd instruction.<br/>
		/// <br/>
		/// <c>VSCATTERDPD vm32x {k1}, xmm1</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 A2 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670671)]
public static void vscatterdpd(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vscatterdpd instruction.<br/>
		/// <br/>
		/// <c>VSCATTERDPD vm32x {k1}, ymm1</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 A2 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670672)]
public static void vscatterdpd(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vscatterdpd instruction.<br/>
		/// <br/>
		/// <c>VSCATTERDPD vm32y {k1}, zmm1</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 A2 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670673)]
public static void vscatterdpd(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vscatterdps instruction.<br/>
		/// <br/>
		/// <c>VSCATTERDPS vm32x {k1}, xmm1</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 A2 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670674)]
public static void vscatterdps(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vscatterdps instruction.<br/>
		/// <br/>
		/// <c>VSCATTERDPS vm32y {k1}, ymm1</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 A2 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670675)]
public static void vscatterdps(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vscatterdps instruction.<br/>
		/// <br/>
		/// <c>VSCATTERDPS vm32z {k1}, zmm1</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 A2 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670676)]
public static void vscatterdps(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vscatterpf0dpd instruction.<br/>
		/// <br/>
		/// <c>VSCATTERPF0DPD vm32y {k1}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 C6 /5 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512PF</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670677)]
public static void vscatterpf0dpd(AssemblerMemoryOperand dst) {}
		/// <summary>vscatterpf0dps instruction.<br/>
		/// <br/>
		/// <c>VSCATTERPF0DPS vm32z {k1}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 C6 /5 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512PF</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670678)]
public static void vscatterpf0dps(AssemblerMemoryOperand dst) {}
		/// <summary>vscatterpf0qpd instruction.<br/>
		/// <br/>
		/// <c>VSCATTERPF0QPD vm64z {k1}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 C7 /5 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512PF</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670679)]
public static void vscatterpf0qpd(AssemblerMemoryOperand dst) {}
		/// <summary>vscatterpf0qps instruction.<br/>
		/// <br/>
		/// <c>VSCATTERPF0QPS vm64z {k1}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 C7 /5 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512PF</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670680)]
public static void vscatterpf0qps(AssemblerMemoryOperand dst) {}
		/// <summary>vscatterpf1dpd instruction.<br/>
		/// <br/>
		/// <c>VSCATTERPF1DPD vm32y {k1}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 C6 /6 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512PF</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670681)]
public static void vscatterpf1dpd(AssemblerMemoryOperand dst) {}
		/// <summary>vscatterpf1dps instruction.<br/>
		/// <br/>
		/// <c>VSCATTERPF1DPS vm32z {k1}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 C6 /6 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512PF</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670682)]
public static void vscatterpf1dps(AssemblerMemoryOperand dst) {}
		/// <summary>vscatterpf1qpd instruction.<br/>
		/// <br/>
		/// <c>VSCATTERPF1QPD vm64z {k1}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 C7 /6 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512PF</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670683)]
public static void vscatterpf1qpd(AssemblerMemoryOperand dst) {}
		/// <summary>vscatterpf1qps instruction.<br/>
		/// <br/>
		/// <c>VSCATTERPF1QPS vm64z {k1}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 C7 /6 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512PF</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670684)]
public static void vscatterpf1qps(AssemblerMemoryOperand dst) {}
		/// <summary>vscatterqpd instruction.<br/>
		/// <br/>
		/// <c>VSCATTERQPD vm64x {k1}, xmm1</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W1 A3 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670685)]
public static void vscatterqpd(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vscatterqpd instruction.<br/>
		/// <br/>
		/// <c>VSCATTERQPD vm64y {k1}, ymm1</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W1 A3 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670686)]
public static void vscatterqpd(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vscatterqpd instruction.<br/>
		/// <br/>
		/// <c>VSCATTERQPD vm64z {k1}, zmm1</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W1 A3 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670687)]
public static void vscatterqpd(AssemblerMemoryOperand dst, AssemblerRegisterZMM src) {}
		/// <summary>vscatterqps instruction.<br/>
		/// <br/>
		/// <c>VSCATTERQPS vm64x {k1}, xmm1</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F38.W0 A3 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VSCATTERQPS vm64y {k1}, xmm1</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F38.W0 A3 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670688)]
public static void vscatterqps(AssemblerMemoryOperand dst, AssemblerRegisterXMM src) {}
		/// <summary>vscatterqps instruction.<br/>
		/// <br/>
		/// <c>VSCATTERQPS vm64z {k1}, ymm1</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F38.W0 A3 /vsib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670689)]
public static void vscatterqps(AssemblerMemoryOperand dst, AssemblerRegisterYMM src) {}
		/// <summary>vshuff32x4 instruction.<br/>
		/// <br/>
		/// <c>VSHUFF32X4 ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 23 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670690)]
public static void vshuff32x4(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vshuff32x4 instruction.<br/>
		/// <br/>
		/// <c>VSHUFF32X4 zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 23 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670691)]
public static void vshuff32x4(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, sbyte imm) {}
		/// <summary>vshuff32x4 instruction.<br/>
		/// <br/>
		/// <c>VSHUFF32X4 ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 23 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670692)]
public static void vshuff32x4(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vshuff32x4 instruction.<br/>
		/// <br/>
		/// <c>VSHUFF32X4 zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 23 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670693)]
public static void vshuff32x4(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vshuff32x4 instruction.<br/>
		/// <br/>
		/// <c>VSHUFF32X4 ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 23 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670694)]
public static void vshuff32x4(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vshuff32x4 instruction.<br/>
		/// <br/>
		/// <c>VSHUFF32X4 zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 23 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670695)]
public static void vshuff32x4(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, byte imm) {}
		/// <summary>vshuff32x4 instruction.<br/>
		/// <br/>
		/// <c>VSHUFF32X4 ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 23 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670696)]
public static void vshuff32x4(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vshuff32x4 instruction.<br/>
		/// <br/>
		/// <c>VSHUFF32X4 zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 23 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670697)]
public static void vshuff32x4(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vshuff64x2 instruction.<br/>
		/// <br/>
		/// <c>VSHUFF64X2 ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 23 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670698)]
public static void vshuff64x2(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vshuff64x2 instruction.<br/>
		/// <br/>
		/// <c>VSHUFF64X2 zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 23 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670699)]
public static void vshuff64x2(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, sbyte imm) {}
		/// <summary>vshuff64x2 instruction.<br/>
		/// <br/>
		/// <c>VSHUFF64X2 ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 23 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670700)]
public static void vshuff64x2(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vshuff64x2 instruction.<br/>
		/// <br/>
		/// <c>VSHUFF64X2 zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 23 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670701)]
public static void vshuff64x2(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vshuff64x2 instruction.<br/>
		/// <br/>
		/// <c>VSHUFF64X2 ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 23 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670702)]
public static void vshuff64x2(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vshuff64x2 instruction.<br/>
		/// <br/>
		/// <c>VSHUFF64X2 zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 23 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670703)]
public static void vshuff64x2(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, byte imm) {}
		/// <summary>vshuff64x2 instruction.<br/>
		/// <br/>
		/// <c>VSHUFF64X2 ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 23 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670704)]
public static void vshuff64x2(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vshuff64x2 instruction.<br/>
		/// <br/>
		/// <c>VSHUFF64X2 zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 23 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670705)]
public static void vshuff64x2(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vshufi32x4 instruction.<br/>
		/// <br/>
		/// <c>VSHUFI32X4 ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 43 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670706)]
public static void vshufi32x4(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vshufi32x4 instruction.<br/>
		/// <br/>
		/// <c>VSHUFI32X4 zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 43 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670707)]
public static void vshufi32x4(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, sbyte imm) {}
		/// <summary>vshufi32x4 instruction.<br/>
		/// <br/>
		/// <c>VSHUFI32X4 ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 43 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670708)]
public static void vshufi32x4(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vshufi32x4 instruction.<br/>
		/// <br/>
		/// <c>VSHUFI32X4 zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 43 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670709)]
public static void vshufi32x4(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vshufi32x4 instruction.<br/>
		/// <br/>
		/// <c>VSHUFI32X4 ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 43 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670710)]
public static void vshufi32x4(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vshufi32x4 instruction.<br/>
		/// <br/>
		/// <c>VSHUFI32X4 zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 43 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670711)]
public static void vshufi32x4(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, byte imm) {}
		/// <summary>vshufi32x4 instruction.<br/>
		/// <br/>
		/// <c>VSHUFI32X4 ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W0 43 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670712)]
public static void vshufi32x4(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vshufi32x4 instruction.<br/>
		/// <br/>
		/// <c>VSHUFI32X4 zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W0 43 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670713)]
public static void vshufi32x4(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vshufi64x2 instruction.<br/>
		/// <br/>
		/// <c>VSHUFI64X2 ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 43 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670714)]
public static void vshufi64x2(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vshufi64x2 instruction.<br/>
		/// <br/>
		/// <c>VSHUFI64X2 zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 43 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670715)]
public static void vshufi64x2(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, sbyte imm) {}
		/// <summary>vshufi64x2 instruction.<br/>
		/// <br/>
		/// <c>VSHUFI64X2 ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 43 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670716)]
public static void vshufi64x2(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vshufi64x2 instruction.<br/>
		/// <br/>
		/// <c>VSHUFI64X2 zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 43 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670717)]
public static void vshufi64x2(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vshufi64x2 instruction.<br/>
		/// <br/>
		/// <c>VSHUFI64X2 ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 43 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670718)]
public static void vshufi64x2(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vshufi64x2 instruction.<br/>
		/// <br/>
		/// <c>VSHUFI64X2 zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 43 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670719)]
public static void vshufi64x2(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, byte imm) {}
		/// <summary>vshufi64x2 instruction.<br/>
		/// <br/>
		/// <c>VSHUFI64X2 ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F3A.W1 43 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670720)]
public static void vshufi64x2(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vshufi64x2 instruction.<br/>
		/// <br/>
		/// <c>VSHUFI64X2 zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F3A.W1 43 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670721)]
public static void vshufi64x2(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vshufpd instruction.<br/>
		/// <br/>
		/// <c>VSHUFPD xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG C6 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VSHUFPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 C6 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670722)]
public static void vshufpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vshufpd instruction.<br/>
		/// <br/>
		/// <c>VSHUFPD ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG C6 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VSHUFPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 C6 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670723)]
public static void vshufpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vshufpd instruction.<br/>
		/// <br/>
		/// <c>VSHUFPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 C6 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670724)]
public static void vshufpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, sbyte imm) {}
		/// <summary>vshufpd instruction.<br/>
		/// <br/>
		/// <c>VSHUFPD xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG C6 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VSHUFPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 C6 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670725)]
public static void vshufpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vshufpd instruction.<br/>
		/// <br/>
		/// <c>VSHUFPD ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG C6 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VSHUFPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 C6 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670726)]
public static void vshufpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vshufpd instruction.<br/>
		/// <br/>
		/// <c>VSHUFPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 C6 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670727)]
public static void vshufpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vshufpd instruction.<br/>
		/// <br/>
		/// <c>VSHUFPD xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG C6 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VSHUFPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 C6 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670728)]
public static void vshufpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vshufpd instruction.<br/>
		/// <br/>
		/// <c>VSHUFPD ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG C6 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VSHUFPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 C6 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670729)]
public static void vshufpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vshufpd instruction.<br/>
		/// <br/>
		/// <c>VSHUFPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 C6 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670730)]
public static void vshufpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, byte imm) {}
		/// <summary>vshufpd instruction.<br/>
		/// <br/>
		/// <c>VSHUFPD xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG C6 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VSHUFPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 C6 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670731)]
public static void vshufpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vshufpd instruction.<br/>
		/// <br/>
		/// <c>VSHUFPD ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG C6 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VSHUFPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 C6 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670732)]
public static void vshufpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vshufpd instruction.<br/>
		/// <br/>
		/// <c>VSHUFPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 C6 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670733)]
public static void vshufpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vshufps instruction.<br/>
		/// <br/>
		/// <c>VSHUFPS xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG C6 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VSHUFPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 C6 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670734)]
public static void vshufps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, sbyte imm) {}
		/// <summary>vshufps instruction.<br/>
		/// <br/>
		/// <c>VSHUFPS ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG C6 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VSHUFPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 C6 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670735)]
public static void vshufps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, sbyte imm) {}
		/// <summary>vshufps instruction.<br/>
		/// <br/>
		/// <c>VSHUFPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 C6 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670736)]
public static void vshufps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, sbyte imm) {}
		/// <summary>vshufps instruction.<br/>
		/// <br/>
		/// <c>VSHUFPS xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG C6 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VSHUFPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 C6 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670737)]
public static void vshufps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vshufps instruction.<br/>
		/// <br/>
		/// <c>VSHUFPS ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG C6 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VSHUFPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 C6 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670738)]
public static void vshufps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vshufps instruction.<br/>
		/// <br/>
		/// <c>VSHUFPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 C6 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670739)]
public static void vshufps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, sbyte imm) {}
		/// <summary>vshufps instruction.<br/>
		/// <br/>
		/// <c>VSHUFPS xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG C6 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VSHUFPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 C6 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670740)]
public static void vshufps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2, byte imm) {}
		/// <summary>vshufps instruction.<br/>
		/// <br/>
		/// <c>VSHUFPS ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG C6 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VSHUFPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 C6 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670741)]
public static void vshufps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2, byte imm) {}
		/// <summary>vshufps instruction.<br/>
		/// <br/>
		/// <c>VSHUFPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 C6 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670742)]
public static void vshufps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2, byte imm) {}
		/// <summary>vshufps instruction.<br/>
		/// <br/>
		/// <c>VSHUFPS xmm1, xmm2, xmm3/m128, imm8</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG C6 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VSHUFPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 C6 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670743)]
public static void vshufps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vshufps instruction.<br/>
		/// <br/>
		/// <c>VSHUFPS ymm1, ymm2, ymm3/m256, imm8</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG C6 /r ib</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VSHUFPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 C6 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670744)]
public static void vshufps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vshufps instruction.<br/>
		/// <br/>
		/// <c>VSHUFPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst, imm8</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 C6 /r ib</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670745)]
public static void vshufps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2, byte imm) {}
		/// <summary>vsqrtpd instruction.<br/>
		/// <br/>
		/// <c>VSQRTPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 51 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VSQRTPD xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 51 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670746)]
public static void vsqrtpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vsqrtpd instruction.<br/>
		/// <br/>
		/// <c>VSQRTPD ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 51 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VSQRTPD ymm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 51 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670747)]
public static void vsqrtpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vsqrtpd instruction.<br/>
		/// <br/>
		/// <c>VSQRTPD zmm1 {k1}{z}, zmm2/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 51 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670748)]
public static void vsqrtpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vsqrtpd instruction.<br/>
		/// <br/>
		/// <c>VSQRTPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 51 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VSQRTPD xmm1 {k1}{z}, xmm2/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 51 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670749)]
public static void vsqrtpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vsqrtpd instruction.<br/>
		/// <br/>
		/// <c>VSQRTPD ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 51 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VSQRTPD ymm1 {k1}{z}, ymm2/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 51 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670750)]
public static void vsqrtpd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vsqrtpd instruction.<br/>
		/// <br/>
		/// <c>VSQRTPD zmm1 {k1}{z}, zmm2/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 51 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670751)]
public static void vsqrtpd(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vsqrtps instruction.<br/>
		/// <br/>
		/// <c>VSQRTPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 51 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VSQRTPS xmm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 51 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670752)]
public static void vsqrtps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vsqrtps instruction.<br/>
		/// <br/>
		/// <c>VSQRTPS ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 51 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VSQRTPS ymm1 {k1}{z}, ymm2/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 51 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670753)]
public static void vsqrtps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vsqrtps instruction.<br/>
		/// <br/>
		/// <c>VSQRTPS zmm1 {k1}{z}, zmm2/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 51 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670754)]
public static void vsqrtps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src) {}
		/// <summary>vsqrtps instruction.<br/>
		/// <br/>
		/// <c>VSQRTPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 51 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VSQRTPS xmm1 {k1}{z}, xmm2/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 51 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670755)]
public static void vsqrtps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vsqrtps instruction.<br/>
		/// <br/>
		/// <c>VSQRTPS ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 51 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VSQRTPS ymm1 {k1}{z}, ymm2/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 51 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670756)]
public static void vsqrtps(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vsqrtps instruction.<br/>
		/// <br/>
		/// <c>VSQRTPS zmm1 {k1}{z}, zmm2/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 51 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670757)]
public static void vsqrtps(AssemblerRegisterZMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vsqrtsd instruction.<br/>
		/// <br/>
		/// <c>VSQRTSD xmm1, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F2.0F.WIG 51 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VSQRTSD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W1 51 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670758)]
public static void vsqrtsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vsqrtsd instruction.<br/>
		/// <br/>
		/// <c>VSQRTSD xmm1, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F2.0F.WIG 51 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VSQRTSD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W1 51 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670759)]
public static void vsqrtsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vsqrtss instruction.<br/>
		/// <br/>
		/// <c>VSQRTSS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F3.0F.WIG 51 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VSQRTSS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W0 51 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670760)]
public static void vsqrtss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vsqrtss instruction.<br/>
		/// <br/>
		/// <c>VSQRTSS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F3.0F.WIG 51 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VSQRTSS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W0 51 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670761)]
public static void vsqrtss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vstmxcsr instruction.<br/>
		/// <br/>
		/// <c>VSTMXCSR m32</c><br/>
		/// <br/>
		/// <c>VEX.LZ.0F.WIG AE /3</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670762)]
public static void vstmxcsr(AssemblerMemoryOperand dst) {}
		/// <summary>vsubpd instruction.<br/>
		/// <br/>
		/// <c>VSUBPD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 5C /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VSUBPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 5C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670763)]
public static void vsubpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vsubpd instruction.<br/>
		/// <br/>
		/// <c>VSUBPD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 5C /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VSUBPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 5C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670764)]
public static void vsubpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vsubpd instruction.<br/>
		/// <br/>
		/// <c>VSUBPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 5C /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670765)]
public static void vsubpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vsubpd instruction.<br/>
		/// <br/>
		/// <c>VSUBPD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 5C /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VSUBPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 5C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670766)]
public static void vsubpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vsubpd instruction.<br/>
		/// <br/>
		/// <c>VSUBPD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 5C /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VSUBPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 5C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670767)]
public static void vsubpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vsubpd instruction.<br/>
		/// <br/>
		/// <c>VSUBPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 5C /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670768)]
public static void vsubpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vsubps instruction.<br/>
		/// <br/>
		/// <c>VSUBPS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 5C /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VSUBPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 5C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670769)]
public static void vsubps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vsubps instruction.<br/>
		/// <br/>
		/// <c>VSUBPS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 5C /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VSUBPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 5C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670770)]
public static void vsubps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vsubps instruction.<br/>
		/// <br/>
		/// <c>VSUBPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 5C /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670771)]
public static void vsubps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vsubps instruction.<br/>
		/// <br/>
		/// <c>VSUBPS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 5C /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VSUBPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 5C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670772)]
public static void vsubps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vsubps instruction.<br/>
		/// <br/>
		/// <c>VSUBPS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 5C /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VSUBPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 5C /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670773)]
public static void vsubps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vsubps instruction.<br/>
		/// <br/>
		/// <c>VSUBPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 5C /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670774)]
public static void vsubps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vsubsd instruction.<br/>
		/// <br/>
		/// <c>VSUBSD xmm1, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F2.0F.WIG 5C /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VSUBSD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W1 5C /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670775)]
public static void vsubsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vsubsd instruction.<br/>
		/// <br/>
		/// <c>VSUBSD xmm1, xmm2, xmm3/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F2.0F.WIG 5C /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VSUBSD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F2.0F.W1 5C /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670776)]
public static void vsubsd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vsubss instruction.<br/>
		/// <br/>
		/// <c>VSUBSS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F3.0F.WIG 5C /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VSUBSS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W0 5C /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670777)]
public static void vsubss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vsubss instruction.<br/>
		/// <br/>
		/// <c>VSUBSS xmm1, xmm2, xmm3/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.F3.0F.WIG 5C /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VSUBSS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.F3.0F.W0 5C /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670778)]
public static void vsubss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vtestpd instruction.<br/>
		/// <br/>
		/// <c>VTESTPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 0F /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670779)]
public static void vtestpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vtestpd instruction.<br/>
		/// <br/>
		/// <c>VTESTPD ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 0F /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670780)]
public static void vtestpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vtestpd instruction.<br/>
		/// <br/>
		/// <c>VTESTPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 0F /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670781)]
public static void vtestpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vtestpd instruction.<br/>
		/// <br/>
		/// <c>VTESTPD ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 0F /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670782)]
public static void vtestpd(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vtestps instruction.<br/>
		/// <br/>
		/// <c>VTESTPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 0E /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670783)]
public static void vtestps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vtestps instruction.<br/>
		/// <br/>
		/// <c>VTESTPS ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 0E /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670784)]
public static void vtestps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src) {}
		/// <summary>vtestps instruction.<br/>
		/// <br/>
		/// <c>VTESTPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F38.W0 0E /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670785)]
public static void vtestps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vtestps instruction.<br/>
		/// <br/>
		/// <c>VTESTPS ymm1, ymm2/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F38.W0 0E /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670786)]
public static void vtestps(AssemblerRegisterYMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vucomisd instruction.<br/>
		/// <br/>
		/// <c>VUCOMISD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F.WIG 2E /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VUCOMISD xmm1, xmm2/m64{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F.W1 2E /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670787)]
public static void vucomisd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vucomisd instruction.<br/>
		/// <br/>
		/// <c>VUCOMISD xmm1, xmm2/m64</c><br/>
		/// <br/>
		/// <c>VEX.LIG.66.0F.WIG 2E /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VUCOMISD xmm1, xmm2/m64{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.66.0F.W1 2E /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670788)]
public static void vucomisd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vucomiss instruction.<br/>
		/// <br/>
		/// <c>VUCOMISS xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.0F.WIG 2E /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VUCOMISS xmm1, xmm2/m32{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.0F.W0 2E /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670789)]
public static void vucomiss(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>vucomiss instruction.<br/>
		/// <br/>
		/// <c>VUCOMISS xmm1, xmm2/m32</c><br/>
		/// <br/>
		/// <c>VEX.LIG.0F.WIG 2E /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VUCOMISS xmm1, xmm2/m32{sae}</c><br/>
		/// <br/>
		/// <c>EVEX.LIG.0F.W0 2E /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670790)]
public static void vucomiss(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>vunpckhpd instruction.<br/>
		/// <br/>
		/// <c>VUNPCKHPD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 15 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VUNPCKHPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 15 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670791)]
public static void vunpckhpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vunpckhpd instruction.<br/>
		/// <br/>
		/// <c>VUNPCKHPD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 15 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VUNPCKHPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 15 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670792)]
public static void vunpckhpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vunpckhpd instruction.<br/>
		/// <br/>
		/// <c>VUNPCKHPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 15 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670793)]
public static void vunpckhpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vunpckhpd instruction.<br/>
		/// <br/>
		/// <c>VUNPCKHPD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 15 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VUNPCKHPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 15 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670794)]
public static void vunpckhpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vunpckhpd instruction.<br/>
		/// <br/>
		/// <c>VUNPCKHPD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 15 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VUNPCKHPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 15 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670795)]
public static void vunpckhpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vunpckhpd instruction.<br/>
		/// <br/>
		/// <c>VUNPCKHPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 15 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670796)]
public static void vunpckhpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vunpckhps instruction.<br/>
		/// <br/>
		/// <c>VUNPCKHPS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 15 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VUNPCKHPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 15 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670797)]
public static void vunpckhps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vunpckhps instruction.<br/>
		/// <br/>
		/// <c>VUNPCKHPS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 15 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VUNPCKHPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 15 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670798)]
public static void vunpckhps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vunpckhps instruction.<br/>
		/// <br/>
		/// <c>VUNPCKHPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 15 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670799)]
public static void vunpckhps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vunpckhps instruction.<br/>
		/// <br/>
		/// <c>VUNPCKHPS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 15 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VUNPCKHPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 15 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670800)]
public static void vunpckhps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vunpckhps instruction.<br/>
		/// <br/>
		/// <c>VUNPCKHPS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 15 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VUNPCKHPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 15 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670801)]
public static void vunpckhps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vunpckhps instruction.<br/>
		/// <br/>
		/// <c>VUNPCKHPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 15 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670802)]
public static void vunpckhps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vunpcklpd instruction.<br/>
		/// <br/>
		/// <c>VUNPCKLPD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 14 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VUNPCKLPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 14 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670803)]
public static void vunpcklpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vunpcklpd instruction.<br/>
		/// <br/>
		/// <c>VUNPCKLPD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 14 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VUNPCKLPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 14 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670804)]
public static void vunpcklpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vunpcklpd instruction.<br/>
		/// <br/>
		/// <c>VUNPCKLPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 14 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670805)]
public static void vunpcklpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vunpcklpd instruction.<br/>
		/// <br/>
		/// <c>VUNPCKLPD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 14 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VUNPCKLPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 14 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670806)]
public static void vunpcklpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vunpcklpd instruction.<br/>
		/// <br/>
		/// <c>VUNPCKLPD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 14 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VUNPCKLPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 14 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670807)]
public static void vunpcklpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vunpcklpd instruction.<br/>
		/// <br/>
		/// <c>VUNPCKLPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 14 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670808)]
public static void vunpcklpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vunpcklps instruction.<br/>
		/// <br/>
		/// <c>VUNPCKLPS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 14 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VUNPCKLPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 14 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670809)]
public static void vunpcklps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vunpcklps instruction.<br/>
		/// <br/>
		/// <c>VUNPCKLPS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 14 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VUNPCKLPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 14 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670810)]
public static void vunpcklps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vunpcklps instruction.<br/>
		/// <br/>
		/// <c>VUNPCKLPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 14 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670811)]
public static void vunpcklps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vunpcklps instruction.<br/>
		/// <br/>
		/// <c>VUNPCKLPS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 14 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VUNPCKLPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 14 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670812)]
public static void vunpcklps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vunpcklps instruction.<br/>
		/// <br/>
		/// <c>VUNPCKLPS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 14 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VUNPCKLPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 14 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670813)]
public static void vunpcklps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vunpcklps instruction.<br/>
		/// <br/>
		/// <c>VUNPCKLPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 14 /r</c><br/>
		/// <br/>
		/// <c>AVX512F</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670814)]
public static void vunpcklps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vxorpd instruction.<br/>
		/// <br/>
		/// <c>VXORPD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 57 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VXORPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 57 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670815)]
public static void vxorpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vxorpd instruction.<br/>
		/// <br/>
		/// <c>VXORPD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 57 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VXORPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 57 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670816)]
public static void vxorpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vxorpd instruction.<br/>
		/// <br/>
		/// <c>VXORPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 57 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670817)]
public static void vxorpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vxorpd instruction.<br/>
		/// <br/>
		/// <c>VXORPD xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.66.0F.WIG 57 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VXORPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.66.0F.W1 57 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670818)]
public static void vxorpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vxorpd instruction.<br/>
		/// <br/>
		/// <c>VXORPD ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.66.0F.WIG 57 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VXORPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.66.0F.W1 57 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670819)]
public static void vxorpd(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vxorpd instruction.<br/>
		/// <br/>
		/// <c>VXORPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.66.0F.W1 57 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670820)]
public static void vxorpd(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vxorps instruction.<br/>
		/// <br/>
		/// <c>VXORPS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 57 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VXORPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 57 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670821)]
public static void vxorps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerRegisterXMM src2) {}
		/// <summary>vxorps instruction.<br/>
		/// <br/>
		/// <c>VXORPS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 57 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VXORPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 57 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670822)]
public static void vxorps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerRegisterYMM src2) {}
		/// <summary>vxorps instruction.<br/>
		/// <br/>
		/// <c>VXORPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 57 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670823)]
public static void vxorps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerRegisterZMM src2) {}
		/// <summary>vxorps instruction.<br/>
		/// <br/>
		/// <c>VXORPS xmm1, xmm2, xmm3/m128</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 57 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VXORPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.128.0F.W0 57 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670824)]
public static void vxorps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vxorps instruction.<br/>
		/// <br/>
		/// <c>VXORPS ymm1, ymm2, ymm3/m256</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 57 /r</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>VXORPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.256.0F.W0 57 /r</c><br/>
		/// <br/>
		/// <c>AVX512VL and AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670825)]
public static void vxorps(AssemblerRegisterYMM dst, AssemblerRegisterYMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vxorps instruction.<br/>
		/// <br/>
		/// <c>VXORPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</c><br/>
		/// <br/>
		/// <c>EVEX.512.0F.W0 57 /r</c><br/>
		/// <br/>
		/// <c>AVX512DQ</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670826)]
public static void vxorps(AssemblerRegisterZMM dst, AssemblerRegisterZMM src1, AssemblerMemoryOperand src2) {}
		/// <summary>vzeroall instruction.<br/>
		/// <br/>
		/// <c>VZEROALL</c><br/>
		/// <br/>
		/// <c>VEX.256.0F.WIG 77</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670827)]
public static void vzeroall() {}
		/// <summary>vzeroupper instruction.<br/>
		/// <br/>
		/// <c>VZEROUPPER</c><br/>
		/// <br/>
		/// <c>VEX.128.0F.WIG 77</c><br/>
		/// <br/>
		/// <c>AVX</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670828)]
public static void vzeroupper() {}
		/// <summary>wait instruction.<br/>
		/// <br/>
		/// <c>WAIT</c><br/>
		/// <br/>
		/// <c>9B</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670829)]
public static void wait() {}
		/// <summary>wbinvd instruction.<br/>
		/// <br/>
		/// <c>WBINVD</c><br/>
		/// <br/>
		/// <c>0F 09</c><br/>
		/// <br/>
		/// <c>486+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670830)]
public static void wbinvd() {}
		/// <summary>wbnoinvd instruction.<br/>
		/// <br/>
		/// <c>WBNOINVD</c><br/>
		/// <br/>
		/// <c>F3 0F 09</c><br/>
		/// <br/>
		/// <c>WBNOINVD</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670831)]
public static void wbnoinvd() {}
		/// <summary>wrfsbase instruction.<br/>
		/// <br/>
		/// <c>WRFSBASE r32</c><br/>
		/// <br/>
		/// <c>F3 0F AE /2</c><br/>
		/// <br/>
		/// <c>FSGSBASE</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100670832)]
public static void wrfsbase(AssemblerRegister32 dst) {}
		/// <summary>wrfsbase instruction.<br/>
		/// <br/>
		/// <c>WRFSBASE r64</c><br/>
		/// <br/>
		/// <c>F3 o64 0F AE /2</c><br/>
		/// <br/>
		/// <c>FSGSBASE</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100670833)]
public static void wrfsbase(AssemblerRegister64 dst) {}
		/// <summary>wrgsbase instruction.<br/>
		/// <br/>
		/// <c>WRGSBASE r32</c><br/>
		/// <br/>
		/// <c>F3 0F AE /3</c><br/>
		/// <br/>
		/// <c>FSGSBASE</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100670834)]
public static void wrgsbase(AssemblerRegister32 dst) {}
		/// <summary>wrgsbase instruction.<br/>
		/// <br/>
		/// <c>WRGSBASE r64</c><br/>
		/// <br/>
		/// <c>F3 o64 0F AE /3</c><br/>
		/// <br/>
		/// <c>FSGSBASE</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100670835)]
public static void wrgsbase(AssemblerRegister64 dst) {}
		/// <summary>wrmsr instruction.<br/>
		/// <br/>
		/// <c>WRMSR</c><br/>
		/// <br/>
		/// <c>0F 30</c><br/>
		/// <br/>
		/// <c>MSR</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670836)]
public static void wrmsr() {}
		/// <summary>wrpkru instruction.<br/>
		/// <br/>
		/// <c>WRPKRU</c><br/>
		/// <br/>
		/// <c>NP 0F 01 EF</c><br/>
		/// <br/>
		/// <c>PKU</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670837)]
public static void wrpkru() {}
		/// <summary>wrshr instruction.<br/>
		/// <br/>
		/// <c>WRSHR r/m32</c><br/>
		/// <br/>
		/// <c>0F 37 /0</c><br/>
		/// <br/>
		/// <c>Cyrix 6x86MX, M II, III</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100670838)]
public static void wrshr(AssemblerRegister32 dst) {}
		/// <summary>wrshr instruction.<br/>
		/// <br/>
		/// <c>WRSHR r/m32</c><br/>
		/// <br/>
		/// <c>0F 37 /0</c><br/>
		/// <br/>
		/// <c>Cyrix 6x86MX, M II, III</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100670839)]
public static void wrshr(AssemblerMemoryOperand dst) {}
		/// <summary>wrssd instruction.<br/>
		/// <br/>
		/// <c>WRSSD m32, r32</c><br/>
		/// <br/>
		/// <c>NP 0F 38 F6 /r</c><br/>
		/// <br/>
		/// <c>CET_SS</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670840)]
public static void wrssd(AssemblerMemoryOperand dst, AssemblerRegister32 src) {}
		/// <summary>wrssq instruction.<br/>
		/// <br/>
		/// <c>WRSSQ m64, r64</c><br/>
		/// <br/>
		/// <c>NP o64 0F 38 F6 /r</c><br/>
		/// <br/>
		/// <c>CET_SS</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100670841)]
public static void wrssq(AssemblerMemoryOperand dst, AssemblerRegister64 src) {}
		/// <summary>wrussd instruction.<br/>
		/// <br/>
		/// <c>WRUSSD m32, r32</c><br/>
		/// <br/>
		/// <c>66 0F 38 F5 /r</c><br/>
		/// <br/>
		/// <c>CET_SS</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670842)]
public static void wrussd(AssemblerMemoryOperand dst, AssemblerRegister32 src) {}
		/// <summary>wrussq instruction.<br/>
		/// <br/>
		/// <c>WRUSSQ m64, r64</c><br/>
		/// <br/>
		/// <c>66 o64 0F 38 F5 /r</c><br/>
		/// <br/>
		/// <c>CET_SS</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100670843)]
public static void wrussq(AssemblerMemoryOperand dst, AssemblerRegister64 src) {}
		/// <summary>xabort instruction.<br/>
		/// <br/>
		/// <c>XABORT imm8</c><br/>
		/// <br/>
		/// <c>C6 F8 ib</c><br/>
		/// <br/>
		/// <c>RTM</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670844)]
public static void xabort(sbyte imm) {}
		/// <summary>xabort instruction.<br/>
		/// <br/>
		/// <c>XABORT imm8</c><br/>
		/// <br/>
		/// <c>C6 F8 ib</c><br/>
		/// <br/>
		/// <c>RTM</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670845)]
public static void xabort(byte imm) {}
		/// <summary>xadd instruction.<br/>
		/// <br/>
		/// <c>XADD r/m8, r8</c><br/>
		/// <br/>
		/// <c>0F C0 /r</c><br/>
		/// <br/>
		/// <c>486+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670846)]
public static void xadd(AssemblerRegister8 dst, AssemblerRegister8 src) {}
		/// <summary>xadd instruction.<br/>
		/// <br/>
		/// <c>XADD r/m8, r8</c><br/>
		/// <br/>
		/// <c>0F C0 /r</c><br/>
		/// <br/>
		/// <c>486+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670847)]
public static void xadd(AssemblerMemoryOperand dst, AssemblerRegister8 src) {}
		/// <summary>xadd instruction.<br/>
		/// <br/>
		/// <c>XADD r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 0F C1 /r</c><br/>
		/// <br/>
		/// <c>486+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670848)]
public static void xadd(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>xadd instruction.<br/>
		/// <br/>
		/// <c>XADD r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 0F C1 /r</c><br/>
		/// <br/>
		/// <c>486+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670849)]
public static void xadd(AssemblerMemoryOperand dst, AssemblerRegister16 src) {}
		/// <summary>xadd instruction.<br/>
		/// <br/>
		/// <c>XADD r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 0F C1 /r</c><br/>
		/// <br/>
		/// <c>486+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670850)]
public static void xadd(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>xadd instruction.<br/>
		/// <br/>
		/// <c>XADD r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 0F C1 /r</c><br/>
		/// <br/>
		/// <c>486+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670851)]
public static void xadd(AssemblerMemoryOperand dst, AssemblerRegister32 src) {}
		/// <summary>xadd instruction.<br/>
		/// <br/>
		/// <c>XADD r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 0F C1 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100670852)]
public static void xadd(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>xadd instruction.<br/>
		/// <br/>
		/// <c>XADD r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 0F C1 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100670853)]
public static void xadd(AssemblerMemoryOperand dst, AssemblerRegister64 src) {}
		/// <summary>xbegin instruction.<br/>
		/// <br/>
		/// <c>XBEGIN rel16</c><br/>
		/// <br/>
		/// <c>o16 C7 F8 cw</c><br/>
		/// <br/>
		/// <c>RTM</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>XBEGIN rel32</c><br/>
		/// <br/>
		/// <c>o32 C7 F8 cd</c><br/>
		/// <br/>
		/// <c>RTM</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670854)]
public static void xbegin(Label dst) {}
		/// <summary>xbegin instruction.<br/>
		/// <br/>
		/// <c>XBEGIN rel16</c><br/>
		/// <br/>
		/// <c>o16 C7 F8 cw</c><br/>
		/// <br/>
		/// <c>RTM</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>XBEGIN rel32</c><br/>
		/// <br/>
		/// <c>o32 C7 F8 cd</c><br/>
		/// <br/>
		/// <c>RTM</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670855)]
public static void xbegin(ulong dst) {}
		/// <summary>xbts instruction.<br/>
		/// <br/>
		/// <c>XBTS r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F A6 /r</c><br/>
		/// <br/>
		/// <c>386 A0</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100670856)]
public static void xbts(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>xbts instruction.<br/>
		/// <br/>
		/// <c>XBTS r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F A6 /r</c><br/>
		/// <br/>
		/// <c>386 A0</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100670857)]
public static void xbts(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>xbts instruction.<br/>
		/// <br/>
		/// <c>XBTS r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 0F A6 /r</c><br/>
		/// <br/>
		/// <c>386 A0</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100670858)]
public static void xbts(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>xbts instruction.<br/>
		/// <br/>
		/// <c>XBTS r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 0F A6 /r</c><br/>
		/// <br/>
		/// <c>386 A0</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100670859)]
public static void xbts(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>xchg instruction.<br/>
		/// <br/>
		/// <c>XCHG r/m8, r8</c><br/>
		/// <br/>
		/// <c>86 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670860)]
public static void xchg(AssemblerRegister8 dst, AssemblerRegister8 src) {}
		/// <summary>xchg instruction.<br/>
		/// <br/>
		/// <c>XCHG r/m8, r8</c><br/>
		/// <br/>
		/// <c>86 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670861)]
public static void xchg(AssemblerMemoryOperand dst, AssemblerRegister8 src) {}
		/// <summary>xchg instruction.<br/>
		/// <br/>
		/// <c>XCHG r16, AX</c><br/>
		/// <br/>
		/// <c>o16 90+rw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>XCHG r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 87 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670862)]
public static void xchg(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>xchg instruction.<br/>
		/// <br/>
		/// <c>XCHG r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 87 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670863)]
public static void xchg(AssemblerMemoryOperand dst, AssemblerRegister16 src) {}
		/// <summary>xchg instruction.<br/>
		/// <br/>
		/// <c>XCHG r32, EAX</c><br/>
		/// <br/>
		/// <c>o32 90+rd</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>XCHG r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 87 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670864)]
public static void xchg(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>xchg instruction.<br/>
		/// <br/>
		/// <c>XCHG r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 87 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670865)]
public static void xchg(AssemblerMemoryOperand dst, AssemblerRegister32 src) {}
		/// <summary>xchg instruction.<br/>
		/// <br/>
		/// <c>XCHG r64, RAX</c><br/>
		/// <br/>
		/// <c>o64 90+ro</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>XCHG r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 87 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100670866)]
public static void xchg(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>xchg instruction.<br/>
		/// <br/>
		/// <c>XCHG r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 87 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100670867)]
public static void xchg(AssemblerMemoryOperand dst, AssemblerRegister64 src) {}
		/// <summary>xcryptcbc instruction.<br/>
		/// <br/>
		/// <c>XCRYPTCBC</c><br/>
		/// <br/>
		/// <c>a64 F3 0F A7 D0</c><br/>
		/// <br/>
		/// <c>PADLOCK_ACE</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>XCRYPTCBC</c><br/>
		/// <br/>
		/// <c>a32 F3 0F A7 D0</c><br/>
		/// <br/>
		/// <c>PADLOCK_ACE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>XCRYPTCBC</c><br/>
		/// <br/>
		/// <c>a16 F3 0F A7 D0</c><br/>
		/// <br/>
		/// <c>PADLOCK_ACE</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100670868)]
public static void xcryptcbc() {}
		/// <summary>xcryptcfb instruction.<br/>
		/// <br/>
		/// <c>XCRYPTCFB</c><br/>
		/// <br/>
		/// <c>a64 F3 0F A7 E0</c><br/>
		/// <br/>
		/// <c>PADLOCK_ACE</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>XCRYPTCFB</c><br/>
		/// <br/>
		/// <c>a32 F3 0F A7 E0</c><br/>
		/// <br/>
		/// <c>PADLOCK_ACE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>XCRYPTCFB</c><br/>
		/// <br/>
		/// <c>a16 F3 0F A7 E0</c><br/>
		/// <br/>
		/// <c>PADLOCK_ACE</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100670869)]
public static void xcryptcfb() {}
		/// <summary>xcryptctr instruction.<br/>
		/// <br/>
		/// <c>XCRYPTCTR</c><br/>
		/// <br/>
		/// <c>a64 F3 0F A7 D8</c><br/>
		/// <br/>
		/// <c>PADLOCK_ACE</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>XCRYPTCTR</c><br/>
		/// <br/>
		/// <c>a32 F3 0F A7 D8</c><br/>
		/// <br/>
		/// <c>PADLOCK_ACE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>XCRYPTCTR</c><br/>
		/// <br/>
		/// <c>a16 F3 0F A7 D8</c><br/>
		/// <br/>
		/// <c>PADLOCK_ACE</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100670870)]
public static void xcryptctr() {}
		/// <summary>xcryptecb instruction.<br/>
		/// <br/>
		/// <c>XCRYPTECB</c><br/>
		/// <br/>
		/// <c>a64 F3 0F A7 C8</c><br/>
		/// <br/>
		/// <c>PADLOCK_ACE</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>XCRYPTECB</c><br/>
		/// <br/>
		/// <c>a32 F3 0F A7 C8</c><br/>
		/// <br/>
		/// <c>PADLOCK_ACE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>XCRYPTECB</c><br/>
		/// <br/>
		/// <c>a16 F3 0F A7 C8</c><br/>
		/// <br/>
		/// <c>PADLOCK_ACE</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100670871)]
public static void xcryptecb() {}
		/// <summary>xcryptofb instruction.<br/>
		/// <br/>
		/// <c>XCRYPTOFB</c><br/>
		/// <br/>
		/// <c>a64 F3 0F A7 E8</c><br/>
		/// <br/>
		/// <c>PADLOCK_ACE</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>XCRYPTOFB</c><br/>
		/// <br/>
		/// <c>a32 F3 0F A7 E8</c><br/>
		/// <br/>
		/// <c>PADLOCK_ACE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>XCRYPTOFB</c><br/>
		/// <br/>
		/// <c>a16 F3 0F A7 E8</c><br/>
		/// <br/>
		/// <c>PADLOCK_ACE</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100670872)]
public static void xcryptofb() {}
		/// <summary>xend instruction.<br/>
		/// <br/>
		/// <c>XEND</c><br/>
		/// <br/>
		/// <c>NP 0F 01 D5</c><br/>
		/// <br/>
		/// <c>RTM</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670873)]
public static void xend() {}
		/// <summary>xgetbv instruction.<br/>
		/// <br/>
		/// <c>XGETBV</c><br/>
		/// <br/>
		/// <c>NP 0F 01 D0</c><br/>
		/// <br/>
		/// <c>XSAVE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670874)]
public static void xgetbv() {}
		/// <summary>xor instruction.<br/>
		/// <br/>
		/// <c>XOR r/m8, r8</c><br/>
		/// <br/>
		/// <c>30 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670875)]
public static void xor(AssemblerRegister8 dst, AssemblerRegister8 src) {}
		/// <summary>xor instruction.<br/>
		/// <br/>
		/// <c>XOR r/m8, r8</c><br/>
		/// <br/>
		/// <c>30 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670876)]
public static void xor(AssemblerMemoryOperand dst, AssemblerRegister8 src) {}
		/// <summary>xor instruction.<br/>
		/// <br/>
		/// <c>XOR r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 31 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670877)]
public static void xor(AssemblerRegister16 dst, AssemblerRegister16 src) {}
		/// <summary>xor instruction.<br/>
		/// <br/>
		/// <c>XOR r/m16, r16</c><br/>
		/// <br/>
		/// <c>o16 31 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670878)]
public static void xor(AssemblerMemoryOperand dst, AssemblerRegister16 src) {}
		/// <summary>xor instruction.<br/>
		/// <br/>
		/// <c>XOR r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 31 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670879)]
public static void xor(AssemblerRegister32 dst, AssemblerRegister32 src) {}
		/// <summary>xor instruction.<br/>
		/// <br/>
		/// <c>XOR r/m32, r32</c><br/>
		/// <br/>
		/// <c>o32 31 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670880)]
public static void xor(AssemblerMemoryOperand dst, AssemblerRegister32 src) {}
		/// <summary>xor instruction.<br/>
		/// <br/>
		/// <c>XOR r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 31 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100670881)]
public static void xor(AssemblerRegister64 dst, AssemblerRegister64 src) {}
		/// <summary>xor instruction.<br/>
		/// <br/>
		/// <c>XOR r/m64, r64</c><br/>
		/// <br/>
		/// <c>o64 31 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100670882)]
public static void xor(AssemblerMemoryOperand dst, AssemblerRegister64 src) {}
		/// <summary>xor instruction.<br/>
		/// <br/>
		/// <c>XOR r8, r/m8</c><br/>
		/// <br/>
		/// <c>32 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670883)]
public static void xor(AssemblerRegister8 dst, AssemblerMemoryOperand src) {}
		/// <summary>xor instruction.<br/>
		/// <br/>
		/// <c>XOR r16, r/m16</c><br/>
		/// <br/>
		/// <c>o16 33 /r</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670884)]
public static void xor(AssemblerRegister16 dst, AssemblerMemoryOperand src) {}
		/// <summary>xor instruction.<br/>
		/// <br/>
		/// <c>XOR r32, r/m32</c><br/>
		/// <br/>
		/// <c>o32 33 /r</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670885)]
public static void xor(AssemblerRegister32 dst, AssemblerMemoryOperand src) {}
		/// <summary>xor instruction.<br/>
		/// <br/>
		/// <c>XOR r64, r/m64</c><br/>
		/// <br/>
		/// <c>o64 33 /r</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100670886)]
public static void xor(AssemblerRegister64 dst, AssemblerMemoryOperand src) {}
		/// <summary>xor instruction.<br/>
		/// <br/>
		/// <c>XOR AL, imm8</c><br/>
		/// <br/>
		/// <c>34 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>XOR r/m8, imm8</c><br/>
		/// <br/>
		/// <c>80 /6 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670887)]
public static void xor(AssemblerRegister8 dst, sbyte imm) {}
		/// <summary>xor instruction.<br/>
		/// <br/>
		/// <c>XOR AX, imm16</c><br/>
		/// <br/>
		/// <c>o16 35 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>XOR r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 81 /6 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>XOR r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 83 /6 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670888)]
public static void xor(AssemblerRegister16 dst, short imm) {}
		/// <summary>xor instruction.<br/>
		/// <br/>
		/// <c>XOR EAX, imm32</c><br/>
		/// <br/>
		/// <c>o32 35 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>XOR r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 81 /6 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>XOR r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 83 /6 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670889)]
public static void xor(AssemblerRegister32 dst, int imm) {}
		/// <summary>xor instruction.<br/>
		/// <br/>
		/// <c>XOR RAX, imm32</c><br/>
		/// <br/>
		/// <c>o64 35 id</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>XOR r/m64, imm32</c><br/>
		/// <br/>
		/// <c>o64 81 /6 id</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>XOR r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 83 /6 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100670890)]
public static void xor(AssemblerRegister64 dst, int imm) {}
		/// <summary>xor instruction.<br/>
		/// <br/>
		/// <c>XOR r/m64, imm32</c><br/>
		/// <br/>
		/// <c>o64 81 /6 id</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>XOR r/m64, imm8</c><br/>
		/// <br/>
		/// <c>o64 83 /6 ib</c><br/>
		/// <br/>
		/// <c>X64</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>XOR r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 81 /6 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>XOR r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 83 /6 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>XOR r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 81 /6 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>XOR r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 83 /6 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>XOR r/m8, imm8</c><br/>
		/// <br/>
		/// <c>80 /6 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670891)]
public static void xor(AssemblerMemoryOperand dst, int imm) {}
		/// <summary>xor instruction.<br/>
		/// <br/>
		/// <c>XOR AL, imm8</c><br/>
		/// <br/>
		/// <c>34 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>XOR r/m8, imm8</c><br/>
		/// <br/>
		/// <c>80 /6 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670892)]
public static void xor(AssemblerRegister8 dst, byte imm) {}
		/// <summary>xor instruction.<br/>
		/// <br/>
		/// <c>XOR AX, imm16</c><br/>
		/// <br/>
		/// <c>o16 35 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>XOR r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 81 /6 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>XOR r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 83 /6 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670893)]
public static void xor(AssemblerRegister16 dst, ushort imm) {}
		/// <summary>xor instruction.<br/>
		/// <br/>
		/// <c>XOR EAX, imm32</c><br/>
		/// <br/>
		/// <c>o32 35 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>XOR r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 81 /6 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>XOR r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 83 /6 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670894)]
public static void xor(AssemblerRegister32 dst, uint imm) {}
		/// <summary>xor instruction.<br/>
		/// <br/>
		/// <c>XOR r/m32, imm32</c><br/>
		/// <br/>
		/// <c>o32 81 /6 id</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>XOR r/m32, imm8</c><br/>
		/// <br/>
		/// <c>o32 83 /6 ib</c><br/>
		/// <br/>
		/// <c>386+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>XOR r/m16, imm16</c><br/>
		/// <br/>
		/// <c>o16 81 /6 iw</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>XOR r/m16, imm8</c><br/>
		/// <br/>
		/// <c>o16 83 /6 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>XOR r/m8, imm8</c><br/>
		/// <br/>
		/// <c>80 /6 ib</c><br/>
		/// <br/>
		/// <c>8086+</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670895)]
public static void xor(AssemblerMemoryOperand dst, uint imm) {}
		/// <summary>xorpd instruction.<br/>
		/// <br/>
		/// <c>XORPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 57 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670896)]
public static void xorpd(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>xorpd instruction.<br/>
		/// <br/>
		/// <c>XORPD xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>66 0F 57 /r</c><br/>
		/// <br/>
		/// <c>SSE2</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670897)]
public static void xorpd(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>xorps instruction.<br/>
		/// <br/>
		/// <c>XORPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 57 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670898)]
public static void xorps(AssemblerRegisterXMM dst, AssemblerRegisterXMM src) {}
		/// <summary>xorps instruction.<br/>
		/// <br/>
		/// <c>XORPS xmm1, xmm2/m128</c><br/>
		/// <br/>
		/// <c>NP 0F 57 /r</c><br/>
		/// <br/>
		/// <c>SSE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670899)]
public static void xorps(AssemblerRegisterXMM dst, AssemblerMemoryOperand src) {}
		/// <summary>xresldtrk instruction.<br/>
		/// <br/>
		/// <c>XRESLDTRK</c><br/>
		/// <br/>
		/// <c>F2 0F 01 E9</c><br/>
		/// <br/>
		/// <c>TSXLDTRK</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670900)]
public static void xresldtrk() {}
		/// <summary>xrstor instruction.<br/>
		/// <br/>
		/// <c>XRSTOR mem</c><br/>
		/// <br/>
		/// <c>NP 0F AE /5</c><br/>
		/// <br/>
		/// <c>XSAVE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670901)]
public static void xrstor(AssemblerMemoryOperand dst) {}
		/// <summary>xrstor64 instruction.<br/>
		/// <br/>
		/// <c>XRSTOR64 mem</c><br/>
		/// <br/>
		/// <c>NP o64 0F AE /5</c><br/>
		/// <br/>
		/// <c>XSAVE</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100670902)]
public static void xrstor64(AssemblerMemoryOperand dst) {}
		/// <summary>xrstors instruction.<br/>
		/// <br/>
		/// <c>XRSTORS mem</c><br/>
		/// <br/>
		/// <c>NP 0F C7 /3</c><br/>
		/// <br/>
		/// <c>XSAVES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670903)]
public static void xrstors(AssemblerMemoryOperand dst) {}
		/// <summary>xrstors64 instruction.<br/>
		/// <br/>
		/// <c>XRSTORS64 mem</c><br/>
		/// <br/>
		/// <c>NP o64 0F C7 /3</c><br/>
		/// <br/>
		/// <c>XSAVES</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100670904)]
public static void xrstors64(AssemblerMemoryOperand dst) {}
		/// <summary>xsave instruction.<br/>
		/// <br/>
		/// <c>XSAVE mem</c><br/>
		/// <br/>
		/// <c>NP 0F AE /4</c><br/>
		/// <br/>
		/// <c>XSAVE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670905)]
public static void xsave(AssemblerMemoryOperand dst) {}
		/// <summary>xsave64 instruction.<br/>
		/// <br/>
		/// <c>XSAVE64 mem</c><br/>
		/// <br/>
		/// <c>NP o64 0F AE /4</c><br/>
		/// <br/>
		/// <c>XSAVE</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100670906)]
public static void xsave64(AssemblerMemoryOperand dst) {}
		/// <summary>xsavec instruction.<br/>
		/// <br/>
		/// <c>XSAVEC mem</c><br/>
		/// <br/>
		/// <c>NP 0F C7 /4</c><br/>
		/// <br/>
		/// <c>XSAVEC</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670907)]
public static void xsavec(AssemblerMemoryOperand dst) {}
		/// <summary>xsavec64 instruction.<br/>
		/// <br/>
		/// <c>XSAVEC64 mem</c><br/>
		/// <br/>
		/// <c>NP o64 0F C7 /4</c><br/>
		/// <br/>
		/// <c>XSAVEC</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100670908)]
public static void xsavec64(AssemblerMemoryOperand dst) {}
		/// <summary>xsaveopt instruction.<br/>
		/// <br/>
		/// <c>XSAVEOPT mem</c><br/>
		/// <br/>
		/// <c>NP 0F AE /6</c><br/>
		/// <br/>
		/// <c>XSAVEOPT</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670909)]
public static void xsaveopt(AssemblerMemoryOperand dst) {}
		/// <summary>xsaveopt64 instruction.<br/>
		/// <br/>
		/// <c>XSAVEOPT64 mem</c><br/>
		/// <br/>
		/// <c>NP o64 0F AE /6</c><br/>
		/// <br/>
		/// <c>XSAVEOPT</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100670910)]
public static void xsaveopt64(AssemblerMemoryOperand dst) {}
		/// <summary>xsaves instruction.<br/>
		/// <br/>
		/// <c>XSAVES mem</c><br/>
		/// <br/>
		/// <c>NP 0F C7 /5</c><br/>
		/// <br/>
		/// <c>XSAVES</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670911)]
public static void xsaves(AssemblerMemoryOperand dst) {}
		/// <summary>xsaves64 instruction.<br/>
		/// <br/>
		/// <c>XSAVES64 mem</c><br/>
		/// <br/>
		/// <c>NP o64 0F C7 /5</c><br/>
		/// <br/>
		/// <c>XSAVES</c><br/>
		/// <br/>
		/// <c>64-bit</c></summary>
[MethodToken(100670912)]
public static void xsaves64(AssemblerMemoryOperand dst) {}
		/// <summary>xsetbv instruction.<br/>
		/// <br/>
		/// <c>XSETBV</c><br/>
		/// <br/>
		/// <c>NP 0F 01 D1</c><br/>
		/// <br/>
		/// <c>XSAVE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670913)]
public static void xsetbv() {}
		/// <summary>xsha1 instruction.<br/>
		/// <br/>
		/// <c>XSHA1</c><br/>
		/// <br/>
		/// <c>a64 F3 0F A6 C8</c><br/>
		/// <br/>
		/// <c>PADLOCK_PHE</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>XSHA1</c><br/>
		/// <br/>
		/// <c>a32 F3 0F A6 C8</c><br/>
		/// <br/>
		/// <c>PADLOCK_PHE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>XSHA1</c><br/>
		/// <br/>
		/// <c>a16 F3 0F A6 C8</c><br/>
		/// <br/>
		/// <c>PADLOCK_PHE</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100670914)]
public static void xsha1() {}
		/// <summary>xsha256 instruction.<br/>
		/// <br/>
		/// <c>XSHA256</c><br/>
		/// <br/>
		/// <c>a64 F3 0F A6 D0</c><br/>
		/// <br/>
		/// <c>PADLOCK_PHE</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>XSHA256</c><br/>
		/// <br/>
		/// <c>a32 F3 0F A6 D0</c><br/>
		/// <br/>
		/// <c>PADLOCK_PHE</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>XSHA256</c><br/>
		/// <br/>
		/// <c>a16 F3 0F A6 D0</c><br/>
		/// <br/>
		/// <c>PADLOCK_PHE</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100670915)]
public static void xsha256() {}
		/// <summary>xstore instruction.<br/>
		/// <br/>
		/// <c>XSTORE</c><br/>
		/// <br/>
		/// <c>a64 0F A7 C0</c><br/>
		/// <br/>
		/// <c>PADLOCK_RNG</c><br/>
		/// <br/>
		/// <c>64-bit</c><br/>
		/// <br/>
		/// <c>XSTORE</c><br/>
		/// <br/>
		/// <c>a32 0F A7 C0</c><br/>
		/// <br/>
		/// <c>PADLOCK_RNG</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c><br/>
		/// <br/>
		/// <c>XSTORE</c><br/>
		/// <br/>
		/// <c>a16 0F A7 C0</c><br/>
		/// <br/>
		/// <c>PADLOCK_RNG</c><br/>
		/// <br/>
		/// <c>16/32-bit</c></summary>
[MethodToken(100670916)]
public static void xstore() {}
		/// <summary>xsusldtrk instruction.<br/>
		/// <br/>
		/// <c>XSUSLDTRK</c><br/>
		/// <br/>
		/// <c>F2 0F 01 E8</c><br/>
		/// <br/>
		/// <c>TSXLDTRK</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670917)]
public static void xsusldtrk() {}
		/// <summary>xtest instruction.<br/>
		/// <br/>
		/// <c>XTEST</c><br/>
		/// <br/>
		/// <c>NP 0F 01 D6</c><br/>
		/// <br/>
		/// <c>HLE or RTM</c><br/>
		/// <br/>
		/// <c>16/32/64-bit</c></summary>
[MethodToken(100670918)]
public static void xtest() {}
		/// <summary>Creates a db asm directive with the type byte.</summary>
[MethodToken(100670919)]
public static void db(byte imm0) {}
		/// <summary>Creates a db asm directive with the type byte.</summary>
[MethodToken(100670920)]
public static void db(byte imm0, byte imm1) {}
		/// <summary>Creates a db asm directive with the type byte.</summary>
[MethodToken(100670921)]
public static void db(byte imm0, byte imm1, byte imm2) {}
		/// <summary>Creates a db asm directive with the type byte.</summary>
[MethodToken(100670922)]
public static void db(byte imm0, byte imm1, byte imm2, byte imm3) {}
		/// <summary>Creates a db asm directive with the type byte.</summary>
[MethodToken(100670923)]
public static void db(byte imm0, byte imm1, byte imm2, byte imm3, byte imm4) {}
		/// <summary>Creates a db asm directive with the type byte.</summary>
[MethodToken(100670924)]
public static void db(byte imm0, byte imm1, byte imm2, byte imm3, byte imm4, byte imm5) {}
		/// <summary>Creates a db asm directive with the type byte.</summary>
[MethodToken(100670925)]
public static void db(byte imm0, byte imm1, byte imm2, byte imm3, byte imm4, byte imm5, byte imm6) {}
		/// <summary>Creates a db asm directive with the type byte.</summary>
[MethodToken(100670926)]
public static void db(byte imm0, byte imm1, byte imm2, byte imm3, byte imm4, byte imm5, byte imm6, byte imm7) {}
		/// <summary>Creates a db asm directive with the type byte.</summary>
[MethodToken(100670927)]
public static void db(byte imm0, byte imm1, byte imm2, byte imm3, byte imm4, byte imm5, byte imm6, byte imm7, byte imm8) {}
		/// <summary>Creates a db asm directive with the type byte.</summary>
[MethodToken(100670928)]
public static void db(byte imm0, byte imm1, byte imm2, byte imm3, byte imm4, byte imm5, byte imm6, byte imm7, byte imm8, byte imm9) {}
		/// <summary>Creates a db asm directive with the type byte.</summary>
[MethodToken(100670929)]
public static void db(byte imm0, byte imm1, byte imm2, byte imm3, byte imm4, byte imm5, byte imm6, byte imm7, byte imm8, byte imm9, byte imm10) {}
		/// <summary>Creates a db asm directive with the type byte.</summary>
[MethodToken(100670930)]
public static void db(byte imm0, byte imm1, byte imm2, byte imm3, byte imm4, byte imm5, byte imm6, byte imm7, byte imm8, byte imm9, byte imm10, byte imm11) {}
		/// <summary>Creates a db asm directive with the type byte.</summary>
[MethodToken(100670931)]
public static void db(byte imm0, byte imm1, byte imm2, byte imm3, byte imm4, byte imm5, byte imm6, byte imm7, byte imm8, byte imm9, byte imm10, byte imm11, byte imm12) {}
		/// <summary>Creates a db asm directive with the type byte.</summary>
[MethodToken(100670932)]
public static void db(byte imm0, byte imm1, byte imm2, byte imm3, byte imm4, byte imm5, byte imm6, byte imm7, byte imm8, byte imm9, byte imm10, byte imm11, byte imm12, byte imm13) {}
		/// <summary>Creates a db asm directive with the type byte.</summary>
[MethodToken(100670933)]
public static void db(byte imm0, byte imm1, byte imm2, byte imm3, byte imm4, byte imm5, byte imm6, byte imm7, byte imm8, byte imm9, byte imm10, byte imm11, byte imm12, byte imm13, byte imm14) {}
		/// <summary>Creates a db asm directive with the type byte.</summary>
[MethodToken(100670934)]
public static void db(byte imm0, byte imm1, byte imm2, byte imm3, byte imm4, byte imm5, byte imm6, byte imm7, byte imm8, byte imm9, byte imm10, byte imm11, byte imm12, byte imm13, byte imm14, byte imm15) {}
		/// <summary>Creates a db asm directive with the type sbyte.</summary>
[MethodToken(100670935)]
public static void db(sbyte imm0) {}
		/// <summary>Creates a db asm directive with the type sbyte.</summary>
[MethodToken(100670936)]
public static void db(sbyte imm0, sbyte imm1) {}
		/// <summary>Creates a db asm directive with the type sbyte.</summary>
[MethodToken(100670937)]
public static void db(sbyte imm0, sbyte imm1, sbyte imm2) {}
		/// <summary>Creates a db asm directive with the type sbyte.</summary>
[MethodToken(100670938)]
public static void db(sbyte imm0, sbyte imm1, sbyte imm2, sbyte imm3) {}
		/// <summary>Creates a db asm directive with the type sbyte.</summary>
[MethodToken(100670939)]
public static void db(sbyte imm0, sbyte imm1, sbyte imm2, sbyte imm3, sbyte imm4) {}
		/// <summary>Creates a db asm directive with the type sbyte.</summary>
[MethodToken(100670940)]
public static void db(sbyte imm0, sbyte imm1, sbyte imm2, sbyte imm3, sbyte imm4, sbyte imm5) {}
		/// <summary>Creates a db asm directive with the type sbyte.</summary>
[MethodToken(100670941)]
public static void db(sbyte imm0, sbyte imm1, sbyte imm2, sbyte imm3, sbyte imm4, sbyte imm5, sbyte imm6) {}
		/// <summary>Creates a db asm directive with the type sbyte.</summary>
[MethodToken(100670942)]
public static void db(sbyte imm0, sbyte imm1, sbyte imm2, sbyte imm3, sbyte imm4, sbyte imm5, sbyte imm6, sbyte imm7) {}
		/// <summary>Creates a db asm directive with the type sbyte.</summary>
[MethodToken(100670943)]
public static void db(sbyte imm0, sbyte imm1, sbyte imm2, sbyte imm3, sbyte imm4, sbyte imm5, sbyte imm6, sbyte imm7, sbyte imm8) {}
		/// <summary>Creates a db asm directive with the type sbyte.</summary>
[MethodToken(100670944)]
public static void db(sbyte imm0, sbyte imm1, sbyte imm2, sbyte imm3, sbyte imm4, sbyte imm5, sbyte imm6, sbyte imm7, sbyte imm8, sbyte imm9) {}
		/// <summary>Creates a db asm directive with the type sbyte.</summary>
[MethodToken(100670945)]
public static void db(sbyte imm0, sbyte imm1, sbyte imm2, sbyte imm3, sbyte imm4, sbyte imm5, sbyte imm6, sbyte imm7, sbyte imm8, sbyte imm9, sbyte imm10) {}
		/// <summary>Creates a db asm directive with the type sbyte.</summary>
[MethodToken(100670946)]
public static void db(sbyte imm0, sbyte imm1, sbyte imm2, sbyte imm3, sbyte imm4, sbyte imm5, sbyte imm6, sbyte imm7, sbyte imm8, sbyte imm9, sbyte imm10, sbyte imm11) {}
		/// <summary>Creates a db asm directive with the type sbyte.</summary>
[MethodToken(100670947)]
public static void db(sbyte imm0, sbyte imm1, sbyte imm2, sbyte imm3, sbyte imm4, sbyte imm5, sbyte imm6, sbyte imm7, sbyte imm8, sbyte imm9, sbyte imm10, sbyte imm11, sbyte imm12) {}
		/// <summary>Creates a db asm directive with the type sbyte.</summary>
[MethodToken(100670948)]
public static void db(sbyte imm0, sbyte imm1, sbyte imm2, sbyte imm3, sbyte imm4, sbyte imm5, sbyte imm6, sbyte imm7, sbyte imm8, sbyte imm9, sbyte imm10, sbyte imm11, sbyte imm12, sbyte imm13) {}
		/// <summary>Creates a db asm directive with the type sbyte.</summary>
[MethodToken(100670949)]
public static void db(sbyte imm0, sbyte imm1, sbyte imm2, sbyte imm3, sbyte imm4, sbyte imm5, sbyte imm6, sbyte imm7, sbyte imm8, sbyte imm9, sbyte imm10, sbyte imm11, sbyte imm12, sbyte imm13, sbyte imm14) {}
		/// <summary>Creates a db asm directive with the type sbyte.</summary>
[MethodToken(100670950)]
public static void db(sbyte imm0, sbyte imm1, sbyte imm2, sbyte imm3, sbyte imm4, sbyte imm5, sbyte imm6, sbyte imm7, sbyte imm8, sbyte imm9, sbyte imm10, sbyte imm11, sbyte imm12, sbyte imm13, sbyte imm14, sbyte imm15) {}
		/// <summary>Creates a dw asm directive with the type ushort.</summary>
[MethodToken(100670951)]
public static void dw(ushort imm0) {}
		/// <summary>Creates a dw asm directive with the type ushort.</summary>
[MethodToken(100670952)]
public static void dw(ushort imm0, ushort imm1) {}
		/// <summary>Creates a dw asm directive with the type ushort.</summary>
[MethodToken(100670953)]
public static void dw(ushort imm0, ushort imm1, ushort imm2) {}
		/// <summary>Creates a dw asm directive with the type ushort.</summary>
[MethodToken(100670954)]
public static void dw(ushort imm0, ushort imm1, ushort imm2, ushort imm3) {}
		/// <summary>Creates a dw asm directive with the type ushort.</summary>
[MethodToken(100670955)]
public static void dw(ushort imm0, ushort imm1, ushort imm2, ushort imm3, ushort imm4) {}
		/// <summary>Creates a dw asm directive with the type ushort.</summary>
[MethodToken(100670956)]
public static void dw(ushort imm0, ushort imm1, ushort imm2, ushort imm3, ushort imm4, ushort imm5) {}
		/// <summary>Creates a dw asm directive with the type ushort.</summary>
[MethodToken(100670957)]
public static void dw(ushort imm0, ushort imm1, ushort imm2, ushort imm3, ushort imm4, ushort imm5, ushort imm6) {}
		/// <summary>Creates a dw asm directive with the type ushort.</summary>
[MethodToken(100670958)]
public static void dw(ushort imm0, ushort imm1, ushort imm2, ushort imm3, ushort imm4, ushort imm5, ushort imm6, ushort imm7) {}
		/// <summary>Creates a dw asm directive with the type short.</summary>
[MethodToken(100670959)]
public static void dw(short imm0) {}
		/// <summary>Creates a dw asm directive with the type short.</summary>
[MethodToken(100670960)]
public static void dw(short imm0, short imm1) {}
		/// <summary>Creates a dw asm directive with the type short.</summary>
[MethodToken(100670961)]
public static void dw(short imm0, short imm1, short imm2) {}
		/// <summary>Creates a dw asm directive with the type short.</summary>
[MethodToken(100670962)]
public static void dw(short imm0, short imm1, short imm2, short imm3) {}
		/// <summary>Creates a dw asm directive with the type short.</summary>
[MethodToken(100670963)]
public static void dw(short imm0, short imm1, short imm2, short imm3, short imm4) {}
		/// <summary>Creates a dw asm directive with the type short.</summary>
[MethodToken(100670964)]
public static void dw(short imm0, short imm1, short imm2, short imm3, short imm4, short imm5) {}
		/// <summary>Creates a dw asm directive with the type short.</summary>
[MethodToken(100670965)]
public static void dw(short imm0, short imm1, short imm2, short imm3, short imm4, short imm5, short imm6) {}
		/// <summary>Creates a dw asm directive with the type short.</summary>
[MethodToken(100670966)]
public static void dw(short imm0, short imm1, short imm2, short imm3, short imm4, short imm5, short imm6, short imm7) {}
		/// <summary>Creates a dd asm directive with the type uint.</summary>
[MethodToken(100670967)]
public static void dd(uint imm0) {}
		/// <summary>Creates a dd asm directive with the type uint.</summary>
[MethodToken(100670968)]
public static void dd(uint imm0, uint imm1) {}
		/// <summary>Creates a dd asm directive with the type uint.</summary>
[MethodToken(100670969)]
public static void dd(uint imm0, uint imm1, uint imm2) {}
		/// <summary>Creates a dd asm directive with the type uint.</summary>
[MethodToken(100670970)]
public static void dd(uint imm0, uint imm1, uint imm2, uint imm3) {}
		/// <summary>Creates a dd asm directive with the type int.</summary>
[MethodToken(100670971)]
public static void dd(int imm0) {}
		/// <summary>Creates a dd asm directive with the type int.</summary>
[MethodToken(100670972)]
public static void dd(int imm0, int imm1) {}
		/// <summary>Creates a dd asm directive with the type int.</summary>
[MethodToken(100670973)]
public static void dd(int imm0, int imm1, int imm2) {}
		/// <summary>Creates a dd asm directive with the type int.</summary>
[MethodToken(100670974)]
public static void dd(int imm0, int imm1, int imm2, int imm3) {}
		/// <summary>Creates a dd asm directive with the type float.</summary>
[MethodToken(100670975)]
public static void dd(float imm0) {}
		/// <summary>Creates a dd asm directive with the type float.</summary>
[MethodToken(100670976)]
public static void dd(float imm0, float imm1) {}
		/// <summary>Creates a dd asm directive with the type float.</summary>
[MethodToken(100670977)]
public static void dd(float imm0, float imm1, float imm2) {}
		/// <summary>Creates a dd asm directive with the type float.</summary>
[MethodToken(100670978)]
public static void dd(float imm0, float imm1, float imm2, float imm3) {}
		/// <summary>Creates a dq asm directive with the type ulong.</summary>
[MethodToken(100670979)]
public static void dq(ulong imm0) {}
		/// <summary>Creates a dq asm directive with the type ulong.</summary>
[MethodToken(100670980)]
public static void dq(ulong imm0, ulong imm1) {}
		/// <summary>Creates a dq asm directive with the type long.</summary>
[MethodToken(100670981)]
public static void dq(long imm0) {}
		/// <summary>Creates a dq asm directive with the type long.</summary>
[MethodToken(100670982)]
public static void dq(long imm0, long imm1) {}
		/// <summary>Creates a dq asm directive with the type double.</summary>
[MethodToken(100670983)]
public static void dq(double imm0) {}
		/// <summary>Creates a dq asm directive with the type double.</summary>
[MethodToken(100670984)]
public static void dq(double imm0, double imm1) {}
}
}
